[
    {
        "title": "Perform the code security audit. Is remote exploiting/command execution possible ?",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nNo, It's not\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nOh My Zsh used on wide range of systems and on root accounts as well. The code didn't have any automated or manual security audit to find out if remote exploiting is possible.\r\n\r\n**Describe the solution you'd like**\r\nPerform Ohmyzsh code security audit to find out if it's possible to: Buffer overflow, Remote code execution during Ohmyzsh updates\r\n\r\n**Describe alternatives you've considered**\r\nAlternative solution is stop using Ohmyzsh until security audit is performed\r\n\r\n**Additional context**\r\nI have concerns that OhMyZsh was used by some actors to gain systems control in terms of SolarWinds attack.\r\n\r\n**Related Issues**\r\nThere are not. 0 issues related to security of the code. That's kind of weird I'd say.\r\n",
        "labels": "Feature",
        "id": 42845
    },
    {
        "title": "Having trouble with merge conflicts? Use Merge Mamba for free, forever",
        "body": "Shameless plug warning: I'm responsible for developing [Merge Mamba](https://mergemamba.com).\r\n\r\nI've seen a few cases of people having to juggle their pull requests around each other and for a big project like this, Merge Mamba could be helpful for letting people know when they're working on code that conflicts with changes in other branches.\r\n\r\nMerge Mamba is free forever for open source projects and right now I'm just trying to get as much feedback as possible, whether you love it or hate it. We're on [Github Marketplace](https://github.com/marketplace/merge-mamba) and if you're interested it's just a few clicks to get up and running.\r\n\r\nThanks and apologies for hijacking your issue pages,\r\nH",
        "labels": "Feature",
        "id": 42846
    },
    {
        "title": "Case Insensitivity in history-substring-search",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nThe history-substring-search plugin.\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nThe history-substring-search plugin doesn't support case-insensitivity. In my zshrc, I've commented `CASE_SENSITIVE=\"true\"`, but history-substring-search is sensitive to the case of what I type.\r\n\r\n**Describe the solution you'd like**\r\nhistory-substring-search should give me case insensitive suggestions if `CASE_SENSITIVE=\"true\"` is commented.\r\n\r\n**Describe alternatives you've considered**\r\nI'm not aware of any. I'm just paying attention to the case of what I type if I'm relying on history-substring-search.\r\n",
        "labels": "Feature",
        "id": 42847
    },
    {
        "title": "uninstall_oh_my_zsh doesn't work",
        "body": "I want to remove oh_my_zsh.\r\nbut uninstall_oh_my_zsh instruction does not work in my terminal (iterm2).\r\n\r\nwhat is the correct instruction?\r\n\r\nI can not find answer.\r\n",
        "labels": "Feature",
        "id": 42848
    },
    {
        "title": "Install via homebrew",
        "body": "I'd love it if were possible to install ohmyzsh via homebrew.",
        "labels": "Feature",
        "id": 42849
    },
    {
        "title": "add a golang alias to recursively test directory",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nThe name of the plugin, theme or alias that you would like us to improve. [...]\r\n\r\ngolang plugin\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nA description of what the problem is. Ex. I'm always frustrated when [...]\r\n\r\nNo problem, just enhanced functionality\r\n\r\n**Describe the solution you'd like**\r\nA description of what you want to happen. [...]\r\n\r\nadd an alias for `gota` (go test all) `go test ./...`. \r\n\r\nSimilar to how `fmt` has a base `gof` (`go fmt`) and `gofa` (`go fmt ./...`)\r\n\r\n**Describe alternatives you've considered**\r\nA description of any alternative solutions or features you've considered. This can also include other plugins or themes.\r\n\r\nSimply add the alias local to my environment.\r\n\r\n**Additional context**\r\nAdd any other context, screenshots or discord conversations about the feature request here. Also if you have any PRs related to this issue that are already open that you would like us to look at.\r\n\r\nOpened PR: https://github.com/ohmyzsh/ohmyzsh/pull/9720\r\n\r\n\r\n",
        "labels": "Feature",
        "id": 42850
    },
    {
        "title": "Update on Transfer Plugin",
        "body": "Hello devs, encryptation auth on files could be implemented on the [transfer plugin](https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/transfer).\r\n\r\nThe encrypted upload is already enabled on the transfer.sh project\r\nhttps://github.com/dutchcoders/transfer.sh/#encrypt--upload\r\n\r\n### Encrypt & upload:\r\n```bash\r\n$ cat /tmp/hello.txt|gpg -ac -o-|curl -X PUT --upload-file \"-\" https://transfer.sh/test.txt\r\n````\r\n\r\nThanks for your attention ;) ",
        "labels": "Feature",
        "id": 42851
    },
    {
        "title": "add command for pruning local branches that have been merged",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\n`git`\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nwhen I'm working on a lot of branches my local git copy contains a lot of already merged branches which I need to clean manually\r\n\r\n**Describe the solution you'd like**\r\ni would like to propose a \"gbp\" command which removes all already merged branches\r\n\r\n**Describe alternatives you've considered**\r\ncurrently, I'm using this inside my global `.gitconfig`\r\n```\r\n[alias]\r\n\tbranch-prune = \"!git fetch -p && for b in $(git for-each-ref --format='%(if:equals=[gone])%(upstream:track)%(then)%(refname:short)%(end)' refs/heads); do git branch -d $b; done\"\r\n```\r\n\r\n**Additional context**\r\nthe command removes all branches that are merged and do not contain additional changes locally\r\n\r\n**Related Issues**\r\nNone\r\n",
        "labels": "Feature",
        "id": 42852
    },
    {
        "title": "MOTD",
        "body": "It is suggested to add a speech of welcome\r\n\r\nlinux motd",
        "labels": "Feature",
        "id": 42853
    },
    {
        "title": "Fix History with omz tool",
        "body": "Is it possible to have something on omz tool that fixes the history?\r\n\r\nI frequently see this kind of issue.\r\n```\r\nzsh: corrupt history file /home/pi/.zsh_history\r\n```",
        "labels": "Feature",
        "id": 42854
    },
    {
        "title": "Organize themes by features",
        "body": "Catalogue themes by features, e.g. by using tags one can select.  \r\n\r\nFor instance, I want to see just the themes that give me (at least) the following components in the prompt:\r\n\r\n- time\r\n- last exit code\r\n- current directory\r\n- git branch\r\n\r\nCurrently I have to go through all the themes and have to infer from the pictures what features they might have.  (There isn't even a textual description I can grep.)\r\n\r\nLightweight implementation of this feature:\r\n- organize the themes in a github issue tracker, one issue per theme\r\n- define one label per feature\r\n\r\nThis would allow me to choose some labels and only see the themes that implement the feature corresponding to that label.",
        "labels": "Feature",
        "id": 42855
    },
    {
        "title": "Add 'omz plugin load xxx' to omz cli",
        "body": "It could be useful to be able to dynamically load a plugin in a running shell : `omz plugin load kubectl`, `omz plugin load git docker`\r\n\r\n**Context**\r\nMy omz setup includes many plugins. This setup requires a significant amount of time when I start a new shell.\r\nSome of these plugins are very useful but I only use them once or twice a day.\r\n\r\nThis feature would permit to keep a short `plugins` list (= small startup time) and add other plugins when I really need them. \r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nNo\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nNo\r\n\r\n**Describe the solution you'd like**\r\nNA\r\n\r\n**Describe alternatives you've considered**\r\nNA\r\n\r\n**Additional context**\r\nExpected behaviour :\r\n```shell\r\n# quick startup time\r\nomz plugin load git\r\ngst\r\ngaa\r\ngc -m \"test: trying git omz plugin\"\r\ngp\r\nomz plugin load kubectl\r\nkcuc remote-cluster\r\nkgp\r\n...\r\n```\r\n\r\n**Related Issues**\r\nI am not aware of any\r\n",
        "labels": "Feature",
        "id": 42856
    },
    {
        "title": "Optimize images for themes page in wiki",
        "body": "When you open this page https://github.com/ohmyzsh/ohmyzsh/wiki/Themes, the browser is forced to download ~ 69MB of content.Most images are 590KB in size.\r\nCan I compress these images, put them in this issue and create a merge request for the updated wiki page with the already compressed content in the https://github.com/ohmyzsh/ohmyzsh project?\r\nI have no rights to edit the wiki. But the mantainer will be able to subtract my updated file on the wiki.\r\nI will try to do this. On average, the image will weigh 110Kb.",
        "labels": "Feature",
        "id": 42857
    },
    {
        "title": "theme-bobthefish",
        "body": "There is this nice theme on fish that kind of looks like the agnoster, but not quite. Could you please port this theme to zsh? https://github.com/oh-my-fish/theme-bobthefish",
        "labels": "Feature",
        "id": 42858
    },
    {
        "title": "Allow tmux binary name to be changed",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\ntmux\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nI'm unable to use a `tmux` binary that has been renamed to something else for development or configuration reasons (e.g. tmx2, tmux-stable).\r\n\r\n**Describe the solution you'd like**\r\nMake the name of the `tmux` binary configurable.\r\n\r\n**Describe alternatives you've considered**\r\nI could have an alias that masks a system provided `tmux`, but this winds up confusing other things.\r\n\r\n**Additional context**\r\nPR is inbound momentarily.\r\n\r\n**Related Issues**\r\nNone.",
        "labels": "Feature",
        "id": 42859
    },
    {
        "title": "Better UX when zsh specific parsing breaks",
        "body": "**Is your feature request related to a problem? Please describe.**\r\n```bash\r\n(.venv) ➜  service git:(develop) ✗ pip install fastapi[all]\r\nzsh: no matches found: fastapi[all]\r\n```\r\nNevertheless, in a regular `bash` it will work.\r\nTaking into account that most snippets on the internet are for bash-like CLI it is very frustrating.\r\n\r\n**Describe the solution you'd like**\r\nI see two directions to fix this:\r\n\r\n1. better error message, advice to enclose `fastapi[all]` in double quotes, etc\r\n2. smarter approach, try to guess expected behaviour\r\n\r\n**Describe alternatives you've considered**\r\nfix it manually\r\n",
        "labels": "Feature",
        "id": 42860
    },
    {
        "title": "relative path doesn't get tab-completion",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nWhen I issue `vi .../` I can't do tab-completion\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. type this `vi .../` \r\n2. press <tab> key\r\n3. there will be visual bell (in my case)\r\n\r\n**Expected behavior**\r\nIt should give the tab-completion\r\n\r\n\r\n\r\n\r\n - OS / Distro: [macOS]\r\n - Latest ohmyzsh update?: [Yes]\r\n - ZSH Version: [e.g. 5.8]\r\n - Terminal emulator: [Alacritty]\r\n ",
        "labels": "Feature",
        "id": 42861
    },
    {
        "title": "Activate completion features without adding any aliases",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nSort of. Right now specifically the npm plugin, but it applies to others too.\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nOften I want the completion that a plugin provides but I never want any of the aliases. I have no interest in learning them, and if my shell is littered with aliases it massively increases the possibility that when I make a typo in a short command something totally unexpected happens.\r\n\r\n**Describe the solution you'd like**\r\nSome way to specify whether or not I want each plugin's aliases. Perhaps it would be simplest to split completion and aliases to separate plugins?\r\n\r\n**Describe alternatives you've considered**\r\nI could edit the source to comment out all the aliases but that's not maintainable.\r\nI could unalias everything after the fact but that's a mess and not maintainable.\r\nI could install the completion separately but then why am I using ohmyzsh.",
        "labels": "Feature",
        "id": 42862
    },
    {
        "title": "deactivate or hide changelog overview post on ssh login",
        "body": "request to hide (quiet) the changelog overview post as i login into ssh session. Is this possible via config or variable? I only managed to see this in the update.sh which would be to hardcoded for my interests.",
        "labels": "Feature",
        "id": 42863
    },
    {
        "title": "Have an option to NOT display the feature adds for git commits",
        "body": "**Is your feature request related to a problem? Please describe.**\r\nRecently, when I run `upgrade_ohmyzsh`, when it pulls the git updates, it shows feature adds (or fix) messages for the commits, which it didn’t used to. I would like to disable this feature as it disrupts my daily update scripts. I have to run the script twice now because this process stops my entire update process.\r\n\r\n**Describe the solution you'd like**\r\nI would like to have an option/setting in `.zshrc` that I can set to disable commit messages on update.\r\n\r\n**Describe alternatives you've considered**\r\nHaven't thought of any.\r\n\r\n**Additional context**\r\nIf I knew how to write the code and create a PR for this, I would. I'm well versed in writing ZSH scripts to this level. I appreciate all that your guys do. Thanks for looking at this request.\r\n\r\n",
        "labels": "Feature",
        "id": 42864
    },
    {
        "title": "aliasing package-management for quick updates/refresh/search and or install",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nI have seen plugins for aliases that relate to things like pgsql,git,docker,Kubernetes, etc. But i have not seen one for package management, which for every linux distro, is a mysterious and ominous task for anyone starting a new OS. This can be global\r\n\r\n**Describe the solution you'd like**\r\n```\r\n#a typical goto for my distros is i alias all of my apt/dnf/yum/emerge commands\r\nalias install='clear; dnf -y -b install'\r\nalias search='clear; dnf search'\r\nalias whoP='clear; dnf provides'\r\nalias up='clear;echo \"Unlocking /etc/passwd\";chattr -i /etc/passwd;dnf -y -b upgrade;echo \"Re-locking /etc/passwd\";chattr +i /etc/passwd'\r\n```\r\n**Additional context**\r\nNot sure if this is something you would want, I can assist in writing a few of the scripts to detect OS if needed, and apply the aliases as needed.\r\n",
        "labels": "Feature",
        "id": 42865
    },
    {
        "title": "globalias enhancement",
        "body": "\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nglobalias\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\ni would like to have\r\n1. more control on the expansion trigger. \r\n2. easier mechanism to toggle the expansion functionality\r\n\r\n**Describe the solution you'd like**\r\n1. i would like to use `tab` (or better yet, use a customized key) instead of `space` to expand the alias.\r\n2. i would like to press `ctrl+shift+alt+g` (or better yet, use a customized key combo) to enable the expansionality, then press the same key combo again to disable the expansion functionality\r\n\r\n**Additional context**\r\ni have the above request because during my daily usage with the plugin, most of times it functions great. but in some cases, i just don't want it to expand.",
        "labels": "Feature",
        "id": 42866
    },
    {
        "title": "Apply style to git's error message",
        "body": "Hi there, I don't know exactly this is related to `ohmyzsh` or `git`, anyway my question is how to show this error message with another color such as red:\r\n\r\n![Screen Shot 2021-01-09 at 12 09 05 PM](https://user-images.githubusercontent.com/1549069/104088592-5b3c4c00-527d-11eb-9821-add6e6dae7f5.png)\r\n",
        "labels": "Feature",
        "id": 42867
    },
    {
        "title": "Enhance autocorrect prompt to add to CORRECT_IGNORE or CORRECT_IGNORE_FILE variable",
        "body": "**Issue**\r\nAutocorrect is awesome, but often users of zsh will end up turning it off because they get a correction that annoys them and they do not have an easy way to tell the system to ignore that correction.\r\n```\r\nuser@computer ~$ killall ssh\r\nzsh: correct 'ssh' to '.ssh' [nyae]? n\r\n```\r\nOne such example:\r\nhttps://stackoverflow.com/questions/3437454/zsh-wants-to-autocorrect-a-command-with-an-before-it\r\n\r\n**Solution**\r\nWhen prompted for an autocorrect, have an option to \"**I**gnore\" this particular correction.\r\n```\r\nuser@computer ~$ killall ssh\r\nzsh: correct 'ssh' to '.ssh' [nyaei]? n\r\n```\r\nChoosing the \"i\" option will add the particular correction to the CORRECT_IGNORE or CORRECT_IGNORE_FILE variable in the ~/.zshrc file.\r\n\r\nIn the particular example above the following would be set in the ~/.zshrc file:\r\n```\r\nCORRECT_IGNORE_FILE=\".ssh\"\r\n```\r\n\r\nIf there was a value for CORRECT_IGNORE_FILE already, the code would attempt a simple regex pipe followed by the pattern to be added to the ignore list in the ~/.zshrc file:\r\n```\r\nCORRECT_IGNORE_FILE=\".somefile|.ssh\"\r\n```\r\n",
        "labels": "Feature",
        "id": 42868
    },
    {
        "title": "The updater should also source zshrc",
        "body": "When doing the updation of local installation using `omz update`, at the end; it should also source the updated changes in current shell.\r\n\r\nThis or, as an additional feature to have `omz source` or `omz reload` sub commands to reload the changes (if any).",
        "labels": "Feature",
        "id": 42869
    },
    {
        "title": "Use ohmyz.sh domain to deliver installer script",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nNo. It's about the installation and regarding a faster installation technique.\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nIt's not a huge problem, yet just a feature id like the team to add. Running the installer script after running `curl https://ohmyz.sh | grep \"sh -c\"` involves using the mouse and a bit of copy paste.\r\n\r\n**Describe the solution you'd like**\r\nI would like if the team would redirect ohmyz.sh curl http connections to a static text. The text can include comments and echo commands to help the user and the installer command itself too. So the user would just run `sh -c $(curl ohmyz.sh)` to install ohmyzsh. Just like hashbang.sh community does.\r\n\r\n**Describe alternatives you've considered**\r\nAnother alternative would be to redirect curl users to the script itself instead of the websites http server.\r\n\r\n**Additional context**\r\n\r\n\r\n**Related Issues**\r\n",
        "labels": "Feature",
        "id": 42870
    },
    {
        "title": "Highlight current theme in use with omz tool",
        "body": "`omz theme list` could mark the current theme in use, so it is easier to set it back to the previous one while experimenting with new themes. Or at least one command to do that would be nice, lets say `omz theme current`",
        "labels": "Feature",
        "id": 42871
    },
    {
        "title": "Would you be open to adding the Rust version of `autojump` to the autojump search paths?",
        "body": "Title says it all, would you be open to adding the Rust version of `autojump` to the autojump search paths?   I'm happy to make the one-line change, or you can, whatever, I just want to make sure it'd be a welcome change before I bother forking and putting together a PR.",
        "labels": "Feature",
        "id": 42872
    },
    {
        "title": "Change auto-update prompt to not require input",
        "body": "**Is your feature request related to a problem? Please describe.**\r\nI regularly log into a remote workstation running omzsh and it asks me if I want to update, but I've anticipated pressing up+enter to reconnect my tmux session. As a result, garbage is entered into the \"Do you want to update? [Y/n]\" prompt, which picks no and dumps me at the usual prompt. It's too much effort to log out and in again just to update omz, so I never do.\r\n\r\n**Describe the solution you'd like**\r\nInstead of asking me if I'd like to update, simply remind me to check for an update. Then after I've reconnected tmux and my brain's processed what happened, I can just run the command.\r\n\r\n**Describe alternatives you've considered**\r\nI thought maybe this was customisable but I couldn't easily find an answer for it.\r\n",
        "labels": "Feature",
        "id": 42873
    },
    {
        "title": "[Feature Request] Auto update plugins under $ZSH_CUSTOM folder",
        "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\noh-my-zsh built-in plugins will be updated during `omz update` (and auto-update as well) since those plugins are hosted in the `ohmyzsh` repo. However, there might be many users' plugins that are located under the `$ZSH_CUSTOM` folders. oh-my-zsh should update them as well when `omz update`.\r\n\r\n**Describe the solution you'd like**\r\n\r\nFirst, there should be an option (maybe `$UPDATE_ZSH_CUSTOM`). When enabled, `omz update` (or during the auto update) should look through every directory under the `$ZSH_CUSTOM` folder. If there is a `.git`, execute `git pull --rebase`.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nThere are many existed oh-my-zsh plugins that accomplish the same thing. But they heavily rely on overrides oh-my-zsh internal function. oh-my-zsh could provide an `after_update_hook` for them.\r\n\r\n**Additional context**\r\n\r\n- https://github.com/TamCore/autoupdate-oh-my-zsh-plugins\r\n- https://github.com/tautomer/update-ohmyzsh-custom-plugins\r\n\r\nTwo oh-my-zsh plugins pop up in Google search result when I type in \"oh my zsh custom plugin update\".\r\n",
        "labels": "Feature",
        "id": 42874
    },
    {
        "title": "Add option to view the last changelog on command",
        "body": "**Is your feature request related to a problem? Please describe.**\r\nI have an automated update script that calls `omz update` and the script gets stuck because `less` opens with the changelog (a welcome addition but not needed in my case). Also the latest changelog maybe should be viewable somehow, with some command?\r\n\r\n**Describe the solution you'd like**\r\nAn option is added to `omz update` for silencing the changelog.",
        "labels": "Feature",
        "id": 42875
    },
    {
        "title": "Allow customize agnoster prompt",
        "body": "**Theme: agnoster**\r\n\r\n**Problem**\r\nNormally prompt prints complete dir path `%~`, substituting home to `~`. I like to have only last part of dir (`'%1d'`). So I'd like prompt to be configurable. \r\n\r\n**Possible Solution**\r\nThere's an example how it could look like in alternative agnoster impl here - https://github.com/agnoster/agnoster-zsh-theme . See AGNOSTER_PROMPT_SEGMENTS. \r\n\r\n**Alternatives**\r\nI can just change that thing myself in the zsh-theme flie. This is what I did currently, but it would probably be overwritten by update. \r\nThere could be different implementation, which does not work the same as in another impl(AGNOSTER_PROMPT_SEGMENTS). Because build_prompt refers to prompt_dir, it could be possible to somehow inject in between and override function. For example prompt_dir might look if there's already function like custom_agnoster_prompt_dir and delegate there instead. ",
        "labels": "Feature",
        "id": 42876
    },
    {
        "title": "oh-my-zsh may be setting `sharehistory`",
        "body": "**Describe the bug**\r\noh-my-zsh updated itself recently - I don't know how to find the version, but if I do `cd ~/.oh-my-zsh; git log` it shows `7a76afd61` as the most recent commit.\r\n\r\nI noticed that history was getting shared between my terminals, and found that if I ran `setopt`, the output included `sharehistory`.\r\n\r\nI added `unsetopt sharehistory` to my `.zshrc` and continued happily, but I'm unsure what caused it to be set in the first place. Could it be something to do with the `oh-my-zsh` update?\r\n\r\n - OS / Distro: Linux\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: zsh 5.8 (x86_64-debian-linux-gnu)\r\n - Terminal emulator: Gnome terminal 3.36.2\r\n",
        "labels": "Feature",
        "id": 42877
    },
    {
        "title": "Git plugin: \"gl\" should be short for \"git log\", not \"git push\"",
        "body": "It seems more intuitive for \"gl\" to mean \"git log\", and perhaps that was the intent. In the line below, a grouping of \"git log\"-related aliases can be seen. \"git push\" seems out of place.\r\n\r\nhttps://github.com/ohmyzsh/ohmyzsh/blob/51772732f54f01522ad5720e8ed0ba16ca3147ae/plugins/git/git.plugin.zsh#L186-L202\r\n\r\n@robbyrussell I tried to find a list of the plugin maintainers but could not find one. Perhaps it could be linked from the contributing guidelines?",
        "labels": "Feature",
        "id": 42878
    },
    {
        "title": "[Enhancement] colored-man-pages plugin",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\n\r\nThe [colored-man-pages](https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/colored-man-pages) plugin.\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n\r\nPlugin code is needlessly complicated and undocumented. And I know how to make it better!\r\n\r\nAlso, unless someone can provide me with a reason for turning on Nroff Unsafe mode (`_NROFF_U=1`), I'm in favor of removing it. I'm not an expert in Groff/Nroff, but it just sounds dangerous.\r\n\r\nAnd what's the deal with silently creating executable scripts in `$HOME/bin`? Thanks God, it does not affect me — only solaris users. But that is certainly **not** what I would expect from a plugin like this. At the very least, it should ship that executable script with the plugin, and extend PATH to its parent directory. It's not like plugins aren't allowed to provide additional supporting files, do they?\r\n\r\n**Describe the solution you'd like**\r\n\r\nPlease, take a look at [my rewrite](https://github.com/ratijas/dotfiles/commit/81e83202c2a852c2e53f1727f87652054645874a) @ my personal dotfiles repository! Sure, I stripped down parts I don't need on my system, but otherwise it can be copy-patched into oh-my-zsh.\r\n\r\nMy solution requires `autoload colors` for named colors, which is loaded by `lib/theme-and-appearance.zsh` anyway. I'm looking forward to any feedback.\r\n\r\n**Additional context**\r\n\r\nNone\r\n\r\n**Related Issues**\r\n\r\nNone\r\n",
        "labels": "Feature",
        "id": 42879
    },
    {
        "title": "Add option to disable ohmyzsh's aliases",
        "body": "\r\n**Is your feature request related to a problem? Please describe.**\r\nYes. I don't want aliases i never asked for. When I do `alias` i see that there are aliases like `egrep='egrep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn,.idea,.tox}'`, which I have no idea about.\r\n\r\n**Describe the solution you'd like**\r\nIt would be nice if I could set a variable like OMZ_ALIASES=false, so that i can disable aliases, or a even better solution would be to maintain the list of aliases in a separate file, so that I can comment out the ones if don't want//\r\n\r\n**Describe alternatives you've considered**\r\nI have tried to manually comment out the aliases i don't want by grep-ing, but that is tiresome\r\n\r\n**Additional context**\r\nI am not talking about the git aliases, which are rather helpful. I am talking about the aliases that are sourced even when `plugins=()`\r\n\r\n**Related Issues**\r\nUnwanted aliases can lead to people wondering what they are doing wrong when they aren't doing anything wrong, and its the alias they never knew they had causing the problem.\r\n",
        "labels": "Feature",
        "id": 42880
    },
    {
        "title": "Add optional support to mercurial in agnoster theme",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nagnoster\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nagnoster becomes really have when dealing with large VCS projects. By debugging, I noticed that often, in a git repository, \r\nthe prompt doesn't newline and gets stuck at hg id even though the folder is not a mercurial repository making the overall\r\noh my zsh agnoster theme really slow. By removing mercurial from my system, I already notice a huge difference.\r\n\r\n**Describe the solution you'd like**\r\nAdd some sort of configuration flag to disable mercurial checks.\r\n\r\n**Describe alternatives you've considered**\r\nI removed mercurial which is a bit extreme.\r\n",
        "labels": "Feature",
        "id": 42881
    },
    {
        "title": "Show the command attached to the alias when executing it",
        "body": "\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nno, should be applied to all the plugins\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nIf you are showing your terminal to another person who is not familiar with the ohmyzsh aliases, she can get a little bit confused cause she does not know what you are doing and then you have to explain the alias or do not use it.\r\n\r\n**Describe the solution you'd like**\r\nI think it would be great if you could enable an option to show the command that is really being executed just before the command output.\r\n\r\nExample:\r\n`k get namespaces`\r\n\r\noutput:\r\n```\r\n[!] kubectl get namespaces\r\n<kubectl output>\r\n```",
        "labels": "Feature",
        "id": 42882
    },
    {
        "title": "Enhancement by Giving option to keep history limit on 'command not found' commands.",
        "body": "### **Why?**\r\nWe get frustuated when we either mistakenly pastes something on the terminal and gives out 10-15 command not found errors and worse all this gets stored in history so we have to hit Up key 10 times to see our previous 'good' command.\r\n- eg. In Competitive Coding we have to paste test cases ( inputs) from their website to terminal. Sometimes interpreter driven (python) codes fail in between and all the inputs after that gets passed as a command line argument\r\n[Link to screenshot](https://imgur.com/a/QXtSd0k)\r\n- eg. When I am making small grammetical mistakes in writing command so I end up trying few times before I get correct. So now I don't need those other misspelled command in my history.\r\n\r\n### Basic idea\r\nThe simple solution to this I can think of is maintaining 2 history type. \r\n- 'good' commands history : commands who actually did something and didn't throw command not found error.\r\n- 'bad' commands : commands who gave 'command not found' error.\r\n\r\n### How to classify?\r\n- Simplest solution I think is limiting the number of bad commands getting saved which is indeed user configurable. For example if I misspelled a command I am only gonna hit Up once.  \r\nSo having just bad command' **history limit** to 5 is enough for me.\r\n- Indeed there can be better ways to manage this. If you have any suggest please.\r\n\r\n### Extra\r\nif you can guide me to the code which takes care of history I might be able to code/pseudo-code a solution\r\n\r\n** Sorry if this issue/enhancement is already mentioned as I only read 30-40 issues to crosscheck **\r\n\r\n**If there's already solution to this I am unaware of please show me**",
        "labels": "Feature",
        "id": 42883
    },
    {
        "title": "Feedback request: WORDCHARS change makes usability REALLY BAD",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nno\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nIntroduced by this commit: https://github.com/ohmyzsh/ohmyzsh/commit/50dc4ab3574f4e265dff816d8d9a0195cd260152\r\nThe usability is really bad when jumping between words. I found it extremely useful to jump between dashes (`-`) and underscores (`_`), and this commit just eliminates this capability which was crucial for fast work with the terminal.\r\n\r\n**Describe the solution you'd like**\r\nOf course I could set my own `WORDCHARS`, but I don't think this behaviour is something the majority would enjoy using.\r\n",
        "labels": "Feature",
        "id": 42884
    },
    {
        "title": "GIT Shortcut: `gai` for `git add -i`",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\ngit\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nNot a problem, just a \"missing\" shortcut for git! ;)\r\n\r\n**Describe the solution you'd like**\r\nWould like to see a shortcut added for `git add --interactive` or `git add -i`. This shortcut could be called `gai`, as I do not currently see that used for any other shortcut. \r\n\r\n**Describe alternatives you've considered**\r\nThe only real alternative is to use the full git command `git add -i`.\r\n\r\n",
        "labels": "Feature",
        "id": 42885
    },
    {
        "title": "af-magic: how to remove username@computer from prompt?",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\n`af-magic`\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nI don't want the right prompt\r\n\r\n**Describe the solution you'd like**\r\nSomething like agnoster. Hide the right prompt when \"$USER\" == \"$DEFAULT_USER\"\r\nhttps://github.com/ohmyzsh/ohmyzsh/blob/6ebf27b8d34c760e25749790ea78dcb0c220d76b/themes/agnoster.zsh-theme#L91\r\n\r\n**Related Issues**\r\nhttps://github.com/ohmyzsh/ohmyzsh/issues/5581 agnoster: how to remove username@computer from prompt?\r\n",
        "labels": "Feature",
        "id": 42886
    },
    {
        "title": "oc plugin does not work with zplug",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nPlugin: oc\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nzplug can not load oc plugin provided by oh-my-zsh. \r\n\r\n**Describe the solution you'd like**\r\nJust use the same coding like in the kubectl plugin solves the problem:\r\n````\r\n# Autocompletion for oc, the command line interface for OpenShift\r\n#\r\n# Author: https://github.com/kevinkirkup\r\n\r\n#if [ $commands[oc] ]; then\r\n#  source <(oc completion zsh)\r\n#fi\r\n\r\nif (( $+commands[oc] )); then\r\n    __OC_COMPLETION_FILE=\"${ZSH_CACHE_DIR}/oc_completion\"\r\n\r\n    if [[ ! -f $__OC_COMPLETION_FILE ]]; then\r\n        oc completion zsh >! $__OC_COMPLETION_FILE\r\n    fi\r\n\r\n    [[ -f $__OC_COMPLETION_FILE ]] && source $__OC_COMPLETION_FILE\r\n\r\n    unset __OC_COMPLETION_FILE\r\nfi\r\n\r\n````",
        "labels": "Feature",
        "id": 42887
    },
    {
        "title": "Support for dvtm, similarly to tmux",
        "body": "**Plugin for dvtm**\r\nI'd like to have a plugin, which enables the use of dvtm (dynamic virtual terminal manager) the same way one exists for tmux.\r\n\r\ndvtm: https://github.com/martanne/dvtm\r\n\r\n**Additional context**\r\nIt's very easy to enable tmux integration at the moment, just by setting some variables (ZSH_TMUX_AUTOSTART, ZSH_TMUX_AUTOCONNECT, etc.), so I'd like to have a similar approach to dvtm as well. Even if it's just enabling it, in the first step. I see tmux plugin defines some aliases as well, which is also nice to have for dvtm as well, but I could live without those.\r\n\r\nThanks,\r\nRobert\r\n\r\n\r\n",
        "labels": "Feature",
        "id": 42888
    },
    {
        "title": "add support for st",
        "body": "add terminal support for st (simple terminal)",
        "labels": "Feature",
        "id": 42889
    },
    {
        "title": "kubectl plugin add set context namespace aliases",
        "body": "Is your feature request related to a particular plugin or theme? If so, specify it.\r\nkubectl\r\n\r\nDescribe the solution you'd like\r\nUse alias like kgp, kgs most of the time need the flag ```-n```, who works as support in companies it became a tedious task. To avoid it a default namespace can be set using ```kubectl config set-context --current --namespace=teste```.  This command also could be an alias.\r\n\r\nDescribe alternatives you've considered\r\nalias kcsn - kubectl config set-context --current --namespace=teste\r\n",
        "labels": "Feature",
        "id": 42890
    },
    {
        "title": "Completion initialization (compinit) logic should be overridable / customizable",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nN/A\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\noh-my-zsh uses its core include (oh-my-zsh.sh) to handle completion initialization. This does not allow users to effectively customize that logic without forking this project or other means. Also, due to the way lib/*.zsh files are loaded, compfix.zsh is sourced multiple times.\r\n\r\nBy moving compinit logic into the lib folder, advanced users can then use $ZSH_CUSTOM to override compinit logic with their own. It also simplifies oh-my-zsh.sh into a simple core set of logic that is only responsible for handling OMZ environment settings and lib/plugin/theme sourcing and nothing else.\r\n\r\n**Describe the solution you'd like**\r\nCompletion logic should be moved out of oh-my-zsh.sh and into the lib folder. To ensure it is loaded first, the file could be named with a numeric prefix or an underscore.  The compinit file could also be combined with the compfix.zsh file.\r\n\r\n**Describe alternatives you've considered**\r\nInstead of a numeric prefix, the new lib/01-compinit.zsh file could just be called lib/compinit.zsh or placed someplace other than /lib, but would then need special logic in oh-my-zsh.sh. The way I'm proposing implementing this solution requires no additional logic in oh-my-zsh.sh, and in fact only moves code from that file.  \r\n\r\n**Additional context**\r\nSee PR https://github.com/ohmyzsh/ohmyzsh/pull/9257\r\n\r\n**Related Issues**\r\nN/A\r\n",
        "labels": "Feature",
        "id": 42891
    },
    {
        "title": "Update archlinux Plugin",
        "body": "The **archlinux** plug-in has aliases for discontinued tools. Eg yaourt\r\n\r\nLook this :\r\n```zsh\r\nif (( $+commands[yaourt] )); then\r\n  alias yaconf='yaourt -C'\r\n  alias yaupg='yaourt -Syua'\r\n  alias yasu='yaourt -Syua --noconfirm'\r\n  alias yain='yaourt -S'\r\n  alias yains='yaourt -U'\r\n  alias yare='yaourt -R'\r\n  alias yarem='yaourt -Rns'\r\n  alias yarep='yaourt -Si'\r\n  alias yareps='yaourt -Ss'\r\n  alias yaloc='yaourt -Qi'\r\n  alias yalocs='yaourt -Qs'\r\n  alias yalst='yaourt -Qe'\r\n  alias yaorph='yaourt -Qtd'\r\n  alias yainsd='yaourt -S --asdeps'\r\n  alias yamir='yaourt -Syy'\r\n```\r\n\r\nYaourt was basically [deprecated] (https://itsfoss.com/best-aur-helpers/) \r\nSo it would be nice to remove it from the code. \r\nI'm not the only one, this [issue](https://github.com/ohmyzsh/ohmyzsh/issues/8591) cites problems with a discontinued tool in 2017 that is stiil present in the plug-in. \r\n\r\n[Contributing guidelines](https://github.com/ohmyzsh/ohmyzsh/blob/master/CONTRIBUTING.md#you-have-a-suggestion) tell me to mark some contributors, so @celsomiranda if you are around. \r\n\r\nThis is my first issue, so if I made a mistake please let me know. ",
        "labels": "Feature",
        "id": 42892
    },
    {
        "title": "Proper versioning to release oh-my-zsh on Linux distributions",
        "body": "It would be really awesome to have proper versioning and tags around `oh-my-zsh` to make it able to be an official package on some Linux distributions.\r\n\r\nPlease look to Semantic Versioning 2.0.0 standard at [semver.org](https://semver.org/), as an example.",
        "labels": "Feature",
        "id": 42893
    },
    {
        "title": "Move pip plugin's cache file to $XDG_CACHE_HOME/pip which is ~/.cache/pip by default ",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\npip\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nPython-pip doesn't put its cache files into ~/.pip since a long time ago. They move cache files in $XDG_CONFIG_HOME/pip which is ~/.cache/pip by default. \r\n```bash\r\narthur@streaker:~$tree .cache/pip\r\n.cache/pip\r\n├── http\r\n│   └── 8\r\n│       └── 2\r\n│           └── f\r\n│               └── d\r\n│                   └── 8\r\n│                       └── 82fd835af304644b417e2e805b44d1181077da8bd78fad2fb38eb199\r\n└── selfcheck\r\n    └── 241e69162522ccf5846a2f42ebc24b17464915a155679666b89a9f31\r\n```\r\nbut oh-my-zsh pip plugin still put zsh-cache into the old place which is ~/.pip. UNIX-like already had to many dotfiles in the user's home folder. It would be nice if we could reduce some.\r\n**Describe the solution you'd like**\r\ncheck if $XDG_CACHE_HOME/pip exists before fallback to ~/.pip\r\n```bash\r\nif [[ -d $XDG_CACHE_HOME/pip ]]\r\nthen\r\n\tZSH_PIP_CACHE_FILE=$XDG_CACHE_HOME/pip/zsh-cache\r\nelse\r\n\tZSH_PIP_CACHE_FILE=~/.pip/zsh-cache\r\nfi\r\n```\r\n**reference**\r\nhttps://pip.pypa.io/en/latest/reference/pip_install/#caching\r\n\r\n",
        "labels": "Feature",
        "id": 42894
    },
    {
        "title": "Add copy button to \"Install oh-my-zsh now\" section on website",
        "body": "I think it can be useful to add copy button to installation instructions. \r\n![Screenshot from 2020-08-22 16-18-29](https://user-images.githubusercontent.com/15820496/90956967-b79bfc00-e493-11ea-9292-b512a9ef6adf.png)\r\n\r\n\r\nLike the one on github for example \r\n![Screenshot from 2020-08-22 16-23-36](https://user-images.githubusercontent.com/15820496/90957012-f03bd580-e493-11ea-87bb-7a3ab6698277.png)\r\n\r\nThere is one thing against - copying instructions directly to terminal is bad sometimes. However I doubt that there are many people typing this url (https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh) manually.\r\n\r\n",
        "labels": "Feature",
        "id": 42895
    },
    {
        "title": "`omz update` without restarting zsh",
        "body": "**Is your feature request related to a problem? Please describe.**\r\nI use a script that updates several tools including ohmyzsh (and homebrew, zsh-z etc). Using a script for updating is easier than typing the update commands for each tool individually. In the script the following command is used to update ohmyzsh:\r\n\r\n```zsh -ic \"omz update\"```\r\n\r\nThis is no longer working as `omz update` now restarts the zsh session and interrupts my script. Only after entering `exit`, my script is continued to be executed.\r\n\r\n**Describe the solution you'd like**\r\nWould it be possible to revert to the original functionality or provide a new option for `omz update` (e.g. `omz update --no-restart`) to prevent zsh from being restarted?\r\n",
        "labels": "Feature",
        "id": 42896
    },
    {
        "title": "Can user disable the echo of random.zsh-themes?",
        "body": "in `themes/random.zsh-themes`, in the last line, there exists\r\n```{.zsh}\r\necho \"[oh-my-zsh] Random theme '${RANDOM_THEME}' loaded\"\r\n```\r\nCan user disable the echo? i recommend to add a variable to allow user to disable or enable it?\r\nit is a little advice... thanks!",
        "labels": "Feature",
        "id": 42897
    },
    {
        "title": "[yarn plugin] Add yarn to PATH",
        "body": "Could the yarn plugin add yarn to PATH on load?\r\n\r\nnvm does something similar: https://github.com/ohmyzsh/ohmyzsh/blob/master/plugins/nvm/nvm.plugin.zsh\r\n\r\nIt would save users having to configure PATH:\r\n\r\n```bash\r\nexport PATH=\"$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH\"\r\n```\r\n\r\n\r\n",
        "labels": "Feature",
        "id": 42898
    },
    {
        "title": "A second alias for `git stash pop`",
        "body": "**Is your feature request related to a problem? Please describe.**\r\nI'm a bit bored by typing the entire id of a stash when doing a stash pop using `gstp`.\r\n\r\n**Describe the solution you'd like**\r\nIs it possible to have an alias for `stash@{...}` ?\r\nFor example, `gstpi() { git stash pop \"stash@{$@}\"; }`. Used like so: `gstpi 2` instead of the current `gstp stash@{2}`.\r\n\r\nThank you all for this great tool! :heart:",
        "labels": "Feature",
        "id": 42899
    },
    {
        "title": "add deno plugins",
        "body": "i have been using <a href='https://deno.land'> Deno</a> for a long time, to make it easier for users like me in the present or future, it is better to bring support to Deno.",
        "labels": "Feature",
        "id": 42900
    },
    {
        "title": "Add endpoints to kubectl aliases",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nkubectl\r\n\r\n**Describe the solution you'd like**\r\nAdd new aliases for endpoints object\r\n\r\n**Describe alternatives you've considered**\r\n```\r\nalias kged='kubectl get endpoints'\r\nalias kgeda='kubectl get endpoints --all-namespaces'\r\nalias kded='kubectl describe endpoints'\r\n```",
        "labels": "Feature",
        "id": 42901
    },
    {
        "title": "The gmt alias clashes with the gmt application",
        "body": "We are receiving notices from people using [gmt](https://www.generic-mapping-tools.org) that your alias gmt trips them up.  Since gmt is available on most distros and have been around since the late 1980s we recommend you modify you alias so that more can benefit from your aliases.",
        "labels": "Feature",
        "id": 42902
    },
    {
        "title": "Is it possible to remove specific lines from shell history? [feature-requested]",
        "body": "Please see the [discussion](https://unix.stackexchange.com/q/598709/198423) in stackoverflow. On the comments I have been recommended to ask the developers if they're interested in adding the feature.\r\n\r\nBasically in `bash` we have following feature:\r\n\r\n> If you want to run a command without saving it in history, prepend it with an extra space\r\n\r\n```\r\nprompt$ echo saved\r\nprompt$  echo not saved \\\r\n> #     ^ extra space\r\n```\r\n\r\n\r\n------\r\n\r\nI have following [answer for How to remove a single line from history?](https://unix.stackexchange.com/a/49216/198423) . When I do following, the line(` echo hello_world`) is not saved into history. Please note that I am using `ZSH` shell.\r\n\r\n\r\n```\r\nprompt$  echo hello_world\r\n> #     ^ extra space\r\n```\r\n\r\n\r\n----\r\n\r\n```\r\n$ history | tail -n1\r\n 1280  history | tail -n\r\n$  echo hello_world\r\nhello_world\r\n$ history | tail -n1\r\n 1280  history | tail -n\r\n```\r\n\r\n- But when I do run a command having a space at the beginning and right after do `CTRL-p`, I can see it on the shell history, even though it is not save in `history`. Is it possible to prevent it? On bash shell: this works with `HISTCONTROL= ignorespace`.\r\n\r\n```\r\n$  echo hello_world\r\n$ # Press `CTRL-p` => \" echo hello_world\" shows up again\r\n```\r\n\r\n[Q] Is it possible to apply same feature into `zsh`?\r\n\r\n",
        "labels": "Feature",
        "id": 42903
    },
    {
        "title": "ubuntu-image plugin",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nI'd like to have auto completion for the [ubuntu-image](http://manpages.ubuntu.com/manpages/bionic/man1/ubuntu-image.1.html) command. I've aliases and shell functions but lack interactivity.\r\n\r\n**Describe the solution you'd like**\r\n\r\nA plugin \"ubuntu-image\".\r\n\r\n**Describe alternatives you've considered**\r\n\r\n**Additional context**\r\n\r\n**Related Issues**\r\n\r\nNothing found.",
        "labels": "Feature",
        "id": 42904
    },
    {
        "title": "Add support for docker plugin buildx to zsh docker plugin",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nzsh docker plugin\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nThe zsh docker plugin does not support the docker plugin buildx. The Docker plugin adds a sub-command `docker buildx` to the docker cli.\r\n\r\n**Describe the solution you'd like**\r\n\r\nSupport of the `buildx` sub-command in the zsh docker plugin.\r\n\r\n**Describe alternatives you've considered**\r\n\r\n**Additional context**\r\n\r\n- Commands supported by zsh docker plugin: https://github.com/ohmyzsh/ohmyzsh/blob/master/plugins/docker/_docker#L964\r\n- Docker buildx plugin CLI: https://docs.docker.com/buildx/working-with-buildx/\r\n\r\n**Related Issues**\r\n\r\nNo issue found.",
        "labels": "Feature",
        "id": 42905
    },
    {
        "title": "snapd plugin",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\n\r\nNot existing yet.\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n\r\nI'd like to have autocompletion and aliases for the snapd command line tool `snap`.\r\n\r\n**Describe the solution you'd like**\r\n\r\nA plugin for the snapd daemon CLI `snap`.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nShell aliases and functions. I am interested in contributing my aliases and functions.\r\n\r\n**Additional context**\r\n- [snapd command line intro](https://snapcraft.io/docs/getting-started)\r\n\r\n**Related Issues**\r\n\r\nNothing related found.",
        "labels": "Feature",
        "id": 42906
    },
    {
        "title": "Multipass plugin",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\n\r\nNot existing yet, probable new plugin \"multipass\".\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n\r\nI'd like to have autocompletion and aliases for the multipass command line tool.\r\n\r\n**Describe the solution you'd like**\r\n\r\nA plugin for multipass.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nShell aliases and functions. I am interested  in  contributing the aliases and functions.\r\n\r\n**Additional context**\r\n- [Multipass website](https://multipass.run/)\r\n\r\n**Related Issues**\r\n\r\nNothing related found.",
        "labels": "Feature",
        "id": 42907
    },
    {
        "title": "Remove Google Analytics from website",
        "body": "## Remove Google Analytics\r\n\r\nIf you must have an analytics system, might I suggest either:\r\n- Plausible: https://plausible.io (offers a 50% discount for FOSS projects)\r\n- Goatcounter: https://goatcounter.com\r\n- Matomo: https://matomo.org\r\n- Fathom: https://usefathom.org\r\n\r\nThese solutions are all well-tested and open-source. This, of course, means they\r\ncan be independently audited for privacy and security. Instead of using a proprietary\r\nnonfree system such as Google Analytics, perhaps we could work together to replace\r\nit with something slightly more ethical?\r\n\r\nFurthermore, the majority of privacy features in evergreen browsers *block* Google\r\nAnalytics from being run. I can not say the same for solutions such as Plausible,\r\nwhich suggests they are trusted for their privacy by independent persons.\r\n\r\nIf you need any more information, please contact me!\r\n",
        "labels": "Feature",
        "id": 42908
    },
    {
        "title": "Add font-size option in zsh-theme syntax",
        "body": "![Screenshot 2020-07-13 at 7 13 05 PM](https://user-images.githubusercontent.com/232541/87298800-623c0900-c53d-11ea-9c60-6501babbd044.png)\r\n\r\nAs shown on the screen cap, the system symbol is dwarfed by the text.\r\n\r\n**Is your feature request related to a particular plugin or theme?**\r\nno\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nno\r\n\r\n**Describe the solution you'd like**\r\nAdd a font-size option in zsh-theme syntax to adjust the size of mac system symbols.\r\n\r\nThanks.",
        "labels": "Feature",
        "id": 42909
    },
    {
        "title": "[plugin:dotenv] dotenv disallow-list for directories you never want to source",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\ndotenv\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nI have a `.env` file in `$HOME` which gets sourced in `.bashrc` and `.zshrc`.\r\nWhen using the `dotenv` plugin, every time I start the terminal it asks me whether to source the `.env` file again, which I would like to say no to once.\r\nThis might also be useful if there is a `.env` file somewhere else you know you never want to source.\r\n\r\n**Describe the solution you'd like**\r\nThe prompt already entails `Source it? ([Y]es/[n]o/[a]lways)`. Expand it with a `n[e]ver` option (to be bikeshedded).\r\n\r\n**Describe alternatives you've considered**\r\nChange my `.env` file to something else. I think the feature would be useful nevertheless.\r\n\r\n--- \r\nWill open a PR soon.",
        "labels": "Feature",
        "id": 42910
    },
    {
        "title": "Auto assign PR reviewers",
        "body": "**Is your feature request related to a particular plugin or theme?**\r\nNo, it's related to the GH folder.\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nThere's a lot of plugins, and it's time-consuming to find the person responsible for a plugin.\r\n\r\n**Describe the solution you'd like**\r\nCreate a GitHub action that fires up when a new PR modifying some plugin is submitted. The plugin's owner is automatically asked to review the PR.\r\n\r\nThis would use the data from [the CODEOWNERS file](https://github.com/ohmyzsh/ohmyzsh/blob/master/.github/CODEOWNERS)\r\n\r\n**Describe alternatives you've considered**\r\nIt can be done manually as well.\r\n\r\n**Additional context**\r\nsuggested by @larson-carter\r\n",
        "labels": "Feature",
        "id": 42911
    },
    {
        "title": "Improve CLI",
        "body": "**Is your feature request related to a particular plugin or theme?**\r\nNo. This feature would be implemented in [`lib/cli.zsh`](https://github.com/ohmyzsh/ohmyzsh/blob/master/lib/cli.zsh) file.\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nThe problem is that e.g changing themes and adding/removing plugins is kind of a time-consuming activity.\r\n\r\n**Describe the solution you'd like**\r\nI suggest adding more functionality to the `omz` CLI tool.\r\n\r\nExamples:\r\n`omz plugin add <name>` - Adds a new plugin to the `plugins` array in `~/.zshrc` __*__\r\n\r\n`omz plugin remove <name>` - Removes a plugin from the `plugins` array in `~/.zshrc` __*__\r\n\r\n`omz theme set <name>` - changes the value of the `ZSH_THEME` variable in `~/.zshrc` __*__\r\n\r\n__*__ - the CLI might also ask whether to reload the shell `[Y/n]` or use a default option from somewhere (probably `~/.zshrc`)\r\n\r\nThat's what I can think of right now.\r\n\r\n**Describe alternatives you've considered**\r\nNot doing anything?\r\n\r\n**Additional context**\r\nidea by @larson-carter\r\n\r\n**Related Issues**\r\nI'm not aware of them, but please let me know if there are any so I can list them here\r\n\r\n--- Pinging you to hear your opinion on this\r\ncc @larson-carter  @mcornella ",
        "labels": "Feature",
        "id": 42912
    },
    {
        "title": "option to have a quieter upgrade",
        "body": "\r\n**Describe the solution you'd like**\r\nI would like an option to have a quieter upgrade. Just seeing the files changed is enough. The banner, links, etc. could be optionally printed or hidden. \r\n\r\n**Describe alternatives you've considered**\r\nI considered disabling autoupgrade and have a cron update in the background, but then I never know what's changed or when.\r\n",
        "labels": "Feature",
        "id": 42913
    },
    {
        "title": "Update notice problem",
        "body": "**Describe the solution you'd like**\r\nAdd the words \"or `upgrade_oh_my_zsh` in terminal at your convenience to upgrade.\" to the upgrade notice.\r\n\r\n**Describe alternatives you've considered**\r\nI have automatic change to a particular ruby in my iTerm startup which bypasses the update Y/n as shown from iTerm start up. macOS iTerm, Mojave\r\n```\r\nLast login: Fri Jun 19 15:30:08 on console\r\n[Oh My Zsh] Would you like to update? [Y/n]: chruby ruby-2.7.0\r\n\r\nproject on  git-branch-name [$!?]\r\n```\r\n**Additional context**\r\nI'm calling this a feature request although to some extent it's a bug; but since it's unique to my setup with iTerm, I'm calling it a feature request.\r\n\r\nThank you.\r\n",
        "labels": "Feature",
        "id": 42914
    },
    {
        "title": "Create `git merge --squash` command alias",
        "body": "**Describe the solution you'd like**\r\nA description of what you want to happen.\r\n\r\nWriting `gms` would be the alias for `git merge --squash`\r\n",
        "labels": "Feature",
        "id": 42915
    },
    {
        "title": "Mark stale issues and pull requests",
        "body": "Mark stale issues and pull requests. PRs which have gone cold with no recent activities should be checked after 30 days and closed if no activity for another 30 days.\r\n\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nThe name of the plugin or theme that you would like us to improve. [...]\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nMaintainers get overwelmed by too many Open PRs. So can clean thing up by autmating the closure of old PRs with no recent activities (within the past 60 days). This will free up Maintainers to work on more important issues and with people who keep addressing feedback early enough.\r\n\r\n**Describe the solution you'd like**\r\nAdds a new Github Action to mark stale PRs and close them after 60 days of no activity.\r\n",
        "labels": "Feature",
        "id": 42916
    },
    {
        "title": "Mvn: Add qurakus support",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\n`mvn` plugin\r\n\r\n**Describe the solution you'd like**\r\nAdd completion for Quarkus plugin: `mvn quarkus:...`\r\n\r\n",
        "labels": "Feature",
        "id": 42917
    },
    {
        "title": "Rename OMZ's master branch",
        "body": "We are going rename our primary/main branch and discontinue using `master`.\r\n\r\nProposal to move from `main` (or `stable` as we're also exploring a `beta` branch naming convention for community-driven testing).  @mcornella can help make a call there.\r\n\r\nGiven that our install and update process is reliant on branch names, this will not be a quick nor simple change. ...but it will (and needs to) happen. Thanks in advance for your contributions and patience as we figure out a strategy.",
        "labels": "Feature",
        "id": 42918
    },
    {
        "title": "De-duplicate chucknorris quotes",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nchucknorris\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nQuote about 45-11 seems to appear more frequently than other quotes.\r\n\r\n**Describe the solution you'd like**\r\nDe-duplicate chucknorris quotes.\r\n\r\n**Describe alternatives you've considered**\r\n* Remove 45-11 quote altogether\r\n* Have some way to load quotes from OS-bundled fortune\r\n\r\n**Additional context**\r\nhttps://github.com/ohmyzsh/ohmyzsh/blob/547a6ce260362b06e86a9c366dc29984c0954124/plugins/chucknorris/fortunes/chucknorris#L93\r\nhttps://github.com/ohmyzsh/ohmyzsh/blob/547a6ce260362b06e86a9c366dc29984c0954124/plugins/chucknorris/fortunes/chucknorris#L223\r\nhttps://github.com/ohmyzsh/ohmyzsh/blob/547a6ce260362b06e86a9c366dc29984c0954124/plugins/chucknorris/fortunes/chucknorris#L353\r\netc.",
        "labels": "Feature",
        "id": 42919
    },
    {
        "title": "Intuitive alias related to 'git pull'",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe alternatives you've considered**\r\n\r\nHi, I love git-alias feature in oh-my-zsh.\r\n\r\nBut, I'm confused about alias related to 'git pull' \r\n\r\nIt would be nice to have uniformity for alias related to 'git pull'\r\n\r\nalias gl='git pull'\r\nalias glum='git pull upstream master'\r\n\r\nalias gup='git pull --rebase'\r\nalias gupv='git pull --rebase -v'\r\nalias gupa='git pull --rebase --autostash'\r\nalias gupav='git pull --rebase --autostash -v'\r\n\r\nex) change 'gl' to 'gu' (pull -> u) or 'gup' to 'glr' (pull -> l)\r\n\r\nThank you for reading my issue!",
        "labels": "Feature",
        "id": 42920
    },
    {
        "title": "`docker container run --g[TAB]` no `--gpus` completion for `zsh`",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nThe name of the plugin that you would like us to improve: `docker`\r\n\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nIn `zsh` shell prompt, input `docker container run --g[TAB][TAB]`, there's no `--gpus` completion shows in the candidates.\r\n\r\n**Describe the solution you'd like**\r\nthe `docker` plugin [in ohmyzsh](https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/docker) comes from [`docker-cli`](https://github.com/docker/cli/tree/master/contrib/completion/zsh) , and the upstreaming `docker cli` seems not work properly with `docker container run --gpus ...`  completion too. I've already file an [issue](https://github.com/docker/cli/issues/2549) in the docker cli official repo.\r\nPerhaps it should update the docker cli official repo, and then sync the ohmyzsh docker plugin.\r\n\r\n",
        "labels": "Feature",
        "id": 42921
    },
    {
        "title": "Eject all mounted disks for osx plugin",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\nPLUGIN: OSX\r\nFEATURE: To eject all mounted disks.\r\n\r\n```sh\r\n# RECOMMENDED SCRIPT\r\n\r\nalias ejectall=\"osascript -e 'tell application \\\"Finder\\\" to eject (every disk whose ejectable is true)'\"\r\n```\r\n\r\nThanks!",
        "labels": "Feature",
        "id": 42922
    },
    {
        "title": "Translation Task",
        "body": "I just wanna know if it is ok to have a Chinese version of  README, if  it is, I`d like to help to do it",
        "labels": "Feature",
        "id": 42923
    },
    {
        "title": "Add .nvmrc loading to nvm plugin",
        "body": "Can we add [this bit](https://github.com/nvm-sh/nvm#zsh) to the [nvm plugin](https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/nvm), to auto-load `.nvmrc` files?\r\n\r\nI added it to my `.zshrc` file with the `nvm` plugin enabled, and it seems to work correctly.\r\n\r\nI could do a PR, but wanted to make sure I wasn't missing something.\r\n\r\n@nicholasjpaterno ",
        "labels": "Feature",
        "id": 42924
    },
    {
        "title": "Can't pass lexer option to colorize plugin (using chroma)",
        "body": "\r\n**Describe the bug**\r\nI am using **chroma** with the Colorize plugin and I want to use the aliases that the Colorize plugin provides: `ccat` (for `colorize_cat`) and `cless` (for `colorize_less`) to display syntax highlighting for files with no extension, based on the content of the file. \r\n\r\n**To Reproduce**\r\ncontents of file 'zman' is:\r\n```\r\nerrcode=0\r\nif [ $# -eq 0 ]\r\nthen\r\n    >&2 echo \"Not enough arguments\";\r\n    errcode=2\r\nfi\r\nif [ $# -eq 1 ]\r\nthen\r\n    PAGER=\"less -g -s '+/^       \"$1\"'\" command man zshall\r\nfi\r\nif [ $# -eq 2 ]\r\nthen\r\n    PAGER=\"less -g -s '+/^       \"$1\"'\" command man \"$2\"\r\nfi\r\nif [ $# -gt 2 ]\r\nthen\r\n    >&2 echo \"Too many arguments\"\r\n    errcode=2\r\nfi\r\nif [ $errcode -gt 0 ]\r\nthen\r\n    $(exit $errcode)\r\nfi\r\n# vim:ft=zsh:et\r\n```\r\nrun the command:\r\n`ccat zman`\r\n\r\n**Result**\r\nOutput is not colorized\r\n\r\n**Expected behavior**\r\nOutput should be colorized using the \"Bash\" lexer\r\n\r\n**Desktop**\r\n - OS / Distro: Microsoft Windows 10 Pro (64-bit), Version 10.0.18362\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: zsh 5.8 (x86_64-ubuntu-linux-gnu)\r\n - Terminal emulator: Windows Terminal\r\n\r\n**Additional context**\r\nI assume what I am asking should be possible since I found this in the `colorize_cat` function `colorize.plugin.zsh` :\r\n```\r\n    # Guess lexer from file extension, or guess it from file contents if unsuccessful.\r\n    local FNAME lexer\r\n    for FNAME in \"$@\"; do\r\n        if [[ \"$ZSH_COLORIZE_TOOL\" == \"pygmentize\" ]]; then\r\n            lexer=$(pygmentize -N \"$FNAME\")\r\n            if [[ $lexer != text ]]; then\r\n                pygmentize -O style=\"$ZSH_COLORIZE_STYLE\" -l \"$lexer\" \"$FNAME\"\r\n            else\r\n                pygmentize -O style=\"$ZSH_COLORIZE_STYLE\" -g \"$FNAME\"\r\n            fi\r\n        else\r\n            chroma --style=\"$ZSH_COLORIZE_STYLE\" \"$FNAME\"\r\n        fi\r\n    done\r\n```\r\nI can get the example file `zman` to have colorized output by using chroma manually like this:\r\n`chroma zman --lexer=\"Bash\" --style=\"swapoff\" --formatter=\"terminal256\"`",
        "labels": "Feature",
        "id": 42925
    },
    {
        "title": "git diff alias with lock files excluded (package-lock.json)",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\ngit plugin\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\ngit diff shows me changes in package-lock.json\r\n\r\n**Describe the solution you'd like**\r\nI would like alias that e.g. gdnopl or gdnolock or similar that would exclude lock files from diff. It doesn't need to be just for npm (package-lock.json)\r\n\r\n**Describe alternatives you've considered**\r\nDid a quick grep in plugins directory, think no such alias exists\r\n\r\n**Additional context**\r\nIf it's ok idea, I can submit a pull request\r\n",
        "labels": "Feature",
        "id": 42926
    },
    {
        "title": "Improve GitHub actions",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nNo\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nNo\r\n\r\n**Describe the solution you'd like**\r\nBetter GitHub actions, currently it just installs OhMyZsh. We need it to test themes for building, plugins, etc.\r\n\r\n**Additional context**\r\n- Actions\r\n  - Optimize main action:\r\n    * install only when changes made to install script\r\n    * cache zsh installation\r\n    * check only changed files\r\nWe don't need to install it every time. Only when there is a modification to the install script. Therefore we could only install it 1 time then have the install in cache then utilize the update tool to pull it forward. Then it would detect what themes have been modified and test them. Same for plugins detect what plugins have been modified then test the plugins aliases.\r\n\r\nOverall we need our GitHub actions to me thorough\r\n",
        "labels": "Feature",
        "id": 42927
    },
    {
        "title": "Add branch 'development' to git gdba",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\ngit\r\n\r\n**Describe the solution you'd like**\r\nhttps://github.com/hakuseki/ohmyzsh.git\r\n\r\n",
        "labels": "Feature",
        "id": 42928
    },
    {
        "title": "Add alias for bundle add",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nplugins/Bundler\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nI'm always frustrated when I type bundle add every time I need to add bundle\r\n\r\n**Describe the solution you'd like**\r\nAdd alias ba='bundle add'",
        "labels": "Feature",
        "id": 42929
    },
    {
        "title": "Reload alias",
        "body": "It would be nice to have an alias to reload the zshrc on the common-aliases plugin.\r\n",
        "labels": "Feature",
        "id": 42930
    },
    {
        "title": "gcasm alias for 'git commit -a -s -m'",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\ngit\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nI see that there's already `gcam` and `gcsm`, but I often find myself doing `git commit -a -s -m <message>`\r\n\r\n**Describe the solution you'd like**\r\nI would love a `gcasm` function that does `git commit -a -s -m <message>`\r\n\r\n**Describe alternatives you've considered**\r\nI already have a `git casm` configured in git, but it's the last one remaining after switching to oh my zsh git plugin\r\n\r\nEDIT: I didn't notice https://github.com/ohmyzsh/ohmyzsh/pull/8881 already covers this. It can be linked to this issue.",
        "labels": "Feature",
        "id": 42931
    },
    {
        "title": "Perform environment reset between themes in theme-chooser",
        "body": "## Problem\r\n\r\nWhen running the `/tools/theme-chooser.sh` script to evaluate and look at different themes, there are many occasions when some configuration elements from one theme will \"bleed\" over to the next one or more until a theme overrides said configuration element. For example, the `clean-theme.zsh` configures an `$RPROMPT` value, however, the next theme to be displayed, `cloud-theme.zsh`, does not set a value for `$RPROMPT`, so previous value of `$RPROMPT` remains. The theme after `could-theme.zsh` is `crcandy-theme.zsh`, which also does not set a value for `$RPROMPT`, so the previous value from `clean-theme.zsh` still carries over.\r\n\r\nThis can (and does) provide a very skewed and potentially incorrect sampling of the theme from the quick preview we get through `theme-chooser.sh`.\r\n\r\n## Desired Outcome\r\n\r\nOptimally, the proverbial slate would be wiped clean of all configuration elements between the sampling of themes. A significant level of difficulty comes in when plugins are involved which add their own theming variable(s). \r\n\r\n## Possible steps to remediation\r\n\r\n1. Reset a small and pre-defined subset of variables most common among themes. Those would include:\r\n* `$PROMPT`\r\n* `$RPROMPT`\r\n* `$ZSH_THEME_GIT_PROMPT_(PREFIX|SUFFIX|CLEAN|DIRTY)`\r\n* Possibly other `$ZSH_THEME_GIT_*` values, from the core *git* plugin\r\n\r\n2. After loading and displaying a theme, extract any environment variables that might have been set, such as a grep for `ZSH_THEME_[^=]`, extract the variable name, and unset it.\r\n\r\n3. Get the currently defined environment variables that begin with `ZSH_` (or `ZSH_THEME`), and unset any which are not part of the core ZSH/OMZ functionality, such as `ZSH_NAME`, `ZSH_VERSION`, etc.\r\n\r\n4. Have all themes included in the base deployment follow the `prompt_cleanup` pattern from the ZSH Docs' [\"Writing Themes\"](http://zsh.sourceforge.net/Doc/Release/User-Contributions.html#Writing-Themes) section\r\n\r\n5. Invoking a new instance of the shell, using only the specified theme file. This would be the \"most thorough\" solution, but also the most time and resource-intensive due to the need of starting and exiting a new shell instance for every single theme.\r\n\r\n6. Do nothing, leave it as is and close this issue as \"Won't fix\". Not ideal (from my position and opinion), but still an option none-the-less.\r\n\r\n## What I've tried\r\n\r\nI've already gone down the path of option 1 above, however, as I was looking for the more common \"core' variables within the themes, I saw a few RVM and VENV among others. My list quickly grew large, somewhere around 20, which is why I mention having only a few in that option.\r\n\r\n## Conclusion\r\n\r\nGiven that depending on the path representing the most favourable option, I would be willing to take on this issue, or perhaps put together a POC of the top 2-3 options which would require a code change.",
        "labels": "Feature",
        "id": 42932
    },
    {
        "title": "git plugin shortcut for `git pull origin master`",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\ngit\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nWe've glum in the git plugin to pull from upstream. If the upstream is named origin then this is not useful. (In cases when I do not have access to rename the origin to upstream in the repo).\r\n\r\n**Describe the solution you'd like**\r\nWould it be okay if I added a glom shortcut to cover origin?\r\n\r\n**Describe alternatives you've considered**\r\nThe alternative would be to not use the shortcut and type out `gl origin master`\r\n\r\n**Additional context**\r\nI can put up a PR if you think this would be a good addition.\r\n",
        "labels": "Feature",
        "id": 42933
    },
    {
        "title": "Additional aliases for brew plugin",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nbrew plugin\r\n\r\n**Describe the solution you'd like**\r\nI suggest adding the following aliases to the brew plugin:\r\n\r\nalias bc=\"brew cleanup\"\r\nalias bci=\"brew cask info\"\r\nalias bcl=\"brew cask list\"\r\nalias bco=\"brew cask outdated\"\r\nalias bcu=\"brew cask upgrade\"\r\nalias bl=\"brew list\"\r\nalias bo=\"brew outdated\"\r\nalias bu=\"brew update\"\r\nalias bubco=\"brew update && brew cask outdated\"\r\nalias bubobco=\"brew update && brew outdated && brew cask outdated\"\r\n\r\n**Update 2020-05-02:** Added aliases bcl and bl to list above.",
        "labels": "Feature",
        "id": 42934
    },
    {
        "title": "git-prompt doesnt support 'stashed' changes",
        "body": "The git-prompt plugin is excellent but there is no support for 'stashed' changes. Can this be added?\r\n",
        "labels": "Feature",
        "id": 42935
    },
    {
        "title": "Support for Azure cli",
        "body": "\r\n**Is your feature request related to a problem? Please describe.**\r\nohmyzsh is missing support for the tool azure-cli\r\nhttps://docs.microsoft.com/en-us/cli/azure/\r\n\r\n**Describe the solution you'd like**\r\nA plugin like the one in https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/aws with similar utilities (profiles --> subscriptions)\r\n\r\n**Describe alternatives you've considered**\r\nIt looks like people have been living without a plugin for azure for a while, but is that fun ?\r\n\r\n\r\n",
        "labels": "Feature",
        "id": 42936
    },
    {
        "title": "[rkj-repos - theme ] Remove user, host from rkj-repos",
        "body": "Is there an easy way/option to remove user and host from the otherwise AWESOME rkj-repos-theme?",
        "labels": "Feature",
        "id": 42937
    },
    {
        "title": "Problem with highlighting of Selected texts",
        "body": "Whenever I seclect any text (for copying that text) on Zsh it gets highlighted as white text, but when the text is already white in color, then I am not able to view what is selected (Highlighted) what is not.\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nNo.\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nWhenever I seclect any text on Zsh it gets highlighted as white text, but when the text is already white in color, then I am not able to view what is selected (Highlighted) what is not.\r\n\r\n**Describe the solution you'd like**\r\nA better way of highlighting would be, along with making the text white, you can also change the background of the text. That would differentiate between what is selected what isn't selcted.\r\n\r\n**Describe alternatives you've considered**\r\nAlternative would be just to change the background of the text instead of changing it's color.\r\n\r\n**Additional context**\r\nHere you can see that when I selected some part of red text, it turned white (which indicates that I've selected it.\r\n![image](https://user-images.githubusercontent.com/36640498/78659106-b6a16e00-78e8-11ea-9ac7-5d1a69324359.png)\r\n\r\nBut Here I've selected some portion of already white colored text, which you can't figure out, since white text is highlighed to white again.\r\n![image](https://user-images.githubusercontent.com/36640498/78659364-10099d00-78e9-11ea-90bb-15c23d8b6f9d.png)\r\n\r\n",
        "labels": "Feature",
        "id": 42938
    },
    {
        "title": "Alias cp as cp --reflink=auto if possible",
        "body": "**Describe the solution you'd like**\r\nMany systems and FS support `cp --reflink=auto`, we could make it enable by default like `ls` and `grep` enable `--color`.\r\n\r\n**Describe alternatives you've considered**\r\nIf globally enable is inappropriate, at least make it happens in the _cp_ plugin.",
        "labels": "Feature",
        "id": 42939
    },
    {
        "title": "Use ZSH_THEME if previously defined.",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nKind of related to robbyrussell but not really. \r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nI'm always frustrated when I want to make different shells with a default theme. The first thing I do when I clone ohmyzsh is change ZSH_THEME=\"robbyrussell\" to \"${ZSH_THEME:-robbyrussell}\"\r\n\r\n**Describe the solution you'd like**\r\nWould like the default profile to use ZSH_THEME if already defined.\r\n\r\n**Describe alternatives you've considered**\r\nI haven't really considerd any alternatives.\r\n\r\n**Additional context**\r\nWith this change you can do this:\r\n![image](https://user-images.githubusercontent.com/3138467/77853858-82c19c80-71b4-11ea-8146-26cb1ae62c9c.png)\r\n",
        "labels": "Feature",
        "id": 42940
    },
    {
        "title": "Loop folder pull code",
        "body": "**Describe the solution you'd like**\r\nSometimes I need multiple folders to pull code\r\nlike this shell\r\n```\r\n#!/bin/sh\r\nfor dir in $(ls -d */)\r\ndo\r\n  cd $dir\r\n  echo \"into $dir\"\r\n  if [ -d \".git\" ]; then\r\n     git pull\r\n  elif [ -d \".svn\" ]; then\r\n     svn update\r\n  fi\r\n  cd ..\r\ndone\r\n```\r\n",
        "labels": "Feature",
        "id": 42941
    },
    {
        "title": "Support completions from external tools in the ZSH fpath/compinit lifecycle ",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\n\r\nMy feature request is related to all plugins, but I am particularly interested in the `asdf` plugin.\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n\r\nCurrently, the `asdf` plugin sources the tool's Bash completions. We (maintainer here) recently added [native ZSH completions to the tools codebase](https://github.com/asdf-vm/asdf/tree/master/completions). It would be great to be able to simply symlink the existing ZSH completions to the `plugins/asdf` dir in place of sourcing the Bash completions. However, given all additions to `fpath` and the call to `compinit` are performed before the `*.plugin.zsh` scripts are executed it means any symlink or copy of the actual ZSH files within the plugin's script will not take affect until https://github.com/ohmyzsh/ohmyzsh/issues/7642 is performed.\r\n\r\n**Describe the solution you'd like**\r\n\r\n1st party support for 3rd party tools to have their completions added to fpath within the oh-my-zsh lifecycle. \r\n\r\nI don't want each `asdf` user to have to learn about `fpath` if this could be automated (as it currently is but with bash completions). Now macOS ships with ZSH as it's default shell we will have many users migrated from Bash to ZSH and so I see this becoming an increasingly large problem. \r\n\r\n**Describe alternatives you've considered**\r\n\r\nManually sourcing the completions from `asdf` before sourcing `oh-my-zsh` so I do not have to rerun compinit.\r\n\r\nRelevant parts of my `.zshrc`: \r\n\r\n```shell\r\nfpath=(${HOME}/.asdf/completions $fpath)\r\nplugins=(\r\n  asdf\r\n)\r\n. \"$ZSH/oh-my-zsh.sh\"\r\n```\r\n\r\n**Additional context**\r\n\r\nNotably, https://github.com/ohmyzsh/ohmyzsh/pull/8777 will not resolve this issue.\r\n\r\nPast work on the asdf plugin:\r\n- https://github.com/ohmyzsh/ohmyzsh/pull/4956\r\n- https://github.com/ohmyzsh/ohmyzsh/pull/6046\r\n- https://github.com/ohmyzsh/ohmyzsh/pull/6456\r\n- https://github.com/ohmyzsh/ohmyzsh/pull/6749\r\n- https://github.com/ohmyzsh/ohmyzsh/pull/7582\r\n\r\nTagging listed Maintainer of OMZ asdf plugin: @RobLoach\r\n\r\nExternally relevant:\r\n- https://github.com/zsh-users/zsh-completions/issues/603",
        "labels": "Feature",
        "id": 42942
    },
    {
        "title": "Sort list of git refs in most recently used (committed) order",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\n\r\ngitfast\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n\r\nHaving to exactly remember branch names is cumbersome, I would much more prefer if the result of `gco <TAB>` would list branches I (or possible someone else if remote branches are included) recently committed to.\r\n\r\n**Describe the solution you'd like**\r\n\r\nMake use of the `--sort` option of `git-for-each-ref` command to sort by committer date. (Source: https://stackoverflow.com/a/5188364/2489334) I think, the following function would need to be changed: https://github.com/ohmyzsh/ohmyzsh/blob/2a3a940a4553a271d45722538697a667f9b55293/plugins/gitfast/git-completion.bash#L637-L745\r\n\r\nUnfortunately, I have not idea how to write completion scripts or ZSH scripts in general so I couldn't make it work. If I try to add the `--sort` argument, it just seems to be ignored. The completion values of `gco <TAB>` seem to be sorted alphabetically.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nSetting the `branch.sort` git config value but it doesn't seem to have an effect.\r\n\r\n**Additional context**\r\n\r\nrefs are sorted alphabetically:\r\n\r\n![image](https://user-images.githubusercontent.com/5486389/77396544-103d6f00-6df8-11ea-8cff-c7e4faff8ac2.png)\r\n",
        "labels": "Feature",
        "id": 42943
    },
    {
        "title": "Update history-substring-search plugin to current version",
        "body": "Plugin name: history-substring-search\r\n\r\nWell.. I would not call this a feature but its not a bug either and I do not need support so... \r\n\r\nThe [history-substring-search plugin in this repo](https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/history-substring-search) did not get an update for 4 years.\r\n\r\nAnyhow on the [main repo](https://github.com/zsh-users/zsh-history-substring-search) there were some interesting enhancements like fuzzy search and I wonder why this does not get its way into this bundle.",
        "labels": "Feature",
        "id": 42944
    },
    {
        "title": "Perform the code security audit. Is remote exploiting/command execution possible ?",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nNo, It's not\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nOh My Zsh used on wide range of systems and on root accounts as well. The code didn't have any automated or manual security audit to find out if remote exploiting is possible.\r\n\r\n**Describe the solution you'd like**\r\nPerform Ohmyzsh code security audit to find out if it's possible to: Buffer overflow, Remote code execution during Ohmyzsh updates\r\n\r\n**Describe alternatives you've considered**\r\nAlternative solution is stop using Ohmyzsh until security audit is performed\r\n\r\n**Additional context**\r\nI have concerns that OhMyZsh was used by some actors to gain systems control in terms of SolarWinds attack.\r\n\r\n**Related Issues**\r\nThere are not. 0 issues related to security of the code. That's kind of weird I'd say.\r\n",
        "labels": "Feature",
        "id": 42945
    },
    {
        "title": "Having trouble with merge conflicts? Use Merge Mamba for free, forever",
        "body": "Shameless plug warning: I'm responsible for developing [Merge Mamba](https://mergemamba.com).\r\n\r\nI've seen a few cases of people having to juggle their pull requests around each other and for a big project like this, Merge Mamba could be helpful for letting people know when they're working on code that conflicts with changes in other branches.\r\n\r\nMerge Mamba is free forever for open source projects and right now I'm just trying to get as much feedback as possible, whether you love it or hate it. We're on [Github Marketplace](https://github.com/marketplace/merge-mamba) and if you're interested it's just a few clicks to get up and running.\r\n\r\nThanks and apologies for hijacking your issue pages,\r\nH",
        "labels": "Feature",
        "id": 42946
    },
    {
        "title": "Case Insensitivity in history-substring-search",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nThe history-substring-search plugin.\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nThe history-substring-search plugin doesn't support case-insensitivity. In my zshrc, I've commented `CASE_SENSITIVE=\"true\"`, but history-substring-search is sensitive to the case of what I type.\r\n\r\n**Describe the solution you'd like**\r\nhistory-substring-search should give me case insensitive suggestions if `CASE_SENSITIVE=\"true\"` is commented.\r\n\r\n**Describe alternatives you've considered**\r\nI'm not aware of any. I'm just paying attention to the case of what I type if I'm relying on history-substring-search.\r\n",
        "labels": "Feature",
        "id": 42947
    },
    {
        "title": "uninstall_oh_my_zsh doesn't work",
        "body": "I want to remove oh_my_zsh.\r\nbut uninstall_oh_my_zsh instruction does not work in my terminal (iterm2).\r\n\r\nwhat is the correct instruction?\r\n\r\nI can not find answer.\r\n",
        "labels": "Feature",
        "id": 42948
    },
    {
        "title": "Install via homebrew",
        "body": "I'd love it if were possible to install ohmyzsh via homebrew.",
        "labels": "Feature",
        "id": 42949
    },
    {
        "title": "add a golang alias to recursively test directory",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nThe name of the plugin, theme or alias that you would like us to improve. [...]\r\n\r\ngolang plugin\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nA description of what the problem is. Ex. I'm always frustrated when [...]\r\n\r\nNo problem, just enhanced functionality\r\n\r\n**Describe the solution you'd like**\r\nA description of what you want to happen. [...]\r\n\r\nadd an alias for `gota` (go test all) `go test ./...`. \r\n\r\nSimilar to how `fmt` has a base `gof` (`go fmt`) and `gofa` (`go fmt ./...`)\r\n\r\n**Describe alternatives you've considered**\r\nA description of any alternative solutions or features you've considered. This can also include other plugins or themes.\r\n\r\nSimply add the alias local to my environment.\r\n\r\n**Additional context**\r\nAdd any other context, screenshots or discord conversations about the feature request here. Also if you have any PRs related to this issue that are already open that you would like us to look at.\r\n\r\nOpened PR: https://github.com/ohmyzsh/ohmyzsh/pull/9720\r\n\r\n\r\n",
        "labels": "Feature",
        "id": 42950
    },
    {
        "title": "Update on Transfer Plugin",
        "body": "Hello devs, encryptation auth on files could be implemented on the [transfer plugin](https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/transfer).\r\n\r\nThe encrypted upload is already enabled on the transfer.sh project\r\nhttps://github.com/dutchcoders/transfer.sh/#encrypt--upload\r\n\r\n### Encrypt & upload:\r\n```bash\r\n$ cat /tmp/hello.txt|gpg -ac -o-|curl -X PUT --upload-file \"-\" https://transfer.sh/test.txt\r\n````\r\n\r\nThanks for your attention ;) ",
        "labels": "Feature",
        "id": 42951
    },
    {
        "title": "add command for pruning local branches that have been merged",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\n`git`\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nwhen I'm working on a lot of branches my local git copy contains a lot of already merged branches which I need to clean manually\r\n\r\n**Describe the solution you'd like**\r\ni would like to propose a \"gbp\" command which removes all already merged branches\r\n\r\n**Describe alternatives you've considered**\r\ncurrently, I'm using this inside my global `.gitconfig`\r\n```\r\n[alias]\r\n\tbranch-prune = \"!git fetch -p && for b in $(git for-each-ref --format='%(if:equals=[gone])%(upstream:track)%(then)%(refname:short)%(end)' refs/heads); do git branch -d $b; done\"\r\n```\r\n\r\n**Additional context**\r\nthe command removes all branches that are merged and do not contain additional changes locally\r\n\r\n**Related Issues**\r\nNone\r\n",
        "labels": "Feature",
        "id": 42952
    },
    {
        "title": "MOTD",
        "body": "It is suggested to add a speech of welcome\r\n\r\nlinux motd",
        "labels": "Feature",
        "id": 42953
    },
    {
        "title": "Fix History with omz tool",
        "body": "Is it possible to have something on omz tool that fixes the history?\r\n\r\nI frequently see this kind of issue.\r\n```\r\nzsh: corrupt history file /home/pi/.zsh_history\r\n```",
        "labels": "Feature",
        "id": 42954
    },
    {
        "title": "Organize themes by features",
        "body": "Catalogue themes by features, e.g. by using tags one can select.  \r\n\r\nFor instance, I want to see just the themes that give me (at least) the following components in the prompt:\r\n\r\n- time\r\n- last exit code\r\n- current directory\r\n- git branch\r\n\r\nCurrently I have to go through all the themes and have to infer from the pictures what features they might have.  (There isn't even a textual description I can grep.)\r\n\r\nLightweight implementation of this feature:\r\n- organize the themes in a github issue tracker, one issue per theme\r\n- define one label per feature\r\n\r\nThis would allow me to choose some labels and only see the themes that implement the feature corresponding to that label.",
        "labels": "Feature",
        "id": 42955
    },
    {
        "title": "Add 'omz plugin load xxx' to omz cli",
        "body": "It could be useful to be able to dynamically load a plugin in a running shell : `omz plugin load kubectl`, `omz plugin load git docker`\r\n\r\n**Context**\r\nMy omz setup includes many plugins. This setup requires a significant amount of time when I start a new shell.\r\nSome of these plugins are very useful but I only use them once or twice a day.\r\n\r\nThis feature would permit to keep a short `plugins` list (= small startup time) and add other plugins when I really need them. \r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nNo\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nNo\r\n\r\n**Describe the solution you'd like**\r\nNA\r\n\r\n**Describe alternatives you've considered**\r\nNA\r\n\r\n**Additional context**\r\nExpected behaviour :\r\n```shell\r\n# quick startup time\r\nomz plugin load git\r\ngst\r\ngaa\r\ngc -m \"test: trying git omz plugin\"\r\ngp\r\nomz plugin load kubectl\r\nkcuc remote-cluster\r\nkgp\r\n...\r\n```\r\n\r\n**Related Issues**\r\nI am not aware of any\r\n",
        "labels": "Feature",
        "id": 42956
    },
    {
        "title": "Optimize images for themes page in wiki",
        "body": "When you open this page https://github.com/ohmyzsh/ohmyzsh/wiki/Themes, the browser is forced to download ~ 69MB of content.Most images are 590KB in size.\r\nCan I compress these images, put them in this issue and create a merge request for the updated wiki page with the already compressed content in the https://github.com/ohmyzsh/ohmyzsh project?\r\nI have no rights to edit the wiki. But the mantainer will be able to subtract my updated file on the wiki.\r\nI will try to do this. On average, the image will weigh 110Kb.",
        "labels": "Feature",
        "id": 42957
    },
    {
        "title": "theme-bobthefish",
        "body": "There is this nice theme on fish that kind of looks like the agnoster, but not quite. Could you please port this theme to zsh? https://github.com/oh-my-fish/theme-bobthefish",
        "labels": "Feature",
        "id": 42958
    },
    {
        "title": "Allow tmux binary name to be changed",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\ntmux\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nI'm unable to use a `tmux` binary that has been renamed to something else for development or configuration reasons (e.g. tmx2, tmux-stable).\r\n\r\n**Describe the solution you'd like**\r\nMake the name of the `tmux` binary configurable.\r\n\r\n**Describe alternatives you've considered**\r\nI could have an alias that masks a system provided `tmux`, but this winds up confusing other things.\r\n\r\n**Additional context**\r\nPR is inbound momentarily.\r\n\r\n**Related Issues**\r\nNone.",
        "labels": "Feature",
        "id": 42959
    },
    {
        "title": "Better UX when zsh specific parsing breaks",
        "body": "**Is your feature request related to a problem? Please describe.**\r\n```bash\r\n(.venv) ➜  service git:(develop) ✗ pip install fastapi[all]\r\nzsh: no matches found: fastapi[all]\r\n```\r\nNevertheless, in a regular `bash` it will work.\r\nTaking into account that most snippets on the internet are for bash-like CLI it is very frustrating.\r\n\r\n**Describe the solution you'd like**\r\nI see two directions to fix this:\r\n\r\n1. better error message, advice to enclose `fastapi[all]` in double quotes, etc\r\n2. smarter approach, try to guess expected behaviour\r\n\r\n**Describe alternatives you've considered**\r\nfix it manually\r\n",
        "labels": "Feature",
        "id": 42960
    },
    {
        "title": "relative path doesn't get tab-completion",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nWhen I issue `vi .../` I can't do tab-completion\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. type this `vi .../` \r\n2. press <tab> key\r\n3. there will be visual bell (in my case)\r\n\r\n**Expected behavior**\r\nIt should give the tab-completion\r\n\r\n\r\n\r\n\r\n - OS / Distro: [macOS]\r\n - Latest ohmyzsh update?: [Yes]\r\n - ZSH Version: [e.g. 5.8]\r\n - Terminal emulator: [Alacritty]\r\n ",
        "labels": "Feature",
        "id": 42961
    },
    {
        "title": "Activate completion features without adding any aliases",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nSort of. Right now specifically the npm plugin, but it applies to others too.\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nOften I want the completion that a plugin provides but I never want any of the aliases. I have no interest in learning them, and if my shell is littered with aliases it massively increases the possibility that when I make a typo in a short command something totally unexpected happens.\r\n\r\n**Describe the solution you'd like**\r\nSome way to specify whether or not I want each plugin's aliases. Perhaps it would be simplest to split completion and aliases to separate plugins?\r\n\r\n**Describe alternatives you've considered**\r\nI could edit the source to comment out all the aliases but that's not maintainable.\r\nI could unalias everything after the fact but that's a mess and not maintainable.\r\nI could install the completion separately but then why am I using ohmyzsh.",
        "labels": "Feature",
        "id": 42962
    },
    {
        "title": "deactivate or hide changelog overview post on ssh login",
        "body": "request to hide (quiet) the changelog overview post as i login into ssh session. Is this possible via config or variable? I only managed to see this in the update.sh which would be to hardcoded for my interests.",
        "labels": "Feature",
        "id": 42963
    },
    {
        "title": "Have an option to NOT display the feature adds for git commits",
        "body": "**Is your feature request related to a problem? Please describe.**\r\nRecently, when I run `upgrade_ohmyzsh`, when it pulls the git updates, it shows feature adds (or fix) messages for the commits, which it didn’t used to. I would like to disable this feature as it disrupts my daily update scripts. I have to run the script twice now because this process stops my entire update process.\r\n\r\n**Describe the solution you'd like**\r\nI would like to have an option/setting in `.zshrc` that I can set to disable commit messages on update.\r\n\r\n**Describe alternatives you've considered**\r\nHaven't thought of any.\r\n\r\n**Additional context**\r\nIf I knew how to write the code and create a PR for this, I would. I'm well versed in writing ZSH scripts to this level. I appreciate all that your guys do. Thanks for looking at this request.\r\n\r\n",
        "labels": "Feature",
        "id": 42964
    },
    {
        "title": "aliasing package-management for quick updates/refresh/search and or install",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nI have seen plugins for aliases that relate to things like pgsql,git,docker,Kubernetes, etc. But i have not seen one for package management, which for every linux distro, is a mysterious and ominous task for anyone starting a new OS. This can be global\r\n\r\n**Describe the solution you'd like**\r\n```\r\n#a typical goto for my distros is i alias all of my apt/dnf/yum/emerge commands\r\nalias install='clear; dnf -y -b install'\r\nalias search='clear; dnf search'\r\nalias whoP='clear; dnf provides'\r\nalias up='clear;echo \"Unlocking /etc/passwd\";chattr -i /etc/passwd;dnf -y -b upgrade;echo \"Re-locking /etc/passwd\";chattr +i /etc/passwd'\r\n```\r\n**Additional context**\r\nNot sure if this is something you would want, I can assist in writing a few of the scripts to detect OS if needed, and apply the aliases as needed.\r\n",
        "labels": "Feature",
        "id": 42965
    },
    {
        "title": "globalias enhancement",
        "body": "\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nglobalias\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\ni would like to have\r\n1. more control on the expansion trigger. \r\n2. easier mechanism to toggle the expansion functionality\r\n\r\n**Describe the solution you'd like**\r\n1. i would like to use `tab` (or better yet, use a customized key) instead of `space` to expand the alias.\r\n2. i would like to press `ctrl+shift+alt+g` (or better yet, use a customized key combo) to enable the expansionality, then press the same key combo again to disable the expansion functionality\r\n\r\n**Additional context**\r\ni have the above request because during my daily usage with the plugin, most of times it functions great. but in some cases, i just don't want it to expand.",
        "labels": "Feature",
        "id": 42966
    },
    {
        "title": "Apply style to git's error message",
        "body": "Hi there, I don't know exactly this is related to `ohmyzsh` or `git`, anyway my question is how to show this error message with another color such as red:\r\n\r\n![Screen Shot 2021-01-09 at 12 09 05 PM](https://user-images.githubusercontent.com/1549069/104088592-5b3c4c00-527d-11eb-9821-add6e6dae7f5.png)\r\n",
        "labels": "Feature",
        "id": 42967
    },
    {
        "title": "Enhance autocorrect prompt to add to CORRECT_IGNORE or CORRECT_IGNORE_FILE variable",
        "body": "**Issue**\r\nAutocorrect is awesome, but often users of zsh will end up turning it off because they get a correction that annoys them and they do not have an easy way to tell the system to ignore that correction.\r\n```\r\nuser@computer ~$ killall ssh\r\nzsh: correct 'ssh' to '.ssh' [nyae]? n\r\n```\r\nOne such example:\r\nhttps://stackoverflow.com/questions/3437454/zsh-wants-to-autocorrect-a-command-with-an-before-it\r\n\r\n**Solution**\r\nWhen prompted for an autocorrect, have an option to \"**I**gnore\" this particular correction.\r\n```\r\nuser@computer ~$ killall ssh\r\nzsh: correct 'ssh' to '.ssh' [nyaei]? n\r\n```\r\nChoosing the \"i\" option will add the particular correction to the CORRECT_IGNORE or CORRECT_IGNORE_FILE variable in the ~/.zshrc file.\r\n\r\nIn the particular example above the following would be set in the ~/.zshrc file:\r\n```\r\nCORRECT_IGNORE_FILE=\".ssh\"\r\n```\r\n\r\nIf there was a value for CORRECT_IGNORE_FILE already, the code would attempt a simple regex pipe followed by the pattern to be added to the ignore list in the ~/.zshrc file:\r\n```\r\nCORRECT_IGNORE_FILE=\".somefile|.ssh\"\r\n```\r\n",
        "labels": "Feature",
        "id": 42968
    },
    {
        "title": "The updater should also source zshrc",
        "body": "When doing the updation of local installation using `omz update`, at the end; it should also source the updated changes in current shell.\r\n\r\nThis or, as an additional feature to have `omz source` or `omz reload` sub commands to reload the changes (if any).",
        "labels": "Feature",
        "id": 42969
    },
    {
        "title": "Use ohmyz.sh domain to deliver installer script",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nNo. It's about the installation and regarding a faster installation technique.\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nIt's not a huge problem, yet just a feature id like the team to add. Running the installer script after running `curl https://ohmyz.sh | grep \"sh -c\"` involves using the mouse and a bit of copy paste.\r\n\r\n**Describe the solution you'd like**\r\nI would like if the team would redirect ohmyz.sh curl http connections to a static text. The text can include comments and echo commands to help the user and the installer command itself too. So the user would just run `sh -c $(curl ohmyz.sh)` to install ohmyzsh. Just like hashbang.sh community does.\r\n\r\n**Describe alternatives you've considered**\r\nAnother alternative would be to redirect curl users to the script itself instead of the websites http server.\r\n\r\n**Additional context**\r\n\r\n\r\n**Related Issues**\r\n",
        "labels": "Feature",
        "id": 42970
    },
    {
        "title": "Highlight current theme in use with omz tool",
        "body": "`omz theme list` could mark the current theme in use, so it is easier to set it back to the previous one while experimenting with new themes. Or at least one command to do that would be nice, lets say `omz theme current`",
        "labels": "Feature",
        "id": 42971
    },
    {
        "title": "Would you be open to adding the Rust version of `autojump` to the autojump search paths?",
        "body": "Title says it all, would you be open to adding the Rust version of `autojump` to the autojump search paths?   I'm happy to make the one-line change, or you can, whatever, I just want to make sure it'd be a welcome change before I bother forking and putting together a PR.",
        "labels": "Feature",
        "id": 42972
    },
    {
        "title": "Change auto-update prompt to not require input",
        "body": "**Is your feature request related to a problem? Please describe.**\r\nI regularly log into a remote workstation running omzsh and it asks me if I want to update, but I've anticipated pressing up+enter to reconnect my tmux session. As a result, garbage is entered into the \"Do you want to update? [Y/n]\" prompt, which picks no and dumps me at the usual prompt. It's too much effort to log out and in again just to update omz, so I never do.\r\n\r\n**Describe the solution you'd like**\r\nInstead of asking me if I'd like to update, simply remind me to check for an update. Then after I've reconnected tmux and my brain's processed what happened, I can just run the command.\r\n\r\n**Describe alternatives you've considered**\r\nI thought maybe this was customisable but I couldn't easily find an answer for it.\r\n",
        "labels": "Feature",
        "id": 42973
    },
    {
        "title": "[Feature Request] Auto update plugins under $ZSH_CUSTOM folder",
        "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\noh-my-zsh built-in plugins will be updated during `omz update` (and auto-update as well) since those plugins are hosted in the `ohmyzsh` repo. However, there might be many users' plugins that are located under the `$ZSH_CUSTOM` folders. oh-my-zsh should update them as well when `omz update`.\r\n\r\n**Describe the solution you'd like**\r\n\r\nFirst, there should be an option (maybe `$UPDATE_ZSH_CUSTOM`). When enabled, `omz update` (or during the auto update) should look through every directory under the `$ZSH_CUSTOM` folder. If there is a `.git`, execute `git pull --rebase`.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nThere are many existed oh-my-zsh plugins that accomplish the same thing. But they heavily rely on overrides oh-my-zsh internal function. oh-my-zsh could provide an `after_update_hook` for them.\r\n\r\n**Additional context**\r\n\r\n- https://github.com/TamCore/autoupdate-oh-my-zsh-plugins\r\n- https://github.com/tautomer/update-ohmyzsh-custom-plugins\r\n\r\nTwo oh-my-zsh plugins pop up in Google search result when I type in \"oh my zsh custom plugin update\".\r\n",
        "labels": "Feature",
        "id": 42974
    },
    {
        "title": "Add option to view the last changelog on command",
        "body": "**Is your feature request related to a problem? Please describe.**\r\nI have an automated update script that calls `omz update` and the script gets stuck because `less` opens with the changelog (a welcome addition but not needed in my case). Also the latest changelog maybe should be viewable somehow, with some command?\r\n\r\n**Describe the solution you'd like**\r\nAn option is added to `omz update` for silencing the changelog.",
        "labels": "Feature",
        "id": 42975
    },
    {
        "title": "Allow customize agnoster prompt",
        "body": "**Theme: agnoster**\r\n\r\n**Problem**\r\nNormally prompt prints complete dir path `%~`, substituting home to `~`. I like to have only last part of dir (`'%1d'`). So I'd like prompt to be configurable. \r\n\r\n**Possible Solution**\r\nThere's an example how it could look like in alternative agnoster impl here - https://github.com/agnoster/agnoster-zsh-theme . See AGNOSTER_PROMPT_SEGMENTS. \r\n\r\n**Alternatives**\r\nI can just change that thing myself in the zsh-theme flie. This is what I did currently, but it would probably be overwritten by update. \r\nThere could be different implementation, which does not work the same as in another impl(AGNOSTER_PROMPT_SEGMENTS). Because build_prompt refers to prompt_dir, it could be possible to somehow inject in between and override function. For example prompt_dir might look if there's already function like custom_agnoster_prompt_dir and delegate there instead. ",
        "labels": "Feature",
        "id": 42976
    },
    {
        "title": "oh-my-zsh may be setting `sharehistory`",
        "body": "**Describe the bug**\r\noh-my-zsh updated itself recently - I don't know how to find the version, but if I do `cd ~/.oh-my-zsh; git log` it shows `7a76afd61` as the most recent commit.\r\n\r\nI noticed that history was getting shared between my terminals, and found that if I ran `setopt`, the output included `sharehistory`.\r\n\r\nI added `unsetopt sharehistory` to my `.zshrc` and continued happily, but I'm unsure what caused it to be set in the first place. Could it be something to do with the `oh-my-zsh` update?\r\n\r\n - OS / Distro: Linux\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: zsh 5.8 (x86_64-debian-linux-gnu)\r\n - Terminal emulator: Gnome terminal 3.36.2\r\n",
        "labels": "Feature",
        "id": 42977
    },
    {
        "title": "Git plugin: \"gl\" should be short for \"git log\", not \"git push\"",
        "body": "It seems more intuitive for \"gl\" to mean \"git log\", and perhaps that was the intent. In the line below, a grouping of \"git log\"-related aliases can be seen. \"git push\" seems out of place.\r\n\r\nhttps://github.com/ohmyzsh/ohmyzsh/blob/51772732f54f01522ad5720e8ed0ba16ca3147ae/plugins/git/git.plugin.zsh#L186-L202\r\n\r\n@robbyrussell I tried to find a list of the plugin maintainers but could not find one. Perhaps it could be linked from the contributing guidelines?",
        "labels": "Feature",
        "id": 42978
    },
    {
        "title": "[Enhancement] colored-man-pages plugin",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\n\r\nThe [colored-man-pages](https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/colored-man-pages) plugin.\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n\r\nPlugin code is needlessly complicated and undocumented. And I know how to make it better!\r\n\r\nAlso, unless someone can provide me with a reason for turning on Nroff Unsafe mode (`_NROFF_U=1`), I'm in favor of removing it. I'm not an expert in Groff/Nroff, but it just sounds dangerous.\r\n\r\nAnd what's the deal with silently creating executable scripts in `$HOME/bin`? Thanks God, it does not affect me — only solaris users. But that is certainly **not** what I would expect from a plugin like this. At the very least, it should ship that executable script with the plugin, and extend PATH to its parent directory. It's not like plugins aren't allowed to provide additional supporting files, do they?\r\n\r\n**Describe the solution you'd like**\r\n\r\nPlease, take a look at [my rewrite](https://github.com/ratijas/dotfiles/commit/81e83202c2a852c2e53f1727f87652054645874a) @ my personal dotfiles repository! Sure, I stripped down parts I don't need on my system, but otherwise it can be copy-patched into oh-my-zsh.\r\n\r\nMy solution requires `autoload colors` for named colors, which is loaded by `lib/theme-and-appearance.zsh` anyway. I'm looking forward to any feedback.\r\n\r\n**Additional context**\r\n\r\nNone\r\n\r\n**Related Issues**\r\n\r\nNone\r\n",
        "labels": "Feature",
        "id": 42979
    },
    {
        "title": "Add option to disable ohmyzsh's aliases",
        "body": "\r\n**Is your feature request related to a problem? Please describe.**\r\nYes. I don't want aliases i never asked for. When I do `alias` i see that there are aliases like `egrep='egrep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn,.idea,.tox}'`, which I have no idea about.\r\n\r\n**Describe the solution you'd like**\r\nIt would be nice if I could set a variable like OMZ_ALIASES=false, so that i can disable aliases, or a even better solution would be to maintain the list of aliases in a separate file, so that I can comment out the ones if don't want//\r\n\r\n**Describe alternatives you've considered**\r\nI have tried to manually comment out the aliases i don't want by grep-ing, but that is tiresome\r\n\r\n**Additional context**\r\nI am not talking about the git aliases, which are rather helpful. I am talking about the aliases that are sourced even when `plugins=()`\r\n\r\n**Related Issues**\r\nUnwanted aliases can lead to people wondering what they are doing wrong when they aren't doing anything wrong, and its the alias they never knew they had causing the problem.\r\n",
        "labels": "Feature",
        "id": 42980
    },
    {
        "title": "Add optional support to mercurial in agnoster theme",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nagnoster\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nagnoster becomes really have when dealing with large VCS projects. By debugging, I noticed that often, in a git repository, \r\nthe prompt doesn't newline and gets stuck at hg id even though the folder is not a mercurial repository making the overall\r\noh my zsh agnoster theme really slow. By removing mercurial from my system, I already notice a huge difference.\r\n\r\n**Describe the solution you'd like**\r\nAdd some sort of configuration flag to disable mercurial checks.\r\n\r\n**Describe alternatives you've considered**\r\nI removed mercurial which is a bit extreme.\r\n",
        "labels": "Feature",
        "id": 42981
    },
    {
        "title": "Show the command attached to the alias when executing it",
        "body": "\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nno, should be applied to all the plugins\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nIf you are showing your terminal to another person who is not familiar with the ohmyzsh aliases, she can get a little bit confused cause she does not know what you are doing and then you have to explain the alias or do not use it.\r\n\r\n**Describe the solution you'd like**\r\nI think it would be great if you could enable an option to show the command that is really being executed just before the command output.\r\n\r\nExample:\r\n`k get namespaces`\r\n\r\noutput:\r\n```\r\n[!] kubectl get namespaces\r\n<kubectl output>\r\n```",
        "labels": "Feature",
        "id": 42982
    },
    {
        "title": "Enhancement by Giving option to keep history limit on 'command not found' commands.",
        "body": "### **Why?**\r\nWe get frustuated when we either mistakenly pastes something on the terminal and gives out 10-15 command not found errors and worse all this gets stored in history so we have to hit Up key 10 times to see our previous 'good' command.\r\n- eg. In Competitive Coding we have to paste test cases ( inputs) from their website to terminal. Sometimes interpreter driven (python) codes fail in between and all the inputs after that gets passed as a command line argument\r\n[Link to screenshot](https://imgur.com/a/QXtSd0k)\r\n- eg. When I am making small grammetical mistakes in writing command so I end up trying few times before I get correct. So now I don't need those other misspelled command in my history.\r\n\r\n### Basic idea\r\nThe simple solution to this I can think of is maintaining 2 history type. \r\n- 'good' commands history : commands who actually did something and didn't throw command not found error.\r\n- 'bad' commands : commands who gave 'command not found' error.\r\n\r\n### How to classify?\r\n- Simplest solution I think is limiting the number of bad commands getting saved which is indeed user configurable. For example if I misspelled a command I am only gonna hit Up once.  \r\nSo having just bad command' **history limit** to 5 is enough for me.\r\n- Indeed there can be better ways to manage this. If you have any suggest please.\r\n\r\n### Extra\r\nif you can guide me to the code which takes care of history I might be able to code/pseudo-code a solution\r\n\r\n** Sorry if this issue/enhancement is already mentioned as I only read 30-40 issues to crosscheck **\r\n\r\n**If there's already solution to this I am unaware of please show me**",
        "labels": "Feature",
        "id": 42983
    },
    {
        "title": "Feedback request: WORDCHARS change makes usability REALLY BAD",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nno\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nIntroduced by this commit: https://github.com/ohmyzsh/ohmyzsh/commit/50dc4ab3574f4e265dff816d8d9a0195cd260152\r\nThe usability is really bad when jumping between words. I found it extremely useful to jump between dashes (`-`) and underscores (`_`), and this commit just eliminates this capability which was crucial for fast work with the terminal.\r\n\r\n**Describe the solution you'd like**\r\nOf course I could set my own `WORDCHARS`, but I don't think this behaviour is something the majority would enjoy using.\r\n",
        "labels": "Feature",
        "id": 42984
    },
    {
        "title": "GIT Shortcut: `gai` for `git add -i`",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\ngit\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nNot a problem, just a \"missing\" shortcut for git! ;)\r\n\r\n**Describe the solution you'd like**\r\nWould like to see a shortcut added for `git add --interactive` or `git add -i`. This shortcut could be called `gai`, as I do not currently see that used for any other shortcut. \r\n\r\n**Describe alternatives you've considered**\r\nThe only real alternative is to use the full git command `git add -i`.\r\n\r\n",
        "labels": "Feature",
        "id": 42985
    },
    {
        "title": "af-magic: how to remove username@computer from prompt?",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\n`af-magic`\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nI don't want the right prompt\r\n\r\n**Describe the solution you'd like**\r\nSomething like agnoster. Hide the right prompt when \"$USER\" == \"$DEFAULT_USER\"\r\nhttps://github.com/ohmyzsh/ohmyzsh/blob/6ebf27b8d34c760e25749790ea78dcb0c220d76b/themes/agnoster.zsh-theme#L91\r\n\r\n**Related Issues**\r\nhttps://github.com/ohmyzsh/ohmyzsh/issues/5581 agnoster: how to remove username@computer from prompt?\r\n",
        "labels": "Feature",
        "id": 42986
    },
    {
        "title": "oc plugin does not work with zplug",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nPlugin: oc\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nzplug can not load oc plugin provided by oh-my-zsh. \r\n\r\n**Describe the solution you'd like**\r\nJust use the same coding like in the kubectl plugin solves the problem:\r\n````\r\n# Autocompletion for oc, the command line interface for OpenShift\r\n#\r\n# Author: https://github.com/kevinkirkup\r\n\r\n#if [ $commands[oc] ]; then\r\n#  source <(oc completion zsh)\r\n#fi\r\n\r\nif (( $+commands[oc] )); then\r\n    __OC_COMPLETION_FILE=\"${ZSH_CACHE_DIR}/oc_completion\"\r\n\r\n    if [[ ! -f $__OC_COMPLETION_FILE ]]; then\r\n        oc completion zsh >! $__OC_COMPLETION_FILE\r\n    fi\r\n\r\n    [[ -f $__OC_COMPLETION_FILE ]] && source $__OC_COMPLETION_FILE\r\n\r\n    unset __OC_COMPLETION_FILE\r\nfi\r\n\r\n````",
        "labels": "Feature",
        "id": 42987
    },
    {
        "title": "Support for dvtm, similarly to tmux",
        "body": "**Plugin for dvtm**\r\nI'd like to have a plugin, which enables the use of dvtm (dynamic virtual terminal manager) the same way one exists for tmux.\r\n\r\ndvtm: https://github.com/martanne/dvtm\r\n\r\n**Additional context**\r\nIt's very easy to enable tmux integration at the moment, just by setting some variables (ZSH_TMUX_AUTOSTART, ZSH_TMUX_AUTOCONNECT, etc.), so I'd like to have a similar approach to dvtm as well. Even if it's just enabling it, in the first step. I see tmux plugin defines some aliases as well, which is also nice to have for dvtm as well, but I could live without those.\r\n\r\nThanks,\r\nRobert\r\n\r\n\r\n",
        "labels": "Feature",
        "id": 42988
    },
    {
        "title": "add support for st",
        "body": "add terminal support for st (simple terminal)",
        "labels": "Feature",
        "id": 42989
    },
    {
        "title": "kubectl plugin add set context namespace aliases",
        "body": "Is your feature request related to a particular plugin or theme? If so, specify it.\r\nkubectl\r\n\r\nDescribe the solution you'd like\r\nUse alias like kgp, kgs most of the time need the flag ```-n```, who works as support in companies it became a tedious task. To avoid it a default namespace can be set using ```kubectl config set-context --current --namespace=teste```.  This command also could be an alias.\r\n\r\nDescribe alternatives you've considered\r\nalias kcsn - kubectl config set-context --current --namespace=teste\r\n",
        "labels": "Feature",
        "id": 42990
    },
    {
        "title": "Completion initialization (compinit) logic should be overridable / customizable",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nN/A\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\noh-my-zsh uses its core include (oh-my-zsh.sh) to handle completion initialization. This does not allow users to effectively customize that logic without forking this project or other means. Also, due to the way lib/*.zsh files are loaded, compfix.zsh is sourced multiple times.\r\n\r\nBy moving compinit logic into the lib folder, advanced users can then use $ZSH_CUSTOM to override compinit logic with their own. It also simplifies oh-my-zsh.sh into a simple core set of logic that is only responsible for handling OMZ environment settings and lib/plugin/theme sourcing and nothing else.\r\n\r\n**Describe the solution you'd like**\r\nCompletion logic should be moved out of oh-my-zsh.sh and into the lib folder. To ensure it is loaded first, the file could be named with a numeric prefix or an underscore.  The compinit file could also be combined with the compfix.zsh file.\r\n\r\n**Describe alternatives you've considered**\r\nInstead of a numeric prefix, the new lib/01-compinit.zsh file could just be called lib/compinit.zsh or placed someplace other than /lib, but would then need special logic in oh-my-zsh.sh. The way I'm proposing implementing this solution requires no additional logic in oh-my-zsh.sh, and in fact only moves code from that file.  \r\n\r\n**Additional context**\r\nSee PR https://github.com/ohmyzsh/ohmyzsh/pull/9257\r\n\r\n**Related Issues**\r\nN/A\r\n",
        "labels": "Feature",
        "id": 42991
    },
    {
        "title": "Update archlinux Plugin",
        "body": "The **archlinux** plug-in has aliases for discontinued tools. Eg yaourt\r\n\r\nLook this :\r\n```zsh\r\nif (( $+commands[yaourt] )); then\r\n  alias yaconf='yaourt -C'\r\n  alias yaupg='yaourt -Syua'\r\n  alias yasu='yaourt -Syua --noconfirm'\r\n  alias yain='yaourt -S'\r\n  alias yains='yaourt -U'\r\n  alias yare='yaourt -R'\r\n  alias yarem='yaourt -Rns'\r\n  alias yarep='yaourt -Si'\r\n  alias yareps='yaourt -Ss'\r\n  alias yaloc='yaourt -Qi'\r\n  alias yalocs='yaourt -Qs'\r\n  alias yalst='yaourt -Qe'\r\n  alias yaorph='yaourt -Qtd'\r\n  alias yainsd='yaourt -S --asdeps'\r\n  alias yamir='yaourt -Syy'\r\n```\r\n\r\nYaourt was basically [deprecated] (https://itsfoss.com/best-aur-helpers/) \r\nSo it would be nice to remove it from the code. \r\nI'm not the only one, this [issue](https://github.com/ohmyzsh/ohmyzsh/issues/8591) cites problems with a discontinued tool in 2017 that is stiil present in the plug-in. \r\n\r\n[Contributing guidelines](https://github.com/ohmyzsh/ohmyzsh/blob/master/CONTRIBUTING.md#you-have-a-suggestion) tell me to mark some contributors, so @celsomiranda if you are around. \r\n\r\nThis is my first issue, so if I made a mistake please let me know. ",
        "labels": "Feature",
        "id": 42992
    },
    {
        "title": "Proper versioning to release oh-my-zsh on Linux distributions",
        "body": "It would be really awesome to have proper versioning and tags around `oh-my-zsh` to make it able to be an official package on some Linux distributions.\r\n\r\nPlease look to Semantic Versioning 2.0.0 standard at [semver.org](https://semver.org/), as an example.",
        "labels": "Feature",
        "id": 42993
    },
    {
        "title": "Move pip plugin's cache file to $XDG_CACHE_HOME/pip which is ~/.cache/pip by default ",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\npip\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nPython-pip doesn't put its cache files into ~/.pip since a long time ago. They move cache files in $XDG_CONFIG_HOME/pip which is ~/.cache/pip by default. \r\n```bash\r\narthur@streaker:~$tree .cache/pip\r\n.cache/pip\r\n├── http\r\n│   └── 8\r\n│       └── 2\r\n│           └── f\r\n│               └── d\r\n│                   └── 8\r\n│                       └── 82fd835af304644b417e2e805b44d1181077da8bd78fad2fb38eb199\r\n└── selfcheck\r\n    └── 241e69162522ccf5846a2f42ebc24b17464915a155679666b89a9f31\r\n```\r\nbut oh-my-zsh pip plugin still put zsh-cache into the old place which is ~/.pip. UNIX-like already had to many dotfiles in the user's home folder. It would be nice if we could reduce some.\r\n**Describe the solution you'd like**\r\ncheck if $XDG_CACHE_HOME/pip exists before fallback to ~/.pip\r\n```bash\r\nif [[ -d $XDG_CACHE_HOME/pip ]]\r\nthen\r\n\tZSH_PIP_CACHE_FILE=$XDG_CACHE_HOME/pip/zsh-cache\r\nelse\r\n\tZSH_PIP_CACHE_FILE=~/.pip/zsh-cache\r\nfi\r\n```\r\n**reference**\r\nhttps://pip.pypa.io/en/latest/reference/pip_install/#caching\r\n\r\n",
        "labels": "Feature",
        "id": 42994
    },
    {
        "title": "Add copy button to \"Install oh-my-zsh now\" section on website",
        "body": "I think it can be useful to add copy button to installation instructions. \r\n![Screenshot from 2020-08-22 16-18-29](https://user-images.githubusercontent.com/15820496/90956967-b79bfc00-e493-11ea-9292-b512a9ef6adf.png)\r\n\r\n\r\nLike the one on github for example \r\n![Screenshot from 2020-08-22 16-23-36](https://user-images.githubusercontent.com/15820496/90957012-f03bd580-e493-11ea-87bb-7a3ab6698277.png)\r\n\r\nThere is one thing against - copying instructions directly to terminal is bad sometimes. However I doubt that there are many people typing this url (https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh) manually.\r\n\r\n",
        "labels": "Feature",
        "id": 42995
    },
    {
        "title": "`omz update` without restarting zsh",
        "body": "**Is your feature request related to a problem? Please describe.**\r\nI use a script that updates several tools including ohmyzsh (and homebrew, zsh-z etc). Using a script for updating is easier than typing the update commands for each tool individually. In the script the following command is used to update ohmyzsh:\r\n\r\n```zsh -ic \"omz update\"```\r\n\r\nThis is no longer working as `omz update` now restarts the zsh session and interrupts my script. Only after entering `exit`, my script is continued to be executed.\r\n\r\n**Describe the solution you'd like**\r\nWould it be possible to revert to the original functionality or provide a new option for `omz update` (e.g. `omz update --no-restart`) to prevent zsh from being restarted?\r\n",
        "labels": "Feature",
        "id": 42996
    },
    {
        "title": "Can user disable the echo of random.zsh-themes?",
        "body": "in `themes/random.zsh-themes`, in the last line, there exists\r\n```{.zsh}\r\necho \"[oh-my-zsh] Random theme '${RANDOM_THEME}' loaded\"\r\n```\r\nCan user disable the echo? i recommend to add a variable to allow user to disable or enable it?\r\nit is a little advice... thanks!",
        "labels": "Feature",
        "id": 42997
    },
    {
        "title": "[yarn plugin] Add yarn to PATH",
        "body": "Could the yarn plugin add yarn to PATH on load?\r\n\r\nnvm does something similar: https://github.com/ohmyzsh/ohmyzsh/blob/master/plugins/nvm/nvm.plugin.zsh\r\n\r\nIt would save users having to configure PATH:\r\n\r\n```bash\r\nexport PATH=\"$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH\"\r\n```\r\n\r\n\r\n",
        "labels": "Feature",
        "id": 42998
    },
    {
        "title": "A second alias for `git stash pop`",
        "body": "**Is your feature request related to a problem? Please describe.**\r\nI'm a bit bored by typing the entire id of a stash when doing a stash pop using `gstp`.\r\n\r\n**Describe the solution you'd like**\r\nIs it possible to have an alias for `stash@{...}` ?\r\nFor example, `gstpi() { git stash pop \"stash@{$@}\"; }`. Used like so: `gstpi 2` instead of the current `gstp stash@{2}`.\r\n\r\nThank you all for this great tool! :heart:",
        "labels": "Feature",
        "id": 42999
    },
    {
        "title": "add deno plugins",
        "body": "i have been using <a href='https://deno.land'> Deno</a> for a long time, to make it easier for users like me in the present or future, it is better to bring support to Deno.",
        "labels": "Feature",
        "id": 43000
    },
    {
        "title": "Add endpoints to kubectl aliases",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nkubectl\r\n\r\n**Describe the solution you'd like**\r\nAdd new aliases for endpoints object\r\n\r\n**Describe alternatives you've considered**\r\n```\r\nalias kged='kubectl get endpoints'\r\nalias kgeda='kubectl get endpoints --all-namespaces'\r\nalias kded='kubectl describe endpoints'\r\n```",
        "labels": "Feature",
        "id": 43001
    },
    {
        "title": "The gmt alias clashes with the gmt application",
        "body": "We are receiving notices from people using [gmt](https://www.generic-mapping-tools.org) that your alias gmt trips them up.  Since gmt is available on most distros and have been around since the late 1980s we recommend you modify you alias so that more can benefit from your aliases.",
        "labels": "Feature",
        "id": 43002
    },
    {
        "title": "Is it possible to remove specific lines from shell history? [feature-requested]",
        "body": "Please see the [discussion](https://unix.stackexchange.com/q/598709/198423) in stackoverflow. On the comments I have been recommended to ask the developers if they're interested in adding the feature.\r\n\r\nBasically in `bash` we have following feature:\r\n\r\n> If you want to run a command without saving it in history, prepend it with an extra space\r\n\r\n```\r\nprompt$ echo saved\r\nprompt$  echo not saved \\\r\n> #     ^ extra space\r\n```\r\n\r\n\r\n------\r\n\r\nI have following [answer for How to remove a single line from history?](https://unix.stackexchange.com/a/49216/198423) . When I do following, the line(` echo hello_world`) is not saved into history. Please note that I am using `ZSH` shell.\r\n\r\n\r\n```\r\nprompt$  echo hello_world\r\n> #     ^ extra space\r\n```\r\n\r\n\r\n----\r\n\r\n```\r\n$ history | tail -n1\r\n 1280  history | tail -n\r\n$  echo hello_world\r\nhello_world\r\n$ history | tail -n1\r\n 1280  history | tail -n\r\n```\r\n\r\n- But when I do run a command having a space at the beginning and right after do `CTRL-p`, I can see it on the shell history, even though it is not save in `history`. Is it possible to prevent it? On bash shell: this works with `HISTCONTROL= ignorespace`.\r\n\r\n```\r\n$  echo hello_world\r\n$ # Press `CTRL-p` => \" echo hello_world\" shows up again\r\n```\r\n\r\n[Q] Is it possible to apply same feature into `zsh`?\r\n\r\n",
        "labels": "Feature",
        "id": 43003
    },
    {
        "title": "ubuntu-image plugin",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nI'd like to have auto completion for the [ubuntu-image](http://manpages.ubuntu.com/manpages/bionic/man1/ubuntu-image.1.html) command. I've aliases and shell functions but lack interactivity.\r\n\r\n**Describe the solution you'd like**\r\n\r\nA plugin \"ubuntu-image\".\r\n\r\n**Describe alternatives you've considered**\r\n\r\n**Additional context**\r\n\r\n**Related Issues**\r\n\r\nNothing found.",
        "labels": "Feature",
        "id": 43004
    },
    {
        "title": "Add support for docker plugin buildx to zsh docker plugin",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nzsh docker plugin\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nThe zsh docker plugin does not support the docker plugin buildx. The Docker plugin adds a sub-command `docker buildx` to the docker cli.\r\n\r\n**Describe the solution you'd like**\r\n\r\nSupport of the `buildx` sub-command in the zsh docker plugin.\r\n\r\n**Describe alternatives you've considered**\r\n\r\n**Additional context**\r\n\r\n- Commands supported by zsh docker plugin: https://github.com/ohmyzsh/ohmyzsh/blob/master/plugins/docker/_docker#L964\r\n- Docker buildx plugin CLI: https://docs.docker.com/buildx/working-with-buildx/\r\n\r\n**Related Issues**\r\n\r\nNo issue found.",
        "labels": "Feature",
        "id": 43005
    },
    {
        "title": "snapd plugin",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\n\r\nNot existing yet.\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n\r\nI'd like to have autocompletion and aliases for the snapd command line tool `snap`.\r\n\r\n**Describe the solution you'd like**\r\n\r\nA plugin for the snapd daemon CLI `snap`.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nShell aliases and functions. I am interested in contributing my aliases and functions.\r\n\r\n**Additional context**\r\n- [snapd command line intro](https://snapcraft.io/docs/getting-started)\r\n\r\n**Related Issues**\r\n\r\nNothing related found.",
        "labels": "Feature",
        "id": 43006
    },
    {
        "title": "Multipass plugin",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\n\r\nNot existing yet, probable new plugin \"multipass\".\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n\r\nI'd like to have autocompletion and aliases for the multipass command line tool.\r\n\r\n**Describe the solution you'd like**\r\n\r\nA plugin for multipass.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nShell aliases and functions. I am interested  in  contributing the aliases and functions.\r\n\r\n**Additional context**\r\n- [Multipass website](https://multipass.run/)\r\n\r\n**Related Issues**\r\n\r\nNothing related found.",
        "labels": "Feature",
        "id": 43007
    },
    {
        "title": "Remove Google Analytics from website",
        "body": "## Remove Google Analytics\r\n\r\nIf you must have an analytics system, might I suggest either:\r\n- Plausible: https://plausible.io (offers a 50% discount for FOSS projects)\r\n- Goatcounter: https://goatcounter.com\r\n- Matomo: https://matomo.org\r\n- Fathom: https://usefathom.org\r\n\r\nThese solutions are all well-tested and open-source. This, of course, means they\r\ncan be independently audited for privacy and security. Instead of using a proprietary\r\nnonfree system such as Google Analytics, perhaps we could work together to replace\r\nit with something slightly more ethical?\r\n\r\nFurthermore, the majority of privacy features in evergreen browsers *block* Google\r\nAnalytics from being run. I can not say the same for solutions such as Plausible,\r\nwhich suggests they are trusted for their privacy by independent persons.\r\n\r\nIf you need any more information, please contact me!\r\n",
        "labels": "Feature",
        "id": 43008
    },
    {
        "title": "Add font-size option in zsh-theme syntax",
        "body": "![Screenshot 2020-07-13 at 7 13 05 PM](https://user-images.githubusercontent.com/232541/87298800-623c0900-c53d-11ea-9c60-6501babbd044.png)\r\n\r\nAs shown on the screen cap, the system symbol is dwarfed by the text.\r\n\r\n**Is your feature request related to a particular plugin or theme?**\r\nno\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nno\r\n\r\n**Describe the solution you'd like**\r\nAdd a font-size option in zsh-theme syntax to adjust the size of mac system symbols.\r\n\r\nThanks.",
        "labels": "Feature",
        "id": 43009
    },
    {
        "title": "[plugin:dotenv] dotenv disallow-list for directories you never want to source",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\ndotenv\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nI have a `.env` file in `$HOME` which gets sourced in `.bashrc` and `.zshrc`.\r\nWhen using the `dotenv` plugin, every time I start the terminal it asks me whether to source the `.env` file again, which I would like to say no to once.\r\nThis might also be useful if there is a `.env` file somewhere else you know you never want to source.\r\n\r\n**Describe the solution you'd like**\r\nThe prompt already entails `Source it? ([Y]es/[n]o/[a]lways)`. Expand it with a `n[e]ver` option (to be bikeshedded).\r\n\r\n**Describe alternatives you've considered**\r\nChange my `.env` file to something else. I think the feature would be useful nevertheless.\r\n\r\n--- \r\nWill open a PR soon.",
        "labels": "Feature",
        "id": 43010
    },
    {
        "title": "Auto assign PR reviewers",
        "body": "**Is your feature request related to a particular plugin or theme?**\r\nNo, it's related to the GH folder.\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nThere's a lot of plugins, and it's time-consuming to find the person responsible for a plugin.\r\n\r\n**Describe the solution you'd like**\r\nCreate a GitHub action that fires up when a new PR modifying some plugin is submitted. The plugin's owner is automatically asked to review the PR.\r\n\r\nThis would use the data from [the CODEOWNERS file](https://github.com/ohmyzsh/ohmyzsh/blob/master/.github/CODEOWNERS)\r\n\r\n**Describe alternatives you've considered**\r\nIt can be done manually as well.\r\n\r\n**Additional context**\r\nsuggested by @larson-carter\r\n",
        "labels": "Feature",
        "id": 43011
    },
    {
        "title": "Improve CLI",
        "body": "**Is your feature request related to a particular plugin or theme?**\r\nNo. This feature would be implemented in [`lib/cli.zsh`](https://github.com/ohmyzsh/ohmyzsh/blob/master/lib/cli.zsh) file.\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nThe problem is that e.g changing themes and adding/removing plugins is kind of a time-consuming activity.\r\n\r\n**Describe the solution you'd like**\r\nI suggest adding more functionality to the `omz` CLI tool.\r\n\r\nExamples:\r\n`omz plugin add <name>` - Adds a new plugin to the `plugins` array in `~/.zshrc` __*__\r\n\r\n`omz plugin remove <name>` - Removes a plugin from the `plugins` array in `~/.zshrc` __*__\r\n\r\n`omz theme set <name>` - changes the value of the `ZSH_THEME` variable in `~/.zshrc` __*__\r\n\r\n__*__ - the CLI might also ask whether to reload the shell `[Y/n]` or use a default option from somewhere (probably `~/.zshrc`)\r\n\r\nThat's what I can think of right now.\r\n\r\n**Describe alternatives you've considered**\r\nNot doing anything?\r\n\r\n**Additional context**\r\nidea by @larson-carter\r\n\r\n**Related Issues**\r\nI'm not aware of them, but please let me know if there are any so I can list them here\r\n\r\n--- Pinging you to hear your opinion on this\r\ncc @larson-carter  @mcornella ",
        "labels": "Feature",
        "id": 43012
    },
    {
        "title": "option to have a quieter upgrade",
        "body": "\r\n**Describe the solution you'd like**\r\nI would like an option to have a quieter upgrade. Just seeing the files changed is enough. The banner, links, etc. could be optionally printed or hidden. \r\n\r\n**Describe alternatives you've considered**\r\nI considered disabling autoupgrade and have a cron update in the background, but then I never know what's changed or when.\r\n",
        "labels": "Feature",
        "id": 43013
    },
    {
        "title": "Update notice problem",
        "body": "**Describe the solution you'd like**\r\nAdd the words \"or `upgrade_oh_my_zsh` in terminal at your convenience to upgrade.\" to the upgrade notice.\r\n\r\n**Describe alternatives you've considered**\r\nI have automatic change to a particular ruby in my iTerm startup which bypasses the update Y/n as shown from iTerm start up. macOS iTerm, Mojave\r\n```\r\nLast login: Fri Jun 19 15:30:08 on console\r\n[Oh My Zsh] Would you like to update? [Y/n]: chruby ruby-2.7.0\r\n\r\nproject on  git-branch-name [$!?]\r\n```\r\n**Additional context**\r\nI'm calling this a feature request although to some extent it's a bug; but since it's unique to my setup with iTerm, I'm calling it a feature request.\r\n\r\nThank you.\r\n",
        "labels": "Feature",
        "id": 43014
    },
    {
        "title": "Create `git merge --squash` command alias",
        "body": "**Describe the solution you'd like**\r\nA description of what you want to happen.\r\n\r\nWriting `gms` would be the alias for `git merge --squash`\r\n",
        "labels": "Feature",
        "id": 43015
    },
    {
        "title": "Mark stale issues and pull requests",
        "body": "Mark stale issues and pull requests. PRs which have gone cold with no recent activities should be checked after 30 days and closed if no activity for another 30 days.\r\n\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nThe name of the plugin or theme that you would like us to improve. [...]\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nMaintainers get overwelmed by too many Open PRs. So can clean thing up by autmating the closure of old PRs with no recent activities (within the past 60 days). This will free up Maintainers to work on more important issues and with people who keep addressing feedback early enough.\r\n\r\n**Describe the solution you'd like**\r\nAdds a new Github Action to mark stale PRs and close them after 60 days of no activity.\r\n",
        "labels": "Feature",
        "id": 43016
    },
    {
        "title": "Mvn: Add qurakus support",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\n`mvn` plugin\r\n\r\n**Describe the solution you'd like**\r\nAdd completion for Quarkus plugin: `mvn quarkus:...`\r\n\r\n",
        "labels": "Feature",
        "id": 43017
    },
    {
        "title": "Rename OMZ's master branch",
        "body": "We are going rename our primary/main branch and discontinue using `master`.\r\n\r\nProposal to move from `main` (or `stable` as we're also exploring a `beta` branch naming convention for community-driven testing).  @mcornella can help make a call there.\r\n\r\nGiven that our install and update process is reliant on branch names, this will not be a quick nor simple change. ...but it will (and needs to) happen. Thanks in advance for your contributions and patience as we figure out a strategy.",
        "labels": "Feature",
        "id": 43018
    },
    {
        "title": "De-duplicate chucknorris quotes",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nchucknorris\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nQuote about 45-11 seems to appear more frequently than other quotes.\r\n\r\n**Describe the solution you'd like**\r\nDe-duplicate chucknorris quotes.\r\n\r\n**Describe alternatives you've considered**\r\n* Remove 45-11 quote altogether\r\n* Have some way to load quotes from OS-bundled fortune\r\n\r\n**Additional context**\r\nhttps://github.com/ohmyzsh/ohmyzsh/blob/547a6ce260362b06e86a9c366dc29984c0954124/plugins/chucknorris/fortunes/chucknorris#L93\r\nhttps://github.com/ohmyzsh/ohmyzsh/blob/547a6ce260362b06e86a9c366dc29984c0954124/plugins/chucknorris/fortunes/chucknorris#L223\r\nhttps://github.com/ohmyzsh/ohmyzsh/blob/547a6ce260362b06e86a9c366dc29984c0954124/plugins/chucknorris/fortunes/chucknorris#L353\r\netc.",
        "labels": "Feature",
        "id": 43019
    },
    {
        "title": "Intuitive alias related to 'git pull'",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe alternatives you've considered**\r\n\r\nHi, I love git-alias feature in oh-my-zsh.\r\n\r\nBut, I'm confused about alias related to 'git pull' \r\n\r\nIt would be nice to have uniformity for alias related to 'git pull'\r\n\r\nalias gl='git pull'\r\nalias glum='git pull upstream master'\r\n\r\nalias gup='git pull --rebase'\r\nalias gupv='git pull --rebase -v'\r\nalias gupa='git pull --rebase --autostash'\r\nalias gupav='git pull --rebase --autostash -v'\r\n\r\nex) change 'gl' to 'gu' (pull -> u) or 'gup' to 'glr' (pull -> l)\r\n\r\nThank you for reading my issue!",
        "labels": "Feature",
        "id": 43020
    },
    {
        "title": "`docker container run --g[TAB]` no `--gpus` completion for `zsh`",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nThe name of the plugin that you would like us to improve: `docker`\r\n\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nIn `zsh` shell prompt, input `docker container run --g[TAB][TAB]`, there's no `--gpus` completion shows in the candidates.\r\n\r\n**Describe the solution you'd like**\r\nthe `docker` plugin [in ohmyzsh](https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/docker) comes from [`docker-cli`](https://github.com/docker/cli/tree/master/contrib/completion/zsh) , and the upstreaming `docker cli` seems not work properly with `docker container run --gpus ...`  completion too. I've already file an [issue](https://github.com/docker/cli/issues/2549) in the docker cli official repo.\r\nPerhaps it should update the docker cli official repo, and then sync the ohmyzsh docker plugin.\r\n\r\n",
        "labels": "Feature",
        "id": 43021
    },
    {
        "title": "Eject all mounted disks for osx plugin",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\nPLUGIN: OSX\r\nFEATURE: To eject all mounted disks.\r\n\r\n```sh\r\n# RECOMMENDED SCRIPT\r\n\r\nalias ejectall=\"osascript -e 'tell application \\\"Finder\\\" to eject (every disk whose ejectable is true)'\"\r\n```\r\n\r\nThanks!",
        "labels": "Feature",
        "id": 43022
    },
    {
        "title": "Translation Task",
        "body": "I just wanna know if it is ok to have a Chinese version of  README, if  it is, I`d like to help to do it",
        "labels": "Feature",
        "id": 43023
    },
    {
        "title": "Add .nvmrc loading to nvm plugin",
        "body": "Can we add [this bit](https://github.com/nvm-sh/nvm#zsh) to the [nvm plugin](https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/nvm), to auto-load `.nvmrc` files?\r\n\r\nI added it to my `.zshrc` file with the `nvm` plugin enabled, and it seems to work correctly.\r\n\r\nI could do a PR, but wanted to make sure I wasn't missing something.\r\n\r\n@nicholasjpaterno ",
        "labels": "Feature",
        "id": 43024
    },
    {
        "title": "Can't pass lexer option to colorize plugin (using chroma)",
        "body": "\r\n**Describe the bug**\r\nI am using **chroma** with the Colorize plugin and I want to use the aliases that the Colorize plugin provides: `ccat` (for `colorize_cat`) and `cless` (for `colorize_less`) to display syntax highlighting for files with no extension, based on the content of the file. \r\n\r\n**To Reproduce**\r\ncontents of file 'zman' is:\r\n```\r\nerrcode=0\r\nif [ $# -eq 0 ]\r\nthen\r\n    >&2 echo \"Not enough arguments\";\r\n    errcode=2\r\nfi\r\nif [ $# -eq 1 ]\r\nthen\r\n    PAGER=\"less -g -s '+/^       \"$1\"'\" command man zshall\r\nfi\r\nif [ $# -eq 2 ]\r\nthen\r\n    PAGER=\"less -g -s '+/^       \"$1\"'\" command man \"$2\"\r\nfi\r\nif [ $# -gt 2 ]\r\nthen\r\n    >&2 echo \"Too many arguments\"\r\n    errcode=2\r\nfi\r\nif [ $errcode -gt 0 ]\r\nthen\r\n    $(exit $errcode)\r\nfi\r\n# vim:ft=zsh:et\r\n```\r\nrun the command:\r\n`ccat zman`\r\n\r\n**Result**\r\nOutput is not colorized\r\n\r\n**Expected behavior**\r\nOutput should be colorized using the \"Bash\" lexer\r\n\r\n**Desktop**\r\n - OS / Distro: Microsoft Windows 10 Pro (64-bit), Version 10.0.18362\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: zsh 5.8 (x86_64-ubuntu-linux-gnu)\r\n - Terminal emulator: Windows Terminal\r\n\r\n**Additional context**\r\nI assume what I am asking should be possible since I found this in the `colorize_cat` function `colorize.plugin.zsh` :\r\n```\r\n    # Guess lexer from file extension, or guess it from file contents if unsuccessful.\r\n    local FNAME lexer\r\n    for FNAME in \"$@\"; do\r\n        if [[ \"$ZSH_COLORIZE_TOOL\" == \"pygmentize\" ]]; then\r\n            lexer=$(pygmentize -N \"$FNAME\")\r\n            if [[ $lexer != text ]]; then\r\n                pygmentize -O style=\"$ZSH_COLORIZE_STYLE\" -l \"$lexer\" \"$FNAME\"\r\n            else\r\n                pygmentize -O style=\"$ZSH_COLORIZE_STYLE\" -g \"$FNAME\"\r\n            fi\r\n        else\r\n            chroma --style=\"$ZSH_COLORIZE_STYLE\" \"$FNAME\"\r\n        fi\r\n    done\r\n```\r\nI can get the example file `zman` to have colorized output by using chroma manually like this:\r\n`chroma zman --lexer=\"Bash\" --style=\"swapoff\" --formatter=\"terminal256\"`",
        "labels": "Feature",
        "id": 43025
    },
    {
        "title": "git diff alias with lock files excluded (package-lock.json)",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\ngit plugin\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\ngit diff shows me changes in package-lock.json\r\n\r\n**Describe the solution you'd like**\r\nI would like alias that e.g. gdnopl or gdnolock or similar that would exclude lock files from diff. It doesn't need to be just for npm (package-lock.json)\r\n\r\n**Describe alternatives you've considered**\r\nDid a quick grep in plugins directory, think no such alias exists\r\n\r\n**Additional context**\r\nIf it's ok idea, I can submit a pull request\r\n",
        "labels": "Feature",
        "id": 43026
    },
    {
        "title": "Improve GitHub actions",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nNo\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nNo\r\n\r\n**Describe the solution you'd like**\r\nBetter GitHub actions, currently it just installs OhMyZsh. We need it to test themes for building, plugins, etc.\r\n\r\n**Additional context**\r\n- Actions\r\n  - Optimize main action:\r\n    * install only when changes made to install script\r\n    * cache zsh installation\r\n    * check only changed files\r\nWe don't need to install it every time. Only when there is a modification to the install script. Therefore we could only install it 1 time then have the install in cache then utilize the update tool to pull it forward. Then it would detect what themes have been modified and test them. Same for plugins detect what plugins have been modified then test the plugins aliases.\r\n\r\nOverall we need our GitHub actions to me thorough\r\n",
        "labels": "Feature",
        "id": 43027
    },
    {
        "title": "Add branch 'development' to git gdba",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\ngit\r\n\r\n**Describe the solution you'd like**\r\nhttps://github.com/hakuseki/ohmyzsh.git\r\n\r\n",
        "labels": "Feature",
        "id": 43028
    },
    {
        "title": "Add alias for bundle add",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nplugins/Bundler\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nI'm always frustrated when I type bundle add every time I need to add bundle\r\n\r\n**Describe the solution you'd like**\r\nAdd alias ba='bundle add'",
        "labels": "Feature",
        "id": 43029
    },
    {
        "title": "Reload alias",
        "body": "It would be nice to have an alias to reload the zshrc on the common-aliases plugin.\r\n",
        "labels": "Feature",
        "id": 43030
    },
    {
        "title": "gcasm alias for 'git commit -a -s -m'",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\ngit\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nI see that there's already `gcam` and `gcsm`, but I often find myself doing `git commit -a -s -m <message>`\r\n\r\n**Describe the solution you'd like**\r\nI would love a `gcasm` function that does `git commit -a -s -m <message>`\r\n\r\n**Describe alternatives you've considered**\r\nI already have a `git casm` configured in git, but it's the last one remaining after switching to oh my zsh git plugin\r\n\r\nEDIT: I didn't notice https://github.com/ohmyzsh/ohmyzsh/pull/8881 already covers this. It can be linked to this issue.",
        "labels": "Feature",
        "id": 43031
    },
    {
        "title": "Perform environment reset between themes in theme-chooser",
        "body": "## Problem\r\n\r\nWhen running the `/tools/theme-chooser.sh` script to evaluate and look at different themes, there are many occasions when some configuration elements from one theme will \"bleed\" over to the next one or more until a theme overrides said configuration element. For example, the `clean-theme.zsh` configures an `$RPROMPT` value, however, the next theme to be displayed, `cloud-theme.zsh`, does not set a value for `$RPROMPT`, so previous value of `$RPROMPT` remains. The theme after `could-theme.zsh` is `crcandy-theme.zsh`, which also does not set a value for `$RPROMPT`, so the previous value from `clean-theme.zsh` still carries over.\r\n\r\nThis can (and does) provide a very skewed and potentially incorrect sampling of the theme from the quick preview we get through `theme-chooser.sh`.\r\n\r\n## Desired Outcome\r\n\r\nOptimally, the proverbial slate would be wiped clean of all configuration elements between the sampling of themes. A significant level of difficulty comes in when plugins are involved which add their own theming variable(s). \r\n\r\n## Possible steps to remediation\r\n\r\n1. Reset a small and pre-defined subset of variables most common among themes. Those would include:\r\n* `$PROMPT`\r\n* `$RPROMPT`\r\n* `$ZSH_THEME_GIT_PROMPT_(PREFIX|SUFFIX|CLEAN|DIRTY)`\r\n* Possibly other `$ZSH_THEME_GIT_*` values, from the core *git* plugin\r\n\r\n2. After loading and displaying a theme, extract any environment variables that might have been set, such as a grep for `ZSH_THEME_[^=]`, extract the variable name, and unset it.\r\n\r\n3. Get the currently defined environment variables that begin with `ZSH_` (or `ZSH_THEME`), and unset any which are not part of the core ZSH/OMZ functionality, such as `ZSH_NAME`, `ZSH_VERSION`, etc.\r\n\r\n4. Have all themes included in the base deployment follow the `prompt_cleanup` pattern from the ZSH Docs' [\"Writing Themes\"](http://zsh.sourceforge.net/Doc/Release/User-Contributions.html#Writing-Themes) section\r\n\r\n5. Invoking a new instance of the shell, using only the specified theme file. This would be the \"most thorough\" solution, but also the most time and resource-intensive due to the need of starting and exiting a new shell instance for every single theme.\r\n\r\n6. Do nothing, leave it as is and close this issue as \"Won't fix\". Not ideal (from my position and opinion), but still an option none-the-less.\r\n\r\n## What I've tried\r\n\r\nI've already gone down the path of option 1 above, however, as I was looking for the more common \"core' variables within the themes, I saw a few RVM and VENV among others. My list quickly grew large, somewhere around 20, which is why I mention having only a few in that option.\r\n\r\n## Conclusion\r\n\r\nGiven that depending on the path representing the most favourable option, I would be willing to take on this issue, or perhaps put together a POC of the top 2-3 options which would require a code change.",
        "labels": "Feature",
        "id": 43032
    },
    {
        "title": "git plugin shortcut for `git pull origin master`",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\ngit\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nWe've glum in the git plugin to pull from upstream. If the upstream is named origin then this is not useful. (In cases when I do not have access to rename the origin to upstream in the repo).\r\n\r\n**Describe the solution you'd like**\r\nWould it be okay if I added a glom shortcut to cover origin?\r\n\r\n**Describe alternatives you've considered**\r\nThe alternative would be to not use the shortcut and type out `gl origin master`\r\n\r\n**Additional context**\r\nI can put up a PR if you think this would be a good addition.\r\n",
        "labels": "Feature",
        "id": 43033
    },
    {
        "title": "Additional aliases for brew plugin",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nbrew plugin\r\n\r\n**Describe the solution you'd like**\r\nI suggest adding the following aliases to the brew plugin:\r\n\r\nalias bc=\"brew cleanup\"\r\nalias bci=\"brew cask info\"\r\nalias bcl=\"brew cask list\"\r\nalias bco=\"brew cask outdated\"\r\nalias bcu=\"brew cask upgrade\"\r\nalias bl=\"brew list\"\r\nalias bo=\"brew outdated\"\r\nalias bu=\"brew update\"\r\nalias bubco=\"brew update && brew cask outdated\"\r\nalias bubobco=\"brew update && brew outdated && brew cask outdated\"\r\n\r\n**Update 2020-05-02:** Added aliases bcl and bl to list above.",
        "labels": "Feature",
        "id": 43034
    },
    {
        "title": "git-prompt doesnt support 'stashed' changes",
        "body": "The git-prompt plugin is excellent but there is no support for 'stashed' changes. Can this be added?\r\n",
        "labels": "Feature",
        "id": 43035
    },
    {
        "title": "Support for Azure cli",
        "body": "\r\n**Is your feature request related to a problem? Please describe.**\r\nohmyzsh is missing support for the tool azure-cli\r\nhttps://docs.microsoft.com/en-us/cli/azure/\r\n\r\n**Describe the solution you'd like**\r\nA plugin like the one in https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/aws with similar utilities (profiles --> subscriptions)\r\n\r\n**Describe alternatives you've considered**\r\nIt looks like people have been living without a plugin for azure for a while, but is that fun ?\r\n\r\n\r\n",
        "labels": "Feature",
        "id": 43036
    },
    {
        "title": "[rkj-repos - theme ] Remove user, host from rkj-repos",
        "body": "Is there an easy way/option to remove user and host from the otherwise AWESOME rkj-repos-theme?",
        "labels": "Feature",
        "id": 43037
    },
    {
        "title": "Problem with highlighting of Selected texts",
        "body": "Whenever I seclect any text (for copying that text) on Zsh it gets highlighted as white text, but when the text is already white in color, then I am not able to view what is selected (Highlighted) what is not.\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nNo.\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nWhenever I seclect any text on Zsh it gets highlighted as white text, but when the text is already white in color, then I am not able to view what is selected (Highlighted) what is not.\r\n\r\n**Describe the solution you'd like**\r\nA better way of highlighting would be, along with making the text white, you can also change the background of the text. That would differentiate between what is selected what isn't selcted.\r\n\r\n**Describe alternatives you've considered**\r\nAlternative would be just to change the background of the text instead of changing it's color.\r\n\r\n**Additional context**\r\nHere you can see that when I selected some part of red text, it turned white (which indicates that I've selected it.\r\n![image](https://user-images.githubusercontent.com/36640498/78659106-b6a16e00-78e8-11ea-9ac7-5d1a69324359.png)\r\n\r\nBut Here I've selected some portion of already white colored text, which you can't figure out, since white text is highlighed to white again.\r\n![image](https://user-images.githubusercontent.com/36640498/78659364-10099d00-78e9-11ea-90bb-15c23d8b6f9d.png)\r\n\r\n",
        "labels": "Feature",
        "id": 43038
    },
    {
        "title": "Alias cp as cp --reflink=auto if possible",
        "body": "**Describe the solution you'd like**\r\nMany systems and FS support `cp --reflink=auto`, we could make it enable by default like `ls` and `grep` enable `--color`.\r\n\r\n**Describe alternatives you've considered**\r\nIf globally enable is inappropriate, at least make it happens in the _cp_ plugin.",
        "labels": "Feature",
        "id": 43039
    },
    {
        "title": "Use ZSH_THEME if previously defined.",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nKind of related to robbyrussell but not really. \r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nI'm always frustrated when I want to make different shells with a default theme. The first thing I do when I clone ohmyzsh is change ZSH_THEME=\"robbyrussell\" to \"${ZSH_THEME:-robbyrussell}\"\r\n\r\n**Describe the solution you'd like**\r\nWould like the default profile to use ZSH_THEME if already defined.\r\n\r\n**Describe alternatives you've considered**\r\nI haven't really considerd any alternatives.\r\n\r\n**Additional context**\r\nWith this change you can do this:\r\n![image](https://user-images.githubusercontent.com/3138467/77853858-82c19c80-71b4-11ea-8146-26cb1ae62c9c.png)\r\n",
        "labels": "Feature",
        "id": 43040
    },
    {
        "title": "Loop folder pull code",
        "body": "**Describe the solution you'd like**\r\nSometimes I need multiple folders to pull code\r\nlike this shell\r\n```\r\n#!/bin/sh\r\nfor dir in $(ls -d */)\r\ndo\r\n  cd $dir\r\n  echo \"into $dir\"\r\n  if [ -d \".git\" ]; then\r\n     git pull\r\n  elif [ -d \".svn\" ]; then\r\n     svn update\r\n  fi\r\n  cd ..\r\ndone\r\n```\r\n",
        "labels": "Feature",
        "id": 43041
    },
    {
        "title": "Support completions from external tools in the ZSH fpath/compinit lifecycle ",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\n\r\nMy feature request is related to all plugins, but I am particularly interested in the `asdf` plugin.\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n\r\nCurrently, the `asdf` plugin sources the tool's Bash completions. We (maintainer here) recently added [native ZSH completions to the tools codebase](https://github.com/asdf-vm/asdf/tree/master/completions). It would be great to be able to simply symlink the existing ZSH completions to the `plugins/asdf` dir in place of sourcing the Bash completions. However, given all additions to `fpath` and the call to `compinit` are performed before the `*.plugin.zsh` scripts are executed it means any symlink or copy of the actual ZSH files within the plugin's script will not take affect until https://github.com/ohmyzsh/ohmyzsh/issues/7642 is performed.\r\n\r\n**Describe the solution you'd like**\r\n\r\n1st party support for 3rd party tools to have their completions added to fpath within the oh-my-zsh lifecycle. \r\n\r\nI don't want each `asdf` user to have to learn about `fpath` if this could be automated (as it currently is but with bash completions). Now macOS ships with ZSH as it's default shell we will have many users migrated from Bash to ZSH and so I see this becoming an increasingly large problem. \r\n\r\n**Describe alternatives you've considered**\r\n\r\nManually sourcing the completions from `asdf` before sourcing `oh-my-zsh` so I do not have to rerun compinit.\r\n\r\nRelevant parts of my `.zshrc`: \r\n\r\n```shell\r\nfpath=(${HOME}/.asdf/completions $fpath)\r\nplugins=(\r\n  asdf\r\n)\r\n. \"$ZSH/oh-my-zsh.sh\"\r\n```\r\n\r\n**Additional context**\r\n\r\nNotably, https://github.com/ohmyzsh/ohmyzsh/pull/8777 will not resolve this issue.\r\n\r\nPast work on the asdf plugin:\r\n- https://github.com/ohmyzsh/ohmyzsh/pull/4956\r\n- https://github.com/ohmyzsh/ohmyzsh/pull/6046\r\n- https://github.com/ohmyzsh/ohmyzsh/pull/6456\r\n- https://github.com/ohmyzsh/ohmyzsh/pull/6749\r\n- https://github.com/ohmyzsh/ohmyzsh/pull/7582\r\n\r\nTagging listed Maintainer of OMZ asdf plugin: @RobLoach\r\n\r\nExternally relevant:\r\n- https://github.com/zsh-users/zsh-completions/issues/603",
        "labels": "Feature",
        "id": 43042
    },
    {
        "title": "Sort list of git refs in most recently used (committed) order",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\n\r\ngitfast\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n\r\nHaving to exactly remember branch names is cumbersome, I would much more prefer if the result of `gco <TAB>` would list branches I (or possible someone else if remote branches are included) recently committed to.\r\n\r\n**Describe the solution you'd like**\r\n\r\nMake use of the `--sort` option of `git-for-each-ref` command to sort by committer date. (Source: https://stackoverflow.com/a/5188364/2489334) I think, the following function would need to be changed: https://github.com/ohmyzsh/ohmyzsh/blob/2a3a940a4553a271d45722538697a667f9b55293/plugins/gitfast/git-completion.bash#L637-L745\r\n\r\nUnfortunately, I have not idea how to write completion scripts or ZSH scripts in general so I couldn't make it work. If I try to add the `--sort` argument, it just seems to be ignored. The completion values of `gco <TAB>` seem to be sorted alphabetically.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nSetting the `branch.sort` git config value but it doesn't seem to have an effect.\r\n\r\n**Additional context**\r\n\r\nrefs are sorted alphabetically:\r\n\r\n![image](https://user-images.githubusercontent.com/5486389/77396544-103d6f00-6df8-11ea-8cff-c7e4faff8ac2.png)\r\n",
        "labels": "Feature",
        "id": 43043
    },
    {
        "title": "Update history-substring-search plugin to current version",
        "body": "Plugin name: history-substring-search\r\n\r\nWell.. I would not call this a feature but its not a bug either and I do not need support so... \r\n\r\nThe [history-substring-search plugin in this repo](https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/history-substring-search) did not get an update for 4 years.\r\n\r\nAnyhow on the [main repo](https://github.com/zsh-users/zsh-history-substring-search) there were some interesting enhancements like fuzzy search and I wonder why this does not get its way into this bundle.",
        "labels": "Feature",
        "id": 43044
    },
    {
        "title": "Have a way to display aliases",
        "body": "**Is your feature request related to a problem? Please describe.**\r\nIt's difficult to get used to all the aliases at one or having to open the configuration files or the repository when you want to remember the aliases.\r\n\r\n**Describe the solution you'd like**\r\nHave an alias that tells you the different commands to display the aliases for more specific things like directory aliases, git aliases etc. For example, `aliases` would show:\r\n`git-aliases => displays aliases for git`\r\n`dir-aliases => displays directory aliases for zsh`\r\n`tmux-aliases => displays tmux custom bindings`\r\n`...`\r\nand `dr-aliases` would show:\r\n`md => make directory`\r\n`cd - => shows the last visited directories`\r\n`...`\r\n\r\n**Describe alternatives you've considered**\r\nThe possible solution I can think of is having a `#alias` comment for each alias and displaying each of the comments that begin with that string when calling the alias command.",
        "labels": "Feature",
        "id": 43045
    },
    {
        "title": "request plugin auto suggestions",
        "body": "https://github.com/zsh-users/zsh-autosuggestions",
        "labels": "Feature",
        "id": 43046
    },
    {
        "title": "Use HIST_REDUCE_BLANKS ",
        "body": "**Is your feature request related to a problem? Please describe.**\r\nLines that only differ in whitespace are not deduplicated out of my shell history. For example, commands `cd ` and `cd` are both saved in the history despite being semantically and almost syntactically same.\r\n\r\n**Describe the solution you'd like**\r\nEnable `HIST_REDUCE_BLANKS` zsh option.\r\nDocs:\r\n> HIST_REDUCE_BLANKS\r\n> Remove superfluous blanks from each command line being added to the history list.\r\n\r\n**Describe alternatives you've considered**\r\nEnabling `HIST_REDUCE_BLANKS` in my local configuration but I think this might be useful to many people without having any negative effects on people who don't care.\r\n\r\nI'm wondering what everyone thinks.\r\n",
        "labels": "Feature",
        "id": 43047
    },
    {
        "title": "custom configuration is loaded too late",
        "body": "I wanted to change my PROMPT and RPROMPT while using a theme but the oh-my-zsh.sh loads the custom configuration first and then overrides it with the theme configuration. Therefor I cannot use a custom PROMPT. As a quick workaround loading the theme before the custom directory seems to work (see below):\r\n\r\n```zsh\r\n# Load the theme\r\nif [ ! \"$ZSH_THEME\" = \"\"  ]; then\r\n if [ -f \"$ZSH_CUSTOM/$ZSH_THEME.zsh-theme\" ]; then\r\n    source \"$ZSH_CUSTOM/$ZSH_THEME.zsh-theme\"\r\n  elif [ -f \"$ZSH_CUSTOM/themes/$ZSH_THEME.zsh-theme\" ]; then\r\n    source \"$ZSH_CUSTOM/themes/$ZSH_THEME.zsh-theme\"\r\n  else\r\n    source \"$ZSH/themes/$ZSH_THEME.zsh-theme\"\r\n  fi\r\nfi\r\n# Set ZSH_CUSTOM to the path where your custom config files\r\n# and plugins exists, or else we will use the default custom/\r\nif [[ -z \"$ZSH_CUSTOM\" ]]; then\r\n    ZSH_CUSTOM=\"$ZSH/custom\"\r\nfi\r\n```",
        "labels": "Feature",
        "id": 43048
    },
    {
        "title": "Add a homebrew recipe to install ohmyzsh",
        "body": "**Describe the solution you'd like**\r\nIt would be nice to be able to install ohmyzsh via homebrew. The alternative is to tell people to curl a shell script and execute it. (I know that installing via homebrew still poses risks, but at least homebrew provides an inventory of installed software)\r\n\r\n",
        "labels": "Feature",
        "id": 43049
    },
    {
        "title": "[git plugin] Add gcsa alias for git commit -sa",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\ngit plugin\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nNo I would like to add an alias for git commit -sa (I always use it and there's no way to do so with current aliases)\r\n\r\n**Describe the solution you'd like**\r\nAdd `gcsa` alias for `git commit -sa`.\r\n",
        "labels": "Feature",
        "id": 43050
    },
    {
        "title": "modify \"sublime\" plugin to support snapd",
        "body": "using sublime-text as a snap on ubuntu 19.10 (though OS version should not matter), \r\n`snap list sublime-text\r\nName          Version  Rev  Tracking  Publisher     Notes\r\nsublime-text  3211     85   stable    snapcrafters  classic`\r\n\r\nthe command to run sublime text is (this works today to launch file1 in sublime-text):\r\n`/snap/bin/sublime-text.subl file1`\r\n\r\ni think the change needed is the Linux path is not \"aware\" of the /snap/* path, but I am not 100%\r\n",
        "labels": "Feature",
        "id": 43051
    },
    {
        "title": "Suggesting ZSH_TMUX_AUTOCONNECT behavior change",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nYes, the `tmux` plugin.\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nI like to leave tmux sessions that I may use later open (e.g. closing a terminal window with actually exiting the shell, disconnecting from an ssh-hosted tmux session).  Then, simply opening a new window re-attaches to the unattached session.  If there are no unattached sessions, I probably want a new session.  `ZSH_TMUX_AUTOCONNECT` doesn't serve this purpose because it _always_ autoconnects, so every new window will connect to the exact same session.\r\n\r\n**Describe the solution you'd like**\r\nI prefer the behavior described above, and I don't see a simple way to implement this outside the plugin (e.g. only specifying args to the alias).  I think it's reasonable for `ZSH_TMUX_AUTOCONNECT` to use this behavior instead of its current behavior.  Its current behavior seems limited since it also just auto-attaches to the _first_ open session.  If you meant to attach multiple times to a specific session, the default `s` bind is more flexible.\r\n\r\n**Describe alternatives you've considered**\r\nI currently use my fork that implements this, but I also considered with the `tmux` alias' argument override was a possible solution.  I didn't find a way to implement this in that way though, at least not without duplicating the plugin's startup logic.\r\n\r\n**Additional context**\r\nA commit implementing this is here: https://github.com/btolsch/oh-my-zsh/commit/c64f70130bb5449e8f5e0fde0c04be9060cc7de4\r\n",
        "labels": "Feature",
        "id": 43052
    },
    {
        "title": "Ruby version not visible in prompt with chruby",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nThis is related to the `avit` theme and the `chruby` plugin.\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nThe `avit` theme shows the right ruby version in the prompt when using `rvm` or `rbenv`. However, it doesn't show the Ruby version when using `chruby`.\r\n\r\n**Describe the solution you'd like**\r\nWhen `chruby` is installed, the `avit` theme should show the ruby version using the `chruby_prompt_info` function defined in the `chruby` plugin.\r\n\r\n**Describe alternatives you've considered**\r\nI tried adding this myself, but couldn't get the desired result. However, I believe that it should be an easy fix.\r\n",
        "labels": "Feature",
        "id": 43053
    },
    {
        "title": "Convert sshrc into a plugin",
        "body": "sshrc is a small command line tool that wraps the ssh command to also transfer maximum 64kB of files to be used as zshrc. Initially I got down to the required size by just copying the stuff I need from the current version of oh-my-zsh but I think it would be better to convert this tool to a built in plugin that selects the files to transfer every time you use the command, so they only have to be kept up to date in 1 place.\r\n\r\nThe original source of this tool has been deleted (github.com/Russell91/sshrc) but I reuploaded the last version with a sample oh-my-zsh installation here: https://github.com/Cyberbeni/sshrc\r\n\r\nThe file to send should be allowed to be parametrised in case someone wants to use different stuff for different remote hosts (like one for your other computer and one for CI slaves)",
        "labels": "Feature",
        "id": 43054
    },
    {
        "title": "shopt and complete commands should work out of the box in the zsh",
        "body": "Bash supports shopt command. Many programs like west of Zephyr use shopt for commands competition. It is very frustrated that shopt isn't supported in ZSH.\r\n\r\nI don't want to leave ZSH while working on Zephyr. \r\n\r\nSomething like https://github.com/larz258/Zshopt can also be done by default for supporting shopt.\r\nFollowing lines can be added to the top of the .zshrc for supporting complete.\r\nautoload bashcompinit\r\nbashcompinit",
        "labels": "Feature",
        "id": 43055
    },
    {
        "title": "Create shortcuts for Git LFS commands",
        "body": "Git LFS is helpful for reducing the file size of your repository when including assets like videos, and high resolution files by storing them in another cloud solution. Let's include some shortcuts for the commands we have to repeat on a normal basis for creating new repositories and migrating existing repositories to use LFS.\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\ngit-lfs | brew install git-lfs\r\nhttps://www.atlassian.com/git/tutorials/git-lfs\r\nhttps://github.com/git-lfs/git-lfs/wiki/Tutorial\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nTyping commands manually instead of using pre-defined shortcuts.\r\n\r\n**Describe the solution you'd like**\r\nProposed Shortcuts:\r\nglfsi | git lfs install\r\nglfst | git lfs track\r\nglfsls | git lfs ls-files\r\ngrmca | git rm --cached\r\nglfsmi | git lfs migrate import --include=\r\ngrfe | git reflog expire --expire-unreachable=now --all\r\nggc | git gc --prune=now\r\ngplfs | git lfs push origin $(current_branch) --all\r\n\r\n**Describe alternatives you've considered**\r\nNone.\r\n",
        "labels": "Feature",
        "id": 43056
    },
    {
        "title": "kubectl plugin add daemonset aliases",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nkubectl\r\n\r\n\r\n**Describe the solution you'd like**\r\ndaemonsets are quite popular, so it would be nice to have them aliased\r\n\r\n**Describe alternatives you've considered**\r\nalias kg - kubectl get \r\n\r\n",
        "labels": "Feature",
        "id": 43057
    },
    {
        "title": "Show current git tag in prompts (if there is one on the currently checked out commit)",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nNot really, but it seems that acquiring VCS information is implemented in themes, not centrally :/ I'm using agnoster.\r\n\r\n**Describe the solution you'd like**\r\nI'd love if there was a config flag to display a tag instead of a commit hash, if the current commit is exactly on a tag.\r\n\r\n**What I tried so far**\r\nI searched a bit for how I would get the current tag conveniently, but there does not seem to be a \"stable\" git command that only outputs the current tag's name. So there would be some string parsing involved.\r\n\r\n**Additional context**\r\nMy use case for this is for quickly seeing which version of projects I'm only building/using (not developing) I checked out. I like using tags if they're available to stay on marked releases instead of whatever HEAD is.",
        "labels": "Feature",
        "id": 43058
    },
    {
        "title": "tab completion for music (osx plugin)",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\n<!-- The name of the plugin or theme you'd like us to improve. -->\r\nosx\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\n\r\n**Describe the solution you'd like**\r\n<!-- A clear and concise description of what you want to happen. -->\r\n\r\n**Describe alternatives you've considered**\r\n<!-- A clear and concise description of any alternative solutions or features you've considered. -->\r\n\r\n**Additional context**\r\n<!-- Add any other context or screenshots about the feature request here. -->\r\nmusic tab completion would be very useful. ",
        "labels": "Feature",
        "id": 43059
    },
    {
        "title": "nvm plugin completion isn't exhaustive",
        "body": "I have enabled the nvm plugin: https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/nvm but auto completion doesn't appear to work.\r\n\r\nIf I type `nvm use ` and press <kbd>Tab</kbd> I get a list of the current directory contents.\r\n\r\n**Expected behavior**\r\nCompletion options for the command are listed.\r\n\r\n**System:**\r\n - OS: Ubuntu 18.04.3\r\n - Zsh version: zsh 5.4.2 (x86_64-ubuntu-linux-gnu) \r\n - nvm version: 0.35.2\r\n\r\n**Additional context**\r\nI have already tried removing my completion cache as suggested here: https://github.com/ohmyzsh/ohmyzsh/issues/7741#issuecomment-481433618\r\nand here: https://github.com/ohmyzsh/ohmyzsh/wiki/Troubleshooting#completion-problems\r\n\r\nI then tried the following step _2. If you still have problems, try fully resetting the completion system,_ but that gave me the following error:\r\n```\r\n ✘  ~  compaudit | xargs chmod g-w,o-w\r\nchmod: missing operand after ‘g-w,o-w’\r\n```",
        "labels": "Feature",
        "id": 43060
    },
    {
        "title": "Look for mvnw up the file system",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nmvn\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nWhen I run `mvn`, this uses the alias `mvn-or-mvnw`. If I do this in a directory that contains `./mvnw` then this works exactly as needed. If I do this in a subdirectory - e.g. for a multi-module project - then this does *not* work.\r\n\r\n**Describe the solution you'd like**\r\nI'd really like it if the `mvn-or-mvnw` alias could walk up the tree to find `mvnw` and run that if it's found.\r\n\r\nFor example: If running in /Users/sazzer/source/project/submodule/subsubmodule\r\n* Look for /Users/sazzer/source/project/submodule/subsubmodule/mvnw\r\n* Failing that, look for /Users/sazzer/source/project/submodule/mvnw\r\n* Failing that, look for /Users/sazzer/source/project/mvnw\r\n* Finding that, run that script to execute Maven\r\n\r\nThe script already works correctly if I run it manually - e.g.:\r\n```\r\n$ ../../mvnw\r\n```\r\n\r\nbut the alias doesn't go looking for it.",
        "labels": "Feature",
        "id": 43061
    },
    {
        "title": "Update Pull Request Template",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\n<!-- The name of the plugin or theme you'd like us to improve. -->\r\nPull Request\r\n**Is your feature request related to a problem? Please describe.**\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\nI'm always read the pull request, and find that it is hard to read when the pull request has no format.\r\n**Describe the solution you'd like**\r\n<!-- A clear and concise description of what you want to happen. -->\r\nI suggest that it can update a pull request template to improve this problem.\r\n**Describe alternatives you've considered**\r\n<!-- A clear and concise description of any alternative solutions or features you've considered. -->\r\n\r\n**Additional context**\r\n<!-- Add any other context or screenshots about the feature request here. -->\r\n",
        "labels": "Feature",
        "id": 43062
    },
    {
        "title": "Consider adding pip aliases to the Python plugin",
        "body": "Something like this would be useful:\r\n```\r\nalias pipi='noglob pip install'\r\nalias pipu='noglob pip install --upgrade'\r\n```\r\nand if it's possible to add the following Python script, it upgrades everything:\r\n```\r\n#!/usr/bin/env python\r\nimport pkg_resources\r\nfrom subprocess import call\r\n\r\n\r\npackages = [dist.project_name for dist in pkg_resources.working_set]\r\ncall([\"pip\", \"install\", \"--upgrade\"] + [str(p) for p in packages])\r\n```\r\nIt could be aliased to pipua.",
        "labels": "Feature",
        "id": 43063
    },
    {
        "title": "Use current color theme in colored-man-pages",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\n`colored-man-pages`\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nThe `colored-man-pages` plugin is a great thing to read and find information fast, however, I am not able to distinguish the hardcoded colors well.\r\n\r\n**Describe the solution you'd like**\r\nI just would like to ask, if possible, that the plugin uses the default terminal colors. So, the manpages will fit better for the different users.\r\n\r\n**Describe alternatives you've considered**\r\nI can just override the hardcoded values by myself, but if it could use the current theme colors it will be much more pleasant.\r\n\r\n**Additional context**\r\n_null_\r\n",
        "labels": "Feature",
        "id": 43064
    },
    {
        "title": "Gather stats about `git` aliases usage",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nIndirectly to `git`.\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nI'm always frustrated when aliases are not intuitive, e.g. `gl` is not `git log`.\r\n\r\n**Describe the solution you'd like**\r\nRename `gl` to `git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all`.\r\n\r\n**Describe alternatives you've considered**\r\nAlternative is to add it to my config only. On the other way this can degrade the experience for new users if it is proven that `gl` is what most new people expect.\r\n\r\n**To figure out if people use bare `gl` more often than `git log` aliases**, a counter with regexp should be run over users `.zsh_history` for each alias. The regexp for `gl` is `^gl( .*)?$`. The counter needs to check if the alias is not rebound (`which gl`), and if binding took place, mark it as well,\r\n\r\nThe users who opt-in to gathering the stats could be asked to review and commit them when `ohmyzsh` updates.\r\n\r\n**Additional context**\r\n#4914\r\n\r\n![Screenshot from 2019-12-18 11-50-12](https://user-images.githubusercontent.com/8781107/71070831-9b212480-218c-11ea-8e94-0bb8cb231fed.png)\r\n",
        "labels": "Feature",
        "id": 43065
    },
    {
        "title": "AWS plugin doesn't read profiles from credentials file",
        "body": "> The discussion above is incorrect because profiles are valid both defined in `~/.aws/config` and `~/.aws/credentials` files. In the credentials file they do not have a `[profile ]` prefix. The word \"profile\" is something AWS has been trying to get away from as it was too restrictive. Profile just means a set of credentials now and AWS CLI and SDK honour it. All the saml and mfa login tools don't bother maintaining a config file but just credentials file. The \"improvement\" that was done to check if profiles exist definitely broke the tool for many people. I had to reinstall machineand was surprised that it doesn't work any more for me. I guess I'm back to simple env variable setting...\r\n\r\n_Originally posted by @StoyanIvanovI in https://github.com/ohmyzsh/ohmyzsh/issues/7890#issuecomment-559553829_",
        "labels": "Feature",
        "id": 43066
    },
    {
        "title": "[yarn plugin] Add 'yl' alias for 'yarn lint'",
        "body": "I always run `yarn lint` before committing and now that I'm used the Yarn plugin hate all that typing 😂\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nYarn plugin\r\n\r\n**Describe the solution you'd like**\r\nTyping `yl` would execute `yarn lint`\r\n\r\n",
        "labels": "Feature",
        "id": 43067
    },
    {
        "title": "Add support for tig completion to gitfast ",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\ngitfast\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nAutocompletion for the [`tig`](https://github.com/jonas/tig) command is not included in gitfast. zsh's default git completion script just uses the same completion function as for git-log, which I think is fine.\r\n\r\n**Describe the solution you'd like**\r\nI would like gitfast to provide a `_tig` completion function that should behave like the one for git-log.\r\n\r\n**Describe alternatives you've considered**\r\nI have tried to define the completion function myself, but I have not succeeded,",
        "labels": "Feature",
        "id": 43068
    },
    {
        "title": "Profanity",
        "body": "Is there a way to avoid filenames and readme file content that include objective profanity?  This can complicate use on monitored networks.\r\n\r\nSpecific example:\r\nplugins/thef***/README.md\r\n",
        "labels": "Feature",
        "id": 43069
    },
    {
        "title": "$ZSH/lib/grep.zsh is too slow for what it does - proposal to use $ZSH_CACHE_DIR",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\n$ZSH/lib/grep.zsh\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n$ZSH/lib/grep.zsh is way too slow for its simple function - namely to generate a single grep alias.\r\n\r\nRunning this script highlights how inefficient $ZSH/lib/grep.zsh is compared to the rest of the scripts in lib:\r\n\r\n```zsh\r\n#!/usr/bin/env zsh\r\nzmodload zsh/zprof\r\nfor config_file ($ZSH/lib/*.zsh); do\r\n  source $config_file\r\ndone\r\nzprof\r\n```\r\n\r\nThis is the profiler output:\r\n```\r\nnum  calls                time                       self            name\r\n-----------------------------------------------------------------------------------\r\n 1)    2           9.95     4.97   62.36%      9.95     4.97   62.36%  grep-flag-available\r\n 2)    2           2.81     1.41   17.65%      2.81     1.41   17.65%  env_default\r\n 3)    1           1.72     1.72   10.80%      1.72     1.72   10.80%  colors\r\n 4)    2           0.94     0.47    5.88%      0.94     0.47    5.88%  add-zsh-hook\r\n 5)    1           0.29     0.29    1.81%      0.29     0.29    1.81%  is-at-least\r\n 6)    1           0.24     0.24    1.52%      0.15     0.15    0.97%  omz_termsupport_preexec\r\n 7)    1           0.09     0.09    0.55%      0.09     0.09    0.55%  title\r\n```\r\n\r\n**Describe the solution you'd like**\r\nI'd propose the following simple change to $ZSH/lib/grep.zsh, which would cache the results of calculating the grep alias for one day and source those.\r\n\r\n```zsh\r\n# get any cached grep alias file if it's less than 24 hours old\r\n_grep_alias_cache=($ZSH_CACHE_DIR/grep_alias.zsh(Nm-24))\r\nif (( $#_grep_alias_cache )); then\r\n    source $ZSH_CACHE_DIR/grep_alias.zsh\r\nelse\r\n    # ... do all the same things $ZSH/lib/grep.zsh already does in the else part\r\n    # then cache the result\r\n    echo \"alias grep=\\\"grep $GREP_OPTIONS\\\"\" > $ZSH_CACHE_DIR/grep_alias.zsh\r\nfi\r\nunset _grep_alias_cache\r\n```\r\n\r\nAfter implementing this, the performance profile looks much better (after the first run of the day obviously):\r\n\r\n```zsh\r\nnum  calls                time                       self            name\r\n-----------------------------------------------------------------------------------\r\n 1)    2           2.29     1.14   56.40%      2.29     1.14   56.40%  env_default\r\n 2)    1           0.96     0.96   23.73%      0.96     0.96   23.73%  colors\r\n 3)    2           0.34     0.17    8.37%      0.34     0.17    8.37%  add-zsh-hook\r\n 4)    1           0.32     0.32    7.90%      0.32     0.32    7.90%  is-at-least\r\n 5)    1           0.15     0.15    3.60%      0.08     0.08    2.05%  omz_termsupport_preexec\r\n 6)    1           0.06     0.06    1.55%      0.06     0.06    1.55%  title\r\n```\r\n\r\n**Describe alternatives you've considered**\r\nYou could also do if/else statements for OSes like MacOS, Cygwin, etc. to make known grep aliases with supported features, but that's convoluted. There's really nothing wrong with asking grep which features it supports - it's just wasteful to do it on every single shell invocation when it's never really going to change on you.\r\n\r\n**Additional context**\r\nI am willing to submit a PR with this simple change, but felt it was worth opening it to discussion in case there's other input to consider. Namely:\r\n- Is 24 hours the right time to cache the result? Longer?\r\n- Is there some reason you wouldn't want to see the `$ZSH_CACHE_DIR` used like this. Right now it's only used for updating omz (EDIT: whoops, looks like it's also used for completions and other things too - just nothing quite like this)\r\n- Any other implementation proposals or considerations?\r\n\r\nThanks for considering!\r\n",
        "labels": "Feature",
        "id": 43070
    },
    {
        "title": "Update offer without any available update",
        "body": "**Describe the bug**\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n**To Reproduce**\r\n1. Open iTerm app or your terminal app of your choice \r\n2. You will receive sporadically the offer to update\r\n3. Accept the update by **Y** or running **upgrade_oh_my_zsh**\r\n\r\n**Expected behavior**\r\nOnly show the update reminder if any updates are really available.\r\n\r\n**Screenshots or recordings**\r\n![Screenshot 2019-11-12 at 11 45 31](https://user-images.githubusercontent.com/683434/68873309-b917e700-06ff-11ea-8f73-4c73fcc8082c.png)\r\n\r\n\r\n**System:**\r\n - OS: macOS\r\n - Zsh version 5.7.1 (x86_64-apple-darwin19.0)\r\n - Terminal: iTerm2\r\n\r\n",
        "labels": "Feature",
        "id": 43071
    },
    {
        "title": "Add lrz format please",
        "body": "please add [lrz](https://github.com/ckolivas/lrzip) [format](https://wiki.archlinux.org/index.php/Lrzip) in plugin [extract](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/extract)",
        "labels": "Feature",
        "id": 43072
    },
    {
        "title": "Git-prompt appears to the right in terminal",
        "body": "I've activated the `git-prompt` plugin, but it's stuck to the right part of the terminal. I get the same problem in macOS terminal and in tmux with macOS terminal.\r\n![image](https://user-images.githubusercontent.com/31730051/68684184-593b0800-0568-11ea-8c25-2457ccab3e71.png)\r\nI want to have it in the prompt to the left, instead of the current git segment of the prompt, which to me seems to be the intended default behavior. How do I achieve this?\r\n\r\n.zshrc config below\r\n```zsh\r\nexport ZSH=\"$HOME/.oh-my-zsh\"\r\nZSH_THEME=\"robbyrussell\"\r\nplugins=(git git-prompt zsh-autosuggestions zsh-syntax-highlighting)\r\nsource $ZSH/oh-my-zsh.sh\r\n```",
        "labels": "Feature",
        "id": 43073
    },
    {
        "title": "How to disable git tags and latests refs for git checkout autocomplete ",
        "body": "I need only local + remote branches",
        "labels": "Feature",
        "id": 43074
    },
    {
        "title": "Add alias for git merge --no-edit to git plugin",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nYes, the plugin simply named \"git\"\r\n\r\n**Describe the solution you'd like**\r\nI frequently type \"git merge --no-edit\". I saw many other aliases, but did not see this specific one. It would be great to add that.\r\n",
        "labels": "Feature",
        "id": 43075
    },
    {
        "title": "[OSX plugin] Lyrics for Spotify song being currently played",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nMy feature is related to the `osx` plugin, particularly `spotify` part of that plugin. Basically, I created a small utility that displays the lirycs of song being currently played on Spotify.\r\n\r\n**What am I asking for?**\r\nI'm not asking for the merge of my plugin with the repo - it requires `NodeJS` and its `node_modules` is quite heavy, and it seems to me that it doesn't fit well with the overall philisophy of oh-my-zsh plugins . I just think it'd be cool and useful for other people to know that such a \"lyrics plugin exists\" – link placed [here](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/osx) pointing to [my lyrics plugin repo](https://github.com/bartekpacia/lyrics-buddy) would be enough.\r\n\r\nIf you agree to do this, I'll submit a PR.\r\n\r\n:)\r\n",
        "labels": "Feature",
        "id": 43076
    },
    {
        "title": "How to disable fuzzy tab completion?",
        "body": "If I do this\r\n\r\n    mkdir /tmp/test\r\n    cd /tmp/test\r\n    touch config\r\n    ls on[tab]\r\n\r\nthen Oh My ZSH will replace `on` with `config` which I don't want.\r\n\r\nI have tried to `rm $ZSH/plugins/fzf` which didn't work, and it seams wrong to edit the source for OhMyZSH, which also would result in I having to redo it when updating OhMyZSH.\r\n\r\n**Question**\r\n\r\nHow can I disable this fuzzy file completion?\r\n",
        "labels": "Feature",
        "id": 43077
    },
    {
        "title": "different themes for different terminals",
        "body": "hi- first off- love this project. very well done. but now to my feature request (maybe its possible even now but i havent seen how yet).\r\n\r\ni have the issue that the konsole program cant display certain glyphs from the nerd fonts. all other terminals i tested can but konsole cant. wouldnt be a big deal if dolphin hadnt hardcoded konsole as its terminal app. \r\n\r\nso since i really like the theme im using i dont want to change it- but konsole cant display it. so wouldnt it be great if one could use different themes in different terminals. in tilix for example the standart one and in urxvt the powerlevel10k. \r\n\r\nmaybe u can find a way to make this happen. for example that way that u could have a tilix.zshrc file and a terminator.zshrc file etc\r\n",
        "labels": "Feature",
        "id": 43078
    },
    {
        "title": "aussiegeek color options",
        "body": "I find `aussiegeek` to be about the best quick theme for all of my server needs and routinely deploy it to each new machine I manage or deploy.\r\n\r\nThere are two things that would make it better:\r\n\r\n1) if the red color were reserved only for `root` user instances so that it automatically switched the username to red in those cases, that would be great.\r\n\r\n2) if there were an easy to control auto coloring mechanism for the default colors, that would be useful.  For example `aussiegeek-blue` as the name definition in `.zshrc` would colorize the text elements blue.  Essentially every color could be defined in this way and it would be incredibly useful.\r\n\r\nThese things are incredibly powerful at giving instant context and visual organizational / grouping functionality to `oh-my-zsh`.",
        "labels": "Feature",
        "id": 43079
    },
    {
        "title": "Allow for global oh-my-zsh installation",
        "body": "**Describe the solution you'd like**\r\n<!-- A clear and concise description of what you want to happen. -->\r\nI'd like to see an option for global installation of `oh-my-zsh`, i.e to install to a local system directory, and inject `.zshrc` with a `custom` directory to every user with a home directory.\r\n\r\n",
        "labels": "Feature",
        "id": 43080
    },
    {
        "title": "Allow customization of the COMPLETION_WAITING_DOTS dots",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nCompletion\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nIt would be nice if it was possible to customize the dots that appear when `COMPLETION_WAITING_DOTS` is enabled.\r\n\r\n**Describe the solution you'd like**\r\nMaybe a `COMPLETION_WAITING_DOTS_PROMPT` variable that defaults to the current `\"%{%F{red}......%f%}\"` value.\r\n",
        "labels": "Feature",
        "id": 43081
    },
    {
        "title": "OMZ starts only for interactive shells",
        "body": "With a graphical login, `.zshrc` is not sourced, and thus if plugins like ssh-agent want to export environment variables, they won't be picked. Of course, if I spawn a shell and a tty and launch X or my Wayland compositor from here, it's ok.\r\nBasically I think that the problem is that `.zshrc` (= OMZ) is only sourced for _interactive_ shells, but the shell that starts my environment isn't interactive.\r\n\r\nThe plugin _ssh-agent_ is not that clearly non-interactive, since users are required to unlock their keys at some point, but my use case is that I use a password manager, which, once unlocked, talks to the ssh-agent process found with the environment variables to unlock my keys. If `.zshrc` is not sourced (which is the case here since the graphical login is non-interactive), the ssh-agent process is never started.\r\n\r\nSymlinking `.zprofile` to `.zshrc` would be cheating.\r\n\r\nCould something be done to split OMZ into an _non-interactive_ part sourced in `.zshenv` or `.zprofile`, and an _interactive_ part sourced in `.zshrc`?\r\n\r\nI find this diagram pretty neat to understand the startup order.\r\n![zsh startup order](https://blog.flowblok.id.au/static/images/shell-startup.png) ([source](https://blog.flowblok.id.au/2013-02/shell-startup-scripts.html#implementation))",
        "labels": "Feature",
        "id": 43082
    },
    {
        "title": "Load nvm.sh in Homebrew install",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nnvm\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nThe nvm plugin will call nvm.sh for you, but it points at the wrong directory for a Homebrew install.\r\n\r\n**Describe the solution you'd like**\r\nI would like the plugin to check for the standard nvm.sh location in a Homebrew install, and source it.\r\n\r\n**Describe alternatives you've considered**\r\nI have a customized version of this plugin to do this, and I've seen others put the source directive in .zshrc.\r\n\r\n**Additional context**\r\nNone",
        "labels": "Feature",
        "id": 43083
    },
    {
        "title": "Add git-completion compatibility for git v2.23 commands",
        "body": "**Plugin**\r\ngit-completion\r\n\r\n**Current Behavior**\r\nGit branch name autocompletion does not work when using `git switch` or `git restore -s`.\r\n\r\n**Expected Behavior**\r\nTabbing on incomplete branch names using the aforementioned commands should autocomplete or display a list of possible branches.",
        "labels": "Feature",
        "id": 43084
    },
    {
        "title": "Autosuggestions for docker stop working when arguments are passed to docker",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\n`docker` plugin\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nAutosuggestions of running containers.\r\n\r\n**Describe the solution you'd like**\r\nCommands like `docker exec` + `tab`-key gives autosuggestions of all running containers for command completion. However, if arguments are passed to `docker`, autosuggestions does not recognize the docker command anymore and gives me suggestions of pretty much anything that it could run (`mount`, `ls`, ...).\r\n\r\nI suggest something to ignore arguments passed to stuff like `exec` to enable correct autosuggestions for commands like `docker exec -ti`.\r\n\r\n**Additional context**\r\nIn short:\r\n`docker exec` + `tab`-key gives correct autosuggestions (running docker containers)\r\n`docker exec -ti` + `tab`-key does not give useful autosuggestions, `docker` is not recognzied anymore\r\n",
        "labels": "Feature",
        "id": 43085
    },
    {
        "title": "`kill -l` output styles are quite different",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n<!-- A clear and concise description of what the bug is. -->\r\n![image](https://user-images.githubusercontent.com/10652829/67063934-1705ed00-f19b-11e9-92ba-f9660578f1b4.png)\r\n\r\nI'm more used to the following style.Please tell me how to do it in ZSH.\r\n\r\n\r\n**To Reproduce**\r\n<!--\r\nSteps to reproduce the behavior:\r\n1. Enable plugin '...'\r\n2. Run command '...', _or_ try to complete command '...', _etc._\r\n3. See error\r\n-->\r\n\r\n**Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n**Screenshots or recordings**\r\n<!--\r\nIf applicable, add screenshots or record an asciinema session (https://asciinema.org/)\r\nto help explain your problem.\r\n-->\r\n\r\n**System:**\r\n - OS: [e.g. deepin 15.11]\r\n - Zsh version [e.g. 5.6]\r\n - Terminal emulator [e.g. deepin terminal]\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n",
        "labels": "Feature",
        "id": 43086
    },
    {
        "title": "Add a git alias to clone and change directory",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\ngit\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nNo\r\n\r\n**Describe the solution you'd like**\r\nAdd an alias which clones a repo and then `cd`s into it.\r\n\r\n**Describe alternatives you've considered**\r\n<!-- A clear and concise description of any alternative solutions or features you've considered. -->\r\nManually `cd` into the directory after `git clone` or `gcl`.\r\n\r\n**Additional context**\r\n<!-- Add any other context or screenshots about the feature request here. -->\r\n",
        "labels": "Feature",
        "id": 43087
    },
    {
        "title": "Allow install without replacing .zshrc",
        "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nI have an install script which installs my dotfiles for me on new machines. When extending it to install OMZ I realized that there is no option in the OMZ installer to disable replacing `.zshrc`.\r\n\r\n**Describe the solution you'd like**\r\n\r\nI would like there to be either:\r\n1. A command line option, perhaps `--noreplace-zshrc`, or\r\n2. An environment variable, perhaps `REPLACE_ZSHRC`, which could be set to `no`\r\n\r\n...or both, which would disable the backup and replacement of `.zshrc`.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nThe best workaround I have is to simply overwrite the generated `.zshrc` script after the fact, but since the OMZ installer prints a message about backing up and replacing `.zshrc`, it'll be confusing to anyone who uses the script. I could hide the output of the OMZ installer, but frankly I really like the way it looks and it'd be a shame to hide it.\r\n",
        "labels": "Feature",
        "id": 43088
    },
    {
        "title": "fzf plugin use fd if installed.",
        "body": "I'd be happy to implement this myself and submit a pull request.  However, first I wanted to see if there was interest in using it.\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nfzf\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nWhen using the fzf plugin _and_ when fd is installed, I still have to do some .zshrc customization as described in the [fzf github project](https://github.com/junegunn/fzf)\r\n\r\n**Describe the solution you'd like**\r\nI'd like the fzf plugin to add fd specific configuration.   The most important line would be:\r\n`export FZF_DEFAULT_COMMAND='fd --type f --hidden --exclude .git`\r\n\r\n**Describe alternatives you've considered**\r\nA separate fzf-fd plugin.\r\n\r\n**Additional context**\r\nAdd an if block:  `if which fd &>/dev/null; then`\r\nPart of this: https://github.com/junegunn/fzf#settings\r\nAnd: https://github.com/junegunn/fzf#respecting-gitignore",
        "labels": "Feature",
        "id": 43089
    },
    {
        "title": "Would you consider adding tipz plugin?",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\n\r\nWould you consider adding [tipz](https://github.com/molovo/tipz) as a bundled plugin?  It's a very handy zsh plugin that automatically suggests aliases when available.\r\n\r\n![Screen Shot on 2019-09-27 at 00-44-27](https://user-images.githubusercontent.com/5187394/65742860-009ad300-e0c0-11e9-9e17-7e86ba6255e1.png)",
        "labels": "Feature",
        "id": 43090
    },
    {
        "title": "add an editorconfig for the project",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nNo\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\nThere seems to be a style guide for the project, Which should be followed\r\n\r\n\r\n**Describe the solution you'd like**\r\n<!-- A clear and concise description of what you want to happen. -->\r\nAdd an [editorconfig](https://editorconfig.org/) to the project to help people keep the correct style\r\n**Describe alternatives you've considered**\r\n<!-- A clear and concise description of any alternative solutions or features you've considered. -->\r\nAdd modelines, but they are risky and bot many editors support them\r\n\r\n**Additional context**\r\n<!-- Add any other context or screenshots about the feature request here. -->\r\n",
        "labels": "Feature",
        "id": 43091
    },
    {
        "title": "Update problem with git config core.autocrlf=true on WSL",
        "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nI'm using git under WSL on Windows 10 and I need to translate all line endings to CRLF globally to work with my projects from Windows version of IDEA for example. But it breaks oh-my-zsh updates:\r\n\r\n```\r\n/home/vega/.oh-my-zsh/lib/functions.zsh:21: parse error near `in^M' \r\n/home/vega/.oh-my-zsh/lib/misc.zsh:21: command not found: env_default\r\n/home/vega/.oh-my-zsh/lib/misc.zsh:22: command not found: env_default\r\n/home/vega/.oh-my-zsh/plugins/git/git.plugin.zsh:4: command not found: ^M\r\n/home/vega/.oh-my-zsh/plugins/git/git.plugin.zsh:230: parse error near `&&'\r\n/home/vega/.oh-my-zsh/themes/robbyrussell.zsh-theme:3: command not found: ^M\r\n```\r\n\r\n**Describe the solution you'd like**\r\n\r\nAdd `.gitattributes` file with following content to disable global settings:\r\n\r\n```\r\n* -text\r\n```\r\n\r\n",
        "labels": "Feature",
        "id": 43092
    },
    {
        "title": "git-flow plugin doesn't support the \"bugfix\" flow",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nIt's related to the git-flow plugin\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nThe plugin doesn't provide autocompletion for the 'bugfix' flow\r\n\r\n**Describe the solution you'd like**\r\nIt should be nice if the plugin can provide autocompletion for all the git-flow flows\r\n\r\nId doesn't look too complicated to add this flow to the plugin so I can be able to make a PR if you are open to consider it (obviously after reading your guideline for collaboration).",
        "labels": "Feature",
        "id": 43093
    },
    {
        "title": "Global \"d\" path history?",
        "body": "Hallo,\r\n\r\nwhen I press \"d\" I get the recently visited path of the current zsh instance. Is it possible to modify this shortcut in a way that I can get the path history for old shells and other shell instances, too? Is there probably a plugin for this?\r\n\r\nThanks\r\n\r\nMebus\r\n",
        "labels": "Feature",
        "id": 43094
    },
    {
        "title": "yarn plugin add yarn version",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\n<!-- The name of the plugin or theme you'd like us to improve. -->\r\nis for Yarn Plugin\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\nThere is no alias for yarn version\r\n\r\n**Describe the solution you'd like**\r\n<!-- A clear and concise description of what you want to happen. -->\r\nadd an alias for yarn version\r\n\r\n**Describe alternatives you've considered**\r\n<!-- A clear and concise description of any alternative solutions or features you've considered. -->\r\n\r\n**Additional context**\r\n<!-- Add any other context or screenshots about the feature request here. -->\r\n",
        "labels": "Feature",
        "id": 43095
    },
    {
        "title": "Yarn | Separate project scripts from binary packages on `yarn run`",
        "body": "Completions for `yarn run`: \r\n\r\n<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n#### Is your feature request related to a particular plugin or theme? If so, specify it.\r\n[Yarn](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/yarn)\r\n\r\n#### Current Behavior\r\n\r\nCompletion suggestions are globbed together from the scripts specified in `package.json` **and** from all node binary files (from `node_modules/.bin/`).\r\n\r\n#### Requested Behavior\r\n\r\nShow script suggestions from `package.json` first, then show all other suggestions.\r\n\r\n#### Additional Context\r\n\r\nI think most people really only run their project's scripts. If the local scripts are on top - and not globbed in between several dozen installed binaries - I won't have to open up `package.json` to see what the scripts are called for a project; *does this project have `yarn run build-project` or is it `yarn run build`*?\r\n\r\nThis seems feasible as `yarn run --json` separates the local scripts from the binaries.\r\n",
        "labels": "Feature",
        "id": 43096
    },
    {
        "title": "Countdown Timer and/or Stopwatch plugin or function?",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\n<!-- The name of the plugin or theme you'd like us to improve. --> Yes, in a way. It is a request for help to create a new custom plugin or function that would create a countdown/up timer and/or a stopwatch. \r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->The only problem is that I've been spending too much time at my computer and would like a way to see the time spent in a more interactive way than just a small clock in the status bar. These plugins/functions would have myriad use in other contexts as well. \r\n\r\n**Describe the solution you'd like**\r\n<!-- A clear and concise description of what you want to happen. -->I am somewhat new to coding and command-line usage so I would like to know how to go about formatting the syntax for a custom plugin or function that could be placed in my ~.zshrc\r\n\r\n**Describe alternatives you've considered**\r\n<!-- A clear and concise description of any alternative solutions or features you've considered. -->There are many stopwatches and timers I could download from Apple's app store on my Macbook but I'd prefer to have something that shows up directly in the terminal I'm using. I also tried using a couple of commands that did not work out too well...see screenshots.\r\n\r\n**Additional context**\r\n<!-- Add any other context or screenshots about the feature request here. -->Here are two screenshots of solutions I attempted on my own. As you can see, from the second photo, ZSH attempted to run the function for quite a long time before I cancelled it. Any help would be appreciated. \r\n\r\n![Screen Shot 2019-08-14 at 4 51 23 PM](https://user-images.githubusercontent.com/53518799/63064395-7bb87900-bec6-11e9-96fd-8063e5e29fbc.jpg)\r\n\r\n<img width=\"1280\" alt=\"Screen Shot 2019-08-14 at 4 52 23 PM\" src=\"https://user-images.githubusercontent.com/53518799/63064402-807d2d00-bec6-11e9-8fa9-9d193f09cc6f.png\">\r\n\r\n\r\n",
        "labels": "Feature",
        "id": 43097
    },
    {
        "title": "Wiki: Feedback request for my big update of the themes page",
        "body": "Hi there,\r\n\r\nthe current theme overview has a lot of interesting themes but looks quite chaotic. Screenshots are available in many different sizes, some with the terminal window, some not and - most important - every one with another color scheme. This makes it very hard to compare the different features and structure of the themes.\r\n\r\nSo, I reset my Terminal to default settings, started up Automator and generated standardized screenshots for almost all of the current themes.  \r\n5 themes had issues with missing dependencies so I left them out for now.\r\n\r\n#### Page Preview\r\n👉 [**Preview of the page in a fork of the wiki**](https://github.com/Kovah/oh-my-zsh-wiki/blob/master/Themes.md)\r\n\r\n#### Preview of a screenshot\r\n![robbyrussell](https://user-images.githubusercontent.com/1816101/62960429-ebf9c880-bdfa-11e9-9d26-193d50ea34de.jpg)\r\n\r\n#### Screenshot setup\r\nThe screenshots were generated on macOS Mojave (10.14.5) with the macOS Terminal app. The used theme is `Basic` with the default settings and colors. The font was switched to Fira Code at 13 pt to enable some special characters in certain themes. All terminal windows have a size of 100x31. I ran two short commands in a prepared folder with a pseudo project structure and Git enabled.\r\n\r\nIf you agree with the update I will merge my changes into your wiki. :blush:",
        "labels": "Feature",
        "id": 43098
    },
    {
        "title": "RFC: add rustup completion to plugins",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\n`rustup` completion (similar to existing `rust` and `cargo` plugins)\r\n\r\n**Describe the solution you'd like**\r\nThere are already completion plugins for `rust` and `cargo`. `rustup` also provides completion. This should be added to the standard plugins as there are already plugins for `rust` and `cargo`. `rustup` is also considered a part of the standard toolkit, so it should be included if the plugins exist for `cargo` and `rust`. \r\n\r\n**Describe alternatives you've considered**\r\nI see there was a closed issue #6514 regarding the same topic. There was no description on the issue, nor was there a reason why the PR was closed. If this is not in scope for the future, then that's ok, but I was unsure why this previous was closed.\r\n\r\nAlternatively, the user can install the completions themselves, but it can be misleading that there are already two existing plugins for the rest of the Rust toolchain.\r\n\r\n**Additional context**\r\nThe completion can be generated with\r\n```bash\r\nmkdir $HOME/.oh-my-zsh/plugins &&\\\r\nrustup completion zsh > $HOME/.oh-my-zsh/plugins/rustup/_rustup\r\n```",
        "labels": "Feature",
        "id": 43099
    },
    {
        "title": "Git prompt not showing |merging in the muse theme",
        "body": "**Describe the bug**\r\nIn a git merge state, the prompt is not displaying | MERGING\r\n\r\n**To Reproduce**\r\n1. Create a new git branch 'testbranch'\r\n2. Make a one line change in one of the files & commit\r\n3. Checkout master, change the same file with different text & commit\r\n4. `git merge testbranch`\r\n```\r\n~/git/training/dotnet/friedrich (master ✔) ᐅ git merge testbranch\r\nCONFLICT (add/add): Merge conflict in dotnet/friedrich/foo\r\nAuto-merging dotnet/friedrich/foo\r\nAutomatic merge failed; fix conflicts and then commit the result.\r\n~/git/training/dotnet/friedrich (master ✘) ᐅ    [[ NO INDICATION WE ARE IN MERGING STATE]]\r\n```\r\n\r\n**Expected behavior**\r\nPrompt shows that I'm in the merge state\r\n~/git/training/dotnet/friedrich (master ✘)|MERGING ᐅ  \r\n\r\n\r\n**System:**\r\n - OS: ubuntu 18\r\n - Zsh version [5.4.2]\r\n - Terminal\r\n\r\n**Additional context**\r\nNote: Rebasing, Bisecting also does not work by default.  I have a hack that allows this all to work\r\n```\r\n__git_ps1 ()\r\n{\r\n\tlocal g=\"$(git rev-parse --git-dir 2>/dev/null)\"\r\n\tif [ -n \"$g\" ]; then\r\n\t\tlocal r\r\n\t\tlocal b\r\n\t\tif [ -d \"$g/rebase-apply\" ]\r\n\t\tthen\r\n\t\t\tif test -f \"$g/rebase-apply/rebasing\"\r\n\t\t\tthen\r\n\t\t\t\tr=\"|REBASE\"\r\n\t\t\telif test -f \"$g/rebase-apply/applying\"\r\n\t\t\tthen\r\n\t\t\t\tr=\"|AM\"\r\n\t\t\telse\r\n\t\t\t\tr=\"|AM/REBASE\"\r\n\t\t\tfi\r\n\t\t\tb=\"$(git symbolic-ref HEAD 2>/dev/null)\"\r\n\t\telif [ -f \"$g/rebase-merge/interactive\" ]\r\n\t\tthen\r\n\t\t\tr=\"|REBASE-i\"\r\n\t\t\tb=\"$(cat \"$g/rebase-merge/head-name\")\"\r\n\t\telif [ -d \"$g/rebase-merge\" ]\r\n\t\tthen\r\n\t\t\tr=\"|REBASE-m\"\r\n\t\t\tb=\"$(cat \"$g/rebase-merge/head-name\")\"\r\n\t\telif [ -f \"$g/MERGE_HEAD\" ]\r\n\t\tthen\r\n\t\t\tr=\"|MERGING\"\r\n\t\t\tb=\"$(git symbolic-ref HEAD 2>/dev/null)\"\r\n\t\telse\r\n\t\t\tif [ -f \"$g/BISECT_LOG\" ]\r\n\t\t\tthen\r\n\t\t\t\tr=\"|BISECTING\"\r\n\t\t\tfi\r\n\t\t\tif ! b=\"$(git symbolic-ref HEAD 2>/dev/null)\"\r\n\t\t\tthen\r\n\t\t\t\tif ! b=\"$(git describe --exact-match HEAD 2>/dev/null)\"\r\n\t\t\t\tthen\r\n\t\t\t\t\tb=\"$(cut -c1-7 \"$g/HEAD\")...\"\r\n\t\t\t\tfi\r\n\t\t\tfi\r\n\t\tfi\r\n\r\n        printf \"$r\"\r\n\t\t\r\n\tfi\r\n}\r\n\r\nPROMPT='%{$PROMPT_SUCCESS_COLOR%}%~%{$reset_color%}%{$GIT_PROMPT_INFO%}$(git_prompt_info)`__git_ps1`$(virtualenv_prompt_info)%{$GIT_DIRTY_COLOR%}$(git_prompt_status) %{$reset_color%}%{$PROMPT_PROMPT%}ᐅ%{$reset_color%} '\r\n```\r\nI think this belongs not to the theme, but to somewhere else in oh-my-zsh responsible for git prompt.  Don't know enough to submit a PR.",
        "labels": "Feature",
        "id": 43100
    },
    {
        "title": "Dotenv whitelist",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\ndotenv\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\nSourcing any file named .env leads to security concerns - what if you download a malicious script named .env?  It could be executed just by you going in the same directory as it.\r\n\r\n**Describe the solution you'd like**\r\n<!-- A clear and concise description of what you want to happen. -->\r\nIt would be nice if there was a whitelist variable so you could specify what folder you would want dotenv to look in. Dotenv would not activate on any .env file outside of that folder. Subfolders within the whitelisted folder would be fine. The security concern would still be there but it would not be as much of a problem.\r\n\r\n**Describe alternatives you've considered**\r\n<!-- A clear and concise description of any alternative solutions or features you've considered. -->\r\nPersonally speaking, I could manually alter my python virtualenv to source the .env file when it gets activated.\r\n\r\nAn alternative solution would be to parse the .env file to make sure it only has the safe-ish `VARNAME=VALUE` syntax. The problem is I'm not sure if that's only syntax, people might do stuff like `VARNAME=$(foo)foo2` or who knows what. Maybe there could be a env variable for dotenv ALLOW_UNSAFE_SYNTAX\r\n\r\n**Additional context**\r\n<!-- Add any other context or screenshots about the feature request here. -->\r\n",
        "labels": "Feature",
        "id": 43101
    },
    {
        "title": "fetch option on ohmyz.sh",
        "body": "The website has installer options for both curl and wget. Neither of which are out of the box solutions on FreeBSD. This may sound silly since someone may end up installing curl anyways, but have you thought about adding an option for `fetch`?\r\n\r\nIt's very similar to the wget one:\r\n``` bash\r\n\r\n\r\n$ sh -c \"$(fetch https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh -o -)\"\r\n\r\n```",
        "labels": "Feature",
        "id": 43102
    },
    {
        "title": "Make the upgrade command more easily discoverable",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nAs I move around various networks, auto upgrade sometimes doesn't work because of proxy settings.  As such, I like to perform a manual update when convenient.  It's frustrating, though, because the upgrade command isn't immediately discoverable because it's not an option to oh-my-zsh itself, and doesn't start with ohmyzsh, which are the first things I look for when trying to find a new command.\r\n\r\n**Describe the solution you'd like**\r\n<!-- A clear and concise description of what you want to happen. -->\r\nI'd like an option (in addition to the existing upgrade_oh_my_zsh that is more easily discoverable from the command line, rather than me having to google it every 6 months or so. :)\r\n\r\n**Describe alternatives you've considered**\r\n<!-- A clear and concise description of any alternative solutions or features you've considered. -->\r\nI would think one of the following would be appropriate:\r\n- Add an oh_my_zsh_upgrade (or ohmyzsh_upgrade) script along side the existing script \r\n- Add a --upgrade option to ohmyzsh \r\n- Add an install-time alias similar to the zshconfig alias\r\n- Add some text to the ohmyzsh script listing the upgrade command\r\n\r\nI know it's possible to create my own alias on my machines, but it would be nicer if I didn't have to remember to create it myself on each machine I install on. :)\r\n",
        "labels": "Feature",
        "id": 43103
    },
    {
        "title": "Tmux Control Mode",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nTmux plugin\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nI usually work with images through ssh and sometimes I need to see a plot or something and I have XForwarding enabled so I can use the display over SSH, this works fine in ZSH, however tmux cannot display images unless its ran in control mode e.g: Tmux -CC. So It would be very nice if this feature was added. Is something related to this in the works? Thanks in advance!! :) ",
        "labels": "Feature",
        "id": 43104
    },
    {
        "title": "Avoid \"fg\" in terminal title (omz_termsupport_preexec)",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.** Base ZSH, `lib/termsupport.zsh`, specifically `omz_termsupport_preexec()`\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nWhen I suspend my editor (`vim`) and return via `fg`, then my terminal window's title changes to `fg` instead of the initial title (e.g. `vim paper.tex`).  I'd argue that this is never a useful title.\r\n\r\n**Describe the solution you'd like**\r\nI'd like `fg` to trigger setting the title to the actual job name, as reported by `jobs`.\r\n\r\n**Describe alternatives you've considered**\r\n[This superuser.com post](https://superuser.com/questions/497715/keep-tmux-title-from-fg-to-original-jobname) describes one approach for fixing this problem, but I think it should be in base zsh, as I can't imagine `fg` being a useful window title.\r\n\r\nI'm working on a PR; will post once complete.",
        "labels": "Feature",
        "id": 43105
    },
    {
        "title": "Mercurial Plugin could use some more supported commands",
        "body": "This is something I'm happy to help out with just want to make sure maintainers are on board:\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.\r\nmercurial\r\n\r\n**Describe the solution you'd like**\r\nMore aliases to do more things.\r\n\r\n**Describe alternatives you've considered**\r\nI have my own aliases in `.zshrc` but this is something others would probably find helpful.\r\n\r\n**Additional context**\r\n\r\n## Mercurial module aliases\r\n\r\n![Screen Shot 2019-06-19 at 11 35 36 AM](https://user-images.githubusercontent.com/596223/59791186-650af280-9286-11e9-903b-1d5e5003eec7.png)\r\n\r\n![image](https://user-images.githubusercontent.com/596223/59791205-6dfbc400-9286-11e9-90eb-c6353a413b35.png)\r\n\r\n\r\n## Git module aliases:\r\n\r\n![Screen Shot 2019-06-19 at 11 35 26 AM](https://user-images.githubusercontent.com/596223/59791208-70f6b480-9286-11e9-9130-99ffe75602ea.png)\r\n\r\n![image](https://user-images.githubusercontent.com/596223/59791226-7c49e000-9286-11e9-8481-2a51452b64da.png)\r\n\r\n## In particular\r\n\r\nI wish we had the following:\r\n\r\nAlias|Command\r\n-|-\r\nhgcam|hg amend\r\nhgcame|hg amend -e\r\nhgn|hg next\r\nhgpr|hg prev\r\nhgrst|hg restack\r\nhgres|hg resolve\r\nhgrev|hg revert\r\nhgunc|hg uncommit\r\nhgh|hg hide\r\nhgmsg|hg commit -m\r\nhgmsgi| hg commit -i -m\r\n\r\n\r\nIn addition, I wish there were two functions for `hg rebase` and `hg diff` that only took one parameter and made a reasonable assumption of what the second one was.\r\n\r\nInstead of doing:\r\n`hg rebase -r . -d foo`\r\nYou should be able to:\r\n`hgmove foo` or something similar.\r\n\r\nInstead of having to do:\r\n`hg diff -r foo^ -r foo`\r\nYou should be able to:\r\n`hgd foo`",
        "labels": "Feature",
        "id": 43106
    },
    {
        "title": "Support line number when using suffix alias",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\n<!-- The name of the plugin or theme you'd like us to improve. -->\r\nNo\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\nI often uses suffix alias to edit files. e.g. type in `example.py` will open my favourite editor.\r\nBut if I type `example.py:100` and want the cursor be on the 100 line of `example.py`, it will complain file `example.py:100` not found. I have tried a few attempts to config this. but it doesn't work.\r\n\r\n**Describe the solution you'd like**\r\n<!-- A clear and concise description of what you want to happen. -->\r\nMy current config is \r\n`alias -s py=te`\r\nI have tried below but it doesn't work.\r\n1. `alias -s py*=te`\r\n2. `alias -s py(*)=te`\r\n3. `alias -s py(:*)=te`\r\nIf any of this works, it will be really handy to open a file on a certain line.\r\n\r\n**Describe alternatives you've considered**\r\n<!-- A clear and concise description of any alternative solutions or features you've considered. -->\r\nNo\r\n**Additional context**\r\n<!-- Add any other context or screenshots about the feature request here. -->\r\nIf anyone can point to me how to archieve this. then I can possibly do a PR",
        "labels": "Feature",
        "id": 43107
    },
    {
        "title": "Search results in a PRIVATE window",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\n<!-- The name of the plugin or theme you'd like us to improve. -->\r\n_web-search plugin_\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\n_No._\r\n**Describe the solution you'd like**\r\n<!-- A clear and concise description of what you want to happen. -->\r\nThis plugin is really successful! Well done!\r\n\r\nHowever, I have a question, is it possible to launch the results of a search in a private window of the browser?\r\n\r\nThank you for your answer\r\n\r\n**Describe alternatives you've considered**\r\n<!-- A clear and concise description of any alternative solutions or features you've considered. -->\r\n\r\n**Additional context**\r\n<!-- Add any other context or screenshots about the feature request here. -->\r\n",
        "labels": "Feature",
        "id": 43108
    },
    {
        "title": "Allow plugins to be specified in custom.zsh files",
        "body": "It would be great to be able to specify additional plugins in the ~/.oh-my-zsh/custom/*.zsh files. This would make it very easy to contain all customizations in a single file in the case of installing on a new PC or sharing a custom configuration file.\r\n\r\nRight now, it seems like some customizations can be done via the .zsh files (theme, maybe some of the other settings).",
        "labels": "Feature",
        "id": 43109
    },
    {
        "title": "Make setting the default shell during installation optional",
        "body": "Setting the default shell to`/bin/zsh` has been causing me some problems. Particularly on linux systems, there is a problem that comes up where having `zsh` as the default shell causes snap packages to misbehave and not show in the application launcher. Changing the default shell back to `/bin/bash` fixes the problem.\r\n\r\nhttps://forum.snapcraft.io/t/desktop-snaps-do-not-appear-in-the-dash-menu-on-gnome-in-17-10-final-beta/2340/13\r\n\r\nFurthermore, there doesn't seem to be any way to stop this behavior from happening. Other than killing the install process when `chsh` is prompting for your password. Although, this may not even work if you've already granted `sudo` permissions on your current session (haven't tested that out).\r\n\r\n**Describe the solution you'd like**\r\nPrompt user with a choice, if they would like to change their default shell.\r\n\r\nMany users may not even know what this means, so an explanation of what changing this actually means would be a nice touch.\r\n\r\nAlso, during this prompt to change the default shell, there could be an explanation on configuring your terminal emulator to start `zsh` instead of `bash`. Since the main purpose of setting the default shell is to make `zsh` execute immediately when opening a terminal. Maybe that should be the approach instead of trying to change something on the system level?\r\n\r\n\r\n**Additional context**\r\nSome other related issues have been raised in the past about `oh-my-zsh`s setting of the default shell, both during the install and uninstall process. Where the uninstall script just assigns the default shell back to `/bin/bash` instead of the user's preferred shell (e.g. `fish`)\r\nhttps://github.com/robbyrussell/oh-my-zsh/issues/7721\r\n",
        "labels": "Feature",
        "id": 43110
    },
    {
        "title": "Provide standardized options to control common elements in themes",
        "body": "Many themes include some common elements such as including the current ruby version when rvm is installed (e.g. [bira](https://github.com/robbyrussell/oh-my-zsh/blob/master/themes/bira.zsh-theme)).\r\n\r\nCurrently, there is no way to customize the appearance of such common elements, short of editing the theme files or manually overriding components used in the themes.\r\n\r\nIt could be useful to provide a few global theme settings to give users control over such shared elements, when they appear are used in themes.\r\n\r\nFor example, something along the lines of `theme_include_rvm` could be checked by each theme that includes ruby version and used to determine whether or not to include that component in PS1.",
        "labels": "Feature",
        "id": 43111
    },
    {
        "title": "frontend-search: add Angular 2",
        "body": "Hi. Can you guys add the Angular2+ in the search lsit context?\r\nAngularJS is practically deprecated lol",
        "labels": "Feature",
        "id": 43112
    },
    {
        "title": "Prefixing name of the currently activated  virtualenv to amuse theme. ",
        "body": "I have a suggestion for a minute change. In the amuse theme, which is pretty minimal, it doesn't show my current virtual environment name of if I have an environment activated. I  edited the theme file and it shows it now. This is my first attempt to contribute and I was wondering if I should go ahead and get a PR. Any hint and help would be great as to if and how I should proceed. Thanks! @robbyrussell \r\n<img width=\"342\" alt=\"Screen Shot 2019-04-13 at 6 45 06 PM\" src=\"https://user-images.githubusercontent.com/9155142/56086412-6cdc8f80-5e1c-11e9-8f1c-8a8661371a7a.png\">\r\n",
        "labels": "Feature",
        "id": 43113
    },
    {
        "title": "Tab-completion for $_",
        "body": "`$_` translates to the last argument passed to the previous command.\r\n\r\nWould be nice if tab replaced it with the value.",
        "labels": "Feature",
        "id": 43114
    },
    {
        "title": "Add custom themes to the random theme picker ",
        "body": "The random theme picker searches only the themes from the $ZSH/themes folder. It will be nice to make it choose from the $ZSH_CUSTOM/themes folder also.",
        "labels": "Feature",
        "id": 43115
    },
    {
        "title": "common-aliases: alias conflict with fd",
        "body": "The Alias `fd` in [plugins/common-aliases/common-aliases.plugin.zsh](https://github.com/robbyrussell/oh-my-zsh/blob/729c2f796d4945dfa2bcff144fea84afe5c4b0cb/plugins/common-aliases/common-aliases.plugin.zsh#L37) conflicts with the program `fd`.",
        "labels": "Feature",
        "id": 43116
    },
    {
        "title": "Allow configuring/disabling default key bindings",
        "body": "Allow configuring and/or disabling default key bindings that are defined in key-bindings.zsh.\r\n\r\nFor example the default behavior of [Esc-L] => convert the word to lower case (like [Esc-U] => upper case]) is being overwritten to ls command unconditionally, which leaves to upper case conversion as is, but disables its sibling.",
        "labels": "Feature",
        "id": 43117
    },
    {
        "title": "keybinding ESC-l overwrites word downcase",
        "body": "This commit https://github.com/robbyrussell/oh-my-zsh/commit/55a9d685fd960390a4f400ac461d901049a78beb breaks the ESC-l keybinding to downcase word.",
        "labels": "Feature",
        "id": 43118
    },
    {
        "title": "dotenv: make it possible to define the file you would like to use",
        "body": "It would be good to have the ability to set the file's name  you would like to use for the env (I for example have a problem with .env file because it is not recognized by my pycharm EnvFle plugin)",
        "labels": "Feature",
        "id": 43119
    },
    {
        "title": "How about adding `gfu` as an alias for `git fetch upstream`",
        "body": "",
        "labels": "Feature",
        "id": 43120
    },
    {
        "title": "docker-machine plugin should tell you which docker-machine environment you're in",
        "body": "Similarly to the way you know which git branch you're on, or which python virtualenv, knowing which docker-machine env I'm currently in would be very helpful! \r\n\r\n@jakubsacha, @robbyrussell ",
        "labels": "Feature",
        "id": 43121
    },
    {
        "title": "[Suggestion] Cache the ssh passphrase upon first use",
        "body": "Hi, I'm using `zsh` and `oh-my-zsh`, with the `ssh-agent` plugin.\r\nI've noticed that every time I start my computer and open my terminal for the first time, it asks me for my ssh passphrase and then caches it until the next reboot.\r\n\r\nThere are some times where I don't need to use my ssh keys and I just want to quickly open a new terminal session after I booted up my computer; it's kind of frustrating having to type my passphrase when I know I won't be using it.\r\nIt would be great if the plugin were able to detect when some app is trying to use your ssh keys (e.g. on `git pull` or `git fetch`) and launch the agent the first time one of my keys is used basically.\r\n\r\nI'm sorry if this has been asked before. I spent some time searching the GitHub issues to find something similar but nothing came up.",
        "labels": "Feature",
        "id": 43122
    },
    {
        "title": "yarn workspaces support",
        "body": "@robbyrussell hi! \r\nI thought yarn plugin missing workspaces support \r\nalias yw='yarn workspace'\r\nalias ywi='yarn workspaces info'\r\n\r\nand autocompletion of packages names possible to add?\r\n \r\nWorkspaces folders indicated in package.json `  \"workspaces\": [ \"packages/*\" ]` and workspace name is in `package/somepackage/package.json` with property `name`\r\n\r\nAlso nice to autocomplete commands like after `yarn` and tab, but after `yarn workspace @pg/somepackage`. But not sure if it should be in yarn plugin.\r\n\r\nHere's bash autocompletion that support workspaces. https://github.com/dsifford/yarn-completion",
        "labels": "Feature",
        "id": 43123
    },
    {
        "title": "QUESTION: How to disable tab completion on foreign file systems?",
        "body": "Tab completion was slow, and I traced it down to a foreign filesystem (Google Drive, mounted via fuse).  Thing is, I am not searching in those directories.  E.g.:\r\n\r\n```\r\n/home/me\r\n|______/documents/\r\n       |_________/blah/\r\n|______/Google Drive/\r\n```\r\ntyping:\r\n```\r\n$ ls ~/documents/blah/d<tab>\r\n```\r\ntakes forever; I _suspected_ this, but I proved it by (1) observing the fuse `google-drive` process pegging the CPU, and (2) unmounting the fuse filesystems and observing that no lag occurred in completion.  \r\n\r\nSo, I found #6967, which also more or less confirms this except the answer was unsatisfactory: \"we can't do anything about slow filesystems.\"  True enough, but what _would_ be helpful would be information about excluding specific directories from autocompletion.  I see that oh-my-zsh is already setting completion widgets, which I don't want to override with, e.g. [my own function](https://superuser.com/questions/585545/how-to-disable-zsh-tab-completion-for-nfs-dirs); is there documentation that explains how to do this (exclude specific directories)?\r\n\r\nI believe this is caused by `zcompdump` caching the mounted drives. Removing it does fix the issue... until I reflexively <tab> in one of those directories again, and it gets cached again, and I have to remove the file again.  As I will not be able to stop myself reflexively use tab-completion in those directories, I'd prefer if oh-my-zsh just turned off tab completion for them.\r\n\r\nIs this possible?",
        "labels": "Feature",
        "id": 43124
    },
    {
        "title": "(Request) Would be nice to make compaudit/compinit during initialization entirely optional",
        "body": "The most expensive part of Zsh initialization appears to be `compaudit` in my case. So I'd like to run it, say, once every 24 hours. I could do that doing something like the following in my `~/.zshrc`.\r\n\r\n```zsh\r\nautoload -Uz compinit\r\n\r\n# only compinit fully after 24 hours\r\n# from zsh docs: The -C flag bypasses both the check for\r\n# rebuilding the dump file and the usual call to compaudit\r\nfor dump in $HOME/.zcompdump(N.mh+24); do\r\n  compinit\r\ndone\r\ncompinit -C\r\n```\r\n\r\nHowever, there's one snag—oh-my-zsh runs the full `compinit` anyways, and this appears to invoke `compaudit`, no matter what I do elsewhere.\r\n\r\nI tried setting `export ZSH_DISABLE_COMPFIX='true'` before `$ZSH/oh-my-zsh.sh`. However, based on the output from the `zprof` module, it's still calling `compaudit`. I can tell it's due to [this line](https://github.com/robbyrussell/oh-my-zsh/blob/e96a7b728a9c15f5615f4e41a79a5f0fe2b97712/oh-my-zsh.sh#L79) because, if I comment it out, the `compaudit` call disappears from the output from `zprof`, and the time spent doing `compinit` drops significantly.\r\n\r\nSo it would be nice to be able to opt out of this bit of the initialization so that I can perform it myself, the way that I like (once a day).\r\n\r\n* * *\r\n\r\nFor completion's sake, included is the profiling output from `zprof` based on executing `zsh -i -c exit`. I added `zmodload zsh/zprof` to the top of my `~/.zshrc` and `zprof` to the bottom. Note that the difference in startup latency is about a tenth of a second. Research reveals that a tenth of a second is the threshold at which [interface latency becomes noticeable](https://www.nngroup.com/articles/response-times-3-important-limits/).\r\n\r\nThis is the output with an untouched `$ZSH/oh-my-zsh.sh`.\r\n\r\n```\r\nnum  calls                time                       self            name\r\n-----------------------------------------------------------------------------------\r\n 1)    2         158.71    79.35   59.56%    129.24    64.62   48.50%  compinit\r\n 2)    1          68.78    68.78   25.81%     67.90    67.90   25.48%  _zsh_highlight_load_highlighters\r\n 3)    2          29.47    14.73   11.06%     29.47    14.73   11.06%  compaudit\r\n 4)    2          14.30     7.15    5.37%     14.30     7.15    5.37%  _zsh_highlight_bind_widgets\r\n 5)    2          13.60     6.80    5.10%     13.60     6.80    5.10%  grep-flag-available\r\n 6)    2           6.51     3.25    2.44%      6.51     3.25    2.44%  env_default\r\n 7)    1           1.71     1.71    0.64%      1.71     1.71    0.64%  colors\r\n 8)    2           1.49     0.74    0.56%      1.49     0.74    0.56%  is-at-least\r\n 9)    2           1.03     0.52    0.39%      1.03     0.52    0.39%  add-zsh-hook\r\n10)   14           0.41     0.03    0.15%      0.41     0.03    0.15%  is_plugin\r\n11)   22           0.36     0.02    0.14%      0.36     0.02    0.14%  put_template\r\n12)    7           0.19     0.03    0.07%      0.19     0.03    0.07%  put_template_custom\r\n13)    1           0.16     0.16    0.06%      0.16     0.16    0.06%  compdef\r\n14)    1           0.08     0.08    0.03%      0.07     0.07    0.03%  iterm2_print_state_data\r\n15)    1           0.02     0.02    0.01%      0.02     0.02    0.01%  iterm2_print_user_vars\r\n\r\n-----------------------------------------------------------------------------------\r\n\r\n 1)    2         158.71    79.35   59.56%    129.24    64.62   48.50%  compinit\r\n       1/2        29.47    29.47   11.06%      0.52     0.52             compaudit [3]\r\n\r\n-----------------------------------------------------------------------------------\r\n\r\n 2)    1          68.78    68.78   25.81%     67.90    67.90   25.48%  _zsh_highlight_load_highlighters\r\n       1/2         0.88     0.88    0.33%      0.88     0.88             add-zsh-hook [9]\r\n\r\n-----------------------------------------------------------------------------------\r\n\r\n       1/2        29.47    29.47   11.06%      0.52     0.52             compinit [1]\r\n       1/2        28.94    28.94   10.86%     28.94    28.94             compaudit [3]\r\n 3)    2          29.47    14.73   11.06%     29.47    14.73   11.06%  compaudit\r\n       1/2        28.94    28.94   10.86%     28.94    28.94             compaudit [3]\r\n\r\n-----------------------------------------------------------------------------------\r\n\r\n 4)    2          14.30     7.15    5.37%     14.30     7.15    5.37%  _zsh_highlight_bind_widgets\r\n\r\n-----------------------------------------------------------------------------------\r\n\r\n 5)    2          13.60     6.80    5.10%     13.60     6.80    5.10%  grep-flag-available\r\n\r\n-----------------------------------------------------------------------------------\r\n\r\n 6)    2           6.51     3.25    2.44%      6.51     3.25    2.44%  env_default\r\n\r\n-----------------------------------------------------------------------------------\r\n\r\n 7)    1           1.71     1.71    0.64%      1.71     1.71    0.64%  colors\r\n\r\n-----------------------------------------------------------------------------------\r\n\r\n 8)    2           1.49     0.74    0.56%      1.49     0.74    0.56%  is-at-least\r\n\r\n-----------------------------------------------------------------------------------\r\n\r\n       1/2         0.88     0.88    0.33%      0.88     0.88             _zsh_highlight_load_highlighters [2]\r\n 9)    2           1.03     0.52    0.39%      1.03     0.52    0.39%  add-zsh-hook\r\n\r\n-----------------------------------------------------------------------------------\r\n\r\n10)   14           0.41     0.03    0.15%      0.41     0.03    0.15%  is_plugin\r\n\r\n-----------------------------------------------------------------------------------\r\n\r\n11)   22           0.36     0.02    0.14%      0.36     0.02    0.14%  put_template\r\n\r\n-----------------------------------------------------------------------------------\r\n\r\n12)    7           0.19     0.03    0.07%      0.19     0.03    0.07%  put_template_custom\r\n\r\n-----------------------------------------------------------------------------------\r\n\r\n13)    1           0.16     0.16    0.06%      0.16     0.16    0.06%  compdef\r\n\r\n-----------------------------------------------------------------------------------\r\n\r\n14)    1           0.08     0.08    0.03%      0.07     0.07    0.03%  iterm2_print_state_data\r\n       1/1         0.02     0.02    0.01%      0.02     0.02             iterm2_print_user_vars [15]\r\n\r\n-----------------------------------------------------------------------------------\r\n\r\n       1/1         0.02     0.02    0.01%      0.02     0.02             iterm2_print_state_data [14]\r\n15)    1           0.02     0.02    0.01%      0.02     0.02    0.01%  iterm2_print_user_vars\r\n```\r\n\r\nThis is the output with [the line I mentioned above commented out](https://github.com/robbyrussell/oh-my-zsh/blob/e96a7b728a9c15f5615f4e41a79a5f0fe2b97712/oh-my-zsh.sh#L79).\r\n\r\n```\r\nnum  calls                time                       self            name\r\n-----------------------------------------------------------------------------------\r\n 1)    1          57.41    57.41   39.17%     57.41    57.41   39.17%  compinit\r\n 2)    1          51.29    51.29   34.99%     50.91    50.91   34.73%  _zsh_highlight_load_highlighters\r\n 3)    2          13.77     6.88    9.39%     13.77     6.88    9.39%  grep-flag-available\r\n 4)    2          11.64     5.82    7.94%     11.64     5.82    7.94%  _zsh_highlight_bind_widgets\r\n 5)    2           9.27     4.63    6.32%      9.27     4.63    6.32%  env_default\r\n 6)    1           1.34     1.34    0.91%      1.34     1.34    0.91%  colors\r\n 7)    2           0.63     0.31    0.43%      0.63     0.31    0.43%  is-at-least\r\n 8)   14           0.49     0.04    0.33%      0.49     0.04    0.33%  is_plugin\r\n 9)    2           0.49     0.24    0.33%      0.49     0.24    0.33%  add-zsh-hook\r\n10)   22           0.32     0.01    0.22%      0.32     0.01    0.22%  put_template\r\n11)    1           0.14     0.14    0.10%      0.14     0.14    0.10%  compdef\r\n12)    7           0.11     0.02    0.08%      0.11     0.02    0.08%  put_template_custom\r\n13)    1           0.06     0.06    0.04%      0.05     0.05    0.03%  iterm2_print_state_data\r\n14)    1           0.01     0.01    0.01%      0.01     0.01    0.01%  iterm2_print_user_vars\r\n\r\n-----------------------------------------------------------------------------------\r\n\r\n 1)    1          57.41    57.41   39.17%     57.41    57.41   39.17%  compinit\r\n\r\n-----------------------------------------------------------------------------------\r\n\r\n 2)    1          51.29    51.29   34.99%     50.91    50.91   34.73%  _zsh_highlight_load_highlighters\r\n       1/2         0.38     0.38    0.26%      0.38     0.38             add-zsh-hook [9]\r\n\r\n-----------------------------------------------------------------------------------\r\n\r\n 3)    2          13.77     6.88    9.39%     13.77     6.88    9.39%  grep-flag-available\r\n\r\n-----------------------------------------------------------------------------------\r\n\r\n 4)    2          11.64     5.82    7.94%     11.64     5.82    7.94%  _zsh_highlight_bind_widgets\r\n\r\n-----------------------------------------------------------------------------------\r\n\r\n 5)    2           9.27     4.63    6.32%      9.27     4.63    6.32%  env_default\r\n\r\n-----------------------------------------------------------------------------------\r\n\r\n 6)    1           1.34     1.34    0.91%      1.34     1.34    0.91%  colors\r\n\r\n-----------------------------------------------------------------------------------\r\n\r\n 7)    2           0.63     0.31    0.43%      0.63     0.31    0.43%  is-at-least\r\n\r\n-----------------------------------------------------------------------------------\r\n\r\n 8)   14           0.49     0.04    0.33%      0.49     0.04    0.33%  is_plugin\r\n\r\n-----------------------------------------------------------------------------------\r\n\r\n       1/2         0.38     0.38    0.26%      0.38     0.38             _zsh_highlight_load_highlighters [2]\r\n 9)    2           0.49     0.24    0.33%      0.49     0.24    0.33%  add-zsh-hook\r\n\r\n-----------------------------------------------------------------------------------\r\n\r\n10)   22           0.32     0.01    0.22%      0.32     0.01    0.22%  put_template\r\n\r\n-----------------------------------------------------------------------------------\r\n\r\n11)    1           0.14     0.14    0.10%      0.14     0.14    0.10%  compdef\r\n\r\n-----------------------------------------------------------------------------------\r\n\r\n12)    7           0.11     0.02    0.08%      0.11     0.02    0.08%  put_template_custom\r\n\r\n-----------------------------------------------------------------------------------\r\n\r\n13)    1           0.06     0.06    0.04%      0.05     0.05    0.03%  iterm2_print_state_data\r\n       1/1         0.01     0.01    0.01%      0.01     0.01             iterm2_print_user_vars [14]\r\n\r\n-----------------------------------------------------------------------------------\r\n\r\n       1/1         0.01     0.01    0.01%      0.01     0.01             iterm2_print_state_data [13]\r\n14)    1           0.01     0.01    0.01%      0.01     0.01    0.01%  iterm2_print_user_vars\r\n```",
        "labels": "Feature",
        "id": 43125
    },
    {
        "title": "Allow creation of zcompdump in a custom directory",
        "body": "Hey all 👋\r\n\r\nI tried clearing my home directory of all things ZSH\r\n(bar the `.zshrc` of course, and a new `.all-zsh-config` directory)\r\nbut a `.zcompdump-James’s MacBook Pro-5.3` file was always present\r\n(and if deleted would be recreated on opening of a new terminal)\r\n\r\nAs everything else ZSH-related - including the `.oh-my.zsh/` directory - was successfully moved to the `.all-zsh-config` directory by setting `$ZSH` to `~/.all-zsh-config/.oh-my-zsh`, this was confusing.\r\n\r\nAfter a look at the `oh-my-zsh.sh` file it looks like this is because regardless of the set `$ZSH` directory the `ZSH_COMPDUMP` file is always set to point to the `$HOME` directory.\r\n\r\nhttps://github.com/robbyrussell/oh-my-zsh/blob/745b6550a6a8415e2c6df0006aad40549c3bc56a/oh-my-zsh.sh#L65-L68\r\n\r\nIf this could be changed to reference `$ZSH` it would allow a custom config folder to be created (to de-clutter the home directory) without affecting completion.\r\n\r\n``` sh\r\n# Save the location of the current completion dump file.\r\nif [ -z \"$ZSH_COMPDUMP\" ]; then\r\n  ZSH_COMPDUMP=\"${ZDOTDIR:-${ZSH}}/.zcompdump-${SHORT_HOST}-${ZSH_VERSION}\"\r\nfi\r\n```\r\n\r\nThings seem to be working for me having replaced it, I'm just not sure whether all plugins will respect the `$ZSH_COMPDUMP` and use the new zcompdump file (or just revert to one in the home directory).\r\n\r\nIs this something that would be helpful / worth including?",
        "labels": "Feature",
        "id": 43126
    },
    {
        "title": "Load plugin completions without aliases",
        "body": "Oh-my-zsh is great! It makes configuring zsh very easy.\r\n\r\nHowever, it does a bit too much for my taste. Many plugins tend to add autocompletion for a command and a bunch of aliases. Personally I love to have that autocompletion, but I don’t like most of the aliases.\r\n\r\nIs there a nice way to load only plugin completions, but not the aliases?",
        "labels": "Feature",
        "id": 43127
    },
    {
        "title": "Enable command-not-found by default",
        "body": "Enable command-not-found by default. This can enable zsh to smartly suggest packages if not found.\r\nSomething like, rather than: \r\n`zsh: command not found: to`\r\nChanges to \r\n```\r\nCommand 'plo' not found, did you mean:\r\n\r\n  command 'plio' from deb gnustep-base-runtime\r\n  command 'plot' from deb plotutils\r\n  command 'palo' from deb palo\r\n  command 'plog' from deb ppp\r\n  command 'plm' from deb plm\r\n\r\nTry: sudo apt install <deb name>\r\n```",
        "labels": "Feature",
        "id": 43128
    },
    {
        "title": "enhancement - include imagecat script out of the box",
        "body": "https://www.iterm2.com/documentation-images.html\r\nhttps://www.iterm2.com/utilities/imgcat\r\n\r\n\r\n<img width=\"989\" alt=\"screen shot 2018-09-11 at 11 46 33 am\" src=\"https://user-images.githubusercontent.com/289994/45371346-5f2a0780-b5b8-11e8-9017-0912c7f0aed5.png\">\r\n",
        "labels": "Feature",
        "id": 43129
    },
    {
        "title": "Suggestion: add a flag to bypass setting zsh as default shell",
        "body": "Currently oh-my-zsh install.sh script will try to set the default shell to zsh. But sometimes this will prompt the user to enter their password. This is somewhat annoying in auto-deploying scripts. I would suggest to add a flag to `install.sh` to bypass this section. Or is there already one? Thanks. \r\n\r\n```sh\r\n  # If this user's login shell is not already \"zsh\", attempt to switch.\r\n  TEST_CURRENT_SHELL=$(expr \"$SHELL\" : '.*/\\(.*\\)')\r\n  if [ \"$TEST_CURRENT_SHELL\" != \"zsh\" ]; then\r\n    # If this platform provides a \"chsh\" command (not Cygwin), do it, man!\r\n    if hash chsh >/dev/null 2>&1; then\r\n      printf \"${BLUE}Time to change your default shell to zsh!${NORMAL}\\n\"\r\n      chsh -s $(grep /zsh$ /etc/shells | tail -1)\r\n    # Else, suggest the user do so manually.\r\n    else\r\n      printf \"I can't change your shell automatically because this system does not have chsh.\\n\"\r\n      printf \"${BLUE}Please manually change your default shell to zsh!${NORMAL}\\n\"\r\n    fi\r\n  fi\r\n\r\n```",
        "labels": "Feature",
        "id": 43130
    },
    {
        "title": "Link themes to individual terminal user profiles.",
        "body": "### Link (and hence automatically load) a theme to the terminal per individual *user-profile* basis. \r\n\r\nSo when I switch between profiles in my zsh terminal, the theme associated with the same must load automatically too!\r\n\r\nA huge fan of the work and the project. Love this community! Thanks in advance :)\r\n\r\nCheers!",
        "labels": "Feature",
        "id": 43131
    },
    {
        "title": "Propose to show `git log -p` before the upgrade",
        "body": "It is similar to #2971 but doesn't require any manual log housekeeping. Basically, modify:\r\n```\r\n[Oh My Zsh] Would you like to update? [Y/n]: \r\n```\r\nto\r\n```\r\n[Oh My Zsh] Would you like to update? [Yng?]: ?\r\nYy - yes\r\nNn - no\r\nGg - show git log with patches\r\n```",
        "labels": "Feature",
        "id": 43132
    },
    {
        "title": "The docker-machine plugin doesn't have completion",
        "body": "I add docker-machine to plugins, but it doesn't work. \r\nAnd The docker official plugin works fine.\r\nhttps://docs.docker.com/machine/completion/#zsh",
        "labels": "Feature",
        "id": 43133
    },
    {
        "title": "Fish like completion for `cd`",
        "body": "Fish like completion for `cd` will show the file type and file size. It's very useful for me.\r\n\r\nHow can I get this feature in zsh?\r\n\r\n![image](https://user-images.githubusercontent.com/4601569/40882732-c1160a64-671d-11e8-9810-2f813eb28470.png)\r\n\r\n",
        "labels": "Feature",
        "id": 43134
    },
    {
        "title": "Label for the staged changes is missing in Avit theme",
        "body": "I like the Avit theme but one of the important for me feature is missing.\r\nIt would be great to see that I have staged changes in current git repository by marked it with some label and color, I have tried to add the following code lines to the theme file:\r\n\r\n```\r\nZSH_THEME_GIT_PROMPT_STAGED=\"%{$fg[white]%}$ \"\r\nZSH_THEME_GIT_PROMPT_STASHED=\"%{$fg[white]%}$ \"\r\n```\r\n\r\nbut this didn't make the job.",
        "labels": "Feature",
        "id": 43135
    },
    {
        "title": "Sublime Plugin msys2 support",
        "body": "Sublime plugin is not supported in msys2, which has `$OSTYPE` of `msys`.",
        "labels": "Feature",
        "id": 43136
    },
    {
        "title": "laravel: file autocomplete",
        "body": "Having this:\r\n\r\n```\r\n# Laravel5 basic command completion\r\n_laravel5_get_command_list () {\r\n\tphp artisan --raw --no-ansi list | sed \"s/[[:space:]].*//g\"\r\n}\r\n\r\n_laravel5 () {\r\n  if [ -f artisan ]; then\r\n    compadd `_laravel5_get_command_list`\r\n  fi\r\n}\r\n\r\ncompdef _laravel5 artisan\r\n\r\n#Alias\r\nalias art='php artisan'\r\n```\r\n\r\nHow can I have FILE autocompletion after the laravel commands?\r\n\r\n`art<TAB>_laravel5<TAB>_FILES`\r\n\r\nCan someone help me or lead me to the right direction? Thank you.",
        "labels": "Feature",
        "id": 43137
    },
    {
        "title": "There should be a clear option to NOT change my default shell",
        "body": "I wished to keep bash as default, so I had to press <c-c> to abort the install in the prompt and now I don't know if I skipped some important setting.",
        "labels": "Feature",
        "id": 43138
    },
    {
        "title": "Add zsh-docker-aliases to the plugins",
        "body": "I'd like to propose that [zsh-docker-aliases](https://github.com/akarzim/zsh-docker-aliases) by @akarzim be added to the list of plugins, as this is the most comprehensive list of aliases I found for docker and the docker-related tooling.",
        "labels": "Feature",
        "id": 43139
    },
    {
        "title": "Plugins: can I load them asynchronously, or on-demand?",
        "body": "oh-my-zsh plugins like `pyenv` or `rbenv` are great, but many times I am forced not to use a plugin because it can bring my shell launch time to a crawl. It's why we get issues like #6017 . \r\n\r\nIs it possible to load some plugins asynchronously, so my shell prompt is not blocked until all the plugins launch? Failing this, can I load plugins on-demand? ",
        "labels": "Feature",
        "id": 43140
    },
    {
        "title": "Add mechanism for auto-update of custom folder ",
        "body": "A way is needed to tie custom folder contents updating to the OMZ update mechanism.\r\n\r\nSee: https://github.com/robbyrussell/oh-my-zsh/pull/5093\r\n\r\nIt's been a year since this PR was closed, I'm beginning to despair.",
        "labels": "Feature",
        "id": 43141
    },
    {
        "title": "Google Cloud SDK support",
        "body": "Does oh-my-zsh have such a plugin that supports the auto completion of Google Cloud SDK (i.e., gcloud)? ",
        "labels": "Feature",
        "id": 43142
    },
    {
        "title": "Please make some of the stuff in lib/* optional",
        "body": "I don't need or want some of the stuff that omz autoloads from `lib/*.zsh`. I know I can put empty files into `$ZSH_CUSTOM/lib`, but I wonder what the criteria are anyway, i.e. why does some of the stuff that should probably be in a plugin (`nvm.zsh` or `bzr.zsh`) or is way too specific (e.g. `misc.zsh`) gets loaded unconditionally?\r\n\r\nWould you accept a patch that honoured an array like `plugins`, or maybe an array of lib modules to skip?",
        "labels": "Feature",
        "id": 43143
    },
    {
        "title": "Short alias for `git grep`",
        "body": "`git grep` is a useful idiom, searching only for relevant source files in the repository.\r\n\r\nYet, there's no short alias for it in the git plugin.\r\n\r\nWouldn't it be useful to add one?",
        "labels": "Feature",
        "id": 43144
    },
    {
        "title": "Python anaconda",
        "body": "This packages and environment manager is powerful and useful python tool and its could be a great idea if oh-my-zsh framework had a plugin for that",
        "labels": "Feature",
        "id": 43145
    },
    {
        "title": "installer should trigger zsh installation for main distros whenever this is needed",
        "body": "The one line installer should trigger zsh installer using distro installer when this is available. This should work very easy well for `brew`, `apt-get`, `yum`, `dnf`.",
        "labels": "Feature",
        "id": 43146
    },
    {
        "title": "Please rethink the experience for new users.",
        "body": "I installed OhMyZsh so that when I relaunch the macOS Terminal app, windows will reopen in the same dir where they were at Quit.\r\n\r\nMaybe I will want some of the other OhMyZsh features eventually, but OhMyZsh should let me phase them in as I understand them and decide to try them.\r\n\r\nI suggest:\r\n1. The install should not replace .zshrc. It should insert one line at the beginning of .zshrc:\r\n  `source ~/.zsh-ohmyzshrc`\r\n\r\n2. ~/.zsh-ohmyzshrc should not enable anything. Every feature or feature set should be controlled by a line in the file. Every one of these lines should be designed for opt-in, not opt-out, either by uncommenting or by some other convention that is clear by inspection whether it is currently set to enable or to disable some feature.\r\n\r\n3. Consider splitting ~/.zsh-ohmyzshrc into sections, each enabled by a\r\n  `source ~/.zsh-ohmyzshrc`\r\nline the various zsh startup files, .zshrc, .zlogin, etc.\r\n\r\nIf you do this you will get a lot more adoption. As it is now, who would want to turn on a giant ball of stuff in their shell and just see what happens? Silly me. I did that. Now I have to back it all out.",
        "labels": "Feature",
        "id": 43147
    },
    {
        "title": "how to enable username and hostname in the default theme?",
        "body": "I do want to stick with the **default** theme but I want to just be able to see username and hostname in order to avoid running commands on the wrong host. \r\n\r\nHow can I do this?",
        "labels": "Feature",
        "id": 43148
    },
    {
        "title": "How about removing 'r' command ?",
        "body": "Hi,\r\n\r\nI just typed `r` and my zsh re-played the last command I typed - I use oh-my-zsh ofc. I didn't knew that command and my last command was a critical one. *I find this very dangerous*.\r\n\r\nWhat do you think about removing that alias/command ? I think that the up-arrow is sufficient, don't you ?\r\n\r\nCheers",
        "labels": "Feature",
        "id": 43149
    },
    {
        "title": "request support: brew plugin add $PATH settings",
        "body": "```\r\n➜  ~ brew doctor\r\nPlease note that these warnings are just used to help the Homebrew maintainers\r\nwith debugging if you file an issue. If everything you use Homebrew for is\r\nworking fine: please don't worry and just ignore them. Thanks!\r\n\r\nWarning: Homebrew's sbin was not found in your PATH but you have installed\r\nformulae that put executables in /usr/local/sbin.\r\nConsider setting the PATH for example like so\r\n  echo 'export PATH=\"/usr/local/sbin:$PATH\"' >> ~/.zshrc\r\n```\r\n\r\nadd this code:\r\n```bash\r\nif [ -d \"$(brew --prefix)/bin\" ]; then export PATH=\"$(brew --prefix)/bin:$PATH\"; fi\r\nif [ -d \"$(brew --prefix)/sbin\" ]; then export PATH=\"$(brew --prefix)/sbin:$PATH\"; fi\r\n```\r\n\r\nsee\r\n1.  [brew --prefix source](https://github.com/Homebrew/brew/blob/b35134239a22710acd680c1893fc2ad0dd9268a5/Library/Homebrew/cmd/--prefix.rb)\r\n2. [brew diagnostic source](https://github.com/Homebrew/brew/blob/b35134239a22710acd680c1893fc2ad0dd9268a5/Library/Homebrew/diagnostic.rb#L400-L464)\r\n3. [brew.plugin.zsh source](https://github.com/robbyrussell/oh-my-zsh/blob/0ee89d965ecaa4f32cf2d1039e9d84a73eb206cf/plugins/brew/brew.plugin.zsh)\r\n",
        "labels": "Feature",
        "id": 43150
    },
    {
        "title": "New Feature : add a simple command to check which are not merged to current git branch",
        "body": "Here is what I use when I want to check whats not merged to develop branch. It gives a nice overview. (this query is not made up by me, i got it from stackoverflow or somewhere). But i think its a nice feature to have in oh.my-zsh\r\n\r\n```zsh\r\nfor k in`git branch --no-merged develop | perl -pe s/^..//`; do echo -e`git show --pretty=format:\"%Cgreen%ci %Cblue%cr%Creset\" $k -- | head -n 1`\\\\t$k; done | sort -r\r\n```\r\n",
        "labels": "Feature",
        "id": 43151
    },
    {
        "title": "Why some zsh related projects isn't incorporated into oh-my-zsh",
        "body": "Hello.\nThere is no easy way or documented one (or I missed something) to install and update this projects (just to name a few) with oh-my-zsh:\nhttps://github.com/zsh-users/zsh-completions#oh-my-zsh\nhttps://github.com/zsh-users/zsh-syntax-highlighting\n\nWould it be acceptable to add them as submodules to oh-my-zsh?\n",
        "labels": "Feature",
        "id": 43152
    },
    {
        "title": "Auto git fetch when cd into a git repo",
        "body": "This is a question rather than an issue. Maybe it can be a feature request if the feature I will be talking about isn't already in `oh-my-zsh`.\n\nI moved to `oh-my-zsh` from `magicmonty/bash-git-prompt`. In that `magicmonty/bash-git-prompt` repo there was a very nice feature _where when I `cd` into a direcotry which was a git repo, it would automatically do a `git fetch` and thus saving me the hassle of manually doing a `git fetch` (or `gf` in `oh-my-zsh`)_. Is there something similar in `oh-my-zsh`?\n",
        "labels": "Feature",
        "id": 43153
    },
    {
        "title": "Blinks theme: Add time above current history event number",
        "body": "Would it be possible to have the time added above the current history event number for the [blinks theme?](https://github.com/robbyrussell/oh-my-zsh/wiki/Themes#blinks).\n",
        "labels": "Feature",
        "id": 43154
    },
    {
        "title": "Support pycharm embedded terminal - osx plugin",
        "body": "```\n❯ tab\ntab: unsupported terminal app: pycharm\n```\n",
        "labels": "Feature",
        "id": 43155
    },
    {
        "title": "Completion feature hides the content",
        "body": "I am using the latest version of Oh my ZSH (v5.0.8) on Mac OS X El Capitan (v10.11.6).\n\nWhen I try to use the tab completion feature with `g++ -`, I get all the options available but the content (with width beyond the window) overflows and gets hidden. It would be great if the text wraps to show the content in the next line. I've attached 2 images for showing the problem:\n\n![sample-1](https://cloud.githubusercontent.com/assets/6072276/17647417/77817518-620c-11e6-8ccf-85e8b363a568.jpg)\n![sample-2](https://cloud.githubusercontent.com/assets/6072276/17647418/782da9e6-620c-11e6-9218-8cff5a06e6de.jpg)\n\nAnd it's not just with `g++`, but the same thing happens with other plugins like `git`, `wget`, etc. \n",
        "labels": "Feature",
        "id": 43156
    },
    {
        "title": "Alternative to auto-update prompt",
        "body": "Sometimes I start typing right after I open a new terminal. If oh-my-zsh decides to ask for an auto upgrade, it eats my input or worse it could possibly trigger a Y or N by mistake.\n\nWhat I propose is an alternative way of handling automatic checks for updates by simply notifying the user of their availability.\n\neg:\n- Check for updates every now and then **in the background** and persist the result.\n- Every time a new session is started, iff there were pending updates, **notify the user with a non-interactive prompt** - something like _\"There are pending oh-my-zsh updates. Use `upgrade_oh_my_zsh` to upgrade.\"_\n- When `upgrade_oh_my_zsh` is run, clear the persisted \"updates available\" state.\n\nThis should be an option configurable along with `DISABLE_AUTO_UPDATE` on `.zshrc`. Maybe setting a) `DISABLE_UPDATE_PROMPT=notify` or b) `DISABLE_AUTO_UPDATE=true` and `ENABLE_UPDATE_CHECK=true`?\n",
        "labels": "Feature",
        "id": 43157
    },
    {
        "title": "Prefix/suffix names of virtualenv prompt info",
        "body": "According to the naming convention for other plugins, the prefix and suffix names for virtualenv should be `ZSH_THEME_VIRTUALENV_PROMPT_PREFIX` and `ZSH_THEME_VIRTUALENV_PROMPT_SUFFIX`, respectively, instead of `ZSH_THEME_VIRTUAL_ENV_PREFIX` and `ZSH_THEME_VIRTUAL_ENV_SUFFIX` as in:\nhttps://github.com/robbyrussell/oh-my-zsh/blob/master/lib/prompt_info_functions.zsh#L13-L15\n",
        "labels": "Feature",
        "id": 43158
    },
    {
        "title": "pj with two projects having the same name",
        "body": "I have two projects with the same name. I am trying to navigate to the second one.\nWhen I tab-complete, I always end up in the first one. I don't see the second one in the list when I am trying to tab-complete. \n\nIs there anything I can do to have two projects with the same directory name?\n",
        "labels": "Feature",
        "id": 43159
    },
    {
        "title": "temperature and cpu information",
        "body": "I am a [liquidprompt](https://github.com/nojhan/liquidprompt) user. \n\nOne feature I am missing in oh-my-sh is\n- temperature of the cpu \n- cpu load\n\nThese quantities are displayed in the prompt when above a threshold\n",
        "labels": "Feature",
        "id": 43160
    },
    {
        "title": "Load additional plugins specified in another file",
        "body": "The standard way to load plugins is of course setting `plugins=(...)` in the `.zshrc`. However, since I work with many different kind of systems (from Mac, over NetBSD to Linux), and some of the plugins are system specific, I'd like to have some additional plugin definitions in a separate file. I use `.zshrc` for the common stuff, which is of course in my \"dot files\" repository, and there is a `.zshrc_local` which holds machine specific configuration (environment settings, custom aliases etc.), so I can simply modify that for each system without interfering with the common rc file.\n\nNow my question: what would be the easiest way to have some additional plugins activated in that second file?\nAdding another `plugins=(osx brew)` for course will not trigger the load of the plugins. But sourcing `source $ZSH/oh-my-zsh.sh` seems also an overkill (that's what I do now)?\n",
        "labels": "Feature",
        "id": 43161
    },
    {
        "title": "[FR] Add possibility for plugins to depend on other plugins",
        "body": "Hi,\n\nIt's similar to dependencies in *NIX package managers. What I mean is a way to declare plugin dependencies (other plugins), which should be automatically enabled if the plugin is used.\n\nI think, it would be extremely useful feature. For example, there could be some user-defined 'virtual' plugins automatically enabling a bunch of others (i.e. plugin packs).\n\nIf you think it's a nice idea, I could implement this.\n\nWarm regards,\nSviatoslav.\n",
        "labels": "Feature",
        "id": 43162
    },
    {
        "title": "Most-used History Cleanup",
        "body": "Good morning,\n\nThis is a feature request. Maybe it already exists, but I would have no idea in the world about how it would be called.\n\nBasically, I find myself opening my `.zsh_history` from times to times and do some cleanup. I noticed some patterns:\n- I usually remove commands that had a non-zero exit status, but not **always**.\n- I remove commands that I don't use often (Eg `apt-get install` with one specific package etc), but **not always**.\n- Ha! `find ./ -name .DS_Store -exec rm {} \\;` all over the place... I'll remove that, but **not always**.\n\nAs the factorization of the **not always** part is obvious, it probably means we need machine learning, so here is the idea. It would be quite nice to have some kind of scoring options:\n- When a command is issued, it is being scored with 100.\n- A zero exit status immediately decreases that score.\n- When opening a new shell, all commands that are older than `N` days have their score decreased by 25.\n- When an existing command is selected using up / down / completion, increase it's score.\n- Whenever a command's score reaches zero, it gets removed.\n\nOn top of that, a slightly configurable user callback would be nice, here would be the flow:\n- Whenever a command score would change, the user callback is called.\n- The user callback has access to the command itself, the current score, the increment / decrement and a reason (\"non-zero-status\", \"history-selected\", etc).\n- The user callback method is free to return a new value that would replace the increment / decrement.\n\nI hope you will understand what I mean. Do you guys think it would be nice to have this maybe?  It's very unfortunate that I have no idea how to create such plugin.\n\nKeep up the good work! I just looooove my `oh-my`.\n",
        "labels": "Feature",
        "id": 43163
    },
    {
        "title": "Add '^r' binding key to vi-mode plugin",
        "body": "It is popular key binding and i think it should be added by default.\n\n```\nbindkey '^r' history-incremental-search-backward\n```\n",
        "labels": "Feature",
        "id": 43164
    },
    {
        "title": "Vagrant plugin: completion for multiple boxes",
        "body": "Some vagrant commands allow you to operate on an arbitrary number of Vagrant boxes, instead of just a single box. The autocomplete currently does not take this into account, only completing the box names for the first box.\n\n`vagrant up myfirst<tab>` => autocompletes to myfirstproject, as expected.\n`vagrant up myfirstproject mysecond<tab>` => does not autocomplete at all, expected mysecondproject.\n\n(and thank you for all the work done on zsh and the vagrant plugin... really makes my life enjoyable every day!)\n",
        "labels": "Feature",
        "id": 43165
    },
    {
        "title": "urltools should allow working as a filter",
        "body": "I frequently find that I wish urlencode and urldecode worked as a filter, i.e. encoding stdin to stdout. It'd be great if they worked this way if no argument is present.\n",
        "labels": "Feature",
        "id": 43166
    },
    {
        "title": "forklift have option to open in a new window",
        "body": "It would be nice if https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/forklift had an option to open the target path in a new ForkLift window. Now it uses the most recent ForkLift window.\n",
        "labels": "Feature",
        "id": 43167
    },
    {
        "title": "autoenv lookup folder need update",
        "body": "Via pip install autoenv, the activate.sh path would be \"/usr/local/bin/activate.sh\" for brewed python in mac 10.11, so suggest adding /usr/local/bin into searching path.\n\n```\n  for d (~/.autoenv /usr/local/opt/autoenv /usr/local/bin); do\n```\n",
        "labels": "Feature",
        "id": 43168
    },
    {
        "title": "MVN plugin : -f doesn't filepath complete",
        "body": "Hi, \n\nwhen using maven to build a project in a different folder than the current, one can use `-f path/to/pom.xml`. \nZSH does't complete the path.\n",
        "labels": "Feature",
        "id": 43169
    },
    {
        "title": "Forked Repo Does Not Update From Upstream",
        "body": "If the repo is forked, the auto-update will keep trying to update from \"origin\". Would be interesting to maybe introduce a new toggle that will perform the necessary git steps to auto-update from upstream if forked. \n\nThe idea would be to introduce a variable in the zshrc that would take true for \"FORKED_REPO\". In upgrade.sh the modification  would be something like this: \n\nzshrc.zsh-template\n\n```\n# Uncomment the following line if you are using a forked repo\n# FORKED_REPO=\"true\"\n```\n\nupgrade.sh\n\n```\nif FORKED_REPO\n remote='upstream'\n\ngit pull --rebase --stat \"$remote\" master\n```\n\nSomething along those lines. There are probably some conditions that need to be handled. Like properly stashing and popping the stash if you have modifications that might cause a conflict. \n\nI am currently working on this at the moment in my fork: \n[supporting forked update from upstream](https://github.com/idjaw/oh-my-zsh/blob/supporting_fork_update_from_upstream/tools/upgrade.sh)\n\nAnyone have any thoughts on this?\n",
        "labels": "Feature",
        "id": 43170
    },
    {
        "title": "gitfast: getting color in RPROMPT with git-prompt.sh",
        "body": "Though I'm setting `GIT_PS1_SHOWCOLORHINTS` to `true`, I don't get any color in the RPROMPT when sourcing `~/.oh-my-zsh/plugins/gitfast/git-prompt.sh`.\r\n\r\nSee http://screencast.com/t/dm0XvSDHE:\r\n![image](https://user-images.githubusercontent.com/1441704/55590876-71c28480-5734-11e9-957d-1b9c1ce0d95e.png)\r\n\r\n\r\nPS- Why am I using Git-prompt while I do already have much in the \"left\" prompt??  Because there are missing info there, such as the fact we're ahead of `origin/master` and the number of commits we will push next time we type `git push`. Of course, it's overkill to repeat the branch name and so on, but I intend to comment those in `git-prompt.sh`.\r\n",
        "labels": "Feature",
        "id": 43171
    },
    {
        "title": "Don't autocomplete variables",
        "body": "Using OSX here. How do I disable autocompletion for environment variables?\nFor instance, if I type `zsh` to get to `zshconfig` this is the result:\n\n```\n[~]$ zsh                                                                       \nZSH                            ZSH_THEME_GIT_PROMPT_SUFFIX  \nZSH_CACHE_DIR                  ZSH_THEME_RVM_PROMPT_PREFIX  \nZSH_COMPDUMP                   ZSH_THEME_RVM_PROMPT_SUFFIX  \nZSH_CUSTOM                     ZSH_THEME_TERM_TAB_TITLE_IDLE\nZSH_NAME                       ZSH_THEME_TERM_TITLE_IDLE    \nZSH_PATCHLEVEL                 ZSH_VERSION                  \nZSH_SPECTRUM_TEXT              zsh                          \nZSH_THEME                      zsh_scheduled_events         \nZSH_THEME_GIT_PROMPT_CLEAN     zsh_stats                    \nZSH_THEME_GIT_PROMPT_DIRTY     zshconfig                    \nZSH_THEME_GIT_PROMPT_PREFIX           \n```\n\nIt's especially bad with the awesome case-insensitive option.\nAnother example: If I type `wo` to get to virtualenv's `workon` command, I instead get this:\n\n```\n[~]$ wor                                                                       \nWORDCHARS         WORKON_HOME       work_in_progress  workon  \n```\n",
        "labels": "Feature",
        "id": 43172
    },
    {
        "title": "Feature request: Allow user to blacklist themes from being picked by the random selector",
        "body": "I had a similar issue as https://github.com/robbyrussell/oh-my-zsh/issues/3036, so I wanted to blacklist some themes from being chosen by the picker, maybe because they have dependencies I don't have or because they're not pretty enough ;)\n\nI created a small PR that accomplishes this: https://github.com/robbyrussell/oh-my-zsh/pull/3703\n",
        "labels": "Feature",
        "id": 43173
    },
    {
        "title": "[feature] add 'docker-composer' plugin bundler",
        "body": "https://github.com/docker/fig\nDocker team took the `fig` tool to it's support, and renamed to `docker-composer`\ncould somebody add aliases for it, it's very usefull tool which will replace Vagrant in further.\nmany thanks\n",
        "labels": "Feature",
        "id": 43174
    },
    {
        "title": "Add new plugin for ansi weather",
        "body": "Add new plugin for https://github.com/fcambus/ansiweather\n",
        "labels": "Feature",
        "id": 43175
    },
    {
        "title": "Tab completion fails for global aliases",
        "body": "After re-installing my entire OSX machine today and now grabbing the latest oh-my-zsh it seems I can no longer complete _global_ aliases in any context.\n\nSearching around the net I see lots of scripts for expanding the alias automatically (like ctrl-x a) and other little tweaks, but everyone seems to take it for granted that global aliases tab complete.\n\nAnyone have any insight? This is a brand new install with no plugins, etc. \n",
        "labels": "Feature",
        "id": 43176
    },
    {
        "title": "Random theme picker should skip themes that rely on uninstalled commands",
        "body": "Feature request: The random theme picker should do some sort of check to determine whether a given theme has all the dependencies it needs, and skip themes for which this is not the case.\n\nIt's annoying to open a new shell and see something like\n`Can't open perl script \"/home/scp1/bin/foopath\": No such file or directory`\nor \n`prompt_jnrowe_precmd:3: command not found: zsh_path`\n",
        "labels": "Feature",
        "id": 43177
    },
    {
        "title": "Introducing \"What's new\" after upgrade",
        "body": "Upgrades happens quite frequently, but to the end user it is very unclear what actually changed and why one should upgrade. Having a changelog or a \"what's new\" chunk of text would be awesome. \n",
        "labels": "Feature",
        "id": 43178
    },
    {
        "title": "Consider doing tagged releases using Semantic Versioning",
        "body": "Automatic updates are great, but there really isn't a clean way to roll back to a specific version'd release other then checking out a hash tag. This project is big enough to consider using tagged releases, or at least creating release branches. This would make it more convenient to lock down a version of OMZ across machines.\n",
        "labels": "Feature",
        "id": 43179
    },
    {
        "title": "Documentation guidelines for Plugins",
        "body": "Hello all,\n\nI was reviewing PR #2510 and really liked how @pavoljuhas approached the README file. I've been mulling over how to best handle documentation for Plugins in the future as I'm not loving how the Wiki has evolved (as people don't update it as often as they send in pull-requests)\n\nGiven that, I like the idea of having a README.md file for each plugin directory. This way, if people want to know how to use the features for a specific plugin... they can just open up that directory on github and/or view it locally.\n\nFor example:\n- https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/scd\n\nAlong with this, it would allow me to write some code to generate friendly documentation to include on the new http://ohmyz.sh/ site.\n\nThere are TONS of amazing features bundled into the project... and I believe a consistent documentation approach could take all our expertise level up a notch.\n\nThoughts? Discuss.\n",
        "labels": "Feature",
        "id": 43180
    },
    {
        "title": "Remove all copyright information in themes/plugins",
        "body": "We're using Git so that we can all contribute to the project... together. If someone has some time, I would like to remove all copyright information from each theme/plugin that someone has added themselves to. \n\nThanks to version control--we will all know who contributed what to each and every line of code. My big concern is that someone might contribute a plugin with a copyright and then others might not feel like they can modify it. \n\nLastly, it's just not a convention across all plugins--so let's tidy this up going forward.\n",
        "labels": "Feature",
        "id": 43181
    },
    {
        "title": "Some minor alteration concerning .zshrc.pre-oh-my-zsh",
        "body": "A suggestion, but would it be possible to copy the existing `.zshrc` file to `.zshrc.pre-oh-my-zsh-$(date +%s)` or the likes? I had a hanging install on password, had to kill it, then tried to install again and - of course - it overwrites my previous (correct) .zshrc file.\n\nObviously, I should have backed it up - and its not _that_ great of a loss, but still. Don't know if this is desirable or if people fear it might clutter up `~` a bit too much on the .zfiles potentially.\n",
        "labels": "Feature",
        "id": 43182
    },
    {
        "title": "Add grunt plugin",
        "body": "https://github.com/clauswitt/zsh-grunt-plugin\n\nI find this plugin is nice to be added. What do you guys think ? \n",
        "labels": "Feature",
        "id": 43183
    },
    {
        "title": "ggpush and ggpull [origin]",
        "body": "What do you guys think of ggpush/ggpull/ggpnp having taking an optional remote argument defaulting to origin?\n",
        "labels": "Feature",
        "id": 43184
    },
    {
        "title": "Move plugins to separate repositories and use antigen package manager.",
        "body": "Any reason why this shouldn't happen? Security is not a concern because you can use `--branch=...` argument for `antigen-bundle` command.\n\nhttps://github.com/zsh-users/antigen\n",
        "labels": "Feature",
        "id": 43185
    },
    {
        "title": "Making autocompletion for autossh?",
        "body": "Possible to get one? If there are already things for ssh, I do not see any problem making it for this as well?\n",
        "labels": "Feature",
        "id": 43186
    },
    {
        "title": "Automatically escape HEAD^ in git commands",
        "body": "Any change this can be included?\n\nhttps://github.com/knu/zsh-git-escape-magic\n",
        "labels": "Feature",
        "id": 43187
    },
    {
        "title": "\"Dynamically\" reload theme",
        "body": "I've been thinking about ways to preview themes and was thinking of builing a tool that would give the impression that it's dynamically redrawing the current terminal screen with a new theme.\n\nFirst of all, is it difficult to change the theme without starting a new zsh session?\n\nif so, I was thinking that if we built a small utilitiy, it'd load a theme, run a few shell commands:\n- change directory into oh-my-zsh\n- list the directory contents\n- display the theme name (so they can modify their config)\n\nSince this directory is git-based, they'd see some colors of directory/file listings AND git status information.\n\n...it then asks the user if they want to start using this theme or try another. Try another? it clears the terminal, loads the next theme... does the same thing again.\n\nSomeone up for seeing this this is possible?\n",
        "labels": "Feature",
        "id": 43188
    },
    {
        "title": "Colorize the installer/upgrade scripts",
        "body": "Anyone want to take a stab at making our installer (and upgrade) include some fun colors? \n\nYou'll make my day. ;-)\n",
        "labels": "Feature",
        "id": 43189
    },
    {
        "title": "Proposal to Simplify OH-MY-ZSH",
        "body": "Organising code inside of OH-MY-ZSH is becoming unnecessarily complex. For a while, there has been the _/custom_ directory to dump files that override or append to the functionality of _/lib_, _/plugins_, and _/themes_.\n\nThen the ability to override _/plugins_ via _/custom/plugins_ was added (#89).  Now, a new proposal has been submitted to allow the overriding of _/themes_ (#376) and _/lib_ (in the comments to #376) via _/custom/themes_ and _/custom/lib_ respectively.\n\nAdditionally, there is the _/functions_ directory (b865f2a) for dumping miscellaneous functions and the _/completions_ directory (#351) for dumping miscellaneous completions.\n\nThese directories are unnecessary for we already have a software configuration management (SCM) tool called Git. We should use Git exclusively.\n\nI propose that we get rid of _/custom_, and edit _/lib_, _/plugins_, and _/themes_ directly. We also get rid of _/functions_, and _/completions_ to encourage the creation of plugins instead of dumping random code in those directories.\n\nPulling updates while retaining customisations is easy by recursively merging conflicting hunks by favouring **our** version. \n\n```\ngit pull --no-commit --strategy=recursive -X ours robbyrussell master\n```\n\nUpdates should always be checked for dangerous code (`rm -rf /`). Hence we use `pull --no-commit` to stop Git from auto-committing to let us check the files even when there is a clean merge.\n\n```\ngit status\n*** Check the files listed. ***\ngit commit\n```\n\nLastly, if we use Git exclusively, the _/tools_ directory becomes unnecessary and should be removed.\n\nKeep It Simple!\n",
        "labels": "Feature",
        "id": 43190
    },
    {
        "title": "Feature: 'random' theme",
        "body": "I was thinking that in an effort to showcase the various themes for people.. that we might add a 'random' feature, which will load a different theme each time a new terminal window is loaded.\n",
        "labels": "Feature",
        "id": 43191
    },
    {
        "title": "oh-my-zsh User Survey",
        "body": "It may be useful to create a user survey to know what distributions and ZSH versions oh-my-zsh users are running. \n\nIn one case where such information would be useful is in deciding what plugins should be merged into oh-my-zsh. If the majority of oh-my-zsh users are running ArchLinux or another bleeding edge distribution, it may not be desirable to include a completion plugin that will land in the next ZSH point release. However, if most users are running Ubuntu, Mac OS X, Debian, and other slow to update distributions, such a completion should be included. In either case, it would be desirable to have logic in oh-my-zsh to skip loading a completion that is older than the one that comes with ZSH.\n",
        "labels": "Feature",
        "id": 43192
    },
    {
        "title": "Taking ... one step further",
        "body": "I really love the aliasses like:\n    alias cd...='cd ../..'\n\nBut I would like to see them go one step further. Namely tab completion.\nTab completion works for `./` and `../`, but not for `.../`.\n\nI tried to figure out how to configure this. But I got lost in the documentation. Maybe there is somebody with more knowledge about zsh completion to fix this?\n\nThanks in advance.\n",
        "labels": "Feature",
        "id": 43193
    },
    {
        "title": "New plugin system",
        "body": "I've been kicking around the idea of extracting a bunch of the aliases that are baked into Oh My Zsh and moving them to plugins.\n\nI want to make sure we provide a useful features for people, but don't think it should continue to have such a bias towards us Ruby/Rails/OSX developers . So... I am experimenting in this branch:\n- http://github.com/robbyrussell/oh-my-zsh/commits/plugins\n\nFeedback and ideas are welcome! Aiming to get something merged into master in the next few days.\n",
        "labels": "Feature",
        "id": 43194
    },
    {
        "title": "Please add support for bzr / alternative VCS (via vcs_info?!)",
        "body": "I am new to zsh and have basically cloned your oh-my-zsh (Thanks for that!)\n\nHowever, it would be nice to have bzr support in here by default, similar to your git support.\n",
        "labels": "Feature",
        "id": 43195
    },
    {
        "title": "Rake completion works better without lib/rake_completion.zsh",
        "body": "Rake support seems to be baked directly into zsh (I'm on 4.3.10), there's no need to override it in lib/rake_completion.zsh\n\nThe default completion can autocomplete rake arguments and rake tasks even with descriptions. I think that lib/rake_completion.zsh should be deleted.\n",
        "labels": "Feature",
        "id": 43196
    },
    {
        "title": "moving upwards when selecting between available options via shift+tab",
        "body": "actually it should be possible to move upwards when browsing through suggested options with shift+tab.\nlike in a web form.\n",
        "labels": "Feature",
        "id": 43197
    },
    {
        "title": "Gem?",
        "body": "Since I first released oh-my-zsh, I've been wondering if I should bundle it up into a gem for easier installation and upgrades.\n\ndiscuss..\n",
        "labels": "Feature",
        "id": 43198
    },
    {
        "title": "Add support for auto-completion of tests/specs",
        "body": "I'm 99% sure this isn't already included...\nSee: [zsh-rails-test-spec-shortcuts](http://github.com/jasonm/zsh-rails-test-spec-shortcuts/)\n",
        "labels": "Feature",
        "id": 43199
    },
    {
        "title": "When an update occurs, display git log of commits pulled",
        "body": "Every time I get an update, I get really curious what was updated and head on over to the repo to check out the previous commits.  It would be neat to get a bit of a changelog after you update.  It could be easy as doing a git command.  I'll try to look into it, but any forkers out there are free to give an implementation a shot :).\n",
        "labels": "Feature",
        "id": 43200
    },
    {
        "title": "Git branch in title bar",
        "body": "Suggested by images\n\nNeed to make the title bar support git folder\n",
        "labels": "Feature",
        "id": 43201
    },
    {
        "title": "Check for updates feature",
        "body": "In an effort to keep people using the latest and greatest updates to Oh My Zsh, I've been toying around with the idea of having a feature that'll check for updates (similar to how an application would).  We have an upgrade_oh_my_zsh alias that'll run the upgrade.zsh script, which is basically a git pull. I'd like to come up with a non-intrusive way of letting people know that they should upgrade without requiring them to follow an RSS feed, twitter account, etc. \n\nOne idea that I had was that once a week, when opening a new terminal it'd prompt the person, \"do you want to check for new updates to Oh My Zsh?\"\n\nHow we'd accomplish this is to be determined. Anyone have any clever ideas that would avoid the following:\n- Triggering the question more than once a week (ie., when opening a new tab on the same day)\n- Not trying to upgrade when you're not online...\n- etc..?\n",
        "labels": "Feature",
        "id": 43202
    },
    {
        "title": "Keep .rake_tasks out of project directory?",
        "body": "Would it be possible to store all .rake_tasks in a folder under ~/.oh_my_zsh?  The quick and obvious fix is adding .rake_tasks to my git ignore file, but if they could get stored as ~/.oh_my_zsh/autocomplete/project_a/.rake_tasks I think it would be a much more slick implementation.\n\nI'm pretty new to zsh but I'm enjoying your project, I may try to hack this implementation if it looks easy enough.  Just a thought!\n",
        "labels": "Feature",
        "id": 43203
    },
    {
        "title": "% sign on emacs vterm",
        "body": "i have vterm installed on emacs and using zsh as default on it. but when the vterm is loaded first using zsh there is a % sign on the beginning line. but when I open another vterm , it doesn't have any problem\r\n\r\n\r\nSteps to reproduce the behavior, for example:\r\n1.install emacs\r\n2.install vterm\r\n3.install zsh\r\n4.open vterm inside emacs\r\n\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/76902855/109408998-e7810a80-79b4-11eb-8829-2dce0a8bc66e.png)\r\n\r\n\r\n\r\n\r\nI'm using artix linux and both emacs and the zsh on the latest version\r\n",
        "labels": "Enhancement",
        "id": 43204
    },
    {
        "title": "git not updating vars on path change",
        "body": "Theme: https://github.com/Samega7Cattac/s7c.zsh-theme/blob/master/s7c.zsh-theme\r\n\r\nWhen I go to a git repo it doesn't show the hash, but if I call zsh inside it shows.\r\n![](https://cdn.discordapp.com/attachments/643243750545555482/757368780577046628/unknown.png)\r\n\r\nAnd if I change the path to a different repo it doesn't update the hash\r\n![image](https://user-images.githubusercontent.com/25128554/93724175-a29eaf80-fb9c-11ea-9136-304d9b50d169.png)\r\n",
        "labels": "Enhancement",
        "id": 43205
    },
    {
        "title": "Files missing shebangs",
        "body": "Many files are missing shebangs, or have hard-coded path shebangs (e.g., `#! /bin/zsh`).\r\n\r\nShould correct shebangs of the following form be prepended to every applicable file (and hard-coded path shebangs replace with the following form)?\r\n\r\n```bash\r\n#!/usr/bin/env <language name>\r\n```\r\n\r\nWhere `<language name>` can be `zsh`, `ruby`, `bash`, etc…",
        "labels": "Enhancement",
        "id": 43206
    },
    {
        "title": "cannot change to a directory named \"...\"",
        "body": "If there is a folder named as \"...\" , I cannot change into the folder using cd .../ , rather it would convert ... to ../../ and will execute cd ../../\r\n\r\n**To Reproduce type the following commands**\r\nbash(Going to bash for creating a folder)\r\nmkdir ...(making a folder named \"...\" as zsh will be unable to make such a folder as it will convert ... to ../../)\r\nexit(moving to zsh again from bash)\r\ncd ...(it will change \"...\" to ../../ and will execute cd ../../ instead of moving to \"...\" directory)\r\n\r\n**Expected behavior**\r\nIt should search for the \"...\" folder and if it does not exit then it should convert \"...\" to \"../../\" else it should execute ...\r\n\r\n**System:**\r\n - x86_64-ubuntu-linux-gnu\r\n - zsh 5.5.1\r\n\r\n**Additional context**\r\nI know zsh has auto feature to convert ... to ../../ but it should first search for that file and if the file is not found then it should convert it making it much more convenient to use.",
        "labels": "Enhancement",
        "id": 43207
    },
    {
        "title": "Some themes use non-existing %p prompt escape",
        "body": "I've customized a theme I use for zsh and I've noticed that the original one is using `%p` prompt escape. That escape options is not documented and it doesn't appear in the latest (nor historic version) of zsh source code. However, I've counted 13 occurrences of it in themes directory.\r\n\r\n```\r\noh-my-zsh-master ➤ grep -Rl '%p' themes/                                                                                                                                            git:master\r\nthemes/jnrowe.zsh-theme\r\nthemes/trapd00r.zsh-theme\r\nthemes/fwalch.zsh-theme\r\nthemes/cloud.zsh-theme\r\nthemes/gozilla.zsh-theme\r\nthemes/jtriley.zsh-theme\r\nthemes/nanotech.zsh-theme\r\nthemes/awesomepanda.zsh-theme\r\nthemes/jbergantine.zsh-theme\r\nthemes/kafeitu.zsh-theme\r\nthemes/edvardm.zsh-theme\r\nthemes/arrow.zsh-theme\r\nthemes/linuxonly.zsh-theme\r\n\r\n```",
        "labels": "Enhancement",
        "id": 43208
    },
    {
        "title": "Symfony plugin not working with zsh-syntax-highlighting",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nHello, after the last update of all my Oh My Zsh plugins the Symfony plugin is not highlighted by zsh-syntax-highlighting. Please see my specific issue:\r\n\r\n[Aliases are not highlighted #617](https://github.com/zsh-users/zsh-syntax-highlighting/issues/617)\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Enable plugin sf\r\n2. Enable plugin zsh-syntax-highlighting\r\n3. Write `sf [...]` in the root of a Symfony project\r\n\r\n**Expected behavior**\r\nWhen using `sf` in a symfony project the alias is highlighted in green.\r\n\r\n**Screenshots or recordings**\r\n![image](https://user-images.githubusercontent.com/6429961/60159603-df41f680-97f3-11e9-972a-3d6b1e8a1981.png)\r\n\r\nIn this post, the user @phy1729 suggested to rewrite the alias:\r\n\r\n[https://github.com/zsh-users/zsh-syntax-highlighting/issues/617#issuecomment-505267091](https://github.com/zsh-users/zsh-syntax-highlighting/issues/617#issuecomment-505267091)\r\n\r\nThanks.",
        "labels": "Enhancement",
        "id": 43209
    },
    {
        "title": "autocomplete on command nmcli don't work correctly ",
        "body": "Autocomplete on command nmcli don't work correctly.\r\nWhen i'm type in zsh nmcli conn then press tab nothing happens. In bash nmcli conn[tab] will get  command `nmcli connection` \r\n\r\non zsh: \r\n~ nmcli conn[tab]\r\ndo nothing\r\n ~ nmcli conn [tab]\r\ncon  -- NetworkManager connections\r\ndev  -- devices managed by NetworkManager\r\nnm   -- NetworkManager status\r\n\r\non bash:\r\n$ nmcli conn[tab]\r\n$ nmcli connection\r\n$ nmcli conn [tab]\r\nadd      clone    delete   down     edit     export   help     import   load     modify   monitor  reload   show     up       \r\n\r\n - OS: Mint 19.1 tessa / ubuntu mate 18.04\r\n - Shell: zsh 5.4.2\r\n - Terminal emulator: mate-terminal, gnome-terminal, terminator\r\n\r\n",
        "labels": "Enhancement",
        "id": 43210
    },
    {
        "title": "Different history search behavior when vi-mode is active",
        "body": "Here is how it works when `vi-mode` is NOT active:\r\n![2019-04-28_11-46-29 (1)](https://user-images.githubusercontent.com/13592559/56868794-379f7800-69ac-11e9-872f-fe7bd2df1cee.gif)\r\nThis is my expected behavior where completion is performed based on the input (a.k.a. \"expand\" completion result)\r\n\r\nWhile `vi-mode` is active:\r\n![2019-04-28_11-49-06 (1)](https://user-images.githubusercontent.com/13592559/56868814-6e758e00-69ac-11e9-9b2f-99803a4f0867.gif)\r\nThe completion does not take the input. Instead, the completion works as if nothing was typed in.\r\n\r\nLittle bit more details if anyone is interested:\r\n1. I am using the arrow key `up` for completion\r\n2. The only difference in my `.zshrc` is under `plugins`:\r\n```diff\r\nplugins=(\r\n  git\r\n  zsh-syntax-highlighting\r\n  zsh-autosuggestions\r\n+ vi-mode\r\n)\r\n```",
        "labels": "Enhancement",
        "id": 43211
    },
    {
        "title": "After enabling a plugin, autocompletion requires manual rm of a .zcompdump file",
        "body": "Clean installation on macOS Mojave 10.14.3 (18D109). \r\n`git status` inside `~/.oh-my-zsh` shows clean.\r\n`git rev-parse HEAD` shows `52afbf77f63844abd719e565a15af2c34075de7f`\r\n\r\nNo changes to `.zshrc`.\r\n\r\nPlugin for git works fine\r\n\r\n```\r\n➜  ~ git [TAB]\r\nzsh: do you wish to see all 130 possibilities (130 lines)? \r\n```\r\n\r\nI add `docker` in `.zshrc`. `plugins=(git docker)`. I restart my Terminal (or run `zsh`) and get\r\n\r\n```\r\n➜  ~ docker [TAB]\r\nApplications/     Data/             Lota/             Public/         \r\nArchive/          Documents/        Movies/           bin/            \r\nDesktop/          Downloads/        Music/            \r\nDeveloper/        Library/          Pictures/                   \r\n```\r\n\r\nGit plugin still works. Adding some other plugins (not completion plugins I presume), like `emoji-clock` works fine.\r\n\r\nDebug log: https://pastebin.com/RikhtP3g",
        "labels": "Enhancement",
        "id": 43212
    },
    {
        "title": "Colored \"ls\" output in FreeBSD",
        "body": "Colored ls output in FreeBSD might be enabled using the same approach as OpenBSD, darwin using   the following simple diff. Shall I send a PR?\r\n```\r\ndiff --git a/lib/theme-and-appearance.zsh b/lib/theme-and-appearance.zsh\r\nindex 96f34aa8..d5907cc5 100644\r\n--- a/lib/theme-and-appearance.zsh\r\n+++ b/lib/theme-and-appearance.zsh\r\n@@ -22,6 +22,9 @@ if [[ \"$DISABLE_LS_COLORS\" != \"true\" ]]; then\r\n   elif [[ \"$OSTYPE\" == darwin* ]]; then\r\n     # this is a good alias, it works by default just using $LSCOLORS\r\n     ls -G . &>/dev/null && alias ls='ls -G'\r\n+  elif [[ \"$OSTYPE\" == freebsd* ]]; then\r\n+    # this is a good alias, it works by default just using $LSCOLORS\r\n+    ls -G . &>/dev/null && alias ls='ls -G'\r\n```",
        "labels": "Enhancement",
        "id": 43213
    },
    {
        "title": "Hard to separate `ahead` or `behind` from `git_remote_status`",
        "body": "git_remote_status => origin/develop2\r\nwe can't tell if there is a branch named `develop2` in remote\r\nor local branch `develop` ahead 2 commits to `remote/develop`",
        "labels": "Enhancement",
        "id": 43214
    },
    {
        "title": "Using vi-mode plugin conflicts with sudo plugin's EscEsc sequence",
        "body": "Any chance any of these plugins can be modified so they do not conflict with each other's functionality? \r\nFor instance, configurable binding for **sudo** plugin's **Esc Esc** sequence would be a decent solution I guess.",
        "labels": "Enhancement",
        "id": 43215
    },
    {
        "title": "composer plugin is slow on startup",
        "body": "I found that it takes more than 300ms on my mac to load composer plugin.\r\n\r\nAs a result of further examination, the composer command which is calling for path setting consumed most of the time.\r\n\r\n```zsh\r\n# Add Composer's global binaries to PATH\r\nexport PATH=$PATH:$(composer global config bin-dir --absolute 2>/dev/null)\r\n```\r\n\r\n```console\r\n% time composer global config bin-dir --absolute >/dev/null 2>&1\r\ncomposer global config bin-dir --absolute > /dev/null 2>&1  0.18s user 0.09s system 88% cpu 0.301 total\r\n```\r\n\r\nSince the output of `composer global config bin-dir --absolute` command does not change so frequently, I think that loading time can be shortened by caching.",
        "labels": "Enhancement",
        "id": 43216
    },
    {
        "title": "File complete docker-compose to yaml files as well as yml files",
        "body": "Current file completion for `docker-compose` is limited to `.yml` files\r\nIs it possible to get it to match `.yaml` files as well?\r\n\r\n`plugins/docker-compose/_docker-compose` line 390 change `-g \"*.yml\"'` to `-g \"*.{yml,yaml}\"'`\r\n\r\n",
        "labels": "Enhancement",
        "id": 43217
    },
    {
        "title": "Uninstalling ohmyzsh: must abort on invalid password",
        "body": "When I try to uninstall zch, I entered the wrong password by mistake. Because of this, the uninstall was only partially successful, however the switch back to original shell failed. I think it's better to have an option to abort the uninstall on this failure.\r\n\r\n```\r\n➜  ~ uninstall_oh_my_zsh\r\nAre you sure you want to remove Oh My Zsh? [y/N] y\r\nRemoving ~/.oh-my-zsh\r\nLooking for original zsh config...\r\nSwitching back to bash\r\nChanging shell for $$USER$$.\r\nPassword for $$USER$$: \r\nchsh: Credentials could not be verified, username or password is invalid.  Credentials could not be verified, username or password is invalid.\r\nThanks for trying out Oh My Zsh. It's been uninstalled.\r\n➜  ~ uninstall_oh_my_zsh\r\nsh: /Users/sush/.oh-my-zsh/tools/uninstall.sh: No such file or directory\r\n```",
        "labels": "Enhancement",
        "id": 43218
    },
    {
        "title": "If the directory permissions is 777, CD command is optional, the color is not friendly, too ugly, is there any way?",
        "body": "If the directory permissions is 777, CD command is optional, the color is not friendly, too ugly, is there any way?\r\n\r\n![image](https://user-images.githubusercontent.com/6280121/34867822-83fa561a-f7bc-11e7-9ed7-468a27b38843.png)\r\n",
        "labels": "Enhancement",
        "id": 43219
    },
    {
        "title": "ZDOTDIR",
        "body": "I´ve noticed that **every** plugin referencing any zsh startup file assumes, that those are located in the users home directory, disregarding the possibility of setting ```ZDOTDIR``` to something else within ```/etc/zshenv```...\r\nIn fact there are only 3 files (lib/compfix.zsh, lib/diagnostics.zsh and oh-my-zsh.sh) that use ```ZDOTDIR```, while there are 45(!!!) files (not counting any readme's) referencing ```.zshrc```",
        "labels": "Enhancement",
        "id": 43220
    },
    {
        "title": "Apply LS_COLORS to completion for mac",
        "body": "in `lib/theme-and-appearance.zsh`, I think the following code should also apply for `darwin*` if `LS_COLORS` is not empty\r\n\r\n```\r\n# Take advantage of $LS_COLORS for completion as well.\r\nzstyle ':completion:*' list-colors \"${(s.:.)LS_COLORS}\"\r\n```",
        "labels": "Enhancement",
        "id": 43221
    },
    {
        "title": "Please can you use releases or branches.",
        "body": "I have two computers and synced my dotfiles repo. \r\nWhen I was commit my repo one of my computers always behind each other bc this repo's master branch always progressing. Because this repo commits always pushing master branch.\r\n\r\nIf I follow your strategy I must push and pull process same time in two machines.\r\n\r\nI forgot the mentioned about **upgrade_oh_my_zsh** command in terminal. Auto upgrade also break my repo.\r\n\r\nFor system wide consistency please consider git release or branches strategy.\r\n\r\nIf you suggest another way to solve my problem, I am happy to hear...\r\n\r\nI am sorry for my English.\r\nBest regards.\r\n",
        "labels": "Enhancement",
        "id": 43222
    },
    {
        "title": "pass autocompletion: append slash when applicable",
        "body": "When autocompleting file system paths in Zsh, a slash (`/`) is appended automatically so you can immediately continue typing the next path component.\r\n\r\nWhen using `pass edit` with hierarchically stored items in pass, the slash has to be added manually. This reduces the amount of time/effort saved by the autocompletion feature.\r\n\r\nIt would be nice if this feature could be added. (If time permits I'll look into this myself.)\r\n\r\n(If I understand correctly, I should also mention the plugin maintainer, @sanbor here.)",
        "labels": "Enhancement",
        "id": 43223
    },
    {
        "title": "RPROMPT evaluation plugin vs. theme",
        "body": "This is more of a question then an issue. I have developed a very simple plugin that shows you on the right side ${RPROMT} whether you are in a chroot environment or not. However when I load a theme that also uses RPROMPT then my status does not show up. Is a plugin that messes with \"themeing\" even wanted? Or should this strictly be separated?\r\n\r\nFor testing I used the theme 'alanpeabody'. When I modify the RPROMPT from \r\n`RPROMPT=\"${return_code} ${git_branch} ${rvm}\"` to\r\n`RPROMPT=\"${RPROMPT} ${return_code} ${git_branch} ${rvm}\"` both informations are shown.\r\n\r\nBut what's the common style guidelines for such a case? Is it ok to have a plugin that maybe does not work if a theme already uses RPROMPT?",
        "labels": "Enhancement",
        "id": 43224
    },
    {
        "title": "man page of z plugin doesn't end up in MANPATH",
        "body": "Steps to reproduce:\r\n1. add z to plugins in .zshrc\r\n2. `man z`\r\n\r\nExpected result:\r\nmanpage of z\r\n\r\nCurrent result:\r\nNo manual entry for z\r\n\r\nProposed fix:\r\nadd/copy z.1 to somewhere in the manpath",
        "labels": "Enhancement",
        "id": 43225
    },
    {
        "title": "Up-Arrow behavior different depending on if previous program has finished or not",
        "body": "I've noticed that if I press up arrow at a prompt then I get the previous command and up again gets me the command before that.\r\n\r\nWhereas if I press up arrow *before the previous program has completed* then instead I get the previous command displayed, the cursor is at the end of the line, but oh-my-zsh is now in \"search for lines that start with ... \" mode meaning I can't press up to get the previous command.\r\n\r\nI'm sure this behavior is well known and expected but just in case you can test like this. \r\n\r\n1. Type `ls` <kbd>return</kbd>  \r\n2. Type `sleep 3` <kbd>return</kbd>\r\n3. wait 3 seconds for prompt to appear\r\n4. press <kbd>up</kbd> (should show `sleep 3`)\r\n5. press <kbd>up</kbd> again (should show `ls`)\r\n6. press <kbd>return</kbd> (to run `ls`)\r\n7. Type `sleep 3` <kbd>return</kbd> <kbd>up</kbd> (press the up arrow before the 3 seconds elapses)\r\n8. It should now be showing `sleep 3`\r\n9. Press <kbd>up</kbd> \r\n   it will still be showing `sleep 3` but it want it to be showing `ls`. Instead it is in \"search for commands that start with `sleep 3` mode instead of just `go to previous command` mode.\r\n\r\nTo make try to clear in both cases these are the steps\r\n\r\n1. `ls`<kbd>return</kbd> \r\n2. `sleep 3`<kbd>return</kbd> \r\n3. <kbd>up</kbd> \r\n4. <kbd>up</kbd> \r\n\r\nBut they end up with different results depending on if step3 happens before step2 finished or after.\r\n\r\nHow do I get oh-my-zsh to be consistent here so that a premature up arrow behaves the same as a normal up arrow? Thank you",
        "labels": "Enhancement",
        "id": 43226
    },
    {
        "title": "bundle/link with original Gradle bash/zsh completion",
        "body": "Gradle team created and maintains their own Gradle commands completion. Maybe it's worth to bundle their implementation as a plugin to oh-my-zsh. Default Gradle support does not look alive to me.\r\n\r\nRelated issue\r\nhttps://github.com/gradle/gradle-completion/issues/13",
        "labels": "Enhancement",
        "id": 43227
    },
    {
        "title": "speed up loading ",
        "body": "is is feasible to make user-configurable [confinit](https://github.com/robbyrussell/oh-my-zsh/blob/master/oh-my-zsh.sh#L77) invocation?\r\n\r\nIf I use later in `.zshrc` additional settings for completion and re-run `compinit` again - it would be nice to avoid extra costs of security check on that line (by using `compinit -C`). Otherwise compinit is called several times during zsh startup and that makes startup slower. \r\n\r\nStripping confiration down to 2 invocations of compinit allowed me to have shell start in 100ms, which is totally acceptable. 250ms feels already as a lag while opening terminal.",
        "labels": "Enhancement",
        "id": 43228
    },
    {
        "title": "nebirhos zsh-theme hostname is too long",
        "body": "Hello,\r\n\r\nIt appears for issue #6028 there was a change made to show the full hostname in the prompt.  The hostname for my machine is controlled by my work and is very long.  I think a better option for this prompt would be the short hostname.  This is populated in $SHORT_HOST.  This would solve the issue in #6028 and still work for people that have long full hostnames.\r\n\r\nThanks!",
        "labels": "Enhancement",
        "id": 43229
    },
    {
        "title": "Please declare global variables as such",
        "body": "Please use `declare -g` on variables that you want to be global, so that users of `setopt warn_create_global` can use omz without countless warnings like\r\n\r\n    /home/madduck/.zsh/oh-my-zsh/oh-my-zsh.sh:14: scalar parameter ZSH_DISABLE_COMPFIX created globally in function sourcedir\r\n\r\netc.",
        "labels": "Enhancement",
        "id": 43230
    },
    {
        "title": "gnu coreutils theme conflict",
        "body": "I've been using oh my zsh for probably about three years now, and I recently updated to sierra.  My shell config is version controlled and it installs fine, but when I installed `coreutils` via `brew` and overwrote the default OSX utils  I lost all of the zsh LS configuration.  \r\n\r\nI know that the `gdircolors` > `dircolors` conversion is the culprit, but I'm unsure of how to work around it.  Any advice?  \r\n\r\n\r\n\r\n\r\n",
        "labels": "Enhancement",
        "id": 43231
    },
    {
        "title": "Zsh installer defaults to main repo even if installed from fork sync",
        "body": "I bought a new laptop and stumbled on this when setting it up. \r\nI made a Pr to pull from origin master when [-d .git] is true which should fix this.",
        "labels": "Enhancement",
        "id": 43232
    },
    {
        "title": "git-prompt not honoring .gitmodules settings for --submodules-ignore",
        "body": "I have a dotfiles repository with a few submodules I use to include external repositories. I am not interested in the status of said submodules, so I set `ignore = all` in the proper `[submodule x]` section of the main repo's _.gitmodules_ file.\r\nHowever, the git prompt from oh-my-zsh shows the working tree as dirty, because of these lines of code in _oh-my-zsh/lib/git.zsh_ :\r\n```\r\nif [[ $POST_1_7_2_GIT -gt 0 ]]; then\r\n    FLAGS+='--ignore-submodules=dirty'\r\nfi\r\n```\r\nwhich override the aforementioned settings. Is there any specific reason for this behavior? We also lose the ability to have different settings for different submodules.",
        "labels": "Enhancement",
        "id": 43233
    },
    {
        "title": "repo plugin doesn't complete multiple projects for 'repo forall'",
        "body": "I expected 'repo forall' to assume directory name completion until I do -^I. Instead, only the first name is completed and zsh assumes option completion afterwards.",
        "labels": "Enhancement",
        "id": 43234
    },
    {
        "title": "Completion knife data bag from file doesn't complete path",
        "body": "Syntax: knife data bag from file BAGNAME PATH|DIRECTORY\n`knife data bag from file BAG <tab>`\n\nAfter pressing tab nothing happens.\nExpect path completion.\n\nSame for `knife environment from file`\n",
        "labels": "Enhancement",
        "id": 43235
    },
    {
        "title": "ssh-agent plugin symlink not usable with su on newer Linux kernels",
        "body": "Reference: http://unix.stackexchange.com/questions/253959/\n\nNewer Linux kernels (>= 3.6) support the `fs.protected_symlinks` `sysctl` and most distributions enable it by default (I checked with CentOS 7 and Fedora 23). The `fs.protected_symlinks` checks if a symlink and its _parent_ directory is owned by the same user as the one requesting access to the symlink target.\n\n> When set to \"1\" symlinks are permitted to be followed only when outside\n> a sticky world-writable directory, or when the uid of the symlink and\n> follower match, or when the directory owner matches the symlink's owner.\n\nSource: https://www.kernel.org/doc/Documentation/sysctl/fs.txt\n\n`/tmp` is owned by root while `/tmp/ssh-agent-$USER-screen` as well as the symlink target `/tmp/ssh-<random>/agent.<numbers>` is owned by `$USER`. If `zstyle :omz:plugins:ssh-agent agent-forwarding` is enabled accessing the symlink `/tmp/ssh-agent-$USER-screen` works while you're logged in normally. But as soon as you `su` `fs.protected_symlinks` kicks in and rejects access to the symlink. Accessing the symlink target still works, but that would make creating the symlink with `:omz:plugins:ssh-agent agent-forwarding` moot in the first place.\n\nI suggest the symlink is placed somewhere in `$HOME`, probably `$HOME/.ssh/ssh-agent-$USER-screen`, to allow access to the symlink on systems with `fs.protected_symlinks` enabled.\n",
        "labels": "Enhancement",
        "id": 43236
    },
    {
        "title": "Agnoster theme prompt extremly slow in mercurial",
        "body": "Code here https://github.com/robbyrussell/oh-my-zsh/blob/3d2bf227ea2b37d351ac3846627f28151e0a4480/themes/agnoster.zsh-theme#L111 runs very slow (mac yosemite)\n",
        "labels": "Enhancement",
        "id": 43237
    },
    {
        "title": "lib/theme-and-appearance.zsh sets non-appearance options",
        "body": "The `lib/theme-and-appearance.zsh` script sets some shell options that don't look related to cosmetic theme and appearance stuff. At line 22:\n\n```\n#setopt no_beep\nsetopt auto_cd\nsetopt multios\nsetopt cdablevars\n```\n\nShouldn't these be set somewhere else? They have significant semantic effects, especially `multios`.\n",
        "labels": "Enhancement",
        "id": 43238
    },
    {
        "title": "vi-mode plugin must be loaded first or it wipes out custom keybindings in other plugins",
        "body": "It would appear that if the vi-mode plugin appears in the list of plugins _after_ another plugin which defines a keybinding using `bindkey`, that keybinding is removed. Specifically, the keybindings I've observed this with are:\n\n```\nbindkey \"^[[1;6D\" insert-cycledleft\nbindkey \"^[[1;6C\" insert-cycledright\n```\n\n(from https://github.com/mcornella/oh-my-zsh/commit/383ae2d4aa1c4fa90bf35cdd6e13598dacafa5b1).\n\nThis isn't documented anywhere (I believe), and isn't obvious. Perhaps there's a way to always logically sort vi-mode to the head of the list of plugins, irrespective of where it's defined? Or emit a warning if it isn't first?\n",
        "labels": "Enhancement",
        "id": 43239
    },
    {
        "title": "% sign on emacs vterm",
        "body": "i have vterm installed on emacs and using zsh as default on it. but when the vterm is loaded first using zsh there is a % sign on the beginning line. but when I open another vterm , it doesn't have any problem\r\n\r\n\r\nSteps to reproduce the behavior, for example:\r\n1.install emacs\r\n2.install vterm\r\n3.install zsh\r\n4.open vterm inside emacs\r\n\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/76902855/109408998-e7810a80-79b4-11eb-8829-2dce0a8bc66e.png)\r\n\r\n\r\n\r\n\r\nI'm using artix linux and both emacs and the zsh on the latest version\r\n",
        "labels": "Enhancement",
        "id": 43240
    },
    {
        "title": "git not updating vars on path change",
        "body": "Theme: https://github.com/Samega7Cattac/s7c.zsh-theme/blob/master/s7c.zsh-theme\r\n\r\nWhen I go to a git repo it doesn't show the hash, but if I call zsh inside it shows.\r\n![](https://cdn.discordapp.com/attachments/643243750545555482/757368780577046628/unknown.png)\r\n\r\nAnd if I change the path to a different repo it doesn't update the hash\r\n![image](https://user-images.githubusercontent.com/25128554/93724175-a29eaf80-fb9c-11ea-9136-304d9b50d169.png)\r\n",
        "labels": "Enhancement",
        "id": 43241
    },
    {
        "title": "Files missing shebangs",
        "body": "Many files are missing shebangs, or have hard-coded path shebangs (e.g., `#! /bin/zsh`).\r\n\r\nShould correct shebangs of the following form be prepended to every applicable file (and hard-coded path shebangs replace with the following form)?\r\n\r\n```bash\r\n#!/usr/bin/env <language name>\r\n```\r\n\r\nWhere `<language name>` can be `zsh`, `ruby`, `bash`, etc…",
        "labels": "Enhancement",
        "id": 43242
    },
    {
        "title": "cannot change to a directory named \"...\"",
        "body": "If there is a folder named as \"...\" , I cannot change into the folder using cd .../ , rather it would convert ... to ../../ and will execute cd ../../\r\n\r\n**To Reproduce type the following commands**\r\nbash(Going to bash for creating a folder)\r\nmkdir ...(making a folder named \"...\" as zsh will be unable to make such a folder as it will convert ... to ../../)\r\nexit(moving to zsh again from bash)\r\ncd ...(it will change \"...\" to ../../ and will execute cd ../../ instead of moving to \"...\" directory)\r\n\r\n**Expected behavior**\r\nIt should search for the \"...\" folder and if it does not exit then it should convert \"...\" to \"../../\" else it should execute ...\r\n\r\n**System:**\r\n - x86_64-ubuntu-linux-gnu\r\n - zsh 5.5.1\r\n\r\n**Additional context**\r\nI know zsh has auto feature to convert ... to ../../ but it should first search for that file and if the file is not found then it should convert it making it much more convenient to use.",
        "labels": "Enhancement",
        "id": 43243
    },
    {
        "title": "Some themes use non-existing %p prompt escape",
        "body": "I've customized a theme I use for zsh and I've noticed that the original one is using `%p` prompt escape. That escape options is not documented and it doesn't appear in the latest (nor historic version) of zsh source code. However, I've counted 13 occurrences of it in themes directory.\r\n\r\n```\r\noh-my-zsh-master ➤ grep -Rl '%p' themes/                                                                                                                                            git:master\r\nthemes/jnrowe.zsh-theme\r\nthemes/trapd00r.zsh-theme\r\nthemes/fwalch.zsh-theme\r\nthemes/cloud.zsh-theme\r\nthemes/gozilla.zsh-theme\r\nthemes/jtriley.zsh-theme\r\nthemes/nanotech.zsh-theme\r\nthemes/awesomepanda.zsh-theme\r\nthemes/jbergantine.zsh-theme\r\nthemes/kafeitu.zsh-theme\r\nthemes/edvardm.zsh-theme\r\nthemes/arrow.zsh-theme\r\nthemes/linuxonly.zsh-theme\r\n\r\n```",
        "labels": "Enhancement",
        "id": 43244
    },
    {
        "title": "Symfony plugin not working with zsh-syntax-highlighting",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nHello, after the last update of all my Oh My Zsh plugins the Symfony plugin is not highlighted by zsh-syntax-highlighting. Please see my specific issue:\r\n\r\n[Aliases are not highlighted #617](https://github.com/zsh-users/zsh-syntax-highlighting/issues/617)\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Enable plugin sf\r\n2. Enable plugin zsh-syntax-highlighting\r\n3. Write `sf [...]` in the root of a Symfony project\r\n\r\n**Expected behavior**\r\nWhen using `sf` in a symfony project the alias is highlighted in green.\r\n\r\n**Screenshots or recordings**\r\n![image](https://user-images.githubusercontent.com/6429961/60159603-df41f680-97f3-11e9-972a-3d6b1e8a1981.png)\r\n\r\nIn this post, the user @phy1729 suggested to rewrite the alias:\r\n\r\n[https://github.com/zsh-users/zsh-syntax-highlighting/issues/617#issuecomment-505267091](https://github.com/zsh-users/zsh-syntax-highlighting/issues/617#issuecomment-505267091)\r\n\r\nThanks.",
        "labels": "Enhancement",
        "id": 43245
    },
    {
        "title": "autocomplete on command nmcli don't work correctly ",
        "body": "Autocomplete on command nmcli don't work correctly.\r\nWhen i'm type in zsh nmcli conn then press tab nothing happens. In bash nmcli conn[tab] will get  command `nmcli connection` \r\n\r\non zsh: \r\n~ nmcli conn[tab]\r\ndo nothing\r\n ~ nmcli conn [tab]\r\ncon  -- NetworkManager connections\r\ndev  -- devices managed by NetworkManager\r\nnm   -- NetworkManager status\r\n\r\non bash:\r\n$ nmcli conn[tab]\r\n$ nmcli connection\r\n$ nmcli conn [tab]\r\nadd      clone    delete   down     edit     export   help     import   load     modify   monitor  reload   show     up       \r\n\r\n - OS: Mint 19.1 tessa / ubuntu mate 18.04\r\n - Shell: zsh 5.4.2\r\n - Terminal emulator: mate-terminal, gnome-terminal, terminator\r\n\r\n",
        "labels": "Enhancement",
        "id": 43246
    },
    {
        "title": "Different history search behavior when vi-mode is active",
        "body": "Here is how it works when `vi-mode` is NOT active:\r\n![2019-04-28_11-46-29 (1)](https://user-images.githubusercontent.com/13592559/56868794-379f7800-69ac-11e9-872f-fe7bd2df1cee.gif)\r\nThis is my expected behavior where completion is performed based on the input (a.k.a. \"expand\" completion result)\r\n\r\nWhile `vi-mode` is active:\r\n![2019-04-28_11-49-06 (1)](https://user-images.githubusercontent.com/13592559/56868814-6e758e00-69ac-11e9-9b2f-99803a4f0867.gif)\r\nThe completion does not take the input. Instead, the completion works as if nothing was typed in.\r\n\r\nLittle bit more details if anyone is interested:\r\n1. I am using the arrow key `up` for completion\r\n2. The only difference in my `.zshrc` is under `plugins`:\r\n```diff\r\nplugins=(\r\n  git\r\n  zsh-syntax-highlighting\r\n  zsh-autosuggestions\r\n+ vi-mode\r\n)\r\n```",
        "labels": "Enhancement",
        "id": 43247
    },
    {
        "title": "After enabling a plugin, autocompletion requires manual rm of a .zcompdump file",
        "body": "Clean installation on macOS Mojave 10.14.3 (18D109). \r\n`git status` inside `~/.oh-my-zsh` shows clean.\r\n`git rev-parse HEAD` shows `52afbf77f63844abd719e565a15af2c34075de7f`\r\n\r\nNo changes to `.zshrc`.\r\n\r\nPlugin for git works fine\r\n\r\n```\r\n➜  ~ git [TAB]\r\nzsh: do you wish to see all 130 possibilities (130 lines)? \r\n```\r\n\r\nI add `docker` in `.zshrc`. `plugins=(git docker)`. I restart my Terminal (or run `zsh`) and get\r\n\r\n```\r\n➜  ~ docker [TAB]\r\nApplications/     Data/             Lota/             Public/         \r\nArchive/          Documents/        Movies/           bin/            \r\nDesktop/          Downloads/        Music/            \r\nDeveloper/        Library/          Pictures/                   \r\n```\r\n\r\nGit plugin still works. Adding some other plugins (not completion plugins I presume), like `emoji-clock` works fine.\r\n\r\nDebug log: https://pastebin.com/RikhtP3g",
        "labels": "Enhancement",
        "id": 43248
    },
    {
        "title": "Colored \"ls\" output in FreeBSD",
        "body": "Colored ls output in FreeBSD might be enabled using the same approach as OpenBSD, darwin using   the following simple diff. Shall I send a PR?\r\n```\r\ndiff --git a/lib/theme-and-appearance.zsh b/lib/theme-and-appearance.zsh\r\nindex 96f34aa8..d5907cc5 100644\r\n--- a/lib/theme-and-appearance.zsh\r\n+++ b/lib/theme-and-appearance.zsh\r\n@@ -22,6 +22,9 @@ if [[ \"$DISABLE_LS_COLORS\" != \"true\" ]]; then\r\n   elif [[ \"$OSTYPE\" == darwin* ]]; then\r\n     # this is a good alias, it works by default just using $LSCOLORS\r\n     ls -G . &>/dev/null && alias ls='ls -G'\r\n+  elif [[ \"$OSTYPE\" == freebsd* ]]; then\r\n+    # this is a good alias, it works by default just using $LSCOLORS\r\n+    ls -G . &>/dev/null && alias ls='ls -G'\r\n```",
        "labels": "Enhancement",
        "id": 43249
    },
    {
        "title": "Hard to separate `ahead` or `behind` from `git_remote_status`",
        "body": "git_remote_status => origin/develop2\r\nwe can't tell if there is a branch named `develop2` in remote\r\nor local branch `develop` ahead 2 commits to `remote/develop`",
        "labels": "Enhancement",
        "id": 43250
    },
    {
        "title": "Using vi-mode plugin conflicts with sudo plugin's EscEsc sequence",
        "body": "Any chance any of these plugins can be modified so they do not conflict with each other's functionality? \r\nFor instance, configurable binding for **sudo** plugin's **Esc Esc** sequence would be a decent solution I guess.",
        "labels": "Enhancement",
        "id": 43251
    },
    {
        "title": "composer plugin is slow on startup",
        "body": "I found that it takes more than 300ms on my mac to load composer plugin.\r\n\r\nAs a result of further examination, the composer command which is calling for path setting consumed most of the time.\r\n\r\n```zsh\r\n# Add Composer's global binaries to PATH\r\nexport PATH=$PATH:$(composer global config bin-dir --absolute 2>/dev/null)\r\n```\r\n\r\n```console\r\n% time composer global config bin-dir --absolute >/dev/null 2>&1\r\ncomposer global config bin-dir --absolute > /dev/null 2>&1  0.18s user 0.09s system 88% cpu 0.301 total\r\n```\r\n\r\nSince the output of `composer global config bin-dir --absolute` command does not change so frequently, I think that loading time can be shortened by caching.",
        "labels": "Enhancement",
        "id": 43252
    },
    {
        "title": "File complete docker-compose to yaml files as well as yml files",
        "body": "Current file completion for `docker-compose` is limited to `.yml` files\r\nIs it possible to get it to match `.yaml` files as well?\r\n\r\n`plugins/docker-compose/_docker-compose` line 390 change `-g \"*.yml\"'` to `-g \"*.{yml,yaml}\"'`\r\n\r\n",
        "labels": "Enhancement",
        "id": 43253
    },
    {
        "title": "Uninstalling ohmyzsh: must abort on invalid password",
        "body": "When I try to uninstall zch, I entered the wrong password by mistake. Because of this, the uninstall was only partially successful, however the switch back to original shell failed. I think it's better to have an option to abort the uninstall on this failure.\r\n\r\n```\r\n➜  ~ uninstall_oh_my_zsh\r\nAre you sure you want to remove Oh My Zsh? [y/N] y\r\nRemoving ~/.oh-my-zsh\r\nLooking for original zsh config...\r\nSwitching back to bash\r\nChanging shell for $$USER$$.\r\nPassword for $$USER$$: \r\nchsh: Credentials could not be verified, username or password is invalid.  Credentials could not be verified, username or password is invalid.\r\nThanks for trying out Oh My Zsh. It's been uninstalled.\r\n➜  ~ uninstall_oh_my_zsh\r\nsh: /Users/sush/.oh-my-zsh/tools/uninstall.sh: No such file or directory\r\n```",
        "labels": "Enhancement",
        "id": 43254
    },
    {
        "title": "If the directory permissions is 777, CD command is optional, the color is not friendly, too ugly, is there any way?",
        "body": "If the directory permissions is 777, CD command is optional, the color is not friendly, too ugly, is there any way?\r\n\r\n![image](https://user-images.githubusercontent.com/6280121/34867822-83fa561a-f7bc-11e7-9ed7-468a27b38843.png)\r\n",
        "labels": "Enhancement",
        "id": 43255
    },
    {
        "title": "ZDOTDIR",
        "body": "I´ve noticed that **every** plugin referencing any zsh startup file assumes, that those are located in the users home directory, disregarding the possibility of setting ```ZDOTDIR``` to something else within ```/etc/zshenv```...\r\nIn fact there are only 3 files (lib/compfix.zsh, lib/diagnostics.zsh and oh-my-zsh.sh) that use ```ZDOTDIR```, while there are 45(!!!) files (not counting any readme's) referencing ```.zshrc```",
        "labels": "Enhancement",
        "id": 43256
    },
    {
        "title": "Apply LS_COLORS to completion for mac",
        "body": "in `lib/theme-and-appearance.zsh`, I think the following code should also apply for `darwin*` if `LS_COLORS` is not empty\r\n\r\n```\r\n# Take advantage of $LS_COLORS for completion as well.\r\nzstyle ':completion:*' list-colors \"${(s.:.)LS_COLORS}\"\r\n```",
        "labels": "Enhancement",
        "id": 43257
    },
    {
        "title": "Please can you use releases or branches.",
        "body": "I have two computers and synced my dotfiles repo. \r\nWhen I was commit my repo one of my computers always behind each other bc this repo's master branch always progressing. Because this repo commits always pushing master branch.\r\n\r\nIf I follow your strategy I must push and pull process same time in two machines.\r\n\r\nI forgot the mentioned about **upgrade_oh_my_zsh** command in terminal. Auto upgrade also break my repo.\r\n\r\nFor system wide consistency please consider git release or branches strategy.\r\n\r\nIf you suggest another way to solve my problem, I am happy to hear...\r\n\r\nI am sorry for my English.\r\nBest regards.\r\n",
        "labels": "Enhancement",
        "id": 43258
    },
    {
        "title": "pass autocompletion: append slash when applicable",
        "body": "When autocompleting file system paths in Zsh, a slash (`/`) is appended automatically so you can immediately continue typing the next path component.\r\n\r\nWhen using `pass edit` with hierarchically stored items in pass, the slash has to be added manually. This reduces the amount of time/effort saved by the autocompletion feature.\r\n\r\nIt would be nice if this feature could be added. (If time permits I'll look into this myself.)\r\n\r\n(If I understand correctly, I should also mention the plugin maintainer, @sanbor here.)",
        "labels": "Enhancement",
        "id": 43259
    },
    {
        "title": "RPROMPT evaluation plugin vs. theme",
        "body": "This is more of a question then an issue. I have developed a very simple plugin that shows you on the right side ${RPROMT} whether you are in a chroot environment or not. However when I load a theme that also uses RPROMPT then my status does not show up. Is a plugin that messes with \"themeing\" even wanted? Or should this strictly be separated?\r\n\r\nFor testing I used the theme 'alanpeabody'. When I modify the RPROMPT from \r\n`RPROMPT=\"${return_code} ${git_branch} ${rvm}\"` to\r\n`RPROMPT=\"${RPROMPT} ${return_code} ${git_branch} ${rvm}\"` both informations are shown.\r\n\r\nBut what's the common style guidelines for such a case? Is it ok to have a plugin that maybe does not work if a theme already uses RPROMPT?",
        "labels": "Enhancement",
        "id": 43260
    },
    {
        "title": "man page of z plugin doesn't end up in MANPATH",
        "body": "Steps to reproduce:\r\n1. add z to plugins in .zshrc\r\n2. `man z`\r\n\r\nExpected result:\r\nmanpage of z\r\n\r\nCurrent result:\r\nNo manual entry for z\r\n\r\nProposed fix:\r\nadd/copy z.1 to somewhere in the manpath",
        "labels": "Enhancement",
        "id": 43261
    },
    {
        "title": "Up-Arrow behavior different depending on if previous program has finished or not",
        "body": "I've noticed that if I press up arrow at a prompt then I get the previous command and up again gets me the command before that.\r\n\r\nWhereas if I press up arrow *before the previous program has completed* then instead I get the previous command displayed, the cursor is at the end of the line, but oh-my-zsh is now in \"search for lines that start with ... \" mode meaning I can't press up to get the previous command.\r\n\r\nI'm sure this behavior is well known and expected but just in case you can test like this. \r\n\r\n1. Type `ls` <kbd>return</kbd>  \r\n2. Type `sleep 3` <kbd>return</kbd>\r\n3. wait 3 seconds for prompt to appear\r\n4. press <kbd>up</kbd> (should show `sleep 3`)\r\n5. press <kbd>up</kbd> again (should show `ls`)\r\n6. press <kbd>return</kbd> (to run `ls`)\r\n7. Type `sleep 3` <kbd>return</kbd> <kbd>up</kbd> (press the up arrow before the 3 seconds elapses)\r\n8. It should now be showing `sleep 3`\r\n9. Press <kbd>up</kbd> \r\n   it will still be showing `sleep 3` but it want it to be showing `ls`. Instead it is in \"search for commands that start with `sleep 3` mode instead of just `go to previous command` mode.\r\n\r\nTo make try to clear in both cases these are the steps\r\n\r\n1. `ls`<kbd>return</kbd> \r\n2. `sleep 3`<kbd>return</kbd> \r\n3. <kbd>up</kbd> \r\n4. <kbd>up</kbd> \r\n\r\nBut they end up with different results depending on if step3 happens before step2 finished or after.\r\n\r\nHow do I get oh-my-zsh to be consistent here so that a premature up arrow behaves the same as a normal up arrow? Thank you",
        "labels": "Enhancement",
        "id": 43262
    },
    {
        "title": "bundle/link with original Gradle bash/zsh completion",
        "body": "Gradle team created and maintains their own Gradle commands completion. Maybe it's worth to bundle their implementation as a plugin to oh-my-zsh. Default Gradle support does not look alive to me.\r\n\r\nRelated issue\r\nhttps://github.com/gradle/gradle-completion/issues/13",
        "labels": "Enhancement",
        "id": 43263
    },
    {
        "title": "speed up loading ",
        "body": "is is feasible to make user-configurable [confinit](https://github.com/robbyrussell/oh-my-zsh/blob/master/oh-my-zsh.sh#L77) invocation?\r\n\r\nIf I use later in `.zshrc` additional settings for completion and re-run `compinit` again - it would be nice to avoid extra costs of security check on that line (by using `compinit -C`). Otherwise compinit is called several times during zsh startup and that makes startup slower. \r\n\r\nStripping confiration down to 2 invocations of compinit allowed me to have shell start in 100ms, which is totally acceptable. 250ms feels already as a lag while opening terminal.",
        "labels": "Enhancement",
        "id": 43264
    },
    {
        "title": "nebirhos zsh-theme hostname is too long",
        "body": "Hello,\r\n\r\nIt appears for issue #6028 there was a change made to show the full hostname in the prompt.  The hostname for my machine is controlled by my work and is very long.  I think a better option for this prompt would be the short hostname.  This is populated in $SHORT_HOST.  This would solve the issue in #6028 and still work for people that have long full hostnames.\r\n\r\nThanks!",
        "labels": "Enhancement",
        "id": 43265
    },
    {
        "title": "Please declare global variables as such",
        "body": "Please use `declare -g` on variables that you want to be global, so that users of `setopt warn_create_global` can use omz without countless warnings like\r\n\r\n    /home/madduck/.zsh/oh-my-zsh/oh-my-zsh.sh:14: scalar parameter ZSH_DISABLE_COMPFIX created globally in function sourcedir\r\n\r\netc.",
        "labels": "Enhancement",
        "id": 43266
    },
    {
        "title": "gnu coreutils theme conflict",
        "body": "I've been using oh my zsh for probably about three years now, and I recently updated to sierra.  My shell config is version controlled and it installs fine, but when I installed `coreutils` via `brew` and overwrote the default OSX utils  I lost all of the zsh LS configuration.  \r\n\r\nI know that the `gdircolors` > `dircolors` conversion is the culprit, but I'm unsure of how to work around it.  Any advice?  \r\n\r\n\r\n\r\n\r\n",
        "labels": "Enhancement",
        "id": 43267
    },
    {
        "title": "Zsh installer defaults to main repo even if installed from fork sync",
        "body": "I bought a new laptop and stumbled on this when setting it up. \r\nI made a Pr to pull from origin master when [-d .git] is true which should fix this.",
        "labels": "Enhancement",
        "id": 43268
    },
    {
        "title": "git-prompt not honoring .gitmodules settings for --submodules-ignore",
        "body": "I have a dotfiles repository with a few submodules I use to include external repositories. I am not interested in the status of said submodules, so I set `ignore = all` in the proper `[submodule x]` section of the main repo's _.gitmodules_ file.\r\nHowever, the git prompt from oh-my-zsh shows the working tree as dirty, because of these lines of code in _oh-my-zsh/lib/git.zsh_ :\r\n```\r\nif [[ $POST_1_7_2_GIT -gt 0 ]]; then\r\n    FLAGS+='--ignore-submodules=dirty'\r\nfi\r\n```\r\nwhich override the aforementioned settings. Is there any specific reason for this behavior? We also lose the ability to have different settings for different submodules.",
        "labels": "Enhancement",
        "id": 43269
    },
    {
        "title": "repo plugin doesn't complete multiple projects for 'repo forall'",
        "body": "I expected 'repo forall' to assume directory name completion until I do -^I. Instead, only the first name is completed and zsh assumes option completion afterwards.",
        "labels": "Enhancement",
        "id": 43270
    },
    {
        "title": "Completion knife data bag from file doesn't complete path",
        "body": "Syntax: knife data bag from file BAGNAME PATH|DIRECTORY\n`knife data bag from file BAG <tab>`\n\nAfter pressing tab nothing happens.\nExpect path completion.\n\nSame for `knife environment from file`\n",
        "labels": "Enhancement",
        "id": 43271
    },
    {
        "title": "ssh-agent plugin symlink not usable with su on newer Linux kernels",
        "body": "Reference: http://unix.stackexchange.com/questions/253959/\n\nNewer Linux kernels (>= 3.6) support the `fs.protected_symlinks` `sysctl` and most distributions enable it by default (I checked with CentOS 7 and Fedora 23). The `fs.protected_symlinks` checks if a symlink and its _parent_ directory is owned by the same user as the one requesting access to the symlink target.\n\n> When set to \"1\" symlinks are permitted to be followed only when outside\n> a sticky world-writable directory, or when the uid of the symlink and\n> follower match, or when the directory owner matches the symlink's owner.\n\nSource: https://www.kernel.org/doc/Documentation/sysctl/fs.txt\n\n`/tmp` is owned by root while `/tmp/ssh-agent-$USER-screen` as well as the symlink target `/tmp/ssh-<random>/agent.<numbers>` is owned by `$USER`. If `zstyle :omz:plugins:ssh-agent agent-forwarding` is enabled accessing the symlink `/tmp/ssh-agent-$USER-screen` works while you're logged in normally. But as soon as you `su` `fs.protected_symlinks` kicks in and rejects access to the symlink. Accessing the symlink target still works, but that would make creating the symlink with `:omz:plugins:ssh-agent agent-forwarding` moot in the first place.\n\nI suggest the symlink is placed somewhere in `$HOME`, probably `$HOME/.ssh/ssh-agent-$USER-screen`, to allow access to the symlink on systems with `fs.protected_symlinks` enabled.\n",
        "labels": "Enhancement",
        "id": 43272
    },
    {
        "title": "Agnoster theme prompt extremly slow in mercurial",
        "body": "Code here https://github.com/robbyrussell/oh-my-zsh/blob/3d2bf227ea2b37d351ac3846627f28151e0a4480/themes/agnoster.zsh-theme#L111 runs very slow (mac yosemite)\n",
        "labels": "Enhancement",
        "id": 43273
    },
    {
        "title": "lib/theme-and-appearance.zsh sets non-appearance options",
        "body": "The `lib/theme-and-appearance.zsh` script sets some shell options that don't look related to cosmetic theme and appearance stuff. At line 22:\n\n```\n#setopt no_beep\nsetopt auto_cd\nsetopt multios\nsetopt cdablevars\n```\n\nShouldn't these be set somewhere else? They have significant semantic effects, especially `multios`.\n",
        "labels": "Enhancement",
        "id": 43274
    },
    {
        "title": "vi-mode plugin must be loaded first or it wipes out custom keybindings in other plugins",
        "body": "It would appear that if the vi-mode plugin appears in the list of plugins _after_ another plugin which defines a keybinding using `bindkey`, that keybinding is removed. Specifically, the keybindings I've observed this with are:\n\n```\nbindkey \"^[[1;6D\" insert-cycledleft\nbindkey \"^[[1;6C\" insert-cycledright\n```\n\n(from https://github.com/mcornella/oh-my-zsh/commit/383ae2d4aa1c4fa90bf35cdd6e13598dacafa5b1).\n\nThis isn't documented anywhere (I believe), and isn't obvious. Perhaps there's a way to always logically sort vi-mode to the head of the list of plugins, irrespective of where it's defined? Or emit a warning if it isn't first?\n",
        "labels": "Enhancement",
        "id": 43275
    },
    {
        "title": "OMZ still trying to load after being uninstalled",
        "body": "Possibly related to #9629\r\n\r\n<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n\r\n```\r\n➜  ~ git:(master) uninstall_oh_my_zsh\r\nAre you sure you want to remove Oh My Zsh? [y/N] y\r\nRemoving ~/.oh-my-zsh\r\nLooking for original zsh config...\r\nSwitching your shell back to '/bin/bash':\r\nChanging shell for justin.collum.\r\nPassword for justin.collum:\r\nchsh: no changes made\r\nThanks for trying out Oh My Zsh. It's been uninstalled.\r\nDon't forget to restart your terminal!\r\n```\r\nSo I restart my terminal and get: \r\n\r\n```\r\n/Users/justin.collum/.zshrc:source:73: no such file or directory: /Users/justin.collum/.oh-my-zsh/oh-my-zsh.sh\r\nbashcompinit:75: parse error near `('\r\ncompinit:141: parse error: condition expected: $1\r\n/Users/justin.collum/.nvm/bash_completion:95: command not found: complete\r\njustin.collum@m-jcollum cistern % which go\r\ngo not found\r\njustin.collum@m-jcollum cistern %\r\n\r\n```\r\n\r\n` /Users/justin.collum/.oh-my-zsh/oh-my-zsh.sh` should not be loading after an uninstall. \r\n\r\n**Expected behavior**\r\nNormal zshell should be running. \r\n\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n```\r\n zsh --version\r\nzsh 5.7.1 (x86_64-apple-darwin19.0)\r\n```\r\n - Terminal emulator: iTerm2\r\n",
        "labels": "Bug",
        "id": 43276
    },
    {
        "title": "/usr/local/Cellar/fortune/9708/share/games/fortunes/off: No such file or directory",
        "body": "I experienced the issue raised [here](https://github.com/ohmyzsh/ohmyzsh/issues/3271), which prompted me to `brew install fortune`.\r\n\r\nA new error occurs now, presumably because `brew` [has removed offensive quotes](https://github.com/Homebrew/brew/issues/8811):\r\n\r\n```/usr/local/Cellar/fortune/9708/share/games/fortunes/off: No such file or directory```\r\n\r\nHow can one edit the `adben` to ignore missing quotes?\r\n\r\nReproduction steps (on Mac):\r\n1. Set theme to `adben`\r\n2. Experience error `ps1_fortune:2: command not found: fortune`\r\n3. `brew install fortune`\r\n4. Error `/usr/local/Cellar/fortune/9708/share/games/fortunes/off: No such file or directory`\r\n\r\nIdeal scenario:\r\n1. Set theme to `adben`\r\n2. Experience no errors",
        "labels": "Bug",
        "id": 43277
    },
    {
        "title": "uninstall_oh_my_zsh did not revert to previous zsh configuration",
        "body": "**Describe the bug**\r\noh-my-zsh did not correctly uninstall.  (or maybe, never correctly installed with a backup of .zshrc) It left behind the oh-my-zsh .zshrc file.  This caused an error as it tried to load an oh-my-zsh file that no longer existed.  No .zshrc.orig was found after uninstall.\r\n\r\n**To Reproduce**\r\nInstalled using curl\r\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\r\n\r\nuninstalled using uninstall_oh_my_zsh\r\n\r\n**Expected behavior**\r\nreturn to normal behavior of mac zsh.  restore original .zshrc file\r\n\r\n**Screenshots and/or Recordings**\r\nNone\r\n\r\n**Self Check**\r\n\r\n- Have you tried reaching out on the [Discord server](https://discord.gg/ohmyzsh)?   Not a member\r\n\r\n- Also searching existing [GitHub Issues](https://github.com/ohmyzsh/ohmyzsh/issues?q=) might help you get quicker support.  Searched\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: Mac OS Catalina 10.15.7\r\n - Latest ohmyzsh update?: Yes.  Installed 2 days ago\r\n - ZSH Version:  Unknown.  Uninstalled\r\n - Terminal emulator: Mac OS Terminal Version 2.10 (433)\r\n\r\n**Additional context**\r\nWas running Agnoster at time of uninstall\r\n",
        "labels": "Bug",
        "id": 43278
    },
    {
        "title": "vi-mode error when copy/paste",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\nWhen using vi-mode and yanking a line, printing one, or doing anything related buffers, an error message is printed:\r\n`clipcopy: Platform freebsd12.1 not supported or xclip/xsel not installed`. Works fine within tmux though. As it has been working in the past, I've been able to pinpoint the commit that made the problem appear: 98762faa0762e1f0ede05149c1f6b3a9db93e074\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Enable vi-mode\r\n2. Change mode by pressing ESC\r\n3. Type yy (yank line)\r\n\r\n**Expected behavior**\r\nIn case of yy the line should be stored in the default buffer\r\n\r\n**Recording**\r\n[![asciicast](https://asciinema.org/a/pWGkyQ42gOhKQKXESFLUSgvsU.svg)](https://asciinema.org/a/pWGkyQ42gOhKQKXESFLUSgvsU)\r\n\r\n\r\n - OS / Distro: FreeBSD 12.2\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: 5.8\r\n - Terminal emulator: MacOS Terminal\r\n",
        "labels": "Bug",
        "id": 43279
    },
    {
        "title": "Battery plugin shows incorrect values when you have two batteries in Linux",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nThe battery plugin shows a value like\r\n```\r\nryan@magellan [07:47:34] [~]  10098%\r\n-> %\r\n```\r\n\r\n**To Reproduce**\r\nHave a laptop with two or more batteries running linux, such as my ThinkPad T580.  Or emulate it with the following output from the acpi program.\r\n\r\n```\r\n-> % acpi\r\nBattery 0: Full, 100%\r\nBattery 1: Discharging, 97%, 03:28:57 remaining\r\nryan@magellan [07:49:34] [~]  10097%\r\n```\r\n\r\n**Expected behavior**\r\nSomething sane, but not reporting 10,000% battery level :)\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - Debian Bullseye/Testing\r\n - ZSH Version: 5.8\r\n - Terminal emulator: Konsole (KDE), but it's obviously present in every other console including xterm",
        "labels": "Bug",
        "id": 43280
    },
    {
        "title": "vi-mode: `vv` doesn't open editor with low `$KEYTIMEOUT` value",
        "body": "**Describe the bug**\r\nAfter the latest update where new sequence to open editor as line editor (double vv) is introduced, editor doesn't open. \r\n\r\n**To Reproduce**\r\nInput command, enter vi-mode, press **vv**.\r\n\r\n**Expected behavior**\r\n$EDITOR opens to edit the line instead of editing inline.\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: macOS\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: 5.8\r\n - Terminal emulator: Alacritty + iTerm2\r\n",
        "labels": "Bug",
        "id": 43281
    },
    {
        "title": "set -a brokes paste with zsh",
        "body": "\r\n**Describe the bug**\r\nPaste is not working when using `set -a`\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. In Terminal: `set -a`\r\n2. Try Paste something\r\n3. It will overwrite the whole line and double paste the content\r\n\r\n**Expected behavior**\r\nOnly paste the content once without overwrite the already written line \r\n\r\n**Screenshots and/or Recordings**\r\n![example](https://i.imgur.com/5kR0pKP.png)\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: Fedora 33\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: 5.8\r\n - Terminal emulator: Tilix, guake\r\n\r\n**Additional context**\r\nTested with no plugins\r\n",
        "labels": "Bug",
        "id": 43282
    },
    {
        "title": "A permission problem of \"omz update\"",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nWhen I update ohmyzsh in my remote server, there is always a permision problem and then the ssh connection is closed.\r\n\r\nFortunately, I open a new terminal and find that ohmyzsh is up-to-date and there seems to be no more problems except that permission problem.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. run `omz update`\r\n\r\n**Expected behavior**\r\nUpdate ohmyzsh sucessfully.\r\n\r\n**Screenshots and/or Recordings**\r\n```\r\nUpdating Oh My Zsh\r\nremote: Enumerating objects: 15, done.\r\nremote: Counting objects: 100% (15/15), done.\r\nremote: Compressing objects: 100% (2/2), done.\r\nremote: Total 9 (delta 7), reused 9 (delta 7), pack-reused 0\r\nUnpacking objects: 100% (9/9), done.\r\n来自 https://github.com/ohmyzsh/ohmyzsh\r\n * branch            master     -> FETCH_HEAD\r\n plugins/genpass/genpass-xkcd | 2 +-\r\n tools/upgrade.sh             | 8 ++------\r\n 2 files changed, 3 insertions(+), 7 deletions(-)\r\n首先，重置头指针以便在上面重放您的工作...\r\n快进 master 至 4b2431e8b1c08a2dc14fe31bf07a5e5f08eaa87e。\r\nYou can see the changelog again with `omz changelog`\r\n         __                                     __\r\n  ____  / /_     ____ ___  __  __   ____  _____/ /_\r\n / __ \\/ __ \\   / __ `__ \\/ / / /  /_  / / ___/ __ \\\r\n/ /_/ / / / /  / / / / / / /_/ /    / /_(__  ) / / /\r\n\\____/_/ /_/  /_/ /_/ /_/\\__, /    /___/____/_/ /_/\r\n                        /____/\r\n\r\nHooray! Oh My Zsh has been updated!\r\nTo keep up with the latest news and updates, follow us on Twitter: https://twitter.com/ohmyzsh\r\nWant to get involved in the community? Join our Discord: https://discord.gg/ohmyzsh\r\nGet your Oh My Zsh swag at: https://shop.planetargon.com/collections/oh-my-zsh\r\n_omz::update:18: 权限不够:\r\nConnection to 10.xxx.xxx.xxx closed.\r\n\r\n[已退出进程，代码为 126]\r\n```\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: CentOS Linux\r\n - Latest ohmyzsh update?: Yes. Last time I updated ohmyzsh is about a week ago and I update it today (2020/12/30). There is always a permission problem.\r\n - ZSH Version: zsh 5.0.2 (x86_64-redhat-linux-gnu)\r\n\r\n**Additional context**\r\nTheme: ys\r\nplugins: tmux conda-zsh-completion zsh-syntax-highlighting\r\ngit version: 1.8.3.1\r\nLinux version: `Linux xxx 3.10.0-957.5.1.el7.x86_64 #1 SMP Fri Feb 1 14:54:57 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux`\r\nCentOS release: CentOS Linux release 7.6.1810 (Core)",
        "labels": "Bug",
        "id": 43283
    },
    {
        "title": "genpass-zkcd is not working for me.",
        "body": "Genpass works great except for my favorite one: genpass-xkcd\r\n\r\n**Describe the bug**\r\n`➜  ~ genpass-xkcd`\r\n`genpass-xkcd:46: unknown function: log2`\r\n`➜  ~ genpass-xkcd 3`\r\n`genpass-xkcd:46: unknown function: log2`\r\n`➜  ~ genpass-monkey`\r\n`1fw6q52acbmqhjwcf5t05qdcvn`\r\n`➜  ~ genpass-apple`\r\n`gecwox-wyVpem-qivwar-kompat-hyqtox-kysmu2`\r\n\r\n**To Reproduce**\r\n\r\n1. Added plugin to my ~/.zshrc  here\r\n`plugins=(git genpass)`\r\n2. Run command 'genpass-xkcd '\r\n3. Error is `unknown function: log2`\r\n\r\n\r\n\r\n**Desktop:**\r\n\r\n -  Linux Mint 19.2 Cinnamon\r\n\r\n",
        "labels": "Bug",
        "id": 43284
    },
    {
        "title": "Support for entering numbers via numpad",
        "body": "\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nFor sure the git autocomplete stuff, but from what I understand it's a zsh problem in general. \r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nI try to type my branch names in git using the numpad on my Apple magic keyboard, but it doesn't except the numbers from there\r\n\r\n**Describe the solution you'd like**\r\nUse my numpad to type in command line\r\n\r\n**Describe alternatives you've considered**\r\nI've seen this [post](https://superuser.com/questions/742171/zsh-z-shell-numpad-numlock-doesnt-work)\r\n\r\n**Related Issues**\r\nHaven't looked, but know it's a reproducible and felt problem\r\n",
        "labels": "Bug",
        "id": 43285
    },
    {
        "title": "/proc/self/fd/12 is not a regular file (use -f to see it)",
        "body": "##### 1. Look for similar issues already posted (including closed ones)\r\nNone found\r\n##### 2. Include as much relevant information as possible\r\nOn latest `omz update`, the following output was generated -\r\n```\r\n❯ omz update\r\nUpdating Oh My Zsh\r\nremote: Enumerating objects: 155, done.\r\nremote: Counting objects: 100% (143/143), done.\r\nremote: Compressing objects: 100% (61/61), done.\r\nremote: Total 98 (delta 68), reused 67 (delta 37), pack-reused 0\r\nUnpacking objects: 100% (98/98), 17.19 KiB | 374.00 KiB/s, done.\r\nFrom https://github.com/ohmyzsh/ohmyzsh\r\n * branch            master     -> FETCH_HEAD\r\n   3f8af04..2826581  master     -> origin/master\r\n .github/CODEOWNERS                                     |   1 +\r\n lib/cli.zsh                                            |  10 +++++--\r\n lib/functions.zsh                                      |  19 ++-----------\r\n lib/git.zsh                                            |  23 ++++++++++++----\r\n plugins/archlinux/archlinux.plugin.zsh                 |  18 ++++++-------\r\n plugins/command-not-found/command-not-found.plugin.zsh |  24 +++++++++++++----\r\n plugins/common-aliases/README.md                       |   4 ++-\r\n plugins/common-aliases/common-aliases.plugin.zsh       |   2 +-\r\n plugins/git-prompt/gitstatus.py                        |   4 +--\r\n plugins/git/git.plugin.zsh                             |   1 +\r\n plugins/grc/README.md                                  |  37 ++++++++++++++++++++++++++\r\n plugins/grc/grc.plugin.zsh                             |  44 ++++++++++++++++++++++++++++++\r\n plugins/hanami/README.md                               |  63 ++++++++++++++++++++++++++-----------------\r\n plugins/hanami/hanami.plugin.zsh                       |   6 ++---\r\n plugins/wp-cli/README.md                               | 202 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++--------------------------------------------------------------------\r\n plugins/wp-cli/wp-cli.plugin.zsh                       |  51 +++++------------------------------\r\n tools/changelog.sh                                     |  26 +++++++++---------\r\n tools/check_for_upgrade.sh                             |   2 +-\r\n tools/upgrade.sh                                       |  10 ++++---\r\n 19 files changed, 314 insertions(+), 233 deletions(-)\r\n create mode 100644 plugins/grc/README.md\r\n create mode 100644 plugins/grc/grc.plugin.zsh\r\nSuccessfully rebased and updated refs/heads/master.\r\n/proc/self/fd/12 is not a regular file (use -f to see it)\r\n         __                                     __   \r\n  ____  / /_     ____ ___  __  __   ____  _____/ /_  \r\n / __ \\/ __ \\   / __ `__ \\/ / / /  /_  / / ___/ __ \\ \r\n/ /_/ / / / /  / / / / / / /_/ /    / /_(__  ) / / / \r\n\\____/_/ /_/  /_/ /_/ /_/\\__, /    /___/____/_/ /_/  \r\n                        /____/                       \r\n\r\nHooray! Oh My Zsh has been updated!\r\nTo keep up with the latest news and updates, follow us on Twitter: https://twitter.com/ohmyzsh\r\nWant to get involved in the community? Join our Discord: https://discord.gg/ohmyzsh\r\nGet your Oh My Zsh swag at: https://shop.planetargon.com/collections/oh-my-zsh\r\n```\r\nNotice the line just above the ASCII logo -\r\n```\r\n/proc/self/fd/12 is not a regular file (use -f to see it)\r\n```\r\nI have got no idea what/why it was shown.\r\nAny ideas/explanations?\r\n\r\n##### 3. Try to make sure the issue is due to Oh My Zsh\r\n`omz update` is of ohmyzsh :upside_down_face: ",
        "labels": "Bug",
        "id": 43286
    },
    {
        "title": "Don't pipe changelog.sh output through less if \"--unattended\" was used with \"omz update\".",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n\r\n`changelog.sh` can pipe output through `less` requiring user intervention to close.  This is unexpected if `omz update` was called with the `--unattended` option.\r\n\r\n**To Reproduce**\r\n\r\nOf course only triggers if any updates were pulled down, so I need to run a `git reset` first.\r\n\r\n1. `git reset HEAD^ --hard`\r\n2. `omz update --unattended` \r\n\r\n**Expected behavior**\r\n\r\nFor `--unattended` I'd expect `less` to not be used, or perhaps no display of the changelog.\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: **macOS 10.14.6**\r\n - Latest ohmyzsh update?: **Yes**\r\n - ZSH Version: **5.8 (via Homebrew)**\r\n - Terminal emulator: **iTerm2**\r\n\r\n**Additional context**\r\n\r\nPerhaps not context for this actual bug, but note that I had to upgrade ZSH in order for the `changelog.sh` script to even work.  The default version of ZSH in macOS 10.14.6 (version 5.3) produces the error `./changelog.sh:10: no matches found: [build]=Build system`.  As mentioned, I fixed this by upgrading my installed version of ZSH.",
        "labels": "Bug",
        "id": 43287
    },
    {
        "title": "Various bugs in magic-enter plugin",
        "body": "**Describe the bug**\r\nWhen using magic-enter together with zsh-autosuggestions, a displayed executed command contains an autosuggestion part, as if the suggestion was accepted and run, even if that's not the case. \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Start with the following:\r\n```\r\n$ cd \"$(mktemp -d)\"\r\n$ ZDOTDIR=$PWD HOME=$PWD zsh -f\r\n% source path/to/ohmyzsh/plugins/magic-enter/magic-enter.plugin.zsh; source path/to/zsh-autosuggestions/zsh-autosuggestions.plugin.zsh\r\n% touch foo\r\n% ls foo\r\nfoo\r\n% ls \r\n```\r\n2. On the last line, make sure you press Space after ls, so you get the suggestion foo.\r\n3. Then, press Enter.\r\n\r\n**Expected behavior**\r\nThe suggestion should be cleared, as it is without `magic-enter`.\r\n\r\n**Actual Result** \r\nThe suggestion remains.\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: macOS\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: 5.6\r\n - Terminal emulator: iTerm2\r\n\r\n**Related**\r\nhttps://github.com/marlonrichert/zsh-autocomplete/issues/131",
        "labels": "Bug",
        "id": 43288
    },
    {
        "title": "git-auto-fetch lags while get fetch is performed",
        "body": "Feature request is related to `ohmyzsh/plugins/git-auto-fetch/`. I observe that it makes terminal freeze for a second when fetching is performed.\r\n\r\nHere https://github.com/ohmyzsh/ohmyzsh/blob/26df8a22741ea4bb5264233344e42ce900fd26b6/plugins/git-auto-fetch/git-auto-fetch.plugin.zsh#L9\r\n\r\n`git fetch 2>/dev/null` operation is slow and makes terminal to halt or freeze for a second while its on process.\r\n\r\nInstead following approach might help to remove the lag:\r\n\r\nUsing `(&>/dev/null git fetch &)` will let `git fetch` to run on the background and does not let terminal shell to be freeze for a second.\r\n\r\n```bash\r\nfunction git-fetch-all {\r\n    (`command git rev-parse --is-inside-work-tree 2>/dev/null` &&\r\n         dir=`command git rev-parse --git-dir` &&\r\n         [[ ! -f $dir/NO_AUTO_FETCH ]] &&\r\n         (( `date +%s` - `date -r $dir/FETCH_LOG +%s 2>/dev/null || echo 0` > $GIT_AUTO_FETCH_INTERVAL )) &&\r\n         GIT_SSH_COMMAND=\"command ssh -o BatchMode=yes\" command \\\r\n                        ~/git_zsh_fetch.sh )\r\n}\r\n```\r\n\r\n`git_zsh_fetch.sh` :\r\n\r\n```bash\r\n#!/bin/bash\r\n\r\n(&>/dev/null git fetch --all &)\r\n(&>/dev/null git pull --rebase --autostash &)\r\n```",
        "labels": "Bug",
        "id": 43289
    },
    {
        "title": "git_prompt_status broken because of regexp",
        "body": "https://github.com/ohmyzsh/ohmyzsh/blob/23760228908d14a4644718869d5ebfb7b0dde6a7/lib/git.zsh#L229\r\n\r\nThis regexp does not seem to match, at least on my MacOS. \r\nIf I change it to `local status_regex=\"$status_prefix\"` then it works again.\r\n\r\n",
        "labels": "Bug",
        "id": 43290
    },
    {
        "title": "Docker plugin autocompletion 'bad math expression: empty string'",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nDocker plugin autocompletion is broken. It shows me these errors:\r\n\r\n```\r\n❯ docker inspect\r\n__docker_plugins:27: bad math expression: empty string\r\n__docker_plugins:27: bad math expression: empty string\r\n__docker_plugins:27: bad math expression: empty string\r\n__docker_plugins:27: bad math expression: empty string\r\n__docker_plugins:27: bad math expression: empty string\r\n__docker_plugins:27: bad math expression: empty string\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable plugin `docker`\r\n2. Run command 'docker inspect' and try to complete it with pressing `TAB`\r\n3. See error\r\n\r\n**Expected behavior**\r\nNo errors, completion results, if any\r\n\r\n**Screenshots and/or Recordings**\r\n![image](https://user-images.githubusercontent.com/10254791/94444933-8956be00-01af-11eb-9830-839a115ae56a.png)\r\n\r\n**Self Check**\r\n\r\n- Have you tried reaching out on the [Discord server](https://discord.gg/ohmyzsh)? \r\n  _asked, no response at `#tech-support` channel_\r\n\r\n- Also searching existing [GitHub Issues](https://github.com/ohmyzsh/ohmyzsh/issues?q=) might help you get quicker support\r\n  _did not found any related issues_\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: macOS\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: 5.7.1\r\n - Terminal emulator: iTerm2\r\n\r\n**Aditional info**\r\n`rm ~/.zcompdump*` did not help. ",
        "labels": "Bug",
        "id": 43291
    },
    {
        "title": "Font color change sticks after tab completion",
        "body": "**Describe the bug**\r\n\r\nWhen I click `tab` to complete (a file path for example), the font color of my previously entered text changes.  This new color \"sticks\" - it applies not only to new text that I enter, but output of the next command that runs.\r\n\r\nHere is a movie that demonstrates the behavior.\r\n\r\nThe unexpected part is that the lighter font color applies to the `ls` output and the characters that I type after `tab`.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Set `ZSH_THEME=\"avit\"` in `~/.zshrc`\r\n2. Type `ls -al ~/.zsh` + `tab`\r\n3. See the font color change\r\n4. Type some more text like `*` and then `enter`\r\n\r\n**Expected behavior**\r\nI expected the font color of the output to return to normal.\r\n\r\n**Movie**\r\n\r\n![dim](https://user-images.githubusercontent.com/41094/92190203-bec0f380-ee1d-11ea-864c-ed69bf24e913.gif)\r\n\r\nThe unexpected part is that the output of the `ls` command is the lighter font color after `tab` completion.\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: macOS\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: 5.7.1 (x86_64-apple-darwin19.0)\r\n - Terminal emulator: Terminal.app\r\n\r\n**Additional context**\r\n\r\nI just found #8952 which might have some overlap, but that was fixed with 8cb449ee2068a52fd386a9426b70b8f89f100e7c.",
        "labels": "Bug",
        "id": 43292
    },
    {
        "title": "vi-mode: Shell hotkeys to jump forward words no longer work",
        "body": "**Describe the bug**\r\n\r\nEscape sequence hotkeys to jump forward words no longer work when the `vi-mode` plugin is enabled.\r\n\r\nIn iTerm, I typically map option-left and option-right to jump backwards and forward words, respectively, via escape sequences, [as documented here](https://coderwall.com/p/h6yfda/use-and-to-jump-forwards-backwards-words-in-iterm-2-on-os-x). With `vi-mode` enabled, only the jump back will work and not the jump forwards.\r\n\r\nI know that these hotkeys are not quite necessary when I have vi/vim enabled on a shell command because I can just use vim keystrokes instead of hotkeys to jump between words. However, these hotkeys are universally used across Mac OS and old habits die hard. It would be ideal for `vi-mode` to continue to support this escape sequence.\r\n\r\n**To Reproduce**\r\n\r\n1. Ensure the above documentation is followed to map option-left and option-right to escape sequences for jumping words\r\n1. Enable plugin 'vi-mode`\r\n1. Enter in a shell command that has multiple words\r\n1. Try using option + arrow keys to jump between words\r\n\r\n**Expected behaviour**\r\n\r\nI can jump between words as expected\r\n\r\n**Actual behaviour**\r\n\r\nOnly jump backwards works. When I try jumping forwards, the shell does nothing, but it seems to wait for me to enter in another prompt. When I do, the command moves to a line below and a single ASCII character appears in the current line. There must be a different way that `vi-mode` is handling the `^f` escape sequence.\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: Mac OS 10.15.6\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: 5.8\r\n - Terminal emulator: iTerm2 3.3.12\r\n",
        "labels": "Bug",
        "id": 43293
    },
    {
        "title": "Previous git main branch detection logic broke expected behavior",
        "body": "**Describe the bug**\r\n#9091 presented better way of handling main branch. We have neither `main` nor `master` branch as the 'default' branch, but other branch named `integration`. I used the algorithm in `git_main_branch` function, and refer the remote HEAD to `integration` branch. This is how I got expected results. Now it's back to hard-coded, non-configurable values.\r\n\r\n#9114 was handled incorrectly: `git_main_branch` is a function, and was referred to as a variable. This is the reason it didn't worked. I believe that configure the remote HEAD would solve the problem.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable this plugin `git`\r\n2. Set the remote HEAD to a branch other than `master` (e,g, `integration`): `git remote set-head origin integration`\r\n3. Run command `git_main_branch`\r\n4. Result is `master`, although `integration` is the 'default' branch, configured in GitHub.\r\n\r\n**Expected behavior**\r\nAfter 3. above, result should be `integration`\r\n\r\n\r\n**Desktop:**\r\n\r\n - OS / Distro: **Ubuntu 19.04**\r\n - Latest ohmyzsh update?: **Yes**\r\n - ZSH Version: **5.7.11**\r\n - Terminal emulator: **xterm-256color**\r\n",
        "labels": "Bug",
        "id": 43294
    },
    {
        "title": "gitfast plugin: tab completion broken on filenames containing spaces (expected automatic quote/backslash)",
        "body": "**Describe the bug**\r\nWith 'gitfast' plugin enabled, if I try to add a file named (e.g.) `aaaa bbbb cccc` (i.e., anything with spaces) to repository `git add aa[Tab]`, the filename is expanded but with no backslashes or quotes to handle the spaces. Git then thinks I'm asking to add several items (the first being a file named `aaaa`) and complains.\r\n\r\nIf I disable gitfast, the problem goes away.\r\n\r\nThe problem seems to be on my laptop (bash version 4.4.20, zsh version 5.4.2), but not on my desktop (newer versions: bash v5.0.17, zsh 5.8). Both laptop and desktop have freshest version of oh-my-zsh as of today (confirmed by running upgrade_oh_my_zsh on both).\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Enable gitfast plugin\r\n2. `mkdir gittest`\r\n3. `cd gittest`\r\n3. `git init`\r\n4. `touch 'aaaa bbbb cccc'` (a single filename that contains spaces).\r\n3. `git add aa[Tab]`\r\n3. This expands to: `git add aaaa bbbb cccc`. Hit enter.\r\n3. Problem: `fatal: pathspec 'aaaa' did not match any files`\r\n\r\n**Expected behavior**\r\nIf the same steps above are repeated but gitfast is disabled, then hitting `[Tab]` results in filename being expanded with backslashes protecting the spaces. This is the expected behavior with gitfast enabled.\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: Linux Mint Cinnamon\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: 5.4.2\r\n - Terminal emulator: gnome-terminal\r\n\r\n**Additional context**\r\n\r\nAs mentioned above---I did notice that the problem doesn't occur with my desktop machine, which has newer versions of zsh and bash. (Upgrading bash or zsh isn't my preferred solution since I want to stick with the repository versions). I know the gitfast plugin uses elements of the bash completion tool behind the scenes, but I wouldn't know how/which components are used. I hope this context is enough for you to go on.\r\n\r\nThanks!",
        "labels": "Bug",
        "id": 43295
    },
    {
        "title": "Trap in check_for_upgrade doesn't work for zsh < 5.0.8",
        "body": "**Describe the bug**\r\n\r\nZsh versions older than 5.0.8 don't implement signals other than `ZERR`, so the trap setup fails with the error\r\n```\r\n(anon):trap: undefined signal: INT\r\n```\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. Use a zsh version older than 5.0.8. You can use docker for this:\r\n   ```zsh\r\n   docker run -it zshusers/zsh:5.0.7\r\n   ```\r\n2. Print the available signals with `kill -l`\r\n3. Run a mock trap to test this, for example:\r\n   ```zsh\r\n   (){ setopt localtraps; trap 'echo trap called; return 1' INT; read }\r\n   ```\r\n   and press `CTRL`+`C` to trigger the trap function.\r\n4. The error above is shown, and the `read` isn't cancelled.\r\n\r\n**Expected behavior**\r\n\r\nThe `check_for_upgrade` script should exhibit a similar behavior than in newer zsh versions. For example, if the upgrade script is cancelled on an old zsh version, the `update.lock` isn't removed because the `check_for_upgrade.sh` script is skipped:\r\n```\r\n+(anon):45> [[ '' != (     <--- in the update prompt of check_for_upgrade.sh\r\n|) ]]\r\n+(anon):47> echo -n '[oh-my-zsh] Would you like to update? [Y/n] '\r\n[oh-my-zsh] Would you like to update? [Y/n] +(anon):48> read -r -k 1 option\r\n^C\r\n# Initializes Oh My Zsh    <--- back to the init script\r\n```\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: any\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: older than 5.0.8\r\n - Terminal emulator: any\r\n\r\n**Additional context**\r\n\r\nScript to check implemented signals of all zsh versions:\r\n```zsh\r\nvers=(${(@f)$(wget -qO- https://registry.hub.docker.com/v1/repositories/zshusers/zsh/tags | sed -e 's/[][]//g' -e 's/\"//g' -e 's/ //g' | tr '}' '\\n' | awk -F: '{print $3}')})\r\nfor ver in $vers; do echo -n \"$ver: \"; docker run zshusers/zsh:$ver zsh -c 'kill -l'; done\r\n\r\n# output\r\nlatest: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n4.3.11: ZERR\r\n4.3.12: ZERR\r\n4.3.13: ZERR\r\n4.3.14: ZERR\r\n4.3.15: ZERR\r\n4.3.16: ZERR\r\n4.3.17: ZERR\r\n5.0.0: ZERR\r\n5.0.1: ZERR\r\n5.0.2: ZERR\r\n5.0.3: ZERR\r\n5.0.4: ZERR\r\n5.0.5: ZERR\r\n5.0.6: ZERR\r\n5.0.7: ZERR\r\n5.0.8: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n5.1: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n5.1.1: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n5.2: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n5.3: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n5.3.1: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n5.4: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n5.4.1: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n5.4.2: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n5.5: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n5.5.1: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n5.6: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n5.6.1: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n5.6.2: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n5.7: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n5.7.1: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n5.8: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\nmaster: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n```",
        "labels": "Bug",
        "id": 43296
    },
    {
        "title": "check_for_upgrade line 24 error on automate shellscript file",
        "body": "Hey, I'm trying to write a small ShellScript for simple automation of my PC, but I'm having a problem installing oh-my-zsh. I can't interpret if this is a bug or a silly mistake I'm making, could you help me? \r\n\r\n`sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\" \"\" --unattended`\r\n\r\nI'm even using Arch Linux.\r\n\r\n---\r\n\r\n<details>\r\n<summary><strong>Error message</strong></summary>\r\n \r\n```\r\n$ $HOME/.oh-my-zsh/tools/check_for_upgrade.sh: line 24: `update_last-updated_file': is not a valid identifier\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary><strong>My ShellScript file</strong></summary>\r\n\r\n```sh\r\nget_value_of()\r\n{\r\n    local VAR_NAME=$1;\r\n    local VAR_VALUE=\"\";\r\n\r\n    if set | grep -q \"^$VAR_NAME=\"; then\r\n        eval VAR_VALUE=\"\\$$VAR_NAME\"\r\n    fi\r\n    echo \"$VAR_VALUE\"\r\n}\r\n\r\ndisplay_color_text()\r\n{\r\n    local RED=`tput setaf 1`;\r\n    local GREEN=`tput setaf 2`;\r\n    local YELLOW=`tput setaf 3`;\r\n    local BLUE=`tput setaf 4`;\r\n\r\n    local RESET_TEXT=`tput sgr0`;\r\n\r\n    echo \"$(get_value_of $1)$2$RESET_TEXT\"\r\n}\r\n\r\n######\r\n\r\ndisplay_color_text GREEN \"Installing ZSH...\"\r\nsudo pacman -S zsh\r\n\r\ndisplay_color_text GREEN \"Installing Oh my ZSH...\"\r\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\" \"\" --unattended\r\nsource $HOME/.zshrc\r\n\r\ndisplay_color_text GREEN \"Installing NVM...\"\r\nsh -c \"$(curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh)\"\r\nsource $HOME/.zshrc\r\nclear\r\n\r\ndisplay_color_text GREEN \"Installing Node.js LTS version...\"\r\nnvm install --lts\r\nnode --version\r\nnpm --version\r\nclear\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary><strong>check_for_upgrade.sh file</strong></summary>\r\n\r\n```sh\r\n# Migrate .zsh-update file to $ZSH_CACHE_DIR\r\nif [[ -f ~/.zsh-update && ! -f \"${ZSH_CACHE_DIR}/.zsh-update\" ]]; then\r\n    mv ~/.zsh-update \"${ZSH_CACHE_DIR}/.zsh-update\"\r\nfi\r\n\r\n# Cancel update if:\r\n# - the automatic update is disabled.\r\n# - the current user doesn't have write permissions nor owns the $ZSH directory.\r\n# - git is unavailable on the system.\r\nif [[ \"$DISABLE_AUTO_UPDATE\" = true ]] \\\r\n   || [[ ! -w \"$ZSH\" || ! -O \"$ZSH\" ]] \\\r\n   || ! command -v git &>/dev/null; then\r\n    return\r\nfi\r\n\r\n\r\nfunction current_epoch() {\r\n    zmodload zsh/datetime\r\n    echo $(( EPOCHSECONDS / 60 / 60 / 24 ))\r\n}\r\n\r\nfunction update_last-updated_file() {\r\n    echo \"LAST_EPOCH=$(current_epoch)\" >! \"${ZSH_CACHE_DIR}/.zsh-update\"\r\n}\r\n\r\nfunction update_ohmyzsh() {\r\n    ZSH=\"$ZSH\" sh \"$ZSH/tools/upgrade.sh\"\r\n    update_last-updated_file\r\n}\r\n\r\n() {\r\n    emulate -L zsh\r\n\r\n    local epoch_target mtime option LAST_EPOCH\r\n\r\n    # Remove lock directory if older than a day\r\n    zmodload zsh/datetime\r\n    zmodload -F zsh/stat b:zstat\r\n    if mtime=$(zstat +mtime \"$ZSH/log/update.lock\" 2>/dev/null); then\r\n        if (( (mtime + 3600 * 24) < EPOCHSECONDS )); then\r\n            command rm -rf \"$ZSH/log/update.lock\"\r\n        fi\r\n    fi\r\n\r\n    # Check for lock directory\r\n    if ! command mkdir \"$ZSH/log/update.lock\" 2>/dev/null; then\r\n        return\r\n    fi\r\n\r\n    # Remove lock directory on exit. `return 1` is important for when trapping a SIGINT:\r\n    #  The return status from the function is handled specially. If it is zero, the signal is\r\n    #  assumed to have been handled, and execution continues normally. Otherwise, the shell\r\n    #  will behave as interrupted except that the return status of the trap is retained.\r\n    trap \"rm -rf '$ZSH/log/update.lock'; return 1\" EXIT INT QUIT\r\n\r\n    # Create or update .zsh-update file if missing or malformed\r\n    if ! source \"${ZSH_CACHE_DIR}/.zsh-update\" 2>/dev/null || [[ -z \"$LAST_EPOCH\" ]]; then\r\n        update_last-updated_file\r\n        return\r\n    fi\r\n\r\n    # Number of days before trying to update again\r\n    epoch_target=${UPDATE_ZSH_DAYS:-13}\r\n    # Test if enough time has passed until the next update\r\n    if (( ( $(current_epoch) - $LAST_EPOCH ) < $epoch_target )); then\r\n        return\r\n    fi\r\n\r\n    # Ask for confirmation before updating unless disabled\r\n    if [[ \"$DISABLE_UPDATE_PROMPT\" = true ]]; then\r\n        update_ohmyzsh\r\n    else\r\n        # input sink to swallow all characters typed before the prompt\r\n        # and add a newline if there wasn't one after characters typed\r\n        while read -t -k 1 option; do true; done\r\n        [[ \"$option\" != ($'\\n'|\"\") ]] && echo\r\n\r\n        echo -n \"[oh-my-zsh] Would you like to update? [Y/n] \"\r\n        read -r -k 1 option\r\n        [[ \"$option\" != $'\\n' ]] && echo\r\n        case \"$option\" in\r\n            [nN]) update_last-updated_file ;;\r\n            *) update_ohmyzsh ;;\r\n        esac\r\n    fi\r\n}\r\n\r\nunset -f current_epoch update_last-updated_file update_ohmyzsh\r\n```\r\n</details>",
        "labels": "Bug",
        "id": 43297
    },
    {
        "title": "zsh_reload plugin fail on popOS 20.04",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nif you execute `src` it goes to bash instad of zsh after recompile\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable this plugin 'zsh_reload'\r\n2. Run command 'src'\r\n3. It goes to bash after compilation, instead of restarting zsh\r\n\r\n**Expected behavior**\r\nrecompile configs and restart zsh\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: [popOS 20.04]\r\n - Latest ohmyzsh Update?: [Yes]\r\n - ZSH Version: [5.8]\r\n - Terminal emulator [tested on Tilix and default terminal]\r\n\r\n**NOTE that this problem cannot be reproduced on ubuntu. Only popOS**\r\n\r\n",
        "labels": "Bug",
        "id": 43298
    },
    {
        "title": "pyenv plugin looks for pyenv in wrong place in Windows10 WSL2",
        "body": "**Describe the bug**\r\nWhen the pyenv plugin is used in a WSL2 shell, it looks for pyenv in the Windows path instead of the linux path.\r\n\r\n`/mnt/c/Users/username/.pyenv/pyenv-win/bin/pyenv: 3: cmd: not found`\r\n\r\nit should be looking in \r\n\r\n`/home/username/.pyenv`\r\n\r\nIf you export `PYENV_ROOT` before the plugins entry in .zshrc, then it works. \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable this plugin 'pyenv'\r\n2. source .zshrc\r\n3. pyenv is reported as not found\r\n\r\n**Expected behavior**\r\nIt should detect it's in WSL, not Windows and look in the correct location for a Linux install.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: Ubuntu 20.04 LTS in Windows Subsystem for Linux 2, recently updated\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: 5.8\r\n - Terminal emulator: default for Ubuntu WSL.  Seems to be the same as used by cmd, judging by the options shown when right clicking on the header.\r\n",
        "labels": "Bug",
        "id": 43299
    },
    {
        "title": "current_gemset returns empty string",
        "body": "**Describe the bug**\r\n\r\ncurrent_gemset returns empty string.\r\n\r\n**To Reproduce**\r\n\r\nEnable rbenv plugin on machine with rbenv and rbenv-gemset installed and working correctly, and attempt to use current_gemset. Version is fine:\r\n\r\n    [22:41] (master) inopinatus@coltrane:~/src/flails$ echo $plugins\r\n    git rbenv\r\n    [22:41] (master) inopinatus@coltrane:~/src/flails$ rbenv version-name\r\n    2.7.1\r\n    [22:41] (master) inopinatus@coltrane:~/src/flails$ current_ruby\r\n    2.7.1\r\n\r\nbut gemset is not (misparsed?):\r\n\r\n    [22:41] (master) inopinatus@coltrane:~/src/flails$ rbenv gemset active\r\n    flails global\r\n    [22:42] (master) inopinatus@coltrane:~/src/flails$ current_gemset\r\n\r\n    [22:42] (master) inopinatus@coltrane:~/src/flails$ \r\n\r\n**Expected behavior**\r\n\r\nShould give current gemset in some fashion.\r\n\r\n**Desktop**\r\n\r\n - OS / Distro: macOS\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: 5.7.1\r\n - Terminal emulator: iTerm2\r\n\r\n**Additional context**\r\n\r\nProbably related to #4688.\r\n",
        "labels": "Bug",
        "id": 43300
    },
    {
        "title": "Breaking battery update on commit 3da469be",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n\r\nI just updated oh-my-zsh to the latest commit and now I experience a problem during in my prompt:\r\nthere is an added visual space at the beginning of the input (but not actually in the typed command), and when I press tab, this extra space moves from the beginning of the input to the cursor, thus shifting the display of what I type from what is actually typed.\r\n(Sorry if that isn't really clear ;) ) \r\n\r\nI did some digging and the problem apparently comes from the commit 3da469be six days ago modifying the default battery charging symbol string from `'⚡'` to `'%%{%%G⚡%%}'`.\r\nOverriding `BATTERY_CHARGING_SYMBOL` to `⚡` (the original value) fixes the bug.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: Arch Linux\r\n - Latest ohmyzsh Update?: Yes (after commit 3da469be)\r\n - ZSH Version: 5.8\r\n - Terminal emulator : urxvt\r\n\r\n**Additional**\r\nMy relevant part of my theme configuration for the battery module and RPROMPT:\r\n```shell\r\nBATTERY_GAUGE_PREFIX=%F{blue}'[';\r\nBATTERY_GAUGE_SUFFIX=%F{blue}']';\r\nRPROMPT=$'$(battery_level_gauge)'\r\n```",
        "labels": "Bug",
        "id": 43301
    },
    {
        "title": "kube-ps1 not update when change context",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nafter using `kubectl` change context, kube_ps1 doesn't show updated info.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable this plugin '...'\r\n2. Run command 'kubectl config use-context context'\r\n3. kube_ps1 command result is old.\r\n\r\n**Expected behavior**\r\nexpect result is new context\r\n\r\n**Screenshots and/or Recordings**\r\nIf applicable, add screenshots to help explain your problem.\r\nYou can also record an asciinema session: https://asciinema.org/\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: [e.g. Arch Linux, macOS] ubuntu 19.10\r\n - Latest ohmyzsh Update?: [e.g. Yes/No] yes\r\n - ZSH Version: 5.4.2\r\n - Terminal emulator: tmux\r\n\r\n**Additional context**\r\nAdd any other context about the problem here. This can be themes, plugins, custom configs.\r\n",
        "labels": "Bug",
        "id": 43302
    },
    {
        "title": "zsh: no such file or directory: /home/username/.rvm/bin/rvm-prompt ",
        "body": "Related old issue: https://github.com/ohmyzsh/ohmyzsh/issues/5627\r\n\r\n**Describe the bug**\r\n\r\nWhen loading 3den.zsh-theme\r\n\r\n```\r\nzsh: no such file or directory: /home/username/.rvm/bin/rvm-prompt \r\n```\r\n\r\nThis error will appear after each command run.\r\n\r\n**To Reproduce**\r\n\r\nUse 3den theme.\r\n\r\n**Expected behavior**\r\n\r\nThe theme should no require rvm.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: Arch Linux\r\n - Latest ohmyzsh Update?: Yes\r\n- ZSH Version: 5.8\r\n - Terminal emulator Konsole\r\n\r\n**Solution**\r\n\r\nRemove 3den from the default theme list. It can be added in the external non-default theme list.\r\n",
        "labels": "Bug",
        "id": 43303
    },
    {
        "title": "npm autocomplete plugin seems to be not working",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nRunning `npm run <tab>` does not autocomplete the npm run scripts. Instead there is a problem reported in the internal npm [completion](https://github.com/npm/cli/blob/latest/lib/completion.js#L80) module. I'm not sure if I'm addressing this issue at the right place here, since the the ohmyzsh npm plugin uses `npm completion` to generate the autocompletion script. However the plugin stopped working for me with the most recent ohmyzsh updates. \r\n\r\nI also tried the following things\r\n* reset the completion settings https://github.com/ohmyzsh/ohmyzsh/wiki/Troubleshooting#completion-problems\r\n* removed the `npm_completion` from the `.oh-my-zsh/cache`. \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable this plugin 'npm'\r\n2. Create new folder\r\n3. Init new nodejs project `npm init`\r\n4. Run `npm run <tab>`\r\n5. Nothing gets shown, instead a npm error gets locked in `~/.npm/_logs`\r\n\r\n```\r\n0 info it worked if it ends with ok\r\n1 verbose cli [\r\n1 verbose cli   '/Users/andreas.taube/.nvm/versions/node/v12.16.1/bin/node',\r\n1 verbose cli   '/Users/andreas.taube/.nvm/versions/node/v12.16.1/bin/npm',\r\n1 verbose cli   'completion',\r\n1 verbose cli   '--',\r\n1 verbose cli   'npm',\r\n1 verbose cli   'run'\r\n1 verbose cli ]\r\n2 info using npm@6.13.4\r\n3 info using node@v12.16.1\r\n4 verbose stack TypeError: Cannot read property 'length' of undefined\r\n4 verbose stack     at EventEmitter.completion (/Users/andreas.taube/.nvm/versions/node/v12.16.1/lib/node_modules/npm/lib/completion.js:80:23)\r\n4 verbose stack     at Object.commandCache.<computed> (/Users/andreas.taube/.nvm/versions/node/v12.16.1/lib/node_modules/npm/lib/npm.js:156:13)\r\n4 verbose stack     at EventEmitter.<anonymous> (/Users/andreas.taube/.nvm/versions/node/v12.16.1/lib/node_modules/npm/bin/npm-cli.js:131:30)\r\n4 verbose stack     at processTicksAndRejections (internal/process/task_queues.js:79:11)\r\n5 verbose cwd /Users/andreas.taube/dev/collectai/claims\r\n6 verbose Darwin 18.7.0\r\n7 verbose argv \"/Users/andreas.taube/.nvm/versions/node/v12.16.1/bin/node\" \"/Users/andreas.taube/.nvm/versions/node/v12.16.1/bin/npm\" \"completion\" \"--\" \"npm\" \"run\"\r\n8 verbose node v12.16.1\r\n9 verbose npm  v6.13.4\r\n10 error Cannot read property 'length' of undefined\r\n11 verbose exit [ 1, true ]\r\n```\r\n**Expected behavior**\r\nThe autocomplete should kick in and show the `test` run script\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: macOS\r\n - Latest ohmyzsh Update?: yes `bc9fe742`\r\n - ZSH Version: 5.8\r\n - Terminal emulator iTerm2\r\n",
        "labels": "Bug",
        "id": 43304
    },
    {
        "title": "AWS Plugin \"bad pattern\" error when using asp",
        "body": "Hello,\r\n\r\nI have a multiple profile aws config in ~/.aws/config\r\n```\r\n[default]\r\nregion = ca-central-1\r\n\r\n[profile prod]\r\nregion = us-east-1\r\noutput = json\r\n\r\n[profile staging]\r\nregion = us-east-1\r\noutput = json\r\n\r\n[profile staging_ecr]\r\nrole_arn = arn:aws:iam::xxxxxxxxxxx:role/xxxxxx\r\nsource_profile=staging\r\n\r\n[profile staging_eks]\r\nrole_arn = arn:aws:iam::xxxxxxxxx:role/xxxxx\r\nsource_profile=staging\r\n\r\n[profile staging_tf]\r\nregion = ca-central-1\r\noutput = json\r\n```\r\n\r\nWhen i want to switch profile with\r\n`asp staging_tf`\r\n\r\nI got the following errors:\r\n`asp:7: bad pattern: available_profiles=(prod`\r\n\r\nIt seems that the oneliner \r\n`local available_profiles=( $(aws_profiles) )`\r\n\r\ngot issues because when doing\r\n```\r\nlocal available_profiles  EOL\r\navailable_profiles=( $(aws_profiles) )\r\n```\r\nIt works.\r\n\r\n\r\nVersion reference:\r\n```\r\n$ zsh --version\r\nzsh 5.0.2 (x86_64-redhat-linux-gnu)\r\n$  ~/.oh-my-zsh git rev-parse HEAD\r\n78b07e92fd4a3a5e1f92ee4e3d680c39b72c2245\r\n```\r\n\r\n\r\n\r\n",
        "labels": "Bug",
        "id": 43305
    },
    {
        "title": "Tab completion is eating above lines when using af-magic theme",
        "body": "**Describe the bug**\r\nTab completion is eating above lines when using af-magic theme.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Use the af-magic theme\r\n2. Press tab for autocomplete at the terminal\r\n3. The line immediately above was deleted\r\n\r\n**Expected behavior**\r\nTab completion should not delete any lines from the display.\r\n\r\n**Screenshots or recordings**\r\n### Without Fix:\r\n\r\n#### Before Tab:\r\n```\r\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n~/.oh-my-zsh(tab-complete-af-magic) » date                                                                                                                                                zach@zach-desktop\r\nThu Dec 26 09:53:46 EST 2019\r\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n~/.oh-my-zsh(tab-complete-af-magic) »\r\n\r\n```\r\n#### After Tab:\r\n```\r\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n~/.oh-my-zsh(tab-complete-af-magic) » date                                                                                                                                                zach@zach-desktop\r\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n~/.oh-my-zsh(tab-complete-af-magic) » ls themes/\r\n```\r\n\r\n### With Fix\r\n\r\n#### Before Tab:\r\n```\r\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n~/.oh-my-zsh(tab-complete-af-magic*) » source ~/.zshrc                                                                                                                                    zach@zach-desktop\r\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n~/.oh-my-zsh(tab-complete-af-magic*) » date                                                                                                                                               zach@zach-desktop\r\nThu Dec 26 09:56:50 EST 2019\r\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n~/.oh-my-zsh(tab-complete-af-magic*) » \r\n\r\n```\r\n#### After Tab:\r\n```\r\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n~/.oh-my-zsh(tab-complete-af-magic*) » source ~/.zshrc                                                                                                                                    zach@zach-desktop\r\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n~/.oh-my-zsh(tab-complete-af-magic*) » date                                                                                                                                               zach@zach-desktop\r\nThu Dec 26 09:56:50 EST 2019\r\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n~/.oh-my-zsh(tab-complete-af-magic*) » ls themes/ \r\n```\r\n\r\n**System:**\r\n - OS: Ubuntu\r\n - zsh 5.4.2 (x86_64-ubuntu-linux-gnu)\r\n\r\n**Additional context**\r\nI started seeing the error after [this change](https://github.com/ohmyzsh/ohmyzsh/commit/17f4cfca99398cb5511557b8515a17bf1bf2948a).  \r\nIt looks like the root cause was introduced by [zsh 5.3](http://www.zsh.org/mla/workers/2017/msg00021.html) when using multiline prompts.\r\nIt would be nice to fix here for compatibility. I have a solution and will open a pull request.\r\n",
        "labels": "Bug",
        "id": 43306
    },
    {
        "title": "ssh-agent plugin doesn't work with proc hidepid",
        "body": "\r\n**Describe the bug**\r\nWhile using the [hidepid option](man7.org/linux/man-pages/man5/proc.5.html) while mounting /proc, ssh-agent  asks for password for each new terminal.\r\n\r\nAfter entering password, I can ssh normally to a remote server without entering password again.\r\n\r\nIn the script, I see that it tries to get the pid from ps command. Which is probably where this bug (?) come from.\r\n\r\n**To Reproduce**\r\nDoesn't need to restart to work. But make sure it won't break your other applications.\r\n\r\n1. Of course,  add ssh-agent to plugins in .zshrc\r\n2. As root do:\r\n`mount -o remount,rw,nosuid,nodev,noexec,relatime,hidepid=2 /proc\r\n`\r\n3. Starts a terminal and input your ssh password.\r\n4. Starts other terminal, it will ask again.\r\n\r\n\r\n**Expected behavior**\r\nI've expected to input in just the first terminal. Maybe there's an easy fix to this that I don't know and doesn't involve disabling hidepid?\r\n\r\n**System:**\r\n - Ubuntu 18.04\r\n - zsh 5.6.2 (x86_64-pc-linux-gnu)\r\n - Gnome terminal\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n",
        "labels": "Bug",
        "id": 43307
    },
    {
        "title": "zsh-navigation-tools : ncurses broken in n-* commands (unwanted identations)",
        "body": "Hello,\r\nI have znt from oh-my zsh all installed today,\r\nWhen I run n-* commands, There is jitter on the terminal when moving the cursor, something akin \"moving to a line not visited yet adds 2 spaces to it\":\r\nhttps://framapic.org/gallery#HtPmvngUBE9r/gxDYQNJze4gH.png&gid=1&pid=1\r\n![image](https://user-images.githubusercontent.com/1441704/71024474-4dada480-2105-11ea-8f83-2f1dcb40eafb.png)\r\n\r\nAny clue? BR\r\nhttps://github.com/psprint/zsh-navigation-tools/issues/29",
        "labels": "Bug",
        "id": 43308
    },
    {
        "title": "Shift+Tab with vi-mode doesn't cycle completion suggestions",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n<!-- A clear and concise description of what the bug is. -->\r\nWhen `vi-mode` is enabled, `shift+tab` does not cycle backwards through the autocomplete suggestions.\r\nIf `vi-mode` is removed from the plugins, `shift+tab` works as it should.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Enable plugin 'vi-mode'.\r\n2. When an autocomplete suggestion is available, shift+tab does not cycle backwards.\r\n\r\n**System:**\r\n - OS: [macOS Catalina]\r\n - Zsh version [5.7]\r\n - Terminal emulator [iTerm2]",
        "labels": "Bug",
        "id": 43309
    },
    {
        "title": "A little bug when updating oh-my-zsh",
        "body": "It will show\r\n\r\n```\r\n[Oh My Zsh] Would you like to update? [Y/n]: Y\r\n/root/.oh-my-zsh/tools/upgrade.sh: 36: /root/.oh-my-zsh/tools/upgrade.sh: [[: not found\r\n...\r\n```\r\n\r\nwhen I update oh-my-zsh.",
        "labels": "Bug",
        "id": 43310
    },
    {
        "title": "non-compliant posix code in tools/upgrade.sh",
        "body": "**Describe the bug**\r\n\r\nRelated to the recently merged #8394 \r\n\r\nSince `upgrade_oh_my_zsh` uses `sh` instead of `bash`, and the code on line 36 [here](https://github.com/ohmyzsh/ohmyzsh/blob/b80b1a1e8b30e5f2a7c4977019cf56e72c434037/tools/upgrade.sh#L36) is somewhat `bash` specific, the command may fail if `sh` is linked to some other POSIX-compliant implementation.\r\n\r\n```\r\n$ upgrade_oh_my_zsh\r\n/home/sean/.oh-my-zsh/tools/upgrade.sh: 36: /home/sean/.oh-my-zsh/tools/upgrade.sh: [[: not found\r\n```\r\n\r\n**To Reproduce**\r\n\r\n- Have `sh` linked to something other than bash (I have it linked to [dash](http://gondor.apana.org.au/~herbert/dash/))\r\n- call `upgrade_oh_my_zsh`\r\n\r\n**Expected behavior**\r\n\r\ncalling `upgrade_oh_my_zsh` to not throw any errors.\r\n\r\n**System:**\r\n - OS: [e.g. macOS]: Linux (Arch)\r\n - Zsh version [e.g. 5.6]: zsh 5.7.1 (x86_64-pc-linux-gnu)\r\n - Terminal emulator [e.g. iTerm2]: Termite v15\r\n\r\nI believe this could be fixed by simply changing:\r\n\r\n`[[ -n \"$remote\" ]]` to `[ -n \"$remote\" ]`, but edge cases in shell conditional statements are not my forte.",
        "labels": "Bug",
        "id": 43311
    },
    {
        "title": "[BUG]`git-auto-fetch` not able to handle passphrase protected ssh-keys that are not in ssh-agent",
        "body": "**Describe the bug**\r\nAfter cd into a git repository with `git-auto-fetch` enabled it asks for the ssh passphrase but it's not possible to enter it.\r\n\r\n**To Reproduce**\r\n1. Enable plugin `git-auto-fetch`\r\n2. Get ssh key with passphase that is used to pull git repos\r\n3. Add `AddKeysToAgent yes` to `~/.ssh/config`\r\n4. `exec zsh`\r\n5. start `ssh-agent` (e.g. `eval $(ssh-agent)`) (Do not add ssh key!)\r\n\r\n**Expected behavior**\r\nEither soft fail (1) or be able to enter passphrase (2).\r\n\r\n**Screenshots or recordings**\r\n![image](https://user-images.githubusercontent.com/16988672/68720235-e6a14b00-05ae-11ea-9e06-78426d321b86.png)\r\n\r\n**System:**\r\n - OS: Manjaro\r\n - Zsh version: zsh 5.7.1 (x86_64-pc-linux-gnu)\r\n - Terminal emulator: Irrelevant but Tilix\r\n",
        "labels": "Bug",
        "id": 43312
    },
    {
        "title": "Keychain plugin fails with .local domain name.",
        "body": "Keychain seems to write the environment files with the fqdn (which includes .local, in my case).\r\n\r\nThe Keychain plugin sources $HOME/.keychain/$SHORT_HOST-sh, which is not found. This leaves the SSH_AUTH_SOCK as the default macos one set by launchd. Identities never get added to the Keychain instantiated agent.\r\n\r\nssh-add -L (keychain -L)\r\n\"The agent has no identities.\"\r\n\r\nI have added a line to my .zshrc as a workaround:\r\nsource \"$HOME/.keychain/$HOST-sh\"\r\n\r\nmacos 10.15.1\r\n\r\n\r\n",
        "labels": "Bug",
        "id": 43313
    },
    {
        "title": "Inconsistencies in ZSH compared to Bash ",
        "body": "**Describe the bug**\r\nThere seems to be a inconsistency in the way ZSH manages incrementing strings to a variable - In bash the code below will output something along the lines of \r\n\r\n`test2_filename.txt`\r\n\r\nIf the script is executed with the ZSH shell, it throws a syntax error.\r\n`./test.sh: 4: ./test.sh: var1+=_filename.txt: not found`\r\n\r\n**To Reproduce**\r\nPoC code provided below:\r\n```\r\nvar1=\"test\"\r\nvar2=\"test2\"\r\n\r\nvar1=$var2 && var1+=\"_filename.txt\"\r\n\r\necho $var1\r\n```\r\n\r\n**Expected behavior**\r\nThe script should output test2_filename.txt, however when it's executed with the ZSH shell, it throws a syntax error - This doesn't occur with the Bash shell.\r\n\r\nAs seen here; += should be supported in ZSH: http://zsh.sourceforge.net/Doc/Release/Arithmetic-Evaluation.html\r\n\r\n**System:**\r\n - OS: Raspbian Linux 9 - Also reproducible on MacOS Catalina \r\n - Zsh version 5.6.1\r\n",
        "labels": "Bug",
        "id": 43314
    },
    {
        "title": "Cannot control Apple Music with `itunes`",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n**To Reproduce**\r\n\r\n1. Enable plugin `osx`\r\n2. Run command `itunes vol`.\r\n3. See error `39:45: execution error: The variable volume is not defined. (-2753)`\r\n\r\n**Expected behaviour**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\nControl Apple Music volume.\r\n\r\n**System:**\r\n - OS: _**macOS* Catalina 10.15.1_\r\n - Zsh version 5.7.1\r\n - Terminal emulator iTerm2\r\n\r\n**Additional context**\r\nIn _**macOS** Catalina 10.15_, the music section of _iTunes_ was discontinued, its features split into _Music_, _Podcasts_, and _TV_. The behaviour of the _Music_ app is pretty much the exact same for music, including AppleScript commands.\r\n",
        "labels": "Bug",
        "id": 43315
    },
    {
        "title": "extract deletes compressed original for gunzip files",
        "body": "Not sure if this is a bug or if this is on purpose, however the behavior is not what I expected.  \r\nI just started using the **extract** plugin and according to the documentation the `-r` removes the compressed file after extracting. \r\nI downloaded a large `.gz` file and used extract without `-r`, but the original file was still deleted. \r\nWhich was unfortunate, since I planned to keep the file.\r\n\r\nI think it might be more consistent with the documentation of **extract** if the `--keep` option is used for gunzip, e.g.\r\n\r\n```\r\n(*.gz) (( $+commands[pigz] )) && pigz -d \"$1\" || gunzip -k \"$1\" ;;\r\n```\r\n\r\nOr at least a warning in the documentation, that keeping the compressed file is not the default for all file types.\r\n\r\n**To Reproduce**\r\nUsing `extract` (without `-r`) on `.gz` files\r\n\r\n**Expected behavior**\r\nfile uncompressed and compressed file not removed\r\n\r\n**System:**\r\n - OS: Linux (Arch)\r\n - Zsh version 5.7.1-1\r\n",
        "labels": "Bug",
        "id": 43316
    },
    {
        "title": "Fabric: Autocompletion no longer working",
        "body": "**Describe the bug**\r\nLooks like [recent changes to Fabric have broken autocompletion](https://github.com/robbyrussell/oh-my-zsh/commit/9d790ea60ce1d3af265dfc05b77d77bd94b801d7).\r\n\r\nWhen pressing TAB to complete a line it gives an error from `awk` that `return` is not in a function.\r\n\r\n**To Reproduce**\r\nType `fab ` followed by the prefix of any fab command and press TAB\r\n\r\n**Expected behavior**\r\nThe command is successfully autocompleted, e.g. in the example below the command should complete to `fab helpers.check_warnings`\r\n\r\n**Screenshots or recordings**\r\n```\r\n(ukf) ➜  deploy hg:(default) ✗ fab helpers.chawk: return not in function at source line 2\r\n context is\r\n\t    if (NF == 0 || NR == 1) >>>  return <<< \r\nawk: syntax error at source line 3\r\nawk: illegal statement at source line 3\r\nawk: return not in function at source line 2\r\n context is\r\n\t    if (NF == 0 || NR == 1) >>>  return <<< \r\nawk: syntax error at source line 3\r\nawk: illegal statement at source line 3\r\nawk: return not in function at source line 2\r\n context is\r\n\t    if (NF == 0 || NR == 1) >>>  return <<< \r\nawk: syntax error at source line 3\r\nawk: illegal statement at source line 3        \r\n```\r\n\r\n**System:**\r\n - OS: macOS 10.14.6\r\n - Zsh version: 5.7.1\r\n - Terminal emulator: Terminal\r\n - Fabric: 1.14\r\n\r\n**Additional context**\r\nWorked fine prior to recent oh-my-zsh update\r\n",
        "labels": "Bug",
        "id": 43317
    },
    {
        "title": "Old update.lock will block update",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nIf update was interrupted, lock will not be removed and block future updates.\r\n\r\n**To Reproduce**\r\n<!--\r\nSteps to reproduce the behavior:\r\n1. Enable plugin '...'\r\n2. Run command '...', _or_ try to complete command '...', _etc._\r\n3. See error\r\n-->\r\n1. Wait for update prompt\r\n2. Close terminal\r\n3. Update will be block forever and update.lock will not removed\r\n\r\n\r\n**Expected behavior**\r\nLock must be removed next time (or after some time)\r\n\r\n**Screenshots or recordings**\r\nhttps://asciinema.org/a/7KhfLzsSPWZgxK19npv6qiGmc\r\n<!--\r\nIf applicable, add screenshots or record an asciinema session (https://asciinema.org/)\r\nto help explain your problem.\r\n-->\r\n\r\n**System:**\r\n - OS: Manjaro (linux)\r\n - Zsh version zsh 5.7.1 (x86_64-pc-linux-gnu\r\n - Terminal emulator xterm\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n",
        "labels": "Bug",
        "id": 43318
    },
    {
        "title": "[cargo completion] __get_package_names not defined",
        "body": "**To Reproduce**\r\n\r\n1. Enable plugin `cargo`\r\n2. Try to complete `cargo update -p`\r\n3. See error: `_arguments:463: command not found: __get_package_names`\r\n\r\n**Expected behavior**\r\n\r\nIt doesn't error. I am fine with this not completing at all, or with this completing without error.",
        "labels": "Bug",
        "id": 43319
    },
    {
        "title": "New tabs using cmd-T in a git repository don't open with same directory in macOS Terminal",
        "body": "**Describe the bug**\r\nWhen the current directory is also a git repository, new tabs created using cmd-T open in the home directory, instead of the current working directory, regardless of Terminal.app preferences. New tabs created from directories that are not git repositories open in the current working directory, as expected. This behaviour persists when all plugins are disabled.\r\n\r\nWhen the `osx` plugin is enabled, the `tab` command in a git repository opens a new tab in the current working directory, as expected, but new tabs created using cmd-T still open in the home directory unexpectedly. Relying on the `tab` command isn't a good solution for when the user is in another interpreter (in my case Python or R) in a git repository and wants to open a new tab in the same directory.\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Ensure that Terminal preferences are set to open a new tab in the same working directory: Terminal -> Preferences -> General -> New tabs open with:\r\n2. Open a new Terminal window.\r\n3. `cd` to any git repository.\r\n4. Open a new tab using cmd-T or New Tab from the Shell menu.\r\n5. New tab will open in the home directory.\r\n\r\n\r\n**Expected behavior**\r\nThe Terminal.app preference for new tabs opening in the same working directory should apply to any directory, not just non-git ones.\r\n\r\n**Screenshots or recordings**\r\n<!--\r\nIf applicable, add screenshots or record an asciinema session (https://asciinema.org/)\r\nto help explain your problem.\r\n-->\r\n\r\n**System:**\r\n - OS: macOS 10.15\r\n - Zsh version 5.7.1\r\n - Terminal emulator: Terminal.app (macOS built-in)\r\n\r\n**Additional context**\r\nPossibly related to Issue #2646\r\n",
        "labels": "Bug",
        "id": 43320
    },
    {
        "title": "oh-my-zsh.sh tries to install dpkg into Fedora",
        "body": "**Describe the bug**\r\nOh my zsh wants to install dpkg. Getting this message `Install package 'dpkg' to provide command 'dpkg'? [N/y]`.\r\n\r\n**To Reproduce**\r\nSimply turn on terminal, the problem is coming from .zshrc from `source $ZSH/oh-my-zsh.sh` (no problem when commented).\r\n\r\n**Expected behavior**\r\nNone\r\n\r\n**System:**\r\n - OS: Fedora 30\r\n - Zsh version: zsh 5.7.1 (x86_64-redhat-linux-gnu)\r\n - Terminal emulator: All terminals affected\r\n",
        "labels": "Bug",
        "id": 43321
    },
    {
        "title": "\"uninstall_oh_my_zsh\" command not working properly",
        "body": "`uninstall_oh_my_zsh` command returns to **bash** instead of **zsh**.\r\n\r\nreproduce steps;\r\n- install oh-my-zsh\r\n- run `uninstall_oh_my_zsh`\r\n\r\nSystem;\r\nMacos Catalina 10.15 with default zsh shell\r\n\r\nI think it's because of this part. There is no .`shell.pre-oh-my-zsh` file in the home directory;\r\n\r\nhttps://github.com/robbyrussell/oh-my-zsh/blob/687c50bdf999f8efd45f3c8f578a62329b0633da/tools/uninstall.sh#L28-L32",
        "labels": "Bug",
        "id": 43322
    },
    {
        "title": "TaskWarrior: tab-completion does not work for project names with spaces",
        "body": "**Describe the bug**\r\nTab-completion does not for for project names that contain spaces\r\n\r\n**To Reproduce**\r\n`task add TEST project:\"Test Project\"`\r\n`task project:\"Test Project\"  list` works.\r\nHowever, I cant tab-complete `task project:`\r\n\r\n**System:**\r\nmacOS, iTerm2, zsh 5.3 (x86_64-apple-darwin17.0)\r\n",
        "labels": "Bug",
        "id": 43323
    },
    {
        "title": "Breezy causes zsh to hang",
        "body": "**Describe the bug**\r\nWith Breezy installed on Debian Bullseye the zsh prompt might hang while waiting for breezy to show the commit revision. (git-status)\r\n\r\nAdditionally within bigger git repositories breezy will hang for enormous amounts of time and produce a git revision like this:\r\n\r\n`  master  bzr@revision-id: git-v1:0xvery_long_shasum`\r\n\r\n**To Reproduce**\r\n\r\n1. Either use a theme with git status or enable git-prompt (bzr-prompt)\r\n2. Clone a bigger repository or use oh-my-zsh\r\n3. Chdir into that folder\r\n4. Wait for the prompt\r\n5. Bonus: see some useless information\r\n\r\n**Expected behavior**\r\nwithin a git repository do not call bzr and do not show its output\r\n\r\n**Screenshots or recordings**\r\n\r\n**System:**\r\n - OS: Linux (Debian Bullseye)\r\n - Zsh version 5.7.1\r\n - Gnome-Terminal\r\n\r\n**Additional context**\r\nIt seems that breezy will provide a bzr and brz binary. I guess it is a drop in replacement for Bazar that additionally supports git.\r\n\r\nI could fix the issue with uninstalling breezy, but there might be people out there who use that versioning tool and their experience will be really bad.",
        "labels": "Bug",
        "id": 43324
    },
    {
        "title": "git branch completion with wrong string",
        "body": "**Describe the bug**\r\nThere is completion without \"fully qualified\" branch name, which yelds to invalid parameter for git.\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Enable plugin 'git'\r\n2. Run commands:\r\n```\r\nmkdir gitCompletionTest\r\ncd gitCompletionTest \r\ngit init\r\ntouch somethingWeird.exe\r\ngit add .\r\ngit commit -m 'commit msg' .\r\n# now create some branches to autocomplete from\r\ngit checkout -B feature/someEasyOne\r\ngit checkout -B feature/ohMyZshIsSmart\r\ngit checkout -B feature/harderOne\r\n```\r\n3. Now try to switch to `feature/ohMyZshIsSmart` using partial branch name and autocompletion. Write: `git checkout Zsh` and hit tab for autocompletion. It will complete command to `git checkout ohMyZshIsSmart`, which will not work\r\n\r\n**Expected behavior**\r\nI expect that tab will expand to 'gitcheckout feature/ohMyZshIsSmart' (full name of branch).\r\n\r\n**System:**\r\n - OS: ubuntu 18.04\r\n - Zsh version: zsh 5.4.2 (x86_64-ubuntu-linux-gnu)\r\n - Terminal emulator: Gnome terminal in i3wm",
        "labels": "Bug",
        "id": 43325
    },
    {
        "title": "Windows line endings in latest update break $PS1 variable",
        "body": "**Describe the bug**\r\nI said yes to the regular update. Now my `$PS1` is messed up. My shell prompt is blank and there are errors.\r\n\r\n**To Reproduce**\r\n1. Be on a Mac (or probably any *nix)\r\n1. Say yes to today's updates\r\n\r\n**Expected behavior**\r\nLife as usual.\r\n\r\n**Screenshots or recordings**\r\n```\r\nLast login: Tue Sep 17 09:26:04 on ttys000\r\n/Users/123456/.oh-my-zsh/plugins/git/git.plugin.zsh:4: command not found: ^M\r\n/Users/123456/.oh-my-zsh/plugins/git/git.plugin.zsh:230: parse error near `&&'\r\n/Users/123456/.oh-my-zsh/themes/robbyrussell.zsh-theme:3: command not found: ^M\r\n\r\nbash\r\nbash-3.2$ zsh\r\n/Users/123456/.oh-my-zsh/plugins/git/git.plugin.zsh:4: command not found: ^M\r\n/Users/123456/.oh-my-zsh/plugins/git/git.plugin.zsh:230: parse error near `&&'\r\n/Users/123456/.oh-my-zsh/themes/robbyrussell.zsh-theme:3: command not found: ^M\r\nls\r\nDesktop    Downloads  Music     Public\r\nDocuments  Library    Movies   Pictures  \r\n```\r\n\r\n**System:**\r\n - OS: Mac\r\n - Zsh version 5.3\r\n - Terminal emulator \"Terminal\" aka the default one on a Mac\r\n\r\n**Additional context**\r\nOk so I just fixed this...\r\n\r\nOpened up the three files there in neovim and said `set ff=unix` and saved. Then I did a `source ~/.zshrc` and boom. Back to normal.\r\n\r\n# Moral of the story:\r\nCan we not leave in Windows line endings in updates? This is the second time this year.\r\n",
        "labels": "Bug",
        "id": 43326
    },
    {
        "title": "Paste issues from putty",
        "body": "i cant paste into putty anymore without getting this error.\r\n**bracketed-paste-magic:zle:47: not enough arguments for -U**\r\n\r\nthis does not happend with bash or just regulat zsh i have tested it. and i did remove all traces from oh-my-zsh before trying to re-install it but same thing happends again.\r\ni deleted this before trying again.\r\n\r\n**.oh-my-zsh\r\n.zcompdump\r\n.zsh-update\r\n.zsh_history\r\n.zshrc**\r\n\r\nnot sure where to look anymore. or what files i can provide to troubleshoot this.\r\ncan also add that i dont got physical access to this machine. \r\nVPS Debian (10) Buster",
        "labels": "Bug",
        "id": 43327
    },
    {
        "title": "Last character of file name randomly added after cursor when pressing tab",
        "body": "**Describe the bug**\r\n\r\nWhen activating autocomplete in a specific case, the last char of the file name will be added after the cursor.\r\n\r\n**To Reproduce**\r\n1. Create a directory\r\n2. Create 2 files in the directory: `test_cert.sh` and `test_a.sh`\r\n3. Type in `./test_.sh` and move the cursor after the underscore (so that the cursor is flashing on the dot)\r\n4. Press tab to activate autocomplete\r\n5. See that an `h` is added after the cursor\r\n\r\n**Expected behavior**\r\n\r\nNo character should be added after the cursor and the autocomplete chooser should appear, letting the user select a file.\r\n\r\n**System:**\r\n - OS: macOS 10.12.6\r\n - Zsh version 5.2\r\n - Terminal emulator iTerm2",
        "labels": "Bug",
        "id": 43328
    },
    {
        "title": "WD Plugin sources a directory with a pattern antibody can't use.",
        "body": "## Describe the bug\r\n[Gitfast](https://github.com/robbyrussell/oh-my-zsh/blob/master/plugins/gitfast/gitfast.plugin.zsh) uses the following at install time to resolve its directory:\r\n`source \"${0:A:h}/git-prompt.sh\"`\r\n\r\n[WD](https://github.com/robbyrussell/oh-my-zsh/blob/master/plugins/wd/wd.plugin.zsh) does something a little different at run time:\r\n`. $ZSH/plugins/wd/wd.sh`\r\n\r\nIn antibody, the latter fails. I would love to move WD to use a similar pattern to Gitfast:\r\n\r\n```\r\nPATH_TO_WD=${0:A:h}\r\n\t\r\nwd() {\r\n    source ${PATH_TO_WD}/wd.sh\r\n}\r\n```\r\n\r\nI would love help testing this in vanilla oh-my-zsh to ensure im not breaking anything :), which I could see happening (though it seems unlikely).\r\n\r\n## To Reproduce\r\nIn antibody load:\r\n```\r\nrobbyrussell/oh-my-zsh path:lib\r\nrobbyrussell/oh-my-zsh path:plugins/wd\r\n```\r\n\r\nThen try: `wd`\r\n\r\nReceive: `wd:.:1: no such file or directory: /plugins/wd/wd.sh`\r\n\r\n## Expected behavior\r\n`wd` does its thing.\r\n\r\n## Screenshots or recordings\r\n<img width=\"1679\" alt=\"Screen Shot 2019-08-29 at 22 58 31\" src=\"https://user-images.githubusercontent.com/9869123/63992234-8a02b980-cab0-11e9-86e5-d08458afb278.png\">\r\n\r\n\r\n## System\r\n - OS: macOS\r\n - Zsh version: 5.7.1\r\n - Terminal emulator: Terminal.app\r\n - Bundler/manager: antibody \r\n\r\n## Additional context\r\nI made a PR [here](https://github.com/robbyrussell/oh-my-zsh/pull/8116)\r\n\r\nYou can test it in antibody by doing:\r\n```\r\nSalomonSmeke/oh-my-zsh path:lib\r\nSalomonSmeke/oh-my-zsh path:plugins/wd\r\n```\r\n\r\nI use it [here](https://github.com/SalomonSmeke/dotfiles/blob/master/.zsh_antibody_plugins.txt) for my [dotfiles repo](https://github.com/SalomonSmeke/dotfiles/).\r\n\r\n**NOTE: This very well may be better suited for the [wd repo](https://github.com/mfaerevaag/wd). But not super sure as oh-my-zsh does not use submodules. That version is also not identical to the version in oh-my-zsh and this one is much easier to adapt for antibody without `.zshrc` side-effects.**",
        "labels": "Bug",
        "id": 43329
    },
    {
        "title": "tmux attach autocomplete shows window information when it should not",
        "body": "**Describe the bug**\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n```bash\r\n$ tl\r\ntmux-session1: 1 windows (created Sat Aug 24 06:01:51 2019)\r\ntmux-session2: 1 windows (created Sat Aug 24 06:01:51 2019)\r\n\r\n$ ta <TAB>\r\ntmux-session1  tmux-session2  -- 1 windows (created Sat Aug 24 06:01:51 2019)  \r\n```\r\n\r\nTab completing the session name shows the window information of the last session, when it should not.\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Enable plugin `tmux`\r\n2. Create one, or multiple tmux sessions\r\n3. Detach from session\r\n4. Attach to session: `$ ta <TAB>`\r\n5. See error\r\n\r\n\r\n**Expected behavior**\r\n\r\n```bash\r\n$ ta <TAB> \r\ntmux-session1  tmux-session2\r\n```\r\n\r\n**System:**\r\n - OS: macOS 10.14.5\r\n - Zsh version: zsh 5.7.1 (x86_64-apple-darwin18.2.0)\r\n - Terminal emulator: Terminal.app\r\n",
        "labels": "Bug",
        "id": 43330
    },
    {
        "title": "git branch completion not working for git switch",
        "body": "**Describe the bug**\r\nWhen typing `git switch ` and pressing <kbd>Tab</kbd> after the space, the tab completion produces a list of file system objects of the current working directory rather than a list of git branch names (i.e. what happens when pressing <kbd>Tab</kbd> after typing `git checkout `).\r\n\r\n**To Reproduce**\r\n\r\n1. Enable plugin gitfast\r\n2. Go to a directory that is a git repository with more than one local branch\r\n3. Type `git switch ` (including the space at the end) and press <kbd>Tab</kbd>\r\n\r\n**Expected behavior**\r\n\r\nIt shows a list of local branch names\r\n\r\n**Actual behavior**\r\n\r\nIt shows a list of file system objects\r\n\r\n**System:**\r\n - OS: Ubuntu\r\n - Zsh version 5.5.1\r\n - Terminal emulator gnome-terminal\r\n\r\n**Additional context**\r\n\r\nRequires git version 2.23.\r\n\r\nIt looks like the the git completion files need to updated (e.g. the gitfast plugin’s completion files are not up to date).\r\n\r\n**Workaround**\r\n\r\nRun the following commands. They place the completion files from the git repository into the `.zsh` directory.\r\n\r\n```sh\r\nmkdir -p ~/.zsh\r\ncurl -o ~/.zsh/git-completion.bash https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash\r\ncurl -o ~/.zsh/_git https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.zsh\r\n```\r\n\r\nAdd the following lines to your `.zshrc` file.\r\n\r\n```\r\n# Load completion files from the ~/.zsh directory.\r\nzstyle ':completion:*:*:git:*' script ~/.zsh/git-completion.bash\r\nfpath=(~/.zsh $fpath)\r\n\r\nautoload -Uz compinit && compinit\r\n```",
        "labels": "Bug",
        "id": 43331
    },
    {
        "title": "cannot uninstall successfully via uninstall.sh",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n<!-- A clear and concise description of what the bug is. -->When I tried to uninstall it via the command line(uninstall.sh), it told me it's successful, but I installed it, and it always showed the error info(you have a ohmyzsh)\r\n\r\n**To Reproduce**\r\n<!--\r\nSteps to reproduce the behavior:\r\n1. Enable plugin '...'\r\n2. Run command '...', _or_ try to complete command '...', _etc._\r\n3. See error\r\n-->\r\n1,open the iterm\r\n2, run the file(uninstall.sh from the tools of OhMyZsh)\r\n3,It told me it's successful\r\n4, I tried to reinstall oh myzsh via install.sh, it shows me the info(Please see the pic)\r\n\r\n**Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n**Screenshots or recordings**\r\n<!--\r\nIf applicable, add screenshots or record an asciinema session (https://asciinema.org/)\r\nto help explain your problem.\r\n-->\r\n\r\n**System:**\r\n - OS: [e.g. macOS]MacOS\r\n - Zsh version [e.g. 5.6] the latest one\r\n - Terminal emulator [e.g. iTerm2] The latest version\r\n\r\n\r\n\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n",
        "labels": "Bug",
        "id": 43332
    },
    {
        "title": "svn tab completion for files does not work",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\nLet's assume that there is a file called 'rescheduler.py' and a directory\r\ncalled 'RESCHEDULE_EXAMPLE' in a svn repository \r\n\r\n```zsh\r\n> svn diff r<TAB> \r\n```\r\ndoes not complete it as expected since it suggests only the directory 'RESCHEDULE_EXAMPLE'.\r\nThe same odd behavior can be also experienced with 'log' argument (i.e. svn log).\r\nIf I disable oh-my-zsh by removing the source command in the .zshrc file\r\nsvn tab completion works as expected.\r\n\r\n**To Reproduce**\r\n<!--\r\nSteps to reproduce the behavior:\r\n1. Enable plugin 'git colorize pip python osx colored-man-pages dirhistory copyfile svn-fast-info'\r\n2. Run command '...', _or_ try to complete command '...', _etc._\r\n\r\nsee above\r\n\r\n3. See error\r\n-->\r\n\r\nsee above\r\n\r\n**Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n**Screenshots or recordings**\r\n<!--\r\nIf applicable, add screenshots or record an asciinema session (https://asciinema.org/)\r\nto help explain your problem.\r\n-->\r\n\r\n**System:**\r\n - OS: [e.g. macOS] mac osx mojave 10.14.6\r\n - Zsh version  zsh 5.7.1 (x86_64-apple-darwin18.2.0)\r\n - Terminal emulator  iTerm2 3.3.2\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n",
        "labels": "Bug",
        "id": 43333
    },
    {
        "title": "Prompt cursor bug made me uninstall",
        "body": "**Describe the bug**\r\nWhen the prompt is very long and close to the width of the terminal and when up arrowing through previous commands, the cursor will jump up another line above if the command is 2 lines long.  See video I made.\r\n\r\n**To Reproduce**\r\n1. Set this prompt:\r\n`PROMPT='%{$fg[cyan]%}[-%{$reset_color%}%D{%F %T} %/ %{$fg[cyan]%}->${reset_color%} '`\r\n2. Go to a really deep directory, something that takes up most of your terminal width\r\n3. Type out a long command that wraps to a lower line and run it\r\n4. Up arrow to the previous command and then use left arrow until it jumps to the next line\r\n5. Continue to left arrow until it jumps another line\r\n\r\n**Expected behavior**\r\nCursor to stay on the line I'm editing\r\n\r\n**Screenshots or recordings**\r\nhttps://www.youtube.com/watch?v=xAtogSdaONs\r\n\r\n**System:**\r\nMacOS\r\nZsh version latest as of yesterday\r\niTerm2 version 3\r\n\r\n**Additional context**\r\nI originally uninstalled zsh because of this bug, but came back for the history management stuff thinking I could just resize my window to clear this issue when I ran in to it, but that doesn't work.\r\n\r\nI suspect this might be the cursor failing to deal with zshell color codes properly?",
        "labels": "Bug",
        "id": 43334
    },
    {
        "title": "Undocumented Terminal.app-specific control sequence is printed from inside vim",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nIn lib/termsupport.zsh, this code:\r\n\r\n```if [[ \"$TERM_PROGRAM\" == \"Apple_Terminal\" ]] && [[ -z \"$INSIDE_EMACS\" ]]; then```\r\n\r\nshould read:\r\n\r\n```\r\nif [[ \"$TERM_PROGRAM\" == \"Apple_Terminal\" ]] && [[ -z \"$INSIDE_EMACS\" ]] && [[ -z \"$VIM\" ]]; then\r\n```\r\n\r\nso that when I run shell commands from vim (e.g. `:!ls`) the control sequence is not included in command output.\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. start a new session in tmux\r\n2. Within tmux run vim\r\n3. Type, `:!ls` and hit `ENTER`.\r\n\r\n**Expected behavior**\r\nThe shell executes the ls command and returns a listing of files in the current directory\r\n\r\n**Expected behavior**\r\nThe shell executes the ls command and returns the following:\r\n\r\n```\r\n^[]7;file://XYZ/Users/ME/src/directory/directory\r\nMakefile\r\nPipfile\r\nREADME.md\r\n__pycache__\r\ntags\r\ntests\r\n```\r\n\r\n**System:**\r\n - OS: macOS\r\n - Zsh version: zsh 5.7.1 (x86_64-apple-darwin17.7.0)\r\n - Terminal emulator: Terminal\r\n",
        "labels": "Bug",
        "id": 43335
    },
    {
        "title": "Terminal closes when type \"git commit -m\"",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nWhen I'm trying to commit a project with \"git commit -m\" the terminal suddenly closes when I reach the \"-\" character.\r\nVscode gives me the error `The terminal process terminated with exit code: 139`\r\n\r\n**To Reproduce**\r\nI'm working on a personal project, I just added some files with the command `git add .` and then when I was going to type \"git commit -m\" the terminal suddenly closes when I type the character \"-\".\r\n_This is only happening with the git commands._\r\n\r\n**System:**\r\n - OS: Windows 10\r\n - Zsh version: 5.4.2\r\n - Terminal emulator: Hyper\r\n",
        "labels": "Bug",
        "id": 43336
    },
    {
        "title": "homestead plugin do not show parsed commands",
        "body": "**Describe the bug**\r\nHomestead plugin do not parse commands\r\n\r\n**To Reproduce**\r\nactivate homestead plugin,\r\nadd shell function for homestead daily usage,\r\ntry print autocomplete commands - `homestead + <tab>`\r\n\r\n**System:**\r\n - OS: 10.14.6\r\n - Zsh version zsh 5.7.1 (x86_64-apple-darwin18.2.0)\r\n - Terminal emulator default terminal 2.9.5 (421.2)\r\n - vagrant 2.2.5\r\n\r\n**Additional context**\r\nI create PR with fix this problem\r\nhttps://github.com/robbyrussell/oh-my-zsh/pull/8008\r\n",
        "labels": "Bug",
        "id": 43337
    },
    {
        "title": "af-magic and python environment variables creates line overflow",
        "body": "**Describe the bug**\r\nIf using Python Virtual environments, `af-magic` theme puts the virtualenv at the front of the line separator and pushes the line into the next terminal line\r\n\r\n**To Reproduce**\r\n1. Have zsh running with the `af-magic` theme\r\n2. Activate a python virtual environment\r\n3. It should display immediately\r\n\r\n**Expected behavior**\r\nThe environment name should display on the command line or the line should justify properly to not create overflow\r\n\r\n**Screenshots or recordings**\r\n![Screen Shot 2019-08-15 at 9 12 00 AM](https://user-images.githubusercontent.com/9310513/63096782-cbd22280-bf3c-11e9-8297-3607452fb585.png)\r\n\r\n\r\n**System:**\r\n - OS: macOS and Fedora 30\r\n - Zsh version: 5.7.1\r\n - Terminal emulator: Hyper and Gnome Terminal",
        "labels": "Bug",
        "id": 43338
    },
    {
        "title": "git-auto-fetch plugin broken?",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n 👋  New zsh user here!\r\n\r\nWhen I enable the `git-auto-fetch` plugin, I get errors on my shell. I'm not sure whether any fetching is occurring either.\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Enable plugin 'git-auto-fetch'\r\n1. Open a new shell.\r\n1. `cd` anywhere; either in or out of a repo directory.\r\n1. See errors, e.g.:\r\n    ```\r\n    ➜ (eval):1: command not found: override-git-auto-fetch-\r\n    ➜ zle-line-init:2: command not found: override-git-auto-fetch-zle-line-init\r\n    ```\r\n\r\n\r\n**Expected behavior**\r\nNo errors, and when in a git directory, for a fetch to occur.\r\n\r\n**System:**\r\n - OS: macOS Mojave 10.14.6\r\n - Zsh version: 5.7.1\r\n - Terminal emulator: iTerm2\r\n",
        "labels": "Bug",
        "id": 43339
    },
    {
        "title": "Faulty behavior of the root shell with the Agnoster theme",
        "body": "**Describe the bug**\r\nI use oh-my-zsh with the agnoster theme and tmux. Usually I administrate these Linux systems with a putty shell over ssh from my Windows system. The shell usually works fine if I stay in the user context of the user I used to connect to the server. But in many cases I switch to the root shell by starting it with \"sudo -i tmux\". There are some problems within this shell:\r\n1. when scrolling history back and forth (ctrl+b page up/down) with tmux, single letters get stuck\r\n2. in the root shell, there is an additional space between the prompt and the command line entry\r\n3. errors occur during auto-completion: e.g. if you type \"cp -\" and then press \"tab\", the strings jump one letter to the left and you type one character at a time, the characters are offset\r\n\r\n**To Reproduce**\r\n1. start PuTTy and connect to the Linux system with a normal user (Debian 8, 9 or 10)\r\n2. Start a root shell: \"sudo -i tmux\"\r\n3. subdivide the window vertically with \"ctrl+b %\".\r\n4. start the command line input and use the auto-complete function\r\n\r\n**Expected behavior**\r\nThe auto-complete should work correctly. The history should not show any artifacts.\r\n\r\n**Screenshots or recordings**\r\n![RemoteDesktopManagerFree_2019-08-07_22-36-50](https://user-images.githubusercontent.com/8094242/62657668-4c09ee00-b967-11e9-9d2c-e8c7023c0cb3.png)\r\n![RemoteDesktopManagerFree_2019-08-07_22-40-23](https://user-images.githubusercontent.com/8094242/62657674-4e6c4800-b967-11e9-9ba0-cc6feb2d08e1.png)\r\n\r\n**System:**\r\n- OS: Windows 10 1903 and Debian 10\r\n- Zsh version: zsh 5.7.1 (x86_64-debian-linux-gnu)\r\n- Terminal emulator: tmux 2.8\r\n\r\n",
        "labels": "Bug",
        "id": 43340
    },
    {
        "title": ".oh-my-zsh/oh-my-zsh.sh:43: parse error near `elif'",
        "body": "**Describe the bug**\r\n.zshrc fails to load due to a parser error in oh-my-zsh.sh\r\n**To Reproduce**\r\n1. Install oh-my-zsh\r\n2. run zsh\r\n3. ???\r\n\r\n**Expected behavior**\r\nThe script runs fine.\r\n\r\n**System:**\r\n - OS:  windows subsystem for linux\r\n - Zsh version zsh 5.4.2 (x86_64-ubuntu-linux-gnu)\r\n\r\n**Additional context**\r\n```sh\r\n 38 # Add all defined plugins to fpath. This must be done\r\n     39 # before running compinit.\r\n     40 for plugin ($plugins); do\r\n     41   if is_plugin $ZSH_CUSTOM $plugin; then\r\n     42     fpath=($ZSH_CUSTOM/plugins/$plugin $fpath)\r\n     43   elif is_plugin $ZSH $plugin; then\r\n     44     fpath=($ZSH/plugins/$plugin $fpath)\r\n     45   else\r\n     46     echo \"[oh-my-zsh] plugin '$plugin' not found\"\r\n     47   fi\r\n     48 done\r\n```",
        "labels": "Bug",
        "id": 43341
    },
    {
        "title": "pressing tab key make broken line",
        "body": "<-- \r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n<!-- A clear and concise description of what the bug is. -->\r\ntab break cli \r\n\r\n**To Reproduce**\r\n<!--\r\nSteps to reproduce the behavior:\r\n1. type any letter\r\n2. press 'tab' key\r\n-->\r\n1. type any letter\r\n2. press 'tab' key\r\n\r\n**Expected behavior**\r\n<!--\r\nI expect the line don't break.\r\n-->\r\nI expect the line don't break.\r\n\r\n**Screenshots or recordings**\r\n<!--\r\n![tab matter](https://user-images.githubusercontent.com/26853553/62420900-ef8fa000-b6d4-11e9-8652-e5389e17002a.gif)\r\n\r\n-->\r\n\r\n**System:**\r\n - OS: 10.15 Beta (19A526h\r\n - Zsh version : zsh 5.7.1 (x86_64-apple-darwin19.0)\r\n - Terminal emulator : Version 2.10 (431)\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n",
        "labels": "Bug",
        "id": 43342
    },
    {
        "title": "no such file or directory: /oh-my-zsh.sh",
        "body": "I looked for lots of solutions in github issues and googling, but I couldn't solve it.\r\n\r\nMy zsh version\r\n\r\n```zsh 5.7.1 (x86_64-apple-darwin18.2.0)```\r\n\r\nMy `~/.zshrc`\r\n\r\n```\r\nexport zsh=\"/users/baeharam/.oh-my-zsh\"\r\nzsh_theme=\"agnoster\"\r\nplugins=(git)\r\nsource $ZSH/oh-my-zsh.sh\r\nexport LANG=ko_KR.UTF-8\r\n\r\nsource /Users/baeharam/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh\r\nprompt_context() {}\r\nprompt_dir() {\r\n  prompt_segment blue black \"%$(( $COLUMNS - 61 ))<...<%3~%<<\"\r\n}\r\n\r\ncd ~/haram/\r\nexport PATH=\"$(yarn global bin):$PATH\"\r\n[[ -s $HOME/.nvm/nvm.sh ]] && . $HOME/.nvm/nvm.sh\r\n```\r\n\r\nHow can I handle this?\r\n",
        "labels": "Bug",
        "id": 43343
    },
    {
        "title": "Tmux Started with a smaller client",
        "body": "**Describe the bug**\r\nTmux started with smaller client.\r\n\r\n**To Reproduce**\r\n<!--\r\nSteps to reproduce the behavior:\r\n1. Enable plugin '...'\r\n2. Run command '...', _or_ try to complete command '...', _etc._\r\n3. See error\r\n-->\r\n1. Enable plugins=(... tmux)\r\n2. Set `ZSH_TMUX_AUTOSTART=true`\r\n3. SSH into remote machine (that also have tmux plugin enabled)\r\n4. Turn off computer, turn on again and open up terminal and it looks like this\r\n![Screenshot from 2019-07-30 15-54-33](https://user-images.githubusercontent.com/13085918/62115608-e53f6180-b2e2-11e9-9562-b4f812a6f100.png)\r\n\r\nDetaching doesn't do anything unless I do `pkill tmux:\\ client`\r\n\r\n\r\n**Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n**Screenshots or recordings**\r\n<!--\r\nIf applicable, add screenshots or record an asciinema session (https://asciinema.org/)\r\nto help explain your problem.\r\n-->\r\n\r\n**System:**\r\n - OS: Ubuntu 18.04\r\n - Zsh version: 5.4.2\r\n - Terminal emulator: gnome-terminal",
        "labels": "Bug",
        "id": 43344
    },
    {
        "title": "gradle-or-gradlew:5: maximum nested function level reached; increase FUNCNEST?",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\nfunction recursion \r\n\r\n**To Reproduce**\r\n<!--\r\nSteps to reproduce the behavior:\r\n1. Enable plugin '...'\r\n2. Run command '...', _or_ try to complete command '...', _etc._\r\n3. See error\r\n-->\r\n1. Enable plugin gradle and mvn \r\n2. gradle-or-gradlew:5: maximum nested function level reached; increase FUNCNEST?\r\n3. the same problem for mvn plugin \r\n\r\n**Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n**Screenshots or recordings**\r\n<!--\r\nIf applicable, add screenshots or record an asciinema session (https://asciinema.org/)\r\nto help explain your problem.\r\n-->\r\n\r\n**System:**\r\n - OS: Manjaro 18.0.4\r\n - Zsh version 5.7.1 \r\n - Terminal emulator Qterminal\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n\r\nlike the gradle and mvn plugin\r\n\r\n```sh\r\ngradle-or-gradlew() {\r\n\tif [ -f ./gradlew ] ; then\r\n\t\techo \"executing gradlew instead of gradle\";\r\n\t\t./gradlew \"$@\";\r\n\telse\r\n\t\tgradle \"$@\";\r\n\tfi\r\n}\r\n\r\nalias gradle=gradle-or-gradlew;\r\n```\r\n\r\nremove the alias will fix this problem, or change alias \r\n\r\n",
        "labels": "Bug",
        "id": 43345
    },
    {
        "title": "Agnoster theme ignores SHOW_AWS_PROMPT=false",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Agnoster theme ignores SHOW_AWS_PROMPT=false**\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n**To Reproduce**\r\n<!--\r\nSteps to reproduce the behavior:\r\n1. Use Agnoster theme\r\n2. In .zshrc set SHOW_AWS_PROMPT=false\r\n3. Set AWS_PROFILE=anything\r\n4. Note \"AWS: anything\" is now on your prompt\r\n-->\r\n\r\n**Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\nWhen SHOW_AWS_PROMPT is set to false it should not appear\r\n**Screenshots or recordings**\r\n<!--\r\nIf applicable, add screenshots or record an asciinema session (https://asciinema.org/)\r\nto help explain your problem.\r\n-->\r\n\r\n**System:**\r\n - OS: MacOS\r\n - Zsh version zsh 5.7.1 (x86_64-apple-darwin18.2.0)\r\n - Terminal emulator iTerm 2\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n",
        "labels": "Bug",
        "id": 43346
    },
    {
        "title": "Extra space after branch name when using Tab to autocomplete git branch",
        "body": "**Describe the bug**\r\nAuto add an extra space after branch name when using tab.\r\n\r\n**To Reproduce**\r\n<!--\r\nSteps to reproduce the behavior:\r\n1. Enable plugin '...'\r\n2. Run command '...', _or_ try to complete command '...', _etc._\r\n3. See error\r\n-->\r\n1. Enable plugin 'git'\r\n2. Move into a git project folder, example we have branch `demo-test`\r\n3. Type command `git checkout demo`, then press Tab\r\n\r\n**Expected behavior**\r\nAuto fill `demo-test` without 2 spaces between branch name and prompt. Only need one.\r\n<img width=\"392\" alt=\"Screen Shot 2019-07-25 at 05 24 42\" src=\"https://user-images.githubusercontent.com/10509903/61833002-3099e000-ae9d-11e9-8307-51ae1f8fc481.png\">\r\n\r\n**Screenshots or recordings**\r\n<img width=\"384\" alt=\"Screen Shot 2019-07-25 at 05 24 32\" src=\"https://user-images.githubusercontent.com/10509903/61833010-3a234800-ae9d-11e9-8f02-0bfcb34dd655.png\">\r\n\r\n\r\n**System:**\r\n - OS: MacOS 10.14.6\r\n - Zsh version: zsh 5.7.1 (x86_64-apple-darwin18.2.0)\r\n - Terminal emulator: iTerm2 and MacOS Terminal\r\n - Default oh-my-zsh theme\r\n - Already run `upgrade_oh_my_zsh` to get latest updates\r\n\r\n**Additional context**\r\nI have two MacBook Pro, one is 2015 and other is 2019.\r\nI think two machines have same config, theme ... but the problem only happened in 2019, 2015 is still normal. ",
        "labels": "Bug",
        "id": 43347
    },
    {
        "title": "command-not-found plugin has strange behavior with unrecognized commands",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nI'm on Ubuntu 18.04 freshly installed with zsh and latest version of oh-my-zsh. I activated the command-not-found plugin.\r\n\r\nWhen I type a command for a program that is not installed everything performs normally:\r\n\r\n```\r\n ✘ xxx  ~  ksh\r\n\r\nCommand 'ksh' not found, but can be installed with:\r\n\r\nsudo apt install ksh \r\nsudo apt install mksh\r\n```\r\n\r\nSame thing if I type a command that *looks* like a known command:\r\n\r\n```\r\n ✘ xxx  ~  ksb\r\n\r\nCommand 'ksb' not found, did you mean:\r\n\r\n  command 'k3b' from deb k3b\r\n  command 'sb' from deb lrzsz\r\n  command 'kgb' from deb kgb\r\n  command 'kdb' from deb elektra-bin\r\n  command 'ksu' from deb heimdal-clients\r\n  command 'ksu' from deb krb5-user\r\n  command 'msb' from deb mysql-sandbox\r\n  command 'ksh' from deb ksh\r\n  command 'ksh' from deb mksh\r\n\r\nTry: sudo apt install <deb name>\r\n```\r\n\r\nBut when I type something totally unrelated to a known command it displays nothing at all:\r\n\r\n```\r\n ✘ xxx  ~  hahahaha\r\n ✘ xxx  ~  \r\n```\r\n\r\n**To Reproduce**\r\nOn ubuntu, try to activate the command-not-found plugin and type an unknown command (like `hahahaha` in my example).\r\n\r\n**Expected behavior**\r\nSomething more similar to a vanilla bash on ubuntu:\r\n\r\n```\r\nxxx:~$ hahahaha\r\nhahahaha: command not found\r\nxxx:~$\r\n```\r\n\r\n**Screenshots or recordings**\r\n\r\n\r\n**System:**\r\n - OS: Ubuntu 18.04\r\n - Zsh version 5.4.2\r\n - Terminal emulator 'Terminal' application on Ubuntu\r\n\r\n**Additional context**\r\n",
        "labels": "Bug",
        "id": 43348
    },
    {
        "title": "cannot uninstall zsh via command",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n<!-- A clear and concise description of what the bug is. -->\r\ncannot uninstall zsh because it has a error info .- no such file /Users/MarcZhao/.zshrc:source:56: no such file or directory: /Users/zhaoxinqiang/.oh-my-zsh/oh-my-zsh.sh\r\n\r\n**To Reproduce**\r\n<!--\r\nSteps to reproduce the behavior:\r\n1. Enable plugin '...'\r\n2. Run command '...', _or_ try to complete command '...', _etc._\r\n3. See error\r\n-->\r\n\r\n**Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n**Screenshots or recordings**\r\n<!--\r\nIf applicable, add screenshots or record an asciinema session (https://asciinema.org/)\r\nto help explain your problem.\r\n-->\r\n\r\n**System:**\r\n - OS: [e.g. macOS]\r\n - Zsh version [e.g. 5.6]\r\n - Terminal emulator [e.g. iTerm2]\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n",
        "labels": "Bug",
        "id": 43349
    },
    {
        "title": "Gradle task auto-completion does not work from within subfolder",
        "body": "**Bug Description**\r\nTrying to auto-complete `../gradlew` from within a subfolder of the place where `gradlew` resides does not work.\r\n\r\n**Steps To Reproduce**\r\n1. Enter the folder where `gradlew` lives.\r\n2. Enter into any subfolder of this folder.\r\n3. Try to auto-complete `../gradlew`.\r\n4. See no auto-completion.\r\n\r\n**Expected behavior**\r\nAuto-completion should interpret the relative path to `gradlew` and use it to gather the Gradle targets. Building subcomponents sometimes requires to build from subfolders, or otherwise all components of the software will be built.\r\n\r\n**System:**\r\n - OS: macOS\r\n - Zsh version: 5.7.1\r\n - Terminal emulator: macOS Terminal",
        "labels": "Bug",
        "id": 43350
    },
    {
        "title": "fzf plugin not aware of debian package",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\nI run Debian testing/sid on my machine and every new shell spits out: \r\n```\r\n[oh-my-zsh] fzf plugin: Cannot find fzf installation directory.\r\n Please add `export FZF_BASE=/path/to/fzf/install/dir` to your .zshrc\r\n```\r\n\r\nWhilst I have fzf package installed:\r\n```\r\ndpkg -l | grep fzf\r\n\r\nii  fzf                               0.18.0-2                     amd64        general-purpose command-line fuzzy finder\r\n```\r\n\r\nUpon further investigation its pretty obvious that debain package installs fzf in a weird way that results in project files being all over the place:\r\n<details><summary>Files for package</summary>\r\n\r\n```\r\ndpkg-query -L fzf\r\n\r\n/usr\r\n/usr/bin\r\n/usr/bin/fzf\r\n/usr/bin/fzf-tmux\r\n/usr/share\r\n/usr/share/bash-completion\r\n/usr/share/bash-completion/completions\r\n/usr/share/bash-completion/completions/fzf\r\n/usr/share/doc\r\n/usr/share/doc/fzf\r\n/usr/share/doc/fzf/README.Debian\r\n/usr/share/doc/fzf/changelog.Debian.gz\r\n/usr/share/doc/fzf/changelog.gz\r\n/usr/share/doc/fzf/copyright\r\n/usr/share/doc/fzf/examples\r\n/usr/share/doc/fzf/examples/fish_user_key_bindings.fish\r\n/usr/share/doc/fzf/examples/fzf.vim\r\n/usr/share/doc/fzf/examples/key-bindings.bash\r\n/usr/share/doc/fzf/examples/key-bindings.fish\r\n/usr/share/doc/fzf/examples/key-bindings.zsh\r\n/usr/share/doc/fzf/examples/plugin\r\n/usr/share/fish\r\n/usr/share/fish/vendor_functions.d\r\n/usr/share/fish/vendor_functions.d/fzf_key_bindings.fish\r\n/usr/share/gocode\r\n/usr/share/gocode/src\r\n/usr/share/gocode/src/github.com\r\n/usr/share/gocode/src/github.com/junegunn\r\n/usr/share/gocode/src/github.com/junegunn/fzf\r\n/usr/share/gocode/src/github.com/junegunn/fzf/go.mod\r\n/usr/share/gocode/src/github.com/junegunn/fzf/go.sum\r\n/usr/share/gocode/src/github.com/junegunn/fzf/main.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/algo\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/algo/algo.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/algo/algo_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/algo/normalize.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/ansi.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/ansi_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/cache.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/cache_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/chunklist.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/chunklist_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/constants.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/core.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/history.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/history_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/item.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/item_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/matcher.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/merger.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/merger_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/options.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/options_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/pattern.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/pattern_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/reader.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/reader_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/result.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/result_others.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/result_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/result_x86.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/terminal.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/terminal_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/terminal_unix.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/terminal_windows.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/tokenizer.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/tokenizer_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/tui\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/tui/dummy.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/tui/light.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/tui/tcell.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/tui/ttyname_unix.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/tui/ttyname_windows.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/tui/tui.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/tui/tui_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/util\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/util/atomicbool.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/util/atomicbool_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/util/chars.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/util/chars_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/util/eventbox.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/util/eventbox_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/util/slab.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/util/util.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/util/util_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/util/util_unix.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/util/util_windows.go\r\n/usr/share/man\r\n/usr/share/man/man1\r\n/usr/share/man/man1/fzf-tmux.1.gz\r\n/usr/share/man/man1/fzf.1.gz\r\n/usr/share/zsh\r\n/usr/share/zsh/vendor-completions\r\n/usr/share/zsh/vendor-completions/_fzf\r\n/usr/share/doc/fzf/examples/plugin/fzf.vim\r\n```\r\n</details>\r\n\r\nAccording to these 2 pages the very same package is available for ubuntu:\r\nhttps://packages.debian.org/sid/utils/fzf\r\nhttps://qa.debian.org/developer.php?login=cdluminate%40gmail.com\r\nI do not have means to confirm this theory, nevertheless there is very little chance that ubuntu and debian packages differ in any way.\r\nATM plugin works fine if fzf installed through pacman (archlinux only pretty much), brew or manual installation via git (https://github.com/junegunn/fzf#using-git)\r\nIt's pretty reasonable to expect plugin picking up system package if it's available.\r\n\r\n@maxbrunet FYI \r\nI've already started working on fixing it, will submit PR soon",
        "labels": "Bug",
        "id": 43351
    },
    {
        "title": "Problem to kill process tree",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nProblem to kill process tree, using CTRL + C,\r\n\r\n**System:**\r\n - OS: Windows 10\r\n - zsh 5.5.1 (x86_64-unknown-cygwin)\r\n - cygwin\r\n",
        "labels": "Bug",
        "id": 43352
    },
    {
        "title": "parse errors for functions in debian.plugin.zsh",
        "body": "**Describe the bug**\r\nIn Debian Buster, zsh 5.7.1 (x86_64-debian-linux-gnu), the debian plugin in OMZ gives parse errors:\r\n\r\n```\r\n/home/username/.oh-my-zsh/plugins/debian/debian.plugin.zsh:75: defining function based on alias `abd'  \r\n/home/username/.oh-my-zsh/plugins/debian/debian.plugin.zsh:75: parse error near `()' \r\n```\r\n\r\nIt appears that it doesn't like the functions being defined here without the \"function\" keyword.  This appears to be able to be fixed by adding \"function\" to all the functions defined in that section, namely:\r\n\r\nline 75: \"function abd() {\"\r\nline 86: \"function ai() {\"\r\nline 91: \"function ap() {\"\r\nline 96: \"function ar() {\"\r\n\r\nI'm not sure how to file a pull request or I'd just do so myself, sorry.\r\n\r\n**To Reproduce**\r\n1.) Enable \"debian\" plugin in zshrc\r\n2.) source ~/.zshrc\r\n3.) Receive parse error\r\n\r\n**Expected behavior**\r\nPlugin should load without issue rather than parse errors\r\n\r\n**System:**\r\n - OS: Debian Buster\r\n - Zsh version: 5.7.1 (x86_64-debian-linux-gnu)\r\n - Terminal emulator: urxvt (rxvt-unicode 9.22-6) with tmux 2.8-3",
        "labels": "Bug",
        "id": 43353
    },
    {
        "title": "schrodingers VIRTUAL_ENV_DISABLE_PROMPT ",
        "body": "**Describe the bug**\r\nthe `virtualenv` command generates a `bin/activate` script that modifies `$PS1` to include the virtual environment name.\r\n\r\noh-my-zsh does something similar with `prompt_virtualenv`\r\n\r\neach script decides whether to display virtualenv information based on the `VIRTUAL_ENV_DISABLE_PROMPT` variable. \r\n\r\nthe virtualenv's activate script uses the `-z` test (string is null, that is, has zero length).  oh-my-zsh uses the `-n` (string is not null)....  not sure how to craft a variable that is both null and not null.\r\n\r\n```\r\nprompt_virtualenv () {\r\n    local virtualenv_path=\"$VIRTUAL_ENV\"\r\n    if [[ -n $virtualenv_path && -n $VIRTUAL_ENV_DISABLE_PROMPT ]]\r\n    then\r\n        prompt_segment blue black \"(`basename $virtualenv_path`)\"\r\n    fi\r\n}\r\n```\r\n\r\n```\r\nif [ -z \"${VIRTUAL_ENV_DISABLE_PROMPT-}\" ] ; then\r\n    _OLD_VIRTUAL_PS1=\"${PS1-}\"\r\n    if [ \"x\" != x ] ; then\r\n        PS1=\"${PS1-}\"\r\n    else\r\n        PS1=\"(`basename \\\"$VIRTUAL_ENV\\\"`) ${PS1-}\"\r\n    fi\r\n    export PS1\r\nfi\r\n```\r\n**To Reproduce**\r\n1. Install oh-my-zsh\r\n2. Install python2's virtualenv\r\n3. create a virtual env `virtualenv test`\r\n4. activate virtualenv `source test/bin/activate`\r\n5. No matter what value you put for `VIRTUAL_ENV_DISABLE_PROMPT` always end up with a munged prompt\r\n\r\n\r\n**Expected behavior**\r\nWhen VIRTUAL_ENV_DISABLE_PROMPT is set, don't display the virtual env in PS1\r\n\r\n**System:**\r\n - OS: OSX 10.14.5\r\n - Zsh version zsh 5.3 (x86_64-apple-darwin18.0)\r\n - Terminal emulator: iterm2\r\n - Virtualenv version: /usr/local/bin/virtualenv --version 16.6.1\r\n - Python version: Python 2.7.16\r\n\r\n",
        "labels": "Bug",
        "id": 43354
    },
    {
        "title": "Plugin npx prevents zsh starting",
        "body": "### Description\r\n\r\nAfter upgrading Oh My Zsh to the latest version (c7a7b70), zsh shells did not start anymore: the prompt don't appear.\r\n\r\nI realized that the [npx plugin](https://github.com/robbyrussell/oh-my-zsh/blob/master/plugins/npx/npx.plugin.zsh) is the cause.\r\n\r\n### Steps to reproduce\r\n\r\n1. `upgrade_oh_my_zsh`\r\n2. Enable plugin \"npx\"\r\n3. Run a new shell\r\n4. See nothing…\r\n\r\n### System\r\n - macOS 10.14.5 (18F132)\r\n - Zsh 5.7.1 (x86_64-apple-darwin18.2.0)\r\n - Terminal.app",
        "labels": "Bug",
        "id": 43355
    },
    {
        "title": "Tab complete moves the cursor to a new upper line",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n<!-- A clear and concise description of what the bug is. -->\r\nEach time I autocomplete on a prefix search matching multiple entries the cursor will go up 2 lines\r\n\r\n**To Reproduce**\r\n<!--\r\nSteps to reproduce the behavior:\r\n1. Enable plugin '...'\r\n2. Run command '...', _or_ try to complete command '...', _etc._\r\n3. See error\r\n-->\r\n1. Apply the config\r\n```\r\nexport ZSH=$HOME/.oh-my-zsh\r\n\r\nZSH_THEME=\"spaceship\"\r\n\r\nSPACESHIP_PROMPT_ORDER=(dir git venv exec_time line_sep battery jobs char)\r\nSPACESHIP_VENV_SYMBOL=🐍·\r\nSPACESHIP_VENV_COLOR=yellow\r\nSPACESHIP_PROMPT_SEPARATE_LINE=true\r\n\r\nplugins=(\r\n    git sudo colorize zsh-autosuggestions zsh-syntax-highlighting\r\n    git-extras virtualenvwrapper django heroku jira\r\n)\r\n\r\nsource $ZSH/oh-my-zsh.sh\r\n```\r\n2. `cd <some_chars_to_match_multiple_folders>`\r\n3.  Press `Tab`\r\n\r\n**Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\nThe cursor should remain on the same line\r\n\r\n**Screenshots or recordings**\r\n<!--\r\nIf applicable, add screenshots or record an asciinema session (https://asciinema.org/)\r\nto help explain your problem.\r\n-->\r\n![multi_line_zsh_problem](https://user-images.githubusercontent.com/11786642/60390106-5ec31480-9ad7-11e9-952a-c2511406a777.gif)\r\n\r\n**System:**\r\n - OS: macOS 10.13.6\r\n - Zsh version: 5.7.1\r\n - Terminal emulator: iTerm2\r\n",
        "labels": "Bug",
        "id": 43356
    },
    {
        "title": "Changing default to zsh declared Y to be an invalid choice",
        "body": "**Describe the bug**\r\nInstalled oh my zsh using the homepage curl command. When I got to `Do you want to change your default shell to zsh? [Y/n]` I typed `Y` and hit enter.\r\n\r\nThe installed then said `Invalid choice. Shell change skipped.`. \r\n\r\nOpening a new session has me in bash instead of zsh.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Install oh-my-zsh using the homepage curl command\r\n2. Select `Y` when asked to make zsh the default shell\r\n3. See error\r\n\r\n**Expected behavior**\r\nIt should accept Y as an answer to a `[Y/n]` question\r\n\r\n**Screenshots or recordings**\r\n![image](https://user-images.githubusercontent.com/2625755/60245501-a3bb3100-98b4-11e9-90b7-afd055ff273b.png)\r\n\r\n**System:**\r\n - OS: macOS 10.14.5\r\n - Zsh version: 5.3\r\n - Terminal emulator: Terminal 2.9.5 \r\n",
        "labels": "Bug",
        "id": 43357
    },
    {
        "title": "`/bin/zsh -c nvm` results in cmd not found, but running `nvm` works fine",
        "body": "**Describe the bug**\r\n\r\nIf I run `nvm` direct from terminal, which is using zsh, it works fine.\r\nIf however, I run `/bin/zsh -c nvm` in that same terminal, I get a command not found error.\r\n\r\n**To Reproduce**\r\n\r\n1. Have zsh installed and as the default terminal\r\n2. Have nvm installed correctly and setup in ~./zshrc\r\n3. Run `nvm` in terminal - should work\r\n4. Run `/bin/zsh -c nvm` - should fail\r\n\r\n**Expected behavior**\r\n\r\nI would expect `/bin/zsh -c nvm` to work correctly unless I've missed something?\r\n\r\n**Screenshots or recordings**\r\n\r\n![image](https://user-images.githubusercontent.com/12371363/60101903-82433380-9754-11e9-845b-341c7b0950e3.png)\r\n\r\n**System:**\r\n - OS: macOS 10.14.4\r\n - Zsh version 5.3\r\n - Terminal emulator ?? Default macOS terminal\r\n\r\n**Additional context**\r\n\r\nDiscovered this whilst configuring custom bash run scripts in RubyMine.\r\n",
        "labels": "Bug",
        "id": 43358
    },
    {
        "title": "Multiple users will use original install",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n<!-- A clear and concise description of what the bug is. -->\r\nWhen I install oh-my-zsh on one user, installing on another user fails. It says it's already installed, citing the other user's folder. Also everything links back to the original users home folder\r\n**To Reproduce**\r\n<!--\r\nSteps to reproduce the behavior:\r\n1. Enable plugin '...'\r\n2. Run command '...', _or_ try to complete command '...', _etc._\r\n3. See error\r\n-->\r\n1. Install for user1\r\n2. Switch to user2\r\n3. Oh-my-zsh refused to install, and if I manually set up ,zshrc it says that I need to take ownership of user1's home directory\r\n**Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\nOh-my-zsh to allow each user to install and have their own settings\r\n**Screenshots or recordings**\r\n<!--\r\nIf applicable, add screenshots or record an asciinema session (https://asciinema.org/)\r\nto help explain your problem.\r\n-->\r\n\r\n**System:**\r\n - OS: Ubuntu 18.04\r\n - Zsh version: 5.4.2\r\n - Terminal emulator [e.g. iTerm2]: none, using SSH session\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n",
        "labels": "Bug",
        "id": 43359
    },
    {
        "title": "Gradle plugin completions not working",
        "body": "Fresh install of omz on Fedora 30. \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Enable plugin 'gradle'\r\n2. git clone https://github.com/jitpack/gradle-simple.git \r\n3. cd gradle-simple\r\n4. ./gradlew [tab]\r\n\r\n**Expected behavior**\r\nShow list of tasks. Nothing is shown. \r\n\r\n**System:**\r\n - OS: Fedora 30\r\n - Zsh version 5.0.2: (x86_64-redhat-linux-gnu)\r\n - Terminal emulator: iTerm2 (ssh)\r\n - Gradle wrapper: Gradle 5.1.1 \r\n\r\n**Additional context**\r\nSame issue presents itself on CentOS 7. It does work on my Mac. Same .zshrc on all hosts.\r\n\r\ngit and docker plugins work.\r\n\r\nI deleted zcomp files and got the same result.\r\n\r\n[zsh5038gradlew1.txt](https://github.com/robbyrussell/oh-my-zsh/files/3316791/zsh5038gradlew1.txt)\r\n\r\n",
        "labels": "Bug",
        "id": 43360
    },
    {
        "title": "Foreign language WINE applications break with oh-my-zsh active due to locale",
        "body": "Hello,\r\n\r\nThe high level issue I'm having is that I regularly run several Windows applications from the command line using WINE, and some of these programs do not work anymore after installing oh-my-zsh.\r\n\r\nI am using Arch Linux. I used the oh-my-zsh installation script from this repo. I confirmed this behavior with no oh-my-zsh plugins or themes active.\r\n\r\nI restored my old `.zshrc` to test, and I confirmed that the applications do run in vanilla zsh, but do not run in oh-my-zsh with no other changes.\r\n\r\nOne thing all the broken applications have in common is that they are expected to only work when run in a Japanese locale. I usually do this with a terminal command of the form `LANG=ja_JP.UTF-8 wine ...`\r\n\r\nIs there an expected change of behavior when using the LANG variable in oh-my-zsh compared to vanilla zsh?\r\n\r\nI am not positive that the problem is related to the foreign language, but it is my best guess at the moment. \r\n\r\nThese WINE applications are an important part of my workflow, so I would greatly appreciate any help you can give in overcoming this issue. I am happy to do anything I can on my end to provide more information.",
        "labels": "Bug",
        "id": 43361
    },
    {
        "title": "Line wrapping problem during using ssh under Windows.",
        "body": "**Describe the bug**\r\nI've installed OMZ on my server, and it works well when I log in with ssh under Mac OS. \r\nHowever, when I use any kind of command line tools under Windows to log in my server, the prompt always breaks into two lines, also, it usually messes up the type-in area.\r\n**To Reproduce**\r\n1. Use CMD or Powershell\r\n2. Log in a server with ssh\r\n3. The bug should be obvious\r\n\r\n**Expected behavior**\r\nThe exact one-line prompt\r\n\r\n**Screenshots or recordings**\r\n![image](https://user-images.githubusercontent.com/5158408/59626501-a01a0280-916e-11e9-9828-4a0d7768cd74.png)\r\n![image](https://user-images.githubusercontent.com/5158408/59626543-bd4ed100-916e-11e9-9e89-741b3088e795.png)\r\n![image](https://user-images.githubusercontent.com/5158408/59626652-03a43000-916f-11e9-85bc-75691c78a7cb.png)\r\n\r\n**System:**\r\n - OS: Ubuntu 19.04\r\n - Zsh version 5.5.1\r\n - Terminal emulator Powershell, Fluent Terminal, CMD\r\n",
        "labels": "Bug",
        "id": 43362
    },
    {
        "title": "Uninstall script syntax error",
        "body": "\r\n\r\n**Describe the bug**\r\n```\r\nmachine% sh ~/.oh-my-zsh/tools/uninstall.sh\r\nAre you sure you want to remove Oh My Zsh? [y/N] y\r\n': not a valid identifiers/uninstall.sh: line 1: read: `confirmation\r\n/Users/ph/.oh-my-zsh/tools/uninstall.sh: line 45: syntax error: unexpected end of file\r\nmachine%\r\n```\r\n\r\n**To Reproduce**\r\njust run the uninstall\r\n\r\n**Expected behavior**\r\nto work\r\n\r\n**System:**\r\n - OS: mojave\r\n - Zsh version 5.7.1\r\n - Terminal emulator: iTerm2\r\n\r\n",
        "labels": "Bug",
        "id": 43363
    },
    {
        "title": "kubectl plugin config aliases broken?",
        "body": "**Describe the bug**\r\nUsing the aliases kccc and kcsc don't seem to be working.\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n**To Reproduce**\r\n1. Run kccc\r\n2. Run kcsc new_context\r\n3. Run kccc\r\n\r\n**Expected behavior**\r\nI expect to have the context switch to new_context.\r\n\r\n**System:**\r\n - OS: macOS\r\n - Zsh version 5.3\r\n - Using macOS Terminal\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n➜  kubectl version -o yaml\r\nclientVersion:\r\n  buildDate: 2019-03-25T02:52:13Z\r\n  compiler: gc\r\n  gitCommit: 6f482974b76db3f1e0f5d24605a9d1d38fad9a2b\r\n  gitTreeState: clean\r\n  gitVersion: v1.12.7\r\n  goVersion: go1.10.8\r\n  major: \"1\"\r\n  minor: \"12\"\r\n  platform: darwin/amd64\r\n\r\n\r\nI believe aliases should be changed to something like `kubectl config set set-context`",
        "labels": "Bug",
        "id": 43364
    },
    {
        "title": "overriding `agp` (conflict between 'ubuntu' and 'aws') fails  ",
        "body": "I placed plugin **aws** later than  **ubuntu**, which should override **ubuntu**'s `agp` to **aws**'s.\r\n\r\n```bash\r\nplugins=(\r\nubuntu\r\n#... some other plugins\r\naws\r\n)\r\n```\r\n\r\nHowever, override fails. `agp` is still `apt purge`. The error message below is printed every time I open a new shell.\r\n\r\n```\r\n/home/gilchan/.oh-my-zsh/plugins/aws/aws.plugin.zsh:1: defining function based on alias `agp'\r\n/home/gilchan/.oh-my-zsh/plugins/aws/aws.plugin.zsh:1: parse error near `()'\r\n```\r\n\r\nBefore update today, this hasn't happened with the same setting.",
        "labels": "Bug",
        "id": 43365
    },
    {
        "title": "safe-paste breaks zle vi editing",
        "body": "## Description\r\n\r\nGiven:\r\n* [`safe-paste`](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/safe-paste) is loaded\r\n* Some text is pasted\r\n\r\nThen:\r\n * It is no longer possible to use the `zle` vi editing commands\r\n\r\n## To reproduce\r\n\r\n**Common steps to reproduce:**\r\n\r\n1. Copy the text `clipboard` into the clipboard\r\n1. Open new terminal\r\n1. Start a new `zsh` with no user system or user configuration:\r\n\r\n       VISUAL=vi zsh -f\r\n\r\n1. Paste the clipboard\r\n1. Press keys: <kbd>esc</kbd> <kbd>I</kbd> <kbd>:</kbd> <kbd>space</kbd> \r\n\r\n**Default (and expected) behaviour:**\r\n\r\nThe prompt shows: \r\n\r\n    svelte% : |clipboard\r\n\r\nWhere `|` is the cursor\r\n\r\n\r\n**Load `safe-paste`:**\r\n\r\n    source <(curl -s 'https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/plugins/safe-paste/safe-paste.plugin.zsh')\r\n\r\n**Actual behaviour after loading `safe-paste`:**\r\n\r\nThe command line shows:\r\n    \r\n    svelte% clipboard: |\r\n\r\nWhere `|` is the cursor\r\n\r\n**System:**\r\n - OS: `Linux svelte 5.0.9-2-MANJARO #1 SMP PREEMPT Sun Apr 21 07:11:08 UTC 2019 x86_64 GNU/Linux`\r\n - Zsh version: `zsh 5.7.1 (x86_64-pc-linux-gnu)`\r\n - Terminal emulator: rxvt\r\n\r\n**Related Issues:**\r\n\r\n* [Safe-paste plugin breaks Home/End keys #5237](https://github.com/robbyrussell/oh-my-zsh/issues/5237)\r\n* [Plugin 'safe-paste' messes with 'history-substring-search' #5149](https://github.com/robbyrussell/oh-my-zsh/issues/5149)\r\n\r\nBoth of the above claim to be resolved by [Ditch smkx in favor of custom bindkey extension #5113](https://github.com/robbyrussell/oh-my-zsh/pull/5113) which is still unmerged after being raised on  on 24 May 2016.\r\n\r\nOther, possible related issues:\r\n\r\n* [[Tracking] Terminal and terminfo related issues #4344](https://github.com/robbyrussell/oh-my-zsh/issues/4344) - A meta issue tracking issue\r\n* [The safe-paste plugin does not make pasting safe and breaks other features. #1742](https://github.com/robbyrussell/oh-my-zsh/issues/1742) - On a flaw in the code as written\r\n\r\n",
        "labels": "Bug",
        "id": 43366
    },
    {
        "title": "Yarn plugin does not install completions",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\nYarn plugin does not install completions\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n**To Reproduce**\r\n\r\nAdded `yarn` to the plugins list in .zshrc and restarted zsh\r\n**Expected:** Typing `yarn <TAB>` should list available yarn commands\r\n**Actual:** files are being completed\r\n\r\n**System:**\r\nUbuntu, zsh 5.4.2, Gnome terminal\r\n\r\n**Probable cause** the plugin.zsh file only contains a bunch of aliases - no mention of the _yarn completion file. Probably the install command is missing?",
        "labels": "Bug",
        "id": 43367
    },
    {
        "title": "aws plugin doesn't validate profile name",
        "body": "<img width=\"663\" alt=\"Screenshot 2019-05-24 at 14 14 47\" src=\"https://user-images.githubusercontent.com/9281169/58368936-3ac25100-7ee3-11e9-836c-5684fa5dfb2f.png\">\r\n\r\nI made a typo ``aws-devv`` in spite of ``aws-dev`` and I was able to switch to an invalid profile. I found that PR https://github.com/robbyrussell/oh-my-zsh/pull/7839 solves it.",
        "labels": "Bug",
        "id": 43368
    },
    {
        "title": "After updating \"command not found: compdef\"",
        "body": "https://github.com/robbyrussell/oh-my-zsh/blob/486fa1010df847bfd8823b4492623afc7c935709/lib/directories.zsh#L32\r\n\r\nSeems that after the update I keep getting:\r\n~/.oh-my-zsh/lib/directories.zsh:32: command not found: compdef\r\n",
        "labels": "Bug",
        "id": 43369
    },
    {
        "title": "vi-mode doesn't update",
        "body": "if I press enter while in normal mode the `<<<` remains on the next command line even though I have been put back into insert mode",
        "labels": "Bug",
        "id": 43370
    },
    {
        "title": "GClean should NOT be defined in the git plugin",
        "body": "gclean is a very dangerous alias to have defined in the git plugin. I just discovered it today, and it caused me to lose my source for an app. I thought it was associated with the gcloud command (Hey same prefix), and thought it would clear the app resources out. I was wrong. But a single command that wipes out all of the things should not be included by default.",
        "labels": "Bug",
        "id": 43371
    },
    {
        "title": "grt alias",
        "body": "the `grt` alias here https://github.com/robbyrussell/oh-my-zsh/wiki/Cheatsheet does not work if the path has spaces",
        "labels": "Bug",
        "id": 43372
    },
    {
        "title": "Vi mode breaks special characters ( Home, End, Delete, Backspace)",
        "body": "Experienced on: MacOs and Fedora26.\r\nZsh works fine untill I turn on Vi mode ( either by `set -o vi` or `bindkey -v`).\r\n\r\nNo `bindkey` solutions worked for me.",
        "labels": "Bug",
        "id": 43373
    },
    {
        "title": "Sublime plugin error",
        "body": "I'm getting the following error after adding the Sublime Plugin in .zshrc and running `source ~/.zshrc `\r\n```\r\n/home/username/.oh-my-zsh/plugins/sublime/sublime.plugin.zsh:36: defining function based on alias `subl'\r\n/home/username/.oh-my-zsh/plugins/sublime/sublime.plugin.zsh:39: parse error near `()'\r\n```\r\nI'm on Ubuntu 18.04.2.",
        "labels": "Bug",
        "id": 43374
    },
    {
        "title": "OMZ still trying to load after being uninstalled",
        "body": "Possibly related to #9629\r\n\r\n<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n\r\n```\r\n➜  ~ git:(master) uninstall_oh_my_zsh\r\nAre you sure you want to remove Oh My Zsh? [y/N] y\r\nRemoving ~/.oh-my-zsh\r\nLooking for original zsh config...\r\nSwitching your shell back to '/bin/bash':\r\nChanging shell for justin.collum.\r\nPassword for justin.collum:\r\nchsh: no changes made\r\nThanks for trying out Oh My Zsh. It's been uninstalled.\r\nDon't forget to restart your terminal!\r\n```\r\nSo I restart my terminal and get: \r\n\r\n```\r\n/Users/justin.collum/.zshrc:source:73: no such file or directory: /Users/justin.collum/.oh-my-zsh/oh-my-zsh.sh\r\nbashcompinit:75: parse error near `('\r\ncompinit:141: parse error: condition expected: $1\r\n/Users/justin.collum/.nvm/bash_completion:95: command not found: complete\r\njustin.collum@m-jcollum cistern % which go\r\ngo not found\r\njustin.collum@m-jcollum cistern %\r\n\r\n```\r\n\r\n` /Users/justin.collum/.oh-my-zsh/oh-my-zsh.sh` should not be loading after an uninstall. \r\n\r\n**Expected behavior**\r\nNormal zshell should be running. \r\n\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n```\r\n zsh --version\r\nzsh 5.7.1 (x86_64-apple-darwin19.0)\r\n```\r\n - Terminal emulator: iTerm2\r\n",
        "labels": "Bug",
        "id": 43375
    },
    {
        "title": "/usr/local/Cellar/fortune/9708/share/games/fortunes/off: No such file or directory",
        "body": "I experienced the issue raised [here](https://github.com/ohmyzsh/ohmyzsh/issues/3271), which prompted me to `brew install fortune`.\r\n\r\nA new error occurs now, presumably because `brew` [has removed offensive quotes](https://github.com/Homebrew/brew/issues/8811):\r\n\r\n```/usr/local/Cellar/fortune/9708/share/games/fortunes/off: No such file or directory```\r\n\r\nHow can one edit the `adben` to ignore missing quotes?\r\n\r\nReproduction steps (on Mac):\r\n1. Set theme to `adben`\r\n2. Experience error `ps1_fortune:2: command not found: fortune`\r\n3. `brew install fortune`\r\n4. Error `/usr/local/Cellar/fortune/9708/share/games/fortunes/off: No such file or directory`\r\n\r\nIdeal scenario:\r\n1. Set theme to `adben`\r\n2. Experience no errors",
        "labels": "Bug",
        "id": 43376
    },
    {
        "title": "uninstall_oh_my_zsh did not revert to previous zsh configuration",
        "body": "**Describe the bug**\r\noh-my-zsh did not correctly uninstall.  (or maybe, never correctly installed with a backup of .zshrc) It left behind the oh-my-zsh .zshrc file.  This caused an error as it tried to load an oh-my-zsh file that no longer existed.  No .zshrc.orig was found after uninstall.\r\n\r\n**To Reproduce**\r\nInstalled using curl\r\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\r\n\r\nuninstalled using uninstall_oh_my_zsh\r\n\r\n**Expected behavior**\r\nreturn to normal behavior of mac zsh.  restore original .zshrc file\r\n\r\n**Screenshots and/or Recordings**\r\nNone\r\n\r\n**Self Check**\r\n\r\n- Have you tried reaching out on the [Discord server](https://discord.gg/ohmyzsh)?   Not a member\r\n\r\n- Also searching existing [GitHub Issues](https://github.com/ohmyzsh/ohmyzsh/issues?q=) might help you get quicker support.  Searched\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: Mac OS Catalina 10.15.7\r\n - Latest ohmyzsh update?: Yes.  Installed 2 days ago\r\n - ZSH Version:  Unknown.  Uninstalled\r\n - Terminal emulator: Mac OS Terminal Version 2.10 (433)\r\n\r\n**Additional context**\r\nWas running Agnoster at time of uninstall\r\n",
        "labels": "Bug",
        "id": 43377
    },
    {
        "title": "vi-mode error when copy/paste",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\nWhen using vi-mode and yanking a line, printing one, or doing anything related buffers, an error message is printed:\r\n`clipcopy: Platform freebsd12.1 not supported or xclip/xsel not installed`. Works fine within tmux though. As it has been working in the past, I've been able to pinpoint the commit that made the problem appear: 98762faa0762e1f0ede05149c1f6b3a9db93e074\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Enable vi-mode\r\n2. Change mode by pressing ESC\r\n3. Type yy (yank line)\r\n\r\n**Expected behavior**\r\nIn case of yy the line should be stored in the default buffer\r\n\r\n**Recording**\r\n[![asciicast](https://asciinema.org/a/pWGkyQ42gOhKQKXESFLUSgvsU.svg)](https://asciinema.org/a/pWGkyQ42gOhKQKXESFLUSgvsU)\r\n\r\n\r\n - OS / Distro: FreeBSD 12.2\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: 5.8\r\n - Terminal emulator: MacOS Terminal\r\n",
        "labels": "Bug",
        "id": 43378
    },
    {
        "title": "Battery plugin shows incorrect values when you have two batteries in Linux",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nThe battery plugin shows a value like\r\n```\r\nryan@magellan [07:47:34] [~]  10098%\r\n-> %\r\n```\r\n\r\n**To Reproduce**\r\nHave a laptop with two or more batteries running linux, such as my ThinkPad T580.  Or emulate it with the following output from the acpi program.\r\n\r\n```\r\n-> % acpi\r\nBattery 0: Full, 100%\r\nBattery 1: Discharging, 97%, 03:28:57 remaining\r\nryan@magellan [07:49:34] [~]  10097%\r\n```\r\n\r\n**Expected behavior**\r\nSomething sane, but not reporting 10,000% battery level :)\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - Debian Bullseye/Testing\r\n - ZSH Version: 5.8\r\n - Terminal emulator: Konsole (KDE), but it's obviously present in every other console including xterm",
        "labels": "Bug",
        "id": 43379
    },
    {
        "title": "vi-mode: `vv` doesn't open editor with low `$KEYTIMEOUT` value",
        "body": "**Describe the bug**\r\nAfter the latest update where new sequence to open editor as line editor (double vv) is introduced, editor doesn't open. \r\n\r\n**To Reproduce**\r\nInput command, enter vi-mode, press **vv**.\r\n\r\n**Expected behavior**\r\n$EDITOR opens to edit the line instead of editing inline.\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: macOS\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: 5.8\r\n - Terminal emulator: Alacritty + iTerm2\r\n",
        "labels": "Bug",
        "id": 43380
    },
    {
        "title": "set -a brokes paste with zsh",
        "body": "\r\n**Describe the bug**\r\nPaste is not working when using `set -a`\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. In Terminal: `set -a`\r\n2. Try Paste something\r\n3. It will overwrite the whole line and double paste the content\r\n\r\n**Expected behavior**\r\nOnly paste the content once without overwrite the already written line \r\n\r\n**Screenshots and/or Recordings**\r\n![example](https://i.imgur.com/5kR0pKP.png)\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: Fedora 33\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: 5.8\r\n - Terminal emulator: Tilix, guake\r\n\r\n**Additional context**\r\nTested with no plugins\r\n",
        "labels": "Bug",
        "id": 43381
    },
    {
        "title": "A permission problem of \"omz update\"",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nWhen I update ohmyzsh in my remote server, there is always a permision problem and then the ssh connection is closed.\r\n\r\nFortunately, I open a new terminal and find that ohmyzsh is up-to-date and there seems to be no more problems except that permission problem.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. run `omz update`\r\n\r\n**Expected behavior**\r\nUpdate ohmyzsh sucessfully.\r\n\r\n**Screenshots and/or Recordings**\r\n```\r\nUpdating Oh My Zsh\r\nremote: Enumerating objects: 15, done.\r\nremote: Counting objects: 100% (15/15), done.\r\nremote: Compressing objects: 100% (2/2), done.\r\nremote: Total 9 (delta 7), reused 9 (delta 7), pack-reused 0\r\nUnpacking objects: 100% (9/9), done.\r\n来自 https://github.com/ohmyzsh/ohmyzsh\r\n * branch            master     -> FETCH_HEAD\r\n plugins/genpass/genpass-xkcd | 2 +-\r\n tools/upgrade.sh             | 8 ++------\r\n 2 files changed, 3 insertions(+), 7 deletions(-)\r\n首先，重置头指针以便在上面重放您的工作...\r\n快进 master 至 4b2431e8b1c08a2dc14fe31bf07a5e5f08eaa87e。\r\nYou can see the changelog again with `omz changelog`\r\n         __                                     __\r\n  ____  / /_     ____ ___  __  __   ____  _____/ /_\r\n / __ \\/ __ \\   / __ `__ \\/ / / /  /_  / / ___/ __ \\\r\n/ /_/ / / / /  / / / / / / /_/ /    / /_(__  ) / / /\r\n\\____/_/ /_/  /_/ /_/ /_/\\__, /    /___/____/_/ /_/\r\n                        /____/\r\n\r\nHooray! Oh My Zsh has been updated!\r\nTo keep up with the latest news and updates, follow us on Twitter: https://twitter.com/ohmyzsh\r\nWant to get involved in the community? Join our Discord: https://discord.gg/ohmyzsh\r\nGet your Oh My Zsh swag at: https://shop.planetargon.com/collections/oh-my-zsh\r\n_omz::update:18: 权限不够:\r\nConnection to 10.xxx.xxx.xxx closed.\r\n\r\n[已退出进程，代码为 126]\r\n```\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: CentOS Linux\r\n - Latest ohmyzsh update?: Yes. Last time I updated ohmyzsh is about a week ago and I update it today (2020/12/30). There is always a permission problem.\r\n - ZSH Version: zsh 5.0.2 (x86_64-redhat-linux-gnu)\r\n\r\n**Additional context**\r\nTheme: ys\r\nplugins: tmux conda-zsh-completion zsh-syntax-highlighting\r\ngit version: 1.8.3.1\r\nLinux version: `Linux xxx 3.10.0-957.5.1.el7.x86_64 #1 SMP Fri Feb 1 14:54:57 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux`\r\nCentOS release: CentOS Linux release 7.6.1810 (Core)",
        "labels": "Bug",
        "id": 43382
    },
    {
        "title": "genpass-zkcd is not working for me.",
        "body": "Genpass works great except for my favorite one: genpass-xkcd\r\n\r\n**Describe the bug**\r\n`➜  ~ genpass-xkcd`\r\n`genpass-xkcd:46: unknown function: log2`\r\n`➜  ~ genpass-xkcd 3`\r\n`genpass-xkcd:46: unknown function: log2`\r\n`➜  ~ genpass-monkey`\r\n`1fw6q52acbmqhjwcf5t05qdcvn`\r\n`➜  ~ genpass-apple`\r\n`gecwox-wyVpem-qivwar-kompat-hyqtox-kysmu2`\r\n\r\n**To Reproduce**\r\n\r\n1. Added plugin to my ~/.zshrc  here\r\n`plugins=(git genpass)`\r\n2. Run command 'genpass-xkcd '\r\n3. Error is `unknown function: log2`\r\n\r\n\r\n\r\n**Desktop:**\r\n\r\n -  Linux Mint 19.2 Cinnamon\r\n\r\n",
        "labels": "Bug",
        "id": 43383
    },
    {
        "title": "Support for entering numbers via numpad",
        "body": "\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\nFor sure the git autocomplete stuff, but from what I understand it's a zsh problem in general. \r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nI try to type my branch names in git using the numpad on my Apple magic keyboard, but it doesn't except the numbers from there\r\n\r\n**Describe the solution you'd like**\r\nUse my numpad to type in command line\r\n\r\n**Describe alternatives you've considered**\r\nI've seen this [post](https://superuser.com/questions/742171/zsh-z-shell-numpad-numlock-doesnt-work)\r\n\r\n**Related Issues**\r\nHaven't looked, but know it's a reproducible and felt problem\r\n",
        "labels": "Bug",
        "id": 43384
    },
    {
        "title": "/proc/self/fd/12 is not a regular file (use -f to see it)",
        "body": "##### 1. Look for similar issues already posted (including closed ones)\r\nNone found\r\n##### 2. Include as much relevant information as possible\r\nOn latest `omz update`, the following output was generated -\r\n```\r\n❯ omz update\r\nUpdating Oh My Zsh\r\nremote: Enumerating objects: 155, done.\r\nremote: Counting objects: 100% (143/143), done.\r\nremote: Compressing objects: 100% (61/61), done.\r\nremote: Total 98 (delta 68), reused 67 (delta 37), pack-reused 0\r\nUnpacking objects: 100% (98/98), 17.19 KiB | 374.00 KiB/s, done.\r\nFrom https://github.com/ohmyzsh/ohmyzsh\r\n * branch            master     -> FETCH_HEAD\r\n   3f8af04..2826581  master     -> origin/master\r\n .github/CODEOWNERS                                     |   1 +\r\n lib/cli.zsh                                            |  10 +++++--\r\n lib/functions.zsh                                      |  19 ++-----------\r\n lib/git.zsh                                            |  23 ++++++++++++----\r\n plugins/archlinux/archlinux.plugin.zsh                 |  18 ++++++-------\r\n plugins/command-not-found/command-not-found.plugin.zsh |  24 +++++++++++++----\r\n plugins/common-aliases/README.md                       |   4 ++-\r\n plugins/common-aliases/common-aliases.plugin.zsh       |   2 +-\r\n plugins/git-prompt/gitstatus.py                        |   4 +--\r\n plugins/git/git.plugin.zsh                             |   1 +\r\n plugins/grc/README.md                                  |  37 ++++++++++++++++++++++++++\r\n plugins/grc/grc.plugin.zsh                             |  44 ++++++++++++++++++++++++++++++\r\n plugins/hanami/README.md                               |  63 ++++++++++++++++++++++++++-----------------\r\n plugins/hanami/hanami.plugin.zsh                       |   6 ++---\r\n plugins/wp-cli/README.md                               | 202 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++--------------------------------------------------------------------\r\n plugins/wp-cli/wp-cli.plugin.zsh                       |  51 +++++------------------------------\r\n tools/changelog.sh                                     |  26 +++++++++---------\r\n tools/check_for_upgrade.sh                             |   2 +-\r\n tools/upgrade.sh                                       |  10 ++++---\r\n 19 files changed, 314 insertions(+), 233 deletions(-)\r\n create mode 100644 plugins/grc/README.md\r\n create mode 100644 plugins/grc/grc.plugin.zsh\r\nSuccessfully rebased and updated refs/heads/master.\r\n/proc/self/fd/12 is not a regular file (use -f to see it)\r\n         __                                     __   \r\n  ____  / /_     ____ ___  __  __   ____  _____/ /_  \r\n / __ \\/ __ \\   / __ `__ \\/ / / /  /_  / / ___/ __ \\ \r\n/ /_/ / / / /  / / / / / / /_/ /    / /_(__  ) / / / \r\n\\____/_/ /_/  /_/ /_/ /_/\\__, /    /___/____/_/ /_/  \r\n                        /____/                       \r\n\r\nHooray! Oh My Zsh has been updated!\r\nTo keep up with the latest news and updates, follow us on Twitter: https://twitter.com/ohmyzsh\r\nWant to get involved in the community? Join our Discord: https://discord.gg/ohmyzsh\r\nGet your Oh My Zsh swag at: https://shop.planetargon.com/collections/oh-my-zsh\r\n```\r\nNotice the line just above the ASCII logo -\r\n```\r\n/proc/self/fd/12 is not a regular file (use -f to see it)\r\n```\r\nI have got no idea what/why it was shown.\r\nAny ideas/explanations?\r\n\r\n##### 3. Try to make sure the issue is due to Oh My Zsh\r\n`omz update` is of ohmyzsh :upside_down_face: ",
        "labels": "Bug",
        "id": 43385
    },
    {
        "title": "Don't pipe changelog.sh output through less if \"--unattended\" was used with \"omz update\".",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n\r\n`changelog.sh` can pipe output through `less` requiring user intervention to close.  This is unexpected if `omz update` was called with the `--unattended` option.\r\n\r\n**To Reproduce**\r\n\r\nOf course only triggers if any updates were pulled down, so I need to run a `git reset` first.\r\n\r\n1. `git reset HEAD^ --hard`\r\n2. `omz update --unattended` \r\n\r\n**Expected behavior**\r\n\r\nFor `--unattended` I'd expect `less` to not be used, or perhaps no display of the changelog.\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: **macOS 10.14.6**\r\n - Latest ohmyzsh update?: **Yes**\r\n - ZSH Version: **5.8 (via Homebrew)**\r\n - Terminal emulator: **iTerm2**\r\n\r\n**Additional context**\r\n\r\nPerhaps not context for this actual bug, but note that I had to upgrade ZSH in order for the `changelog.sh` script to even work.  The default version of ZSH in macOS 10.14.6 (version 5.3) produces the error `./changelog.sh:10: no matches found: [build]=Build system`.  As mentioned, I fixed this by upgrading my installed version of ZSH.",
        "labels": "Bug",
        "id": 43386
    },
    {
        "title": "Various bugs in magic-enter plugin",
        "body": "**Describe the bug**\r\nWhen using magic-enter together with zsh-autosuggestions, a displayed executed command contains an autosuggestion part, as if the suggestion was accepted and run, even if that's not the case. \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Start with the following:\r\n```\r\n$ cd \"$(mktemp -d)\"\r\n$ ZDOTDIR=$PWD HOME=$PWD zsh -f\r\n% source path/to/ohmyzsh/plugins/magic-enter/magic-enter.plugin.zsh; source path/to/zsh-autosuggestions/zsh-autosuggestions.plugin.zsh\r\n% touch foo\r\n% ls foo\r\nfoo\r\n% ls \r\n```\r\n2. On the last line, make sure you press Space after ls, so you get the suggestion foo.\r\n3. Then, press Enter.\r\n\r\n**Expected behavior**\r\nThe suggestion should be cleared, as it is without `magic-enter`.\r\n\r\n**Actual Result** \r\nThe suggestion remains.\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: macOS\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: 5.6\r\n - Terminal emulator: iTerm2\r\n\r\n**Related**\r\nhttps://github.com/marlonrichert/zsh-autocomplete/issues/131",
        "labels": "Bug",
        "id": 43387
    },
    {
        "title": "git-auto-fetch lags while get fetch is performed",
        "body": "Feature request is related to `ohmyzsh/plugins/git-auto-fetch/`. I observe that it makes terminal freeze for a second when fetching is performed.\r\n\r\nHere https://github.com/ohmyzsh/ohmyzsh/blob/26df8a22741ea4bb5264233344e42ce900fd26b6/plugins/git-auto-fetch/git-auto-fetch.plugin.zsh#L9\r\n\r\n`git fetch 2>/dev/null` operation is slow and makes terminal to halt or freeze for a second while its on process.\r\n\r\nInstead following approach might help to remove the lag:\r\n\r\nUsing `(&>/dev/null git fetch &)` will let `git fetch` to run on the background and does not let terminal shell to be freeze for a second.\r\n\r\n```bash\r\nfunction git-fetch-all {\r\n    (`command git rev-parse --is-inside-work-tree 2>/dev/null` &&\r\n         dir=`command git rev-parse --git-dir` &&\r\n         [[ ! -f $dir/NO_AUTO_FETCH ]] &&\r\n         (( `date +%s` - `date -r $dir/FETCH_LOG +%s 2>/dev/null || echo 0` > $GIT_AUTO_FETCH_INTERVAL )) &&\r\n         GIT_SSH_COMMAND=\"command ssh -o BatchMode=yes\" command \\\r\n                        ~/git_zsh_fetch.sh )\r\n}\r\n```\r\n\r\n`git_zsh_fetch.sh` :\r\n\r\n```bash\r\n#!/bin/bash\r\n\r\n(&>/dev/null git fetch --all &)\r\n(&>/dev/null git pull --rebase --autostash &)\r\n```",
        "labels": "Bug",
        "id": 43388
    },
    {
        "title": "git_prompt_status broken because of regexp",
        "body": "https://github.com/ohmyzsh/ohmyzsh/blob/23760228908d14a4644718869d5ebfb7b0dde6a7/lib/git.zsh#L229\r\n\r\nThis regexp does not seem to match, at least on my MacOS. \r\nIf I change it to `local status_regex=\"$status_prefix\"` then it works again.\r\n\r\n",
        "labels": "Bug",
        "id": 43389
    },
    {
        "title": "Docker plugin autocompletion 'bad math expression: empty string'",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nDocker plugin autocompletion is broken. It shows me these errors:\r\n\r\n```\r\n❯ docker inspect\r\n__docker_plugins:27: bad math expression: empty string\r\n__docker_plugins:27: bad math expression: empty string\r\n__docker_plugins:27: bad math expression: empty string\r\n__docker_plugins:27: bad math expression: empty string\r\n__docker_plugins:27: bad math expression: empty string\r\n__docker_plugins:27: bad math expression: empty string\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable plugin `docker`\r\n2. Run command 'docker inspect' and try to complete it with pressing `TAB`\r\n3. See error\r\n\r\n**Expected behavior**\r\nNo errors, completion results, if any\r\n\r\n**Screenshots and/or Recordings**\r\n![image](https://user-images.githubusercontent.com/10254791/94444933-8956be00-01af-11eb-9830-839a115ae56a.png)\r\n\r\n**Self Check**\r\n\r\n- Have you tried reaching out on the [Discord server](https://discord.gg/ohmyzsh)? \r\n  _asked, no response at `#tech-support` channel_\r\n\r\n- Also searching existing [GitHub Issues](https://github.com/ohmyzsh/ohmyzsh/issues?q=) might help you get quicker support\r\n  _did not found any related issues_\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: macOS\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: 5.7.1\r\n - Terminal emulator: iTerm2\r\n\r\n**Aditional info**\r\n`rm ~/.zcompdump*` did not help. ",
        "labels": "Bug",
        "id": 43390
    },
    {
        "title": "Font color change sticks after tab completion",
        "body": "**Describe the bug**\r\n\r\nWhen I click `tab` to complete (a file path for example), the font color of my previously entered text changes.  This new color \"sticks\" - it applies not only to new text that I enter, but output of the next command that runs.\r\n\r\nHere is a movie that demonstrates the behavior.\r\n\r\nThe unexpected part is that the lighter font color applies to the `ls` output and the characters that I type after `tab`.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Set `ZSH_THEME=\"avit\"` in `~/.zshrc`\r\n2. Type `ls -al ~/.zsh` + `tab`\r\n3. See the font color change\r\n4. Type some more text like `*` and then `enter`\r\n\r\n**Expected behavior**\r\nI expected the font color of the output to return to normal.\r\n\r\n**Movie**\r\n\r\n![dim](https://user-images.githubusercontent.com/41094/92190203-bec0f380-ee1d-11ea-864c-ed69bf24e913.gif)\r\n\r\nThe unexpected part is that the output of the `ls` command is the lighter font color after `tab` completion.\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: macOS\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: 5.7.1 (x86_64-apple-darwin19.0)\r\n - Terminal emulator: Terminal.app\r\n\r\n**Additional context**\r\n\r\nI just found #8952 which might have some overlap, but that was fixed with 8cb449ee2068a52fd386a9426b70b8f89f100e7c.",
        "labels": "Bug",
        "id": 43391
    },
    {
        "title": "vi-mode: Shell hotkeys to jump forward words no longer work",
        "body": "**Describe the bug**\r\n\r\nEscape sequence hotkeys to jump forward words no longer work when the `vi-mode` plugin is enabled.\r\n\r\nIn iTerm, I typically map option-left and option-right to jump backwards and forward words, respectively, via escape sequences, [as documented here](https://coderwall.com/p/h6yfda/use-and-to-jump-forwards-backwards-words-in-iterm-2-on-os-x). With `vi-mode` enabled, only the jump back will work and not the jump forwards.\r\n\r\nI know that these hotkeys are not quite necessary when I have vi/vim enabled on a shell command because I can just use vim keystrokes instead of hotkeys to jump between words. However, these hotkeys are universally used across Mac OS and old habits die hard. It would be ideal for `vi-mode` to continue to support this escape sequence.\r\n\r\n**To Reproduce**\r\n\r\n1. Ensure the above documentation is followed to map option-left and option-right to escape sequences for jumping words\r\n1. Enable plugin 'vi-mode`\r\n1. Enter in a shell command that has multiple words\r\n1. Try using option + arrow keys to jump between words\r\n\r\n**Expected behaviour**\r\n\r\nI can jump between words as expected\r\n\r\n**Actual behaviour**\r\n\r\nOnly jump backwards works. When I try jumping forwards, the shell does nothing, but it seems to wait for me to enter in another prompt. When I do, the command moves to a line below and a single ASCII character appears in the current line. There must be a different way that `vi-mode` is handling the `^f` escape sequence.\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: Mac OS 10.15.6\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: 5.8\r\n - Terminal emulator: iTerm2 3.3.12\r\n",
        "labels": "Bug",
        "id": 43392
    },
    {
        "title": "Previous git main branch detection logic broke expected behavior",
        "body": "**Describe the bug**\r\n#9091 presented better way of handling main branch. We have neither `main` nor `master` branch as the 'default' branch, but other branch named `integration`. I used the algorithm in `git_main_branch` function, and refer the remote HEAD to `integration` branch. This is how I got expected results. Now it's back to hard-coded, non-configurable values.\r\n\r\n#9114 was handled incorrectly: `git_main_branch` is a function, and was referred to as a variable. This is the reason it didn't worked. I believe that configure the remote HEAD would solve the problem.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable this plugin `git`\r\n2. Set the remote HEAD to a branch other than `master` (e,g, `integration`): `git remote set-head origin integration`\r\n3. Run command `git_main_branch`\r\n4. Result is `master`, although `integration` is the 'default' branch, configured in GitHub.\r\n\r\n**Expected behavior**\r\nAfter 3. above, result should be `integration`\r\n\r\n\r\n**Desktop:**\r\n\r\n - OS / Distro: **Ubuntu 19.04**\r\n - Latest ohmyzsh update?: **Yes**\r\n - ZSH Version: **5.7.11**\r\n - Terminal emulator: **xterm-256color**\r\n",
        "labels": "Bug",
        "id": 43393
    },
    {
        "title": "gitfast plugin: tab completion broken on filenames containing spaces (expected automatic quote/backslash)",
        "body": "**Describe the bug**\r\nWith 'gitfast' plugin enabled, if I try to add a file named (e.g.) `aaaa bbbb cccc` (i.e., anything with spaces) to repository `git add aa[Tab]`, the filename is expanded but with no backslashes or quotes to handle the spaces. Git then thinks I'm asking to add several items (the first being a file named `aaaa`) and complains.\r\n\r\nIf I disable gitfast, the problem goes away.\r\n\r\nThe problem seems to be on my laptop (bash version 4.4.20, zsh version 5.4.2), but not on my desktop (newer versions: bash v5.0.17, zsh 5.8). Both laptop and desktop have freshest version of oh-my-zsh as of today (confirmed by running upgrade_oh_my_zsh on both).\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Enable gitfast plugin\r\n2. `mkdir gittest`\r\n3. `cd gittest`\r\n3. `git init`\r\n4. `touch 'aaaa bbbb cccc'` (a single filename that contains spaces).\r\n3. `git add aa[Tab]`\r\n3. This expands to: `git add aaaa bbbb cccc`. Hit enter.\r\n3. Problem: `fatal: pathspec 'aaaa' did not match any files`\r\n\r\n**Expected behavior**\r\nIf the same steps above are repeated but gitfast is disabled, then hitting `[Tab]` results in filename being expanded with backslashes protecting the spaces. This is the expected behavior with gitfast enabled.\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: Linux Mint Cinnamon\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: 5.4.2\r\n - Terminal emulator: gnome-terminal\r\n\r\n**Additional context**\r\n\r\nAs mentioned above---I did notice that the problem doesn't occur with my desktop machine, which has newer versions of zsh and bash. (Upgrading bash or zsh isn't my preferred solution since I want to stick with the repository versions). I know the gitfast plugin uses elements of the bash completion tool behind the scenes, but I wouldn't know how/which components are used. I hope this context is enough for you to go on.\r\n\r\nThanks!",
        "labels": "Bug",
        "id": 43394
    },
    {
        "title": "Trap in check_for_upgrade doesn't work for zsh < 5.0.8",
        "body": "**Describe the bug**\r\n\r\nZsh versions older than 5.0.8 don't implement signals other than `ZERR`, so the trap setup fails with the error\r\n```\r\n(anon):trap: undefined signal: INT\r\n```\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. Use a zsh version older than 5.0.8. You can use docker for this:\r\n   ```zsh\r\n   docker run -it zshusers/zsh:5.0.7\r\n   ```\r\n2. Print the available signals with `kill -l`\r\n3. Run a mock trap to test this, for example:\r\n   ```zsh\r\n   (){ setopt localtraps; trap 'echo trap called; return 1' INT; read }\r\n   ```\r\n   and press `CTRL`+`C` to trigger the trap function.\r\n4. The error above is shown, and the `read` isn't cancelled.\r\n\r\n**Expected behavior**\r\n\r\nThe `check_for_upgrade` script should exhibit a similar behavior than in newer zsh versions. For example, if the upgrade script is cancelled on an old zsh version, the `update.lock` isn't removed because the `check_for_upgrade.sh` script is skipped:\r\n```\r\n+(anon):45> [[ '' != (     <--- in the update prompt of check_for_upgrade.sh\r\n|) ]]\r\n+(anon):47> echo -n '[oh-my-zsh] Would you like to update? [Y/n] '\r\n[oh-my-zsh] Would you like to update? [Y/n] +(anon):48> read -r -k 1 option\r\n^C\r\n# Initializes Oh My Zsh    <--- back to the init script\r\n```\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: any\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: older than 5.0.8\r\n - Terminal emulator: any\r\n\r\n**Additional context**\r\n\r\nScript to check implemented signals of all zsh versions:\r\n```zsh\r\nvers=(${(@f)$(wget -qO- https://registry.hub.docker.com/v1/repositories/zshusers/zsh/tags | sed -e 's/[][]//g' -e 's/\"//g' -e 's/ //g' | tr '}' '\\n' | awk -F: '{print $3}')})\r\nfor ver in $vers; do echo -n \"$ver: \"; docker run zshusers/zsh:$ver zsh -c 'kill -l'; done\r\n\r\n# output\r\nlatest: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n4.3.11: ZERR\r\n4.3.12: ZERR\r\n4.3.13: ZERR\r\n4.3.14: ZERR\r\n4.3.15: ZERR\r\n4.3.16: ZERR\r\n4.3.17: ZERR\r\n5.0.0: ZERR\r\n5.0.1: ZERR\r\n5.0.2: ZERR\r\n5.0.3: ZERR\r\n5.0.4: ZERR\r\n5.0.5: ZERR\r\n5.0.6: ZERR\r\n5.0.7: ZERR\r\n5.0.8: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n5.1: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n5.1.1: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n5.2: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n5.3: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n5.3.1: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n5.4: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n5.4.1: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n5.4.2: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n5.5: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n5.5.1: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n5.6: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n5.6.1: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n5.6.2: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n5.7: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n5.7.1: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n5.8: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\nmaster: HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS\r\n```",
        "labels": "Bug",
        "id": 43395
    },
    {
        "title": "check_for_upgrade line 24 error on automate shellscript file",
        "body": "Hey, I'm trying to write a small ShellScript for simple automation of my PC, but I'm having a problem installing oh-my-zsh. I can't interpret if this is a bug or a silly mistake I'm making, could you help me? \r\n\r\n`sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\" \"\" --unattended`\r\n\r\nI'm even using Arch Linux.\r\n\r\n---\r\n\r\n<details>\r\n<summary><strong>Error message</strong></summary>\r\n \r\n```\r\n$ $HOME/.oh-my-zsh/tools/check_for_upgrade.sh: line 24: `update_last-updated_file': is not a valid identifier\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary><strong>My ShellScript file</strong></summary>\r\n\r\n```sh\r\nget_value_of()\r\n{\r\n    local VAR_NAME=$1;\r\n    local VAR_VALUE=\"\";\r\n\r\n    if set | grep -q \"^$VAR_NAME=\"; then\r\n        eval VAR_VALUE=\"\\$$VAR_NAME\"\r\n    fi\r\n    echo \"$VAR_VALUE\"\r\n}\r\n\r\ndisplay_color_text()\r\n{\r\n    local RED=`tput setaf 1`;\r\n    local GREEN=`tput setaf 2`;\r\n    local YELLOW=`tput setaf 3`;\r\n    local BLUE=`tput setaf 4`;\r\n\r\n    local RESET_TEXT=`tput sgr0`;\r\n\r\n    echo \"$(get_value_of $1)$2$RESET_TEXT\"\r\n}\r\n\r\n######\r\n\r\ndisplay_color_text GREEN \"Installing ZSH...\"\r\nsudo pacman -S zsh\r\n\r\ndisplay_color_text GREEN \"Installing Oh my ZSH...\"\r\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\" \"\" --unattended\r\nsource $HOME/.zshrc\r\n\r\ndisplay_color_text GREEN \"Installing NVM...\"\r\nsh -c \"$(curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh)\"\r\nsource $HOME/.zshrc\r\nclear\r\n\r\ndisplay_color_text GREEN \"Installing Node.js LTS version...\"\r\nnvm install --lts\r\nnode --version\r\nnpm --version\r\nclear\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary><strong>check_for_upgrade.sh file</strong></summary>\r\n\r\n```sh\r\n# Migrate .zsh-update file to $ZSH_CACHE_DIR\r\nif [[ -f ~/.zsh-update && ! -f \"${ZSH_CACHE_DIR}/.zsh-update\" ]]; then\r\n    mv ~/.zsh-update \"${ZSH_CACHE_DIR}/.zsh-update\"\r\nfi\r\n\r\n# Cancel update if:\r\n# - the automatic update is disabled.\r\n# - the current user doesn't have write permissions nor owns the $ZSH directory.\r\n# - git is unavailable on the system.\r\nif [[ \"$DISABLE_AUTO_UPDATE\" = true ]] \\\r\n   || [[ ! -w \"$ZSH\" || ! -O \"$ZSH\" ]] \\\r\n   || ! command -v git &>/dev/null; then\r\n    return\r\nfi\r\n\r\n\r\nfunction current_epoch() {\r\n    zmodload zsh/datetime\r\n    echo $(( EPOCHSECONDS / 60 / 60 / 24 ))\r\n}\r\n\r\nfunction update_last-updated_file() {\r\n    echo \"LAST_EPOCH=$(current_epoch)\" >! \"${ZSH_CACHE_DIR}/.zsh-update\"\r\n}\r\n\r\nfunction update_ohmyzsh() {\r\n    ZSH=\"$ZSH\" sh \"$ZSH/tools/upgrade.sh\"\r\n    update_last-updated_file\r\n}\r\n\r\n() {\r\n    emulate -L zsh\r\n\r\n    local epoch_target mtime option LAST_EPOCH\r\n\r\n    # Remove lock directory if older than a day\r\n    zmodload zsh/datetime\r\n    zmodload -F zsh/stat b:zstat\r\n    if mtime=$(zstat +mtime \"$ZSH/log/update.lock\" 2>/dev/null); then\r\n        if (( (mtime + 3600 * 24) < EPOCHSECONDS )); then\r\n            command rm -rf \"$ZSH/log/update.lock\"\r\n        fi\r\n    fi\r\n\r\n    # Check for lock directory\r\n    if ! command mkdir \"$ZSH/log/update.lock\" 2>/dev/null; then\r\n        return\r\n    fi\r\n\r\n    # Remove lock directory on exit. `return 1` is important for when trapping a SIGINT:\r\n    #  The return status from the function is handled specially. If it is zero, the signal is\r\n    #  assumed to have been handled, and execution continues normally. Otherwise, the shell\r\n    #  will behave as interrupted except that the return status of the trap is retained.\r\n    trap \"rm -rf '$ZSH/log/update.lock'; return 1\" EXIT INT QUIT\r\n\r\n    # Create or update .zsh-update file if missing or malformed\r\n    if ! source \"${ZSH_CACHE_DIR}/.zsh-update\" 2>/dev/null || [[ -z \"$LAST_EPOCH\" ]]; then\r\n        update_last-updated_file\r\n        return\r\n    fi\r\n\r\n    # Number of days before trying to update again\r\n    epoch_target=${UPDATE_ZSH_DAYS:-13}\r\n    # Test if enough time has passed until the next update\r\n    if (( ( $(current_epoch) - $LAST_EPOCH ) < $epoch_target )); then\r\n        return\r\n    fi\r\n\r\n    # Ask for confirmation before updating unless disabled\r\n    if [[ \"$DISABLE_UPDATE_PROMPT\" = true ]]; then\r\n        update_ohmyzsh\r\n    else\r\n        # input sink to swallow all characters typed before the prompt\r\n        # and add a newline if there wasn't one after characters typed\r\n        while read -t -k 1 option; do true; done\r\n        [[ \"$option\" != ($'\\n'|\"\") ]] && echo\r\n\r\n        echo -n \"[oh-my-zsh] Would you like to update? [Y/n] \"\r\n        read -r -k 1 option\r\n        [[ \"$option\" != $'\\n' ]] && echo\r\n        case \"$option\" in\r\n            [nN]) update_last-updated_file ;;\r\n            *) update_ohmyzsh ;;\r\n        esac\r\n    fi\r\n}\r\n\r\nunset -f current_epoch update_last-updated_file update_ohmyzsh\r\n```\r\n</details>",
        "labels": "Bug",
        "id": 43396
    },
    {
        "title": "zsh_reload plugin fail on popOS 20.04",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nif you execute `src` it goes to bash instad of zsh after recompile\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable this plugin 'zsh_reload'\r\n2. Run command 'src'\r\n3. It goes to bash after compilation, instead of restarting zsh\r\n\r\n**Expected behavior**\r\nrecompile configs and restart zsh\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: [popOS 20.04]\r\n - Latest ohmyzsh Update?: [Yes]\r\n - ZSH Version: [5.8]\r\n - Terminal emulator [tested on Tilix and default terminal]\r\n\r\n**NOTE that this problem cannot be reproduced on ubuntu. Only popOS**\r\n\r\n",
        "labels": "Bug",
        "id": 43397
    },
    {
        "title": "pyenv plugin looks for pyenv in wrong place in Windows10 WSL2",
        "body": "**Describe the bug**\r\nWhen the pyenv plugin is used in a WSL2 shell, it looks for pyenv in the Windows path instead of the linux path.\r\n\r\n`/mnt/c/Users/username/.pyenv/pyenv-win/bin/pyenv: 3: cmd: not found`\r\n\r\nit should be looking in \r\n\r\n`/home/username/.pyenv`\r\n\r\nIf you export `PYENV_ROOT` before the plugins entry in .zshrc, then it works. \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable this plugin 'pyenv'\r\n2. source .zshrc\r\n3. pyenv is reported as not found\r\n\r\n**Expected behavior**\r\nIt should detect it's in WSL, not Windows and look in the correct location for a Linux install.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: Ubuntu 20.04 LTS in Windows Subsystem for Linux 2, recently updated\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: 5.8\r\n - Terminal emulator: default for Ubuntu WSL.  Seems to be the same as used by cmd, judging by the options shown when right clicking on the header.\r\n",
        "labels": "Bug",
        "id": 43398
    },
    {
        "title": "current_gemset returns empty string",
        "body": "**Describe the bug**\r\n\r\ncurrent_gemset returns empty string.\r\n\r\n**To Reproduce**\r\n\r\nEnable rbenv plugin on machine with rbenv and rbenv-gemset installed and working correctly, and attempt to use current_gemset. Version is fine:\r\n\r\n    [22:41] (master) inopinatus@coltrane:~/src/flails$ echo $plugins\r\n    git rbenv\r\n    [22:41] (master) inopinatus@coltrane:~/src/flails$ rbenv version-name\r\n    2.7.1\r\n    [22:41] (master) inopinatus@coltrane:~/src/flails$ current_ruby\r\n    2.7.1\r\n\r\nbut gemset is not (misparsed?):\r\n\r\n    [22:41] (master) inopinatus@coltrane:~/src/flails$ rbenv gemset active\r\n    flails global\r\n    [22:42] (master) inopinatus@coltrane:~/src/flails$ current_gemset\r\n\r\n    [22:42] (master) inopinatus@coltrane:~/src/flails$ \r\n\r\n**Expected behavior**\r\n\r\nShould give current gemset in some fashion.\r\n\r\n**Desktop**\r\n\r\n - OS / Distro: macOS\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: 5.7.1\r\n - Terminal emulator: iTerm2\r\n\r\n**Additional context**\r\n\r\nProbably related to #4688.\r\n",
        "labels": "Bug",
        "id": 43399
    },
    {
        "title": "Breaking battery update on commit 3da469be",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n\r\nI just updated oh-my-zsh to the latest commit and now I experience a problem during in my prompt:\r\nthere is an added visual space at the beginning of the input (but not actually in the typed command), and when I press tab, this extra space moves from the beginning of the input to the cursor, thus shifting the display of what I type from what is actually typed.\r\n(Sorry if that isn't really clear ;) ) \r\n\r\nI did some digging and the problem apparently comes from the commit 3da469be six days ago modifying the default battery charging symbol string from `'⚡'` to `'%%{%%G⚡%%}'`.\r\nOverriding `BATTERY_CHARGING_SYMBOL` to `⚡` (the original value) fixes the bug.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: Arch Linux\r\n - Latest ohmyzsh Update?: Yes (after commit 3da469be)\r\n - ZSH Version: 5.8\r\n - Terminal emulator : urxvt\r\n\r\n**Additional**\r\nMy relevant part of my theme configuration for the battery module and RPROMPT:\r\n```shell\r\nBATTERY_GAUGE_PREFIX=%F{blue}'[';\r\nBATTERY_GAUGE_SUFFIX=%F{blue}']';\r\nRPROMPT=$'$(battery_level_gauge)'\r\n```",
        "labels": "Bug",
        "id": 43400
    },
    {
        "title": "kube-ps1 not update when change context",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nafter using `kubectl` change context, kube_ps1 doesn't show updated info.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable this plugin '...'\r\n2. Run command 'kubectl config use-context context'\r\n3. kube_ps1 command result is old.\r\n\r\n**Expected behavior**\r\nexpect result is new context\r\n\r\n**Screenshots and/or Recordings**\r\nIf applicable, add screenshots to help explain your problem.\r\nYou can also record an asciinema session: https://asciinema.org/\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: [e.g. Arch Linux, macOS] ubuntu 19.10\r\n - Latest ohmyzsh Update?: [e.g. Yes/No] yes\r\n - ZSH Version: 5.4.2\r\n - Terminal emulator: tmux\r\n\r\n**Additional context**\r\nAdd any other context about the problem here. This can be themes, plugins, custom configs.\r\n",
        "labels": "Bug",
        "id": 43401
    },
    {
        "title": "zsh: no such file or directory: /home/username/.rvm/bin/rvm-prompt ",
        "body": "Related old issue: https://github.com/ohmyzsh/ohmyzsh/issues/5627\r\n\r\n**Describe the bug**\r\n\r\nWhen loading 3den.zsh-theme\r\n\r\n```\r\nzsh: no such file or directory: /home/username/.rvm/bin/rvm-prompt \r\n```\r\n\r\nThis error will appear after each command run.\r\n\r\n**To Reproduce**\r\n\r\nUse 3den theme.\r\n\r\n**Expected behavior**\r\n\r\nThe theme should no require rvm.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: Arch Linux\r\n - Latest ohmyzsh Update?: Yes\r\n- ZSH Version: 5.8\r\n - Terminal emulator Konsole\r\n\r\n**Solution**\r\n\r\nRemove 3den from the default theme list. It can be added in the external non-default theme list.\r\n",
        "labels": "Bug",
        "id": 43402
    },
    {
        "title": "npm autocomplete plugin seems to be not working",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nRunning `npm run <tab>` does not autocomplete the npm run scripts. Instead there is a problem reported in the internal npm [completion](https://github.com/npm/cli/blob/latest/lib/completion.js#L80) module. I'm not sure if I'm addressing this issue at the right place here, since the the ohmyzsh npm plugin uses `npm completion` to generate the autocompletion script. However the plugin stopped working for me with the most recent ohmyzsh updates. \r\n\r\nI also tried the following things\r\n* reset the completion settings https://github.com/ohmyzsh/ohmyzsh/wiki/Troubleshooting#completion-problems\r\n* removed the `npm_completion` from the `.oh-my-zsh/cache`. \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable this plugin 'npm'\r\n2. Create new folder\r\n3. Init new nodejs project `npm init`\r\n4. Run `npm run <tab>`\r\n5. Nothing gets shown, instead a npm error gets locked in `~/.npm/_logs`\r\n\r\n```\r\n0 info it worked if it ends with ok\r\n1 verbose cli [\r\n1 verbose cli   '/Users/andreas.taube/.nvm/versions/node/v12.16.1/bin/node',\r\n1 verbose cli   '/Users/andreas.taube/.nvm/versions/node/v12.16.1/bin/npm',\r\n1 verbose cli   'completion',\r\n1 verbose cli   '--',\r\n1 verbose cli   'npm',\r\n1 verbose cli   'run'\r\n1 verbose cli ]\r\n2 info using npm@6.13.4\r\n3 info using node@v12.16.1\r\n4 verbose stack TypeError: Cannot read property 'length' of undefined\r\n4 verbose stack     at EventEmitter.completion (/Users/andreas.taube/.nvm/versions/node/v12.16.1/lib/node_modules/npm/lib/completion.js:80:23)\r\n4 verbose stack     at Object.commandCache.<computed> (/Users/andreas.taube/.nvm/versions/node/v12.16.1/lib/node_modules/npm/lib/npm.js:156:13)\r\n4 verbose stack     at EventEmitter.<anonymous> (/Users/andreas.taube/.nvm/versions/node/v12.16.1/lib/node_modules/npm/bin/npm-cli.js:131:30)\r\n4 verbose stack     at processTicksAndRejections (internal/process/task_queues.js:79:11)\r\n5 verbose cwd /Users/andreas.taube/dev/collectai/claims\r\n6 verbose Darwin 18.7.0\r\n7 verbose argv \"/Users/andreas.taube/.nvm/versions/node/v12.16.1/bin/node\" \"/Users/andreas.taube/.nvm/versions/node/v12.16.1/bin/npm\" \"completion\" \"--\" \"npm\" \"run\"\r\n8 verbose node v12.16.1\r\n9 verbose npm  v6.13.4\r\n10 error Cannot read property 'length' of undefined\r\n11 verbose exit [ 1, true ]\r\n```\r\n**Expected behavior**\r\nThe autocomplete should kick in and show the `test` run script\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: macOS\r\n - Latest ohmyzsh Update?: yes `bc9fe742`\r\n - ZSH Version: 5.8\r\n - Terminal emulator iTerm2\r\n",
        "labels": "Bug",
        "id": 43403
    },
    {
        "title": "AWS Plugin \"bad pattern\" error when using asp",
        "body": "Hello,\r\n\r\nI have a multiple profile aws config in ~/.aws/config\r\n```\r\n[default]\r\nregion = ca-central-1\r\n\r\n[profile prod]\r\nregion = us-east-1\r\noutput = json\r\n\r\n[profile staging]\r\nregion = us-east-1\r\noutput = json\r\n\r\n[profile staging_ecr]\r\nrole_arn = arn:aws:iam::xxxxxxxxxxx:role/xxxxxx\r\nsource_profile=staging\r\n\r\n[profile staging_eks]\r\nrole_arn = arn:aws:iam::xxxxxxxxx:role/xxxxx\r\nsource_profile=staging\r\n\r\n[profile staging_tf]\r\nregion = ca-central-1\r\noutput = json\r\n```\r\n\r\nWhen i want to switch profile with\r\n`asp staging_tf`\r\n\r\nI got the following errors:\r\n`asp:7: bad pattern: available_profiles=(prod`\r\n\r\nIt seems that the oneliner \r\n`local available_profiles=( $(aws_profiles) )`\r\n\r\ngot issues because when doing\r\n```\r\nlocal available_profiles  EOL\r\navailable_profiles=( $(aws_profiles) )\r\n```\r\nIt works.\r\n\r\n\r\nVersion reference:\r\n```\r\n$ zsh --version\r\nzsh 5.0.2 (x86_64-redhat-linux-gnu)\r\n$  ~/.oh-my-zsh git rev-parse HEAD\r\n78b07e92fd4a3a5e1f92ee4e3d680c39b72c2245\r\n```\r\n\r\n\r\n\r\n",
        "labels": "Bug",
        "id": 43404
    },
    {
        "title": "Tab completion is eating above lines when using af-magic theme",
        "body": "**Describe the bug**\r\nTab completion is eating above lines when using af-magic theme.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Use the af-magic theme\r\n2. Press tab for autocomplete at the terminal\r\n3. The line immediately above was deleted\r\n\r\n**Expected behavior**\r\nTab completion should not delete any lines from the display.\r\n\r\n**Screenshots or recordings**\r\n### Without Fix:\r\n\r\n#### Before Tab:\r\n```\r\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n~/.oh-my-zsh(tab-complete-af-magic) » date                                                                                                                                                zach@zach-desktop\r\nThu Dec 26 09:53:46 EST 2019\r\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n~/.oh-my-zsh(tab-complete-af-magic) »\r\n\r\n```\r\n#### After Tab:\r\n```\r\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n~/.oh-my-zsh(tab-complete-af-magic) » date                                                                                                                                                zach@zach-desktop\r\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n~/.oh-my-zsh(tab-complete-af-magic) » ls themes/\r\n```\r\n\r\n### With Fix\r\n\r\n#### Before Tab:\r\n```\r\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n~/.oh-my-zsh(tab-complete-af-magic*) » source ~/.zshrc                                                                                                                                    zach@zach-desktop\r\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n~/.oh-my-zsh(tab-complete-af-magic*) » date                                                                                                                                               zach@zach-desktop\r\nThu Dec 26 09:56:50 EST 2019\r\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n~/.oh-my-zsh(tab-complete-af-magic*) » \r\n\r\n```\r\n#### After Tab:\r\n```\r\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n~/.oh-my-zsh(tab-complete-af-magic*) » source ~/.zshrc                                                                                                                                    zach@zach-desktop\r\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n~/.oh-my-zsh(tab-complete-af-magic*) » date                                                                                                                                               zach@zach-desktop\r\nThu Dec 26 09:56:50 EST 2019\r\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n~/.oh-my-zsh(tab-complete-af-magic*) » ls themes/ \r\n```\r\n\r\n**System:**\r\n - OS: Ubuntu\r\n - zsh 5.4.2 (x86_64-ubuntu-linux-gnu)\r\n\r\n**Additional context**\r\nI started seeing the error after [this change](https://github.com/ohmyzsh/ohmyzsh/commit/17f4cfca99398cb5511557b8515a17bf1bf2948a).  \r\nIt looks like the root cause was introduced by [zsh 5.3](http://www.zsh.org/mla/workers/2017/msg00021.html) when using multiline prompts.\r\nIt would be nice to fix here for compatibility. I have a solution and will open a pull request.\r\n",
        "labels": "Bug",
        "id": 43405
    },
    {
        "title": "ssh-agent plugin doesn't work with proc hidepid",
        "body": "\r\n**Describe the bug**\r\nWhile using the [hidepid option](man7.org/linux/man-pages/man5/proc.5.html) while mounting /proc, ssh-agent  asks for password for each new terminal.\r\n\r\nAfter entering password, I can ssh normally to a remote server without entering password again.\r\n\r\nIn the script, I see that it tries to get the pid from ps command. Which is probably where this bug (?) come from.\r\n\r\n**To Reproduce**\r\nDoesn't need to restart to work. But make sure it won't break your other applications.\r\n\r\n1. Of course,  add ssh-agent to plugins in .zshrc\r\n2. As root do:\r\n`mount -o remount,rw,nosuid,nodev,noexec,relatime,hidepid=2 /proc\r\n`\r\n3. Starts a terminal and input your ssh password.\r\n4. Starts other terminal, it will ask again.\r\n\r\n\r\n**Expected behavior**\r\nI've expected to input in just the first terminal. Maybe there's an easy fix to this that I don't know and doesn't involve disabling hidepid?\r\n\r\n**System:**\r\n - Ubuntu 18.04\r\n - zsh 5.6.2 (x86_64-pc-linux-gnu)\r\n - Gnome terminal\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n",
        "labels": "Bug",
        "id": 43406
    },
    {
        "title": "zsh-navigation-tools : ncurses broken in n-* commands (unwanted identations)",
        "body": "Hello,\r\nI have znt from oh-my zsh all installed today,\r\nWhen I run n-* commands, There is jitter on the terminal when moving the cursor, something akin \"moving to a line not visited yet adds 2 spaces to it\":\r\nhttps://framapic.org/gallery#HtPmvngUBE9r/gxDYQNJze4gH.png&gid=1&pid=1\r\n![image](https://user-images.githubusercontent.com/1441704/71024474-4dada480-2105-11ea-8f83-2f1dcb40eafb.png)\r\n\r\nAny clue? BR\r\nhttps://github.com/psprint/zsh-navigation-tools/issues/29",
        "labels": "Bug",
        "id": 43407
    },
    {
        "title": "Shift+Tab with vi-mode doesn't cycle completion suggestions",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n<!-- A clear and concise description of what the bug is. -->\r\nWhen `vi-mode` is enabled, `shift+tab` does not cycle backwards through the autocomplete suggestions.\r\nIf `vi-mode` is removed from the plugins, `shift+tab` works as it should.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Enable plugin 'vi-mode'.\r\n2. When an autocomplete suggestion is available, shift+tab does not cycle backwards.\r\n\r\n**System:**\r\n - OS: [macOS Catalina]\r\n - Zsh version [5.7]\r\n - Terminal emulator [iTerm2]",
        "labels": "Bug",
        "id": 43408
    },
    {
        "title": "A little bug when updating oh-my-zsh",
        "body": "It will show\r\n\r\n```\r\n[Oh My Zsh] Would you like to update? [Y/n]: Y\r\n/root/.oh-my-zsh/tools/upgrade.sh: 36: /root/.oh-my-zsh/tools/upgrade.sh: [[: not found\r\n...\r\n```\r\n\r\nwhen I update oh-my-zsh.",
        "labels": "Bug",
        "id": 43409
    },
    {
        "title": "non-compliant posix code in tools/upgrade.sh",
        "body": "**Describe the bug**\r\n\r\nRelated to the recently merged #8394 \r\n\r\nSince `upgrade_oh_my_zsh` uses `sh` instead of `bash`, and the code on line 36 [here](https://github.com/ohmyzsh/ohmyzsh/blob/b80b1a1e8b30e5f2a7c4977019cf56e72c434037/tools/upgrade.sh#L36) is somewhat `bash` specific, the command may fail if `sh` is linked to some other POSIX-compliant implementation.\r\n\r\n```\r\n$ upgrade_oh_my_zsh\r\n/home/sean/.oh-my-zsh/tools/upgrade.sh: 36: /home/sean/.oh-my-zsh/tools/upgrade.sh: [[: not found\r\n```\r\n\r\n**To Reproduce**\r\n\r\n- Have `sh` linked to something other than bash (I have it linked to [dash](http://gondor.apana.org.au/~herbert/dash/))\r\n- call `upgrade_oh_my_zsh`\r\n\r\n**Expected behavior**\r\n\r\ncalling `upgrade_oh_my_zsh` to not throw any errors.\r\n\r\n**System:**\r\n - OS: [e.g. macOS]: Linux (Arch)\r\n - Zsh version [e.g. 5.6]: zsh 5.7.1 (x86_64-pc-linux-gnu)\r\n - Terminal emulator [e.g. iTerm2]: Termite v15\r\n\r\nI believe this could be fixed by simply changing:\r\n\r\n`[[ -n \"$remote\" ]]` to `[ -n \"$remote\" ]`, but edge cases in shell conditional statements are not my forte.",
        "labels": "Bug",
        "id": 43410
    },
    {
        "title": "[BUG]`git-auto-fetch` not able to handle passphrase protected ssh-keys that are not in ssh-agent",
        "body": "**Describe the bug**\r\nAfter cd into a git repository with `git-auto-fetch` enabled it asks for the ssh passphrase but it's not possible to enter it.\r\n\r\n**To Reproduce**\r\n1. Enable plugin `git-auto-fetch`\r\n2. Get ssh key with passphase that is used to pull git repos\r\n3. Add `AddKeysToAgent yes` to `~/.ssh/config`\r\n4. `exec zsh`\r\n5. start `ssh-agent` (e.g. `eval $(ssh-agent)`) (Do not add ssh key!)\r\n\r\n**Expected behavior**\r\nEither soft fail (1) or be able to enter passphrase (2).\r\n\r\n**Screenshots or recordings**\r\n![image](https://user-images.githubusercontent.com/16988672/68720235-e6a14b00-05ae-11ea-9e06-78426d321b86.png)\r\n\r\n**System:**\r\n - OS: Manjaro\r\n - Zsh version: zsh 5.7.1 (x86_64-pc-linux-gnu)\r\n - Terminal emulator: Irrelevant but Tilix\r\n",
        "labels": "Bug",
        "id": 43411
    },
    {
        "title": "Keychain plugin fails with .local domain name.",
        "body": "Keychain seems to write the environment files with the fqdn (which includes .local, in my case).\r\n\r\nThe Keychain plugin sources $HOME/.keychain/$SHORT_HOST-sh, which is not found. This leaves the SSH_AUTH_SOCK as the default macos one set by launchd. Identities never get added to the Keychain instantiated agent.\r\n\r\nssh-add -L (keychain -L)\r\n\"The agent has no identities.\"\r\n\r\nI have added a line to my .zshrc as a workaround:\r\nsource \"$HOME/.keychain/$HOST-sh\"\r\n\r\nmacos 10.15.1\r\n\r\n\r\n",
        "labels": "Bug",
        "id": 43412
    },
    {
        "title": "Inconsistencies in ZSH compared to Bash ",
        "body": "**Describe the bug**\r\nThere seems to be a inconsistency in the way ZSH manages incrementing strings to a variable - In bash the code below will output something along the lines of \r\n\r\n`test2_filename.txt`\r\n\r\nIf the script is executed with the ZSH shell, it throws a syntax error.\r\n`./test.sh: 4: ./test.sh: var1+=_filename.txt: not found`\r\n\r\n**To Reproduce**\r\nPoC code provided below:\r\n```\r\nvar1=\"test\"\r\nvar2=\"test2\"\r\n\r\nvar1=$var2 && var1+=\"_filename.txt\"\r\n\r\necho $var1\r\n```\r\n\r\n**Expected behavior**\r\nThe script should output test2_filename.txt, however when it's executed with the ZSH shell, it throws a syntax error - This doesn't occur with the Bash shell.\r\n\r\nAs seen here; += should be supported in ZSH: http://zsh.sourceforge.net/Doc/Release/Arithmetic-Evaluation.html\r\n\r\n**System:**\r\n - OS: Raspbian Linux 9 - Also reproducible on MacOS Catalina \r\n - Zsh version 5.6.1\r\n",
        "labels": "Bug",
        "id": 43413
    },
    {
        "title": "Cannot control Apple Music with `itunes`",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n**To Reproduce**\r\n\r\n1. Enable plugin `osx`\r\n2. Run command `itunes vol`.\r\n3. See error `39:45: execution error: The variable volume is not defined. (-2753)`\r\n\r\n**Expected behaviour**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\nControl Apple Music volume.\r\n\r\n**System:**\r\n - OS: _**macOS* Catalina 10.15.1_\r\n - Zsh version 5.7.1\r\n - Terminal emulator iTerm2\r\n\r\n**Additional context**\r\nIn _**macOS** Catalina 10.15_, the music section of _iTunes_ was discontinued, its features split into _Music_, _Podcasts_, and _TV_. The behaviour of the _Music_ app is pretty much the exact same for music, including AppleScript commands.\r\n",
        "labels": "Bug",
        "id": 43414
    },
    {
        "title": "extract deletes compressed original for gunzip files",
        "body": "Not sure if this is a bug or if this is on purpose, however the behavior is not what I expected.  \r\nI just started using the **extract** plugin and according to the documentation the `-r` removes the compressed file after extracting. \r\nI downloaded a large `.gz` file and used extract without `-r`, but the original file was still deleted. \r\nWhich was unfortunate, since I planned to keep the file.\r\n\r\nI think it might be more consistent with the documentation of **extract** if the `--keep` option is used for gunzip, e.g.\r\n\r\n```\r\n(*.gz) (( $+commands[pigz] )) && pigz -d \"$1\" || gunzip -k \"$1\" ;;\r\n```\r\n\r\nOr at least a warning in the documentation, that keeping the compressed file is not the default for all file types.\r\n\r\n**To Reproduce**\r\nUsing `extract` (without `-r`) on `.gz` files\r\n\r\n**Expected behavior**\r\nfile uncompressed and compressed file not removed\r\n\r\n**System:**\r\n - OS: Linux (Arch)\r\n - Zsh version 5.7.1-1\r\n",
        "labels": "Bug",
        "id": 43415
    },
    {
        "title": "Fabric: Autocompletion no longer working",
        "body": "**Describe the bug**\r\nLooks like [recent changes to Fabric have broken autocompletion](https://github.com/robbyrussell/oh-my-zsh/commit/9d790ea60ce1d3af265dfc05b77d77bd94b801d7).\r\n\r\nWhen pressing TAB to complete a line it gives an error from `awk` that `return` is not in a function.\r\n\r\n**To Reproduce**\r\nType `fab ` followed by the prefix of any fab command and press TAB\r\n\r\n**Expected behavior**\r\nThe command is successfully autocompleted, e.g. in the example below the command should complete to `fab helpers.check_warnings`\r\n\r\n**Screenshots or recordings**\r\n```\r\n(ukf) ➜  deploy hg:(default) ✗ fab helpers.chawk: return not in function at source line 2\r\n context is\r\n\t    if (NF == 0 || NR == 1) >>>  return <<< \r\nawk: syntax error at source line 3\r\nawk: illegal statement at source line 3\r\nawk: return not in function at source line 2\r\n context is\r\n\t    if (NF == 0 || NR == 1) >>>  return <<< \r\nawk: syntax error at source line 3\r\nawk: illegal statement at source line 3\r\nawk: return not in function at source line 2\r\n context is\r\n\t    if (NF == 0 || NR == 1) >>>  return <<< \r\nawk: syntax error at source line 3\r\nawk: illegal statement at source line 3        \r\n```\r\n\r\n**System:**\r\n - OS: macOS 10.14.6\r\n - Zsh version: 5.7.1\r\n - Terminal emulator: Terminal\r\n - Fabric: 1.14\r\n\r\n**Additional context**\r\nWorked fine prior to recent oh-my-zsh update\r\n",
        "labels": "Bug",
        "id": 43416
    },
    {
        "title": "Old update.lock will block update",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nIf update was interrupted, lock will not be removed and block future updates.\r\n\r\n**To Reproduce**\r\n<!--\r\nSteps to reproduce the behavior:\r\n1. Enable plugin '...'\r\n2. Run command '...', _or_ try to complete command '...', _etc._\r\n3. See error\r\n-->\r\n1. Wait for update prompt\r\n2. Close terminal\r\n3. Update will be block forever and update.lock will not removed\r\n\r\n\r\n**Expected behavior**\r\nLock must be removed next time (or after some time)\r\n\r\n**Screenshots or recordings**\r\nhttps://asciinema.org/a/7KhfLzsSPWZgxK19npv6qiGmc\r\n<!--\r\nIf applicable, add screenshots or record an asciinema session (https://asciinema.org/)\r\nto help explain your problem.\r\n-->\r\n\r\n**System:**\r\n - OS: Manjaro (linux)\r\n - Zsh version zsh 5.7.1 (x86_64-pc-linux-gnu\r\n - Terminal emulator xterm\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n",
        "labels": "Bug",
        "id": 43417
    },
    {
        "title": "[cargo completion] __get_package_names not defined",
        "body": "**To Reproduce**\r\n\r\n1. Enable plugin `cargo`\r\n2. Try to complete `cargo update -p`\r\n3. See error: `_arguments:463: command not found: __get_package_names`\r\n\r\n**Expected behavior**\r\n\r\nIt doesn't error. I am fine with this not completing at all, or with this completing without error.",
        "labels": "Bug",
        "id": 43418
    },
    {
        "title": "New tabs using cmd-T in a git repository don't open with same directory in macOS Terminal",
        "body": "**Describe the bug**\r\nWhen the current directory is also a git repository, new tabs created using cmd-T open in the home directory, instead of the current working directory, regardless of Terminal.app preferences. New tabs created from directories that are not git repositories open in the current working directory, as expected. This behaviour persists when all plugins are disabled.\r\n\r\nWhen the `osx` plugin is enabled, the `tab` command in a git repository opens a new tab in the current working directory, as expected, but new tabs created using cmd-T still open in the home directory unexpectedly. Relying on the `tab` command isn't a good solution for when the user is in another interpreter (in my case Python or R) in a git repository and wants to open a new tab in the same directory.\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Ensure that Terminal preferences are set to open a new tab in the same working directory: Terminal -> Preferences -> General -> New tabs open with:\r\n2. Open a new Terminal window.\r\n3. `cd` to any git repository.\r\n4. Open a new tab using cmd-T or New Tab from the Shell menu.\r\n5. New tab will open in the home directory.\r\n\r\n\r\n**Expected behavior**\r\nThe Terminal.app preference for new tabs opening in the same working directory should apply to any directory, not just non-git ones.\r\n\r\n**Screenshots or recordings**\r\n<!--\r\nIf applicable, add screenshots or record an asciinema session (https://asciinema.org/)\r\nto help explain your problem.\r\n-->\r\n\r\n**System:**\r\n - OS: macOS 10.15\r\n - Zsh version 5.7.1\r\n - Terminal emulator: Terminal.app (macOS built-in)\r\n\r\n**Additional context**\r\nPossibly related to Issue #2646\r\n",
        "labels": "Bug",
        "id": 43419
    },
    {
        "title": "oh-my-zsh.sh tries to install dpkg into Fedora",
        "body": "**Describe the bug**\r\nOh my zsh wants to install dpkg. Getting this message `Install package 'dpkg' to provide command 'dpkg'? [N/y]`.\r\n\r\n**To Reproduce**\r\nSimply turn on terminal, the problem is coming from .zshrc from `source $ZSH/oh-my-zsh.sh` (no problem when commented).\r\n\r\n**Expected behavior**\r\nNone\r\n\r\n**System:**\r\n - OS: Fedora 30\r\n - Zsh version: zsh 5.7.1 (x86_64-redhat-linux-gnu)\r\n - Terminal emulator: All terminals affected\r\n",
        "labels": "Bug",
        "id": 43420
    },
    {
        "title": "\"uninstall_oh_my_zsh\" command not working properly",
        "body": "`uninstall_oh_my_zsh` command returns to **bash** instead of **zsh**.\r\n\r\nreproduce steps;\r\n- install oh-my-zsh\r\n- run `uninstall_oh_my_zsh`\r\n\r\nSystem;\r\nMacos Catalina 10.15 with default zsh shell\r\n\r\nI think it's because of this part. There is no .`shell.pre-oh-my-zsh` file in the home directory;\r\n\r\nhttps://github.com/robbyrussell/oh-my-zsh/blob/687c50bdf999f8efd45f3c8f578a62329b0633da/tools/uninstall.sh#L28-L32",
        "labels": "Bug",
        "id": 43421
    },
    {
        "title": "TaskWarrior: tab-completion does not work for project names with spaces",
        "body": "**Describe the bug**\r\nTab-completion does not for for project names that contain spaces\r\n\r\n**To Reproduce**\r\n`task add TEST project:\"Test Project\"`\r\n`task project:\"Test Project\"  list` works.\r\nHowever, I cant tab-complete `task project:`\r\n\r\n**System:**\r\nmacOS, iTerm2, zsh 5.3 (x86_64-apple-darwin17.0)\r\n",
        "labels": "Bug",
        "id": 43422
    },
    {
        "title": "Breezy causes zsh to hang",
        "body": "**Describe the bug**\r\nWith Breezy installed on Debian Bullseye the zsh prompt might hang while waiting for breezy to show the commit revision. (git-status)\r\n\r\nAdditionally within bigger git repositories breezy will hang for enormous amounts of time and produce a git revision like this:\r\n\r\n`  master  bzr@revision-id: git-v1:0xvery_long_shasum`\r\n\r\n**To Reproduce**\r\n\r\n1. Either use a theme with git status or enable git-prompt (bzr-prompt)\r\n2. Clone a bigger repository or use oh-my-zsh\r\n3. Chdir into that folder\r\n4. Wait for the prompt\r\n5. Bonus: see some useless information\r\n\r\n**Expected behavior**\r\nwithin a git repository do not call bzr and do not show its output\r\n\r\n**Screenshots or recordings**\r\n\r\n**System:**\r\n - OS: Linux (Debian Bullseye)\r\n - Zsh version 5.7.1\r\n - Gnome-Terminal\r\n\r\n**Additional context**\r\nIt seems that breezy will provide a bzr and brz binary. I guess it is a drop in replacement for Bazar that additionally supports git.\r\n\r\nI could fix the issue with uninstalling breezy, but there might be people out there who use that versioning tool and their experience will be really bad.",
        "labels": "Bug",
        "id": 43423
    },
    {
        "title": "git branch completion with wrong string",
        "body": "**Describe the bug**\r\nThere is completion without \"fully qualified\" branch name, which yelds to invalid parameter for git.\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Enable plugin 'git'\r\n2. Run commands:\r\n```\r\nmkdir gitCompletionTest\r\ncd gitCompletionTest \r\ngit init\r\ntouch somethingWeird.exe\r\ngit add .\r\ngit commit -m 'commit msg' .\r\n# now create some branches to autocomplete from\r\ngit checkout -B feature/someEasyOne\r\ngit checkout -B feature/ohMyZshIsSmart\r\ngit checkout -B feature/harderOne\r\n```\r\n3. Now try to switch to `feature/ohMyZshIsSmart` using partial branch name and autocompletion. Write: `git checkout Zsh` and hit tab for autocompletion. It will complete command to `git checkout ohMyZshIsSmart`, which will not work\r\n\r\n**Expected behavior**\r\nI expect that tab will expand to 'gitcheckout feature/ohMyZshIsSmart' (full name of branch).\r\n\r\n**System:**\r\n - OS: ubuntu 18.04\r\n - Zsh version: zsh 5.4.2 (x86_64-ubuntu-linux-gnu)\r\n - Terminal emulator: Gnome terminal in i3wm",
        "labels": "Bug",
        "id": 43424
    },
    {
        "title": "Windows line endings in latest update break $PS1 variable",
        "body": "**Describe the bug**\r\nI said yes to the regular update. Now my `$PS1` is messed up. My shell prompt is blank and there are errors.\r\n\r\n**To Reproduce**\r\n1. Be on a Mac (or probably any *nix)\r\n1. Say yes to today's updates\r\n\r\n**Expected behavior**\r\nLife as usual.\r\n\r\n**Screenshots or recordings**\r\n```\r\nLast login: Tue Sep 17 09:26:04 on ttys000\r\n/Users/123456/.oh-my-zsh/plugins/git/git.plugin.zsh:4: command not found: ^M\r\n/Users/123456/.oh-my-zsh/plugins/git/git.plugin.zsh:230: parse error near `&&'\r\n/Users/123456/.oh-my-zsh/themes/robbyrussell.zsh-theme:3: command not found: ^M\r\n\r\nbash\r\nbash-3.2$ zsh\r\n/Users/123456/.oh-my-zsh/plugins/git/git.plugin.zsh:4: command not found: ^M\r\n/Users/123456/.oh-my-zsh/plugins/git/git.plugin.zsh:230: parse error near `&&'\r\n/Users/123456/.oh-my-zsh/themes/robbyrussell.zsh-theme:3: command not found: ^M\r\nls\r\nDesktop    Downloads  Music     Public\r\nDocuments  Library    Movies   Pictures  \r\n```\r\n\r\n**System:**\r\n - OS: Mac\r\n - Zsh version 5.3\r\n - Terminal emulator \"Terminal\" aka the default one on a Mac\r\n\r\n**Additional context**\r\nOk so I just fixed this...\r\n\r\nOpened up the three files there in neovim and said `set ff=unix` and saved. Then I did a `source ~/.zshrc` and boom. Back to normal.\r\n\r\n# Moral of the story:\r\nCan we not leave in Windows line endings in updates? This is the second time this year.\r\n",
        "labels": "Bug",
        "id": 43425
    },
    {
        "title": "Paste issues from putty",
        "body": "i cant paste into putty anymore without getting this error.\r\n**bracketed-paste-magic:zle:47: not enough arguments for -U**\r\n\r\nthis does not happend with bash or just regulat zsh i have tested it. and i did remove all traces from oh-my-zsh before trying to re-install it but same thing happends again.\r\ni deleted this before trying again.\r\n\r\n**.oh-my-zsh\r\n.zcompdump\r\n.zsh-update\r\n.zsh_history\r\n.zshrc**\r\n\r\nnot sure where to look anymore. or what files i can provide to troubleshoot this.\r\ncan also add that i dont got physical access to this machine. \r\nVPS Debian (10) Buster",
        "labels": "Bug",
        "id": 43426
    },
    {
        "title": "Last character of file name randomly added after cursor when pressing tab",
        "body": "**Describe the bug**\r\n\r\nWhen activating autocomplete in a specific case, the last char of the file name will be added after the cursor.\r\n\r\n**To Reproduce**\r\n1. Create a directory\r\n2. Create 2 files in the directory: `test_cert.sh` and `test_a.sh`\r\n3. Type in `./test_.sh` and move the cursor after the underscore (so that the cursor is flashing on the dot)\r\n4. Press tab to activate autocomplete\r\n5. See that an `h` is added after the cursor\r\n\r\n**Expected behavior**\r\n\r\nNo character should be added after the cursor and the autocomplete chooser should appear, letting the user select a file.\r\n\r\n**System:**\r\n - OS: macOS 10.12.6\r\n - Zsh version 5.2\r\n - Terminal emulator iTerm2",
        "labels": "Bug",
        "id": 43427
    },
    {
        "title": "WD Plugin sources a directory with a pattern antibody can't use.",
        "body": "## Describe the bug\r\n[Gitfast](https://github.com/robbyrussell/oh-my-zsh/blob/master/plugins/gitfast/gitfast.plugin.zsh) uses the following at install time to resolve its directory:\r\n`source \"${0:A:h}/git-prompt.sh\"`\r\n\r\n[WD](https://github.com/robbyrussell/oh-my-zsh/blob/master/plugins/wd/wd.plugin.zsh) does something a little different at run time:\r\n`. $ZSH/plugins/wd/wd.sh`\r\n\r\nIn antibody, the latter fails. I would love to move WD to use a similar pattern to Gitfast:\r\n\r\n```\r\nPATH_TO_WD=${0:A:h}\r\n\t\r\nwd() {\r\n    source ${PATH_TO_WD}/wd.sh\r\n}\r\n```\r\n\r\nI would love help testing this in vanilla oh-my-zsh to ensure im not breaking anything :), which I could see happening (though it seems unlikely).\r\n\r\n## To Reproduce\r\nIn antibody load:\r\n```\r\nrobbyrussell/oh-my-zsh path:lib\r\nrobbyrussell/oh-my-zsh path:plugins/wd\r\n```\r\n\r\nThen try: `wd`\r\n\r\nReceive: `wd:.:1: no such file or directory: /plugins/wd/wd.sh`\r\n\r\n## Expected behavior\r\n`wd` does its thing.\r\n\r\n## Screenshots or recordings\r\n<img width=\"1679\" alt=\"Screen Shot 2019-08-29 at 22 58 31\" src=\"https://user-images.githubusercontent.com/9869123/63992234-8a02b980-cab0-11e9-86e5-d08458afb278.png\">\r\n\r\n\r\n## System\r\n - OS: macOS\r\n - Zsh version: 5.7.1\r\n - Terminal emulator: Terminal.app\r\n - Bundler/manager: antibody \r\n\r\n## Additional context\r\nI made a PR [here](https://github.com/robbyrussell/oh-my-zsh/pull/8116)\r\n\r\nYou can test it in antibody by doing:\r\n```\r\nSalomonSmeke/oh-my-zsh path:lib\r\nSalomonSmeke/oh-my-zsh path:plugins/wd\r\n```\r\n\r\nI use it [here](https://github.com/SalomonSmeke/dotfiles/blob/master/.zsh_antibody_plugins.txt) for my [dotfiles repo](https://github.com/SalomonSmeke/dotfiles/).\r\n\r\n**NOTE: This very well may be better suited for the [wd repo](https://github.com/mfaerevaag/wd). But not super sure as oh-my-zsh does not use submodules. That version is also not identical to the version in oh-my-zsh and this one is much easier to adapt for antibody without `.zshrc` side-effects.**",
        "labels": "Bug",
        "id": 43428
    },
    {
        "title": "tmux attach autocomplete shows window information when it should not",
        "body": "**Describe the bug**\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n```bash\r\n$ tl\r\ntmux-session1: 1 windows (created Sat Aug 24 06:01:51 2019)\r\ntmux-session2: 1 windows (created Sat Aug 24 06:01:51 2019)\r\n\r\n$ ta <TAB>\r\ntmux-session1  tmux-session2  -- 1 windows (created Sat Aug 24 06:01:51 2019)  \r\n```\r\n\r\nTab completing the session name shows the window information of the last session, when it should not.\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Enable plugin `tmux`\r\n2. Create one, or multiple tmux sessions\r\n3. Detach from session\r\n4. Attach to session: `$ ta <TAB>`\r\n5. See error\r\n\r\n\r\n**Expected behavior**\r\n\r\n```bash\r\n$ ta <TAB> \r\ntmux-session1  tmux-session2\r\n```\r\n\r\n**System:**\r\n - OS: macOS 10.14.5\r\n - Zsh version: zsh 5.7.1 (x86_64-apple-darwin18.2.0)\r\n - Terminal emulator: Terminal.app\r\n",
        "labels": "Bug",
        "id": 43429
    },
    {
        "title": "git branch completion not working for git switch",
        "body": "**Describe the bug**\r\nWhen typing `git switch ` and pressing <kbd>Tab</kbd> after the space, the tab completion produces a list of file system objects of the current working directory rather than a list of git branch names (i.e. what happens when pressing <kbd>Tab</kbd> after typing `git checkout `).\r\n\r\n**To Reproduce**\r\n\r\n1. Enable plugin gitfast\r\n2. Go to a directory that is a git repository with more than one local branch\r\n3. Type `git switch ` (including the space at the end) and press <kbd>Tab</kbd>\r\n\r\n**Expected behavior**\r\n\r\nIt shows a list of local branch names\r\n\r\n**Actual behavior**\r\n\r\nIt shows a list of file system objects\r\n\r\n**System:**\r\n - OS: Ubuntu\r\n - Zsh version 5.5.1\r\n - Terminal emulator gnome-terminal\r\n\r\n**Additional context**\r\n\r\nRequires git version 2.23.\r\n\r\nIt looks like the the git completion files need to updated (e.g. the gitfast plugin’s completion files are not up to date).\r\n\r\n**Workaround**\r\n\r\nRun the following commands. They place the completion files from the git repository into the `.zsh` directory.\r\n\r\n```sh\r\nmkdir -p ~/.zsh\r\ncurl -o ~/.zsh/git-completion.bash https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash\r\ncurl -o ~/.zsh/_git https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.zsh\r\n```\r\n\r\nAdd the following lines to your `.zshrc` file.\r\n\r\n```\r\n# Load completion files from the ~/.zsh directory.\r\nzstyle ':completion:*:*:git:*' script ~/.zsh/git-completion.bash\r\nfpath=(~/.zsh $fpath)\r\n\r\nautoload -Uz compinit && compinit\r\n```",
        "labels": "Bug",
        "id": 43430
    },
    {
        "title": "cannot uninstall successfully via uninstall.sh",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n<!-- A clear and concise description of what the bug is. -->When I tried to uninstall it via the command line(uninstall.sh), it told me it's successful, but I installed it, and it always showed the error info(you have a ohmyzsh)\r\n\r\n**To Reproduce**\r\n<!--\r\nSteps to reproduce the behavior:\r\n1. Enable plugin '...'\r\n2. Run command '...', _or_ try to complete command '...', _etc._\r\n3. See error\r\n-->\r\n1,open the iterm\r\n2, run the file(uninstall.sh from the tools of OhMyZsh)\r\n3,It told me it's successful\r\n4, I tried to reinstall oh myzsh via install.sh, it shows me the info(Please see the pic)\r\n\r\n**Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n**Screenshots or recordings**\r\n<!--\r\nIf applicable, add screenshots or record an asciinema session (https://asciinema.org/)\r\nto help explain your problem.\r\n-->\r\n\r\n**System:**\r\n - OS: [e.g. macOS]MacOS\r\n - Zsh version [e.g. 5.6] the latest one\r\n - Terminal emulator [e.g. iTerm2] The latest version\r\n\r\n\r\n\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n",
        "labels": "Bug",
        "id": 43431
    },
    {
        "title": "svn tab completion for files does not work",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\nLet's assume that there is a file called 'rescheduler.py' and a directory\r\ncalled 'RESCHEDULE_EXAMPLE' in a svn repository \r\n\r\n```zsh\r\n> svn diff r<TAB> \r\n```\r\ndoes not complete it as expected since it suggests only the directory 'RESCHEDULE_EXAMPLE'.\r\nThe same odd behavior can be also experienced with 'log' argument (i.e. svn log).\r\nIf I disable oh-my-zsh by removing the source command in the .zshrc file\r\nsvn tab completion works as expected.\r\n\r\n**To Reproduce**\r\n<!--\r\nSteps to reproduce the behavior:\r\n1. Enable plugin 'git colorize pip python osx colored-man-pages dirhistory copyfile svn-fast-info'\r\n2. Run command '...', _or_ try to complete command '...', _etc._\r\n\r\nsee above\r\n\r\n3. See error\r\n-->\r\n\r\nsee above\r\n\r\n**Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n**Screenshots or recordings**\r\n<!--\r\nIf applicable, add screenshots or record an asciinema session (https://asciinema.org/)\r\nto help explain your problem.\r\n-->\r\n\r\n**System:**\r\n - OS: [e.g. macOS] mac osx mojave 10.14.6\r\n - Zsh version  zsh 5.7.1 (x86_64-apple-darwin18.2.0)\r\n - Terminal emulator  iTerm2 3.3.2\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n",
        "labels": "Bug",
        "id": 43432
    },
    {
        "title": "Prompt cursor bug made me uninstall",
        "body": "**Describe the bug**\r\nWhen the prompt is very long and close to the width of the terminal and when up arrowing through previous commands, the cursor will jump up another line above if the command is 2 lines long.  See video I made.\r\n\r\n**To Reproduce**\r\n1. Set this prompt:\r\n`PROMPT='%{$fg[cyan]%}[-%{$reset_color%}%D{%F %T} %/ %{$fg[cyan]%}->${reset_color%} '`\r\n2. Go to a really deep directory, something that takes up most of your terminal width\r\n3. Type out a long command that wraps to a lower line and run it\r\n4. Up arrow to the previous command and then use left arrow until it jumps to the next line\r\n5. Continue to left arrow until it jumps another line\r\n\r\n**Expected behavior**\r\nCursor to stay on the line I'm editing\r\n\r\n**Screenshots or recordings**\r\nhttps://www.youtube.com/watch?v=xAtogSdaONs\r\n\r\n**System:**\r\nMacOS\r\nZsh version latest as of yesterday\r\niTerm2 version 3\r\n\r\n**Additional context**\r\nI originally uninstalled zsh because of this bug, but came back for the history management stuff thinking I could just resize my window to clear this issue when I ran in to it, but that doesn't work.\r\n\r\nI suspect this might be the cursor failing to deal with zshell color codes properly?",
        "labels": "Bug",
        "id": 43433
    },
    {
        "title": "Undocumented Terminal.app-specific control sequence is printed from inside vim",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nIn lib/termsupport.zsh, this code:\r\n\r\n```if [[ \"$TERM_PROGRAM\" == \"Apple_Terminal\" ]] && [[ -z \"$INSIDE_EMACS\" ]]; then```\r\n\r\nshould read:\r\n\r\n```\r\nif [[ \"$TERM_PROGRAM\" == \"Apple_Terminal\" ]] && [[ -z \"$INSIDE_EMACS\" ]] && [[ -z \"$VIM\" ]]; then\r\n```\r\n\r\nso that when I run shell commands from vim (e.g. `:!ls`) the control sequence is not included in command output.\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. start a new session in tmux\r\n2. Within tmux run vim\r\n3. Type, `:!ls` and hit `ENTER`.\r\n\r\n**Expected behavior**\r\nThe shell executes the ls command and returns a listing of files in the current directory\r\n\r\n**Expected behavior**\r\nThe shell executes the ls command and returns the following:\r\n\r\n```\r\n^[]7;file://XYZ/Users/ME/src/directory/directory\r\nMakefile\r\nPipfile\r\nREADME.md\r\n__pycache__\r\ntags\r\ntests\r\n```\r\n\r\n**System:**\r\n - OS: macOS\r\n - Zsh version: zsh 5.7.1 (x86_64-apple-darwin17.7.0)\r\n - Terminal emulator: Terminal\r\n",
        "labels": "Bug",
        "id": 43434
    },
    {
        "title": "Terminal closes when type \"git commit -m\"",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nWhen I'm trying to commit a project with \"git commit -m\" the terminal suddenly closes when I reach the \"-\" character.\r\nVscode gives me the error `The terminal process terminated with exit code: 139`\r\n\r\n**To Reproduce**\r\nI'm working on a personal project, I just added some files with the command `git add .` and then when I was going to type \"git commit -m\" the terminal suddenly closes when I type the character \"-\".\r\n_This is only happening with the git commands._\r\n\r\n**System:**\r\n - OS: Windows 10\r\n - Zsh version: 5.4.2\r\n - Terminal emulator: Hyper\r\n",
        "labels": "Bug",
        "id": 43435
    },
    {
        "title": "homestead plugin do not show parsed commands",
        "body": "**Describe the bug**\r\nHomestead plugin do not parse commands\r\n\r\n**To Reproduce**\r\nactivate homestead plugin,\r\nadd shell function for homestead daily usage,\r\ntry print autocomplete commands - `homestead + <tab>`\r\n\r\n**System:**\r\n - OS: 10.14.6\r\n - Zsh version zsh 5.7.1 (x86_64-apple-darwin18.2.0)\r\n - Terminal emulator default terminal 2.9.5 (421.2)\r\n - vagrant 2.2.5\r\n\r\n**Additional context**\r\nI create PR with fix this problem\r\nhttps://github.com/robbyrussell/oh-my-zsh/pull/8008\r\n",
        "labels": "Bug",
        "id": 43436
    },
    {
        "title": "af-magic and python environment variables creates line overflow",
        "body": "**Describe the bug**\r\nIf using Python Virtual environments, `af-magic` theme puts the virtualenv at the front of the line separator and pushes the line into the next terminal line\r\n\r\n**To Reproduce**\r\n1. Have zsh running with the `af-magic` theme\r\n2. Activate a python virtual environment\r\n3. It should display immediately\r\n\r\n**Expected behavior**\r\nThe environment name should display on the command line or the line should justify properly to not create overflow\r\n\r\n**Screenshots or recordings**\r\n![Screen Shot 2019-08-15 at 9 12 00 AM](https://user-images.githubusercontent.com/9310513/63096782-cbd22280-bf3c-11e9-8297-3607452fb585.png)\r\n\r\n\r\n**System:**\r\n - OS: macOS and Fedora 30\r\n - Zsh version: 5.7.1\r\n - Terminal emulator: Hyper and Gnome Terminal",
        "labels": "Bug",
        "id": 43437
    },
    {
        "title": "git-auto-fetch plugin broken?",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n 👋  New zsh user here!\r\n\r\nWhen I enable the `git-auto-fetch` plugin, I get errors on my shell. I'm not sure whether any fetching is occurring either.\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Enable plugin 'git-auto-fetch'\r\n1. Open a new shell.\r\n1. `cd` anywhere; either in or out of a repo directory.\r\n1. See errors, e.g.:\r\n    ```\r\n    ➜ (eval):1: command not found: override-git-auto-fetch-\r\n    ➜ zle-line-init:2: command not found: override-git-auto-fetch-zle-line-init\r\n    ```\r\n\r\n\r\n**Expected behavior**\r\nNo errors, and when in a git directory, for a fetch to occur.\r\n\r\n**System:**\r\n - OS: macOS Mojave 10.14.6\r\n - Zsh version: 5.7.1\r\n - Terminal emulator: iTerm2\r\n",
        "labels": "Bug",
        "id": 43438
    },
    {
        "title": "Faulty behavior of the root shell with the Agnoster theme",
        "body": "**Describe the bug**\r\nI use oh-my-zsh with the agnoster theme and tmux. Usually I administrate these Linux systems with a putty shell over ssh from my Windows system. The shell usually works fine if I stay in the user context of the user I used to connect to the server. But in many cases I switch to the root shell by starting it with \"sudo -i tmux\". There are some problems within this shell:\r\n1. when scrolling history back and forth (ctrl+b page up/down) with tmux, single letters get stuck\r\n2. in the root shell, there is an additional space between the prompt and the command line entry\r\n3. errors occur during auto-completion: e.g. if you type \"cp -\" and then press \"tab\", the strings jump one letter to the left and you type one character at a time, the characters are offset\r\n\r\n**To Reproduce**\r\n1. start PuTTy and connect to the Linux system with a normal user (Debian 8, 9 or 10)\r\n2. Start a root shell: \"sudo -i tmux\"\r\n3. subdivide the window vertically with \"ctrl+b %\".\r\n4. start the command line input and use the auto-complete function\r\n\r\n**Expected behavior**\r\nThe auto-complete should work correctly. The history should not show any artifacts.\r\n\r\n**Screenshots or recordings**\r\n![RemoteDesktopManagerFree_2019-08-07_22-36-50](https://user-images.githubusercontent.com/8094242/62657668-4c09ee00-b967-11e9-9d2c-e8c7023c0cb3.png)\r\n![RemoteDesktopManagerFree_2019-08-07_22-40-23](https://user-images.githubusercontent.com/8094242/62657674-4e6c4800-b967-11e9-9ba0-cc6feb2d08e1.png)\r\n\r\n**System:**\r\n- OS: Windows 10 1903 and Debian 10\r\n- Zsh version: zsh 5.7.1 (x86_64-debian-linux-gnu)\r\n- Terminal emulator: tmux 2.8\r\n\r\n",
        "labels": "Bug",
        "id": 43439
    },
    {
        "title": ".oh-my-zsh/oh-my-zsh.sh:43: parse error near `elif'",
        "body": "**Describe the bug**\r\n.zshrc fails to load due to a parser error in oh-my-zsh.sh\r\n**To Reproduce**\r\n1. Install oh-my-zsh\r\n2. run zsh\r\n3. ???\r\n\r\n**Expected behavior**\r\nThe script runs fine.\r\n\r\n**System:**\r\n - OS:  windows subsystem for linux\r\n - Zsh version zsh 5.4.2 (x86_64-ubuntu-linux-gnu)\r\n\r\n**Additional context**\r\n```sh\r\n 38 # Add all defined plugins to fpath. This must be done\r\n     39 # before running compinit.\r\n     40 for plugin ($plugins); do\r\n     41   if is_plugin $ZSH_CUSTOM $plugin; then\r\n     42     fpath=($ZSH_CUSTOM/plugins/$plugin $fpath)\r\n     43   elif is_plugin $ZSH $plugin; then\r\n     44     fpath=($ZSH/plugins/$plugin $fpath)\r\n     45   else\r\n     46     echo \"[oh-my-zsh] plugin '$plugin' not found\"\r\n     47   fi\r\n     48 done\r\n```",
        "labels": "Bug",
        "id": 43440
    },
    {
        "title": "pressing tab key make broken line",
        "body": "<-- \r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n<!-- A clear and concise description of what the bug is. -->\r\ntab break cli \r\n\r\n**To Reproduce**\r\n<!--\r\nSteps to reproduce the behavior:\r\n1. type any letter\r\n2. press 'tab' key\r\n-->\r\n1. type any letter\r\n2. press 'tab' key\r\n\r\n**Expected behavior**\r\n<!--\r\nI expect the line don't break.\r\n-->\r\nI expect the line don't break.\r\n\r\n**Screenshots or recordings**\r\n<!--\r\n![tab matter](https://user-images.githubusercontent.com/26853553/62420900-ef8fa000-b6d4-11e9-8652-e5389e17002a.gif)\r\n\r\n-->\r\n\r\n**System:**\r\n - OS: 10.15 Beta (19A526h\r\n - Zsh version : zsh 5.7.1 (x86_64-apple-darwin19.0)\r\n - Terminal emulator : Version 2.10 (431)\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n",
        "labels": "Bug",
        "id": 43441
    },
    {
        "title": "no such file or directory: /oh-my-zsh.sh",
        "body": "I looked for lots of solutions in github issues and googling, but I couldn't solve it.\r\n\r\nMy zsh version\r\n\r\n```zsh 5.7.1 (x86_64-apple-darwin18.2.0)```\r\n\r\nMy `~/.zshrc`\r\n\r\n```\r\nexport zsh=\"/users/baeharam/.oh-my-zsh\"\r\nzsh_theme=\"agnoster\"\r\nplugins=(git)\r\nsource $ZSH/oh-my-zsh.sh\r\nexport LANG=ko_KR.UTF-8\r\n\r\nsource /Users/baeharam/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh\r\nprompt_context() {}\r\nprompt_dir() {\r\n  prompt_segment blue black \"%$(( $COLUMNS - 61 ))<...<%3~%<<\"\r\n}\r\n\r\ncd ~/haram/\r\nexport PATH=\"$(yarn global bin):$PATH\"\r\n[[ -s $HOME/.nvm/nvm.sh ]] && . $HOME/.nvm/nvm.sh\r\n```\r\n\r\nHow can I handle this?\r\n",
        "labels": "Bug",
        "id": 43442
    },
    {
        "title": "Tmux Started with a smaller client",
        "body": "**Describe the bug**\r\nTmux started with smaller client.\r\n\r\n**To Reproduce**\r\n<!--\r\nSteps to reproduce the behavior:\r\n1. Enable plugin '...'\r\n2. Run command '...', _or_ try to complete command '...', _etc._\r\n3. See error\r\n-->\r\n1. Enable plugins=(... tmux)\r\n2. Set `ZSH_TMUX_AUTOSTART=true`\r\n3. SSH into remote machine (that also have tmux plugin enabled)\r\n4. Turn off computer, turn on again and open up terminal and it looks like this\r\n![Screenshot from 2019-07-30 15-54-33](https://user-images.githubusercontent.com/13085918/62115608-e53f6180-b2e2-11e9-9562-b4f812a6f100.png)\r\n\r\nDetaching doesn't do anything unless I do `pkill tmux:\\ client`\r\n\r\n\r\n**Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n**Screenshots or recordings**\r\n<!--\r\nIf applicable, add screenshots or record an asciinema session (https://asciinema.org/)\r\nto help explain your problem.\r\n-->\r\n\r\n**System:**\r\n - OS: Ubuntu 18.04\r\n - Zsh version: 5.4.2\r\n - Terminal emulator: gnome-terminal",
        "labels": "Bug",
        "id": 43443
    },
    {
        "title": "gradle-or-gradlew:5: maximum nested function level reached; increase FUNCNEST?",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\nfunction recursion \r\n\r\n**To Reproduce**\r\n<!--\r\nSteps to reproduce the behavior:\r\n1. Enable plugin '...'\r\n2. Run command '...', _or_ try to complete command '...', _etc._\r\n3. See error\r\n-->\r\n1. Enable plugin gradle and mvn \r\n2. gradle-or-gradlew:5: maximum nested function level reached; increase FUNCNEST?\r\n3. the same problem for mvn plugin \r\n\r\n**Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n**Screenshots or recordings**\r\n<!--\r\nIf applicable, add screenshots or record an asciinema session (https://asciinema.org/)\r\nto help explain your problem.\r\n-->\r\n\r\n**System:**\r\n - OS: Manjaro 18.0.4\r\n - Zsh version 5.7.1 \r\n - Terminal emulator Qterminal\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n\r\nlike the gradle and mvn plugin\r\n\r\n```sh\r\ngradle-or-gradlew() {\r\n\tif [ -f ./gradlew ] ; then\r\n\t\techo \"executing gradlew instead of gradle\";\r\n\t\t./gradlew \"$@\";\r\n\telse\r\n\t\tgradle \"$@\";\r\n\tfi\r\n}\r\n\r\nalias gradle=gradle-or-gradlew;\r\n```\r\n\r\nremove the alias will fix this problem, or change alias \r\n\r\n",
        "labels": "Bug",
        "id": 43444
    },
    {
        "title": "Agnoster theme ignores SHOW_AWS_PROMPT=false",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Agnoster theme ignores SHOW_AWS_PROMPT=false**\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n**To Reproduce**\r\n<!--\r\nSteps to reproduce the behavior:\r\n1. Use Agnoster theme\r\n2. In .zshrc set SHOW_AWS_PROMPT=false\r\n3. Set AWS_PROFILE=anything\r\n4. Note \"AWS: anything\" is now on your prompt\r\n-->\r\n\r\n**Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\nWhen SHOW_AWS_PROMPT is set to false it should not appear\r\n**Screenshots or recordings**\r\n<!--\r\nIf applicable, add screenshots or record an asciinema session (https://asciinema.org/)\r\nto help explain your problem.\r\n-->\r\n\r\n**System:**\r\n - OS: MacOS\r\n - Zsh version zsh 5.7.1 (x86_64-apple-darwin18.2.0)\r\n - Terminal emulator iTerm 2\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n",
        "labels": "Bug",
        "id": 43445
    },
    {
        "title": "Extra space after branch name when using Tab to autocomplete git branch",
        "body": "**Describe the bug**\r\nAuto add an extra space after branch name when using tab.\r\n\r\n**To Reproduce**\r\n<!--\r\nSteps to reproduce the behavior:\r\n1. Enable plugin '...'\r\n2. Run command '...', _or_ try to complete command '...', _etc._\r\n3. See error\r\n-->\r\n1. Enable plugin 'git'\r\n2. Move into a git project folder, example we have branch `demo-test`\r\n3. Type command `git checkout demo`, then press Tab\r\n\r\n**Expected behavior**\r\nAuto fill `demo-test` without 2 spaces between branch name and prompt. Only need one.\r\n<img width=\"392\" alt=\"Screen Shot 2019-07-25 at 05 24 42\" src=\"https://user-images.githubusercontent.com/10509903/61833002-3099e000-ae9d-11e9-8307-51ae1f8fc481.png\">\r\n\r\n**Screenshots or recordings**\r\n<img width=\"384\" alt=\"Screen Shot 2019-07-25 at 05 24 32\" src=\"https://user-images.githubusercontent.com/10509903/61833010-3a234800-ae9d-11e9-8f02-0bfcb34dd655.png\">\r\n\r\n\r\n**System:**\r\n - OS: MacOS 10.14.6\r\n - Zsh version: zsh 5.7.1 (x86_64-apple-darwin18.2.0)\r\n - Terminal emulator: iTerm2 and MacOS Terminal\r\n - Default oh-my-zsh theme\r\n - Already run `upgrade_oh_my_zsh` to get latest updates\r\n\r\n**Additional context**\r\nI have two MacBook Pro, one is 2015 and other is 2019.\r\nI think two machines have same config, theme ... but the problem only happened in 2019, 2015 is still normal. ",
        "labels": "Bug",
        "id": 43446
    },
    {
        "title": "command-not-found plugin has strange behavior with unrecognized commands",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nI'm on Ubuntu 18.04 freshly installed with zsh and latest version of oh-my-zsh. I activated the command-not-found plugin.\r\n\r\nWhen I type a command for a program that is not installed everything performs normally:\r\n\r\n```\r\n ✘ xxx  ~  ksh\r\n\r\nCommand 'ksh' not found, but can be installed with:\r\n\r\nsudo apt install ksh \r\nsudo apt install mksh\r\n```\r\n\r\nSame thing if I type a command that *looks* like a known command:\r\n\r\n```\r\n ✘ xxx  ~  ksb\r\n\r\nCommand 'ksb' not found, did you mean:\r\n\r\n  command 'k3b' from deb k3b\r\n  command 'sb' from deb lrzsz\r\n  command 'kgb' from deb kgb\r\n  command 'kdb' from deb elektra-bin\r\n  command 'ksu' from deb heimdal-clients\r\n  command 'ksu' from deb krb5-user\r\n  command 'msb' from deb mysql-sandbox\r\n  command 'ksh' from deb ksh\r\n  command 'ksh' from deb mksh\r\n\r\nTry: sudo apt install <deb name>\r\n```\r\n\r\nBut when I type something totally unrelated to a known command it displays nothing at all:\r\n\r\n```\r\n ✘ xxx  ~  hahahaha\r\n ✘ xxx  ~  \r\n```\r\n\r\n**To Reproduce**\r\nOn ubuntu, try to activate the command-not-found plugin and type an unknown command (like `hahahaha` in my example).\r\n\r\n**Expected behavior**\r\nSomething more similar to a vanilla bash on ubuntu:\r\n\r\n```\r\nxxx:~$ hahahaha\r\nhahahaha: command not found\r\nxxx:~$\r\n```\r\n\r\n**Screenshots or recordings**\r\n\r\n\r\n**System:**\r\n - OS: Ubuntu 18.04\r\n - Zsh version 5.4.2\r\n - Terminal emulator 'Terminal' application on Ubuntu\r\n\r\n**Additional context**\r\n",
        "labels": "Bug",
        "id": 43447
    },
    {
        "title": "cannot uninstall zsh via command",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n<!-- A clear and concise description of what the bug is. -->\r\ncannot uninstall zsh because it has a error info .- no such file /Users/MarcZhao/.zshrc:source:56: no such file or directory: /Users/zhaoxinqiang/.oh-my-zsh/oh-my-zsh.sh\r\n\r\n**To Reproduce**\r\n<!--\r\nSteps to reproduce the behavior:\r\n1. Enable plugin '...'\r\n2. Run command '...', _or_ try to complete command '...', _etc._\r\n3. See error\r\n-->\r\n\r\n**Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n**Screenshots or recordings**\r\n<!--\r\nIf applicable, add screenshots or record an asciinema session (https://asciinema.org/)\r\nto help explain your problem.\r\n-->\r\n\r\n**System:**\r\n - OS: [e.g. macOS]\r\n - Zsh version [e.g. 5.6]\r\n - Terminal emulator [e.g. iTerm2]\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n",
        "labels": "Bug",
        "id": 43448
    },
    {
        "title": "Gradle task auto-completion does not work from within subfolder",
        "body": "**Bug Description**\r\nTrying to auto-complete `../gradlew` from within a subfolder of the place where `gradlew` resides does not work.\r\n\r\n**Steps To Reproduce**\r\n1. Enter the folder where `gradlew` lives.\r\n2. Enter into any subfolder of this folder.\r\n3. Try to auto-complete `../gradlew`.\r\n4. See no auto-completion.\r\n\r\n**Expected behavior**\r\nAuto-completion should interpret the relative path to `gradlew` and use it to gather the Gradle targets. Building subcomponents sometimes requires to build from subfolders, or otherwise all components of the software will be built.\r\n\r\n**System:**\r\n - OS: macOS\r\n - Zsh version: 5.7.1\r\n - Terminal emulator: macOS Terminal",
        "labels": "Bug",
        "id": 43449
    },
    {
        "title": "fzf plugin not aware of debian package",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\nI run Debian testing/sid on my machine and every new shell spits out: \r\n```\r\n[oh-my-zsh] fzf plugin: Cannot find fzf installation directory.\r\n Please add `export FZF_BASE=/path/to/fzf/install/dir` to your .zshrc\r\n```\r\n\r\nWhilst I have fzf package installed:\r\n```\r\ndpkg -l | grep fzf\r\n\r\nii  fzf                               0.18.0-2                     amd64        general-purpose command-line fuzzy finder\r\n```\r\n\r\nUpon further investigation its pretty obvious that debain package installs fzf in a weird way that results in project files being all over the place:\r\n<details><summary>Files for package</summary>\r\n\r\n```\r\ndpkg-query -L fzf\r\n\r\n/usr\r\n/usr/bin\r\n/usr/bin/fzf\r\n/usr/bin/fzf-tmux\r\n/usr/share\r\n/usr/share/bash-completion\r\n/usr/share/bash-completion/completions\r\n/usr/share/bash-completion/completions/fzf\r\n/usr/share/doc\r\n/usr/share/doc/fzf\r\n/usr/share/doc/fzf/README.Debian\r\n/usr/share/doc/fzf/changelog.Debian.gz\r\n/usr/share/doc/fzf/changelog.gz\r\n/usr/share/doc/fzf/copyright\r\n/usr/share/doc/fzf/examples\r\n/usr/share/doc/fzf/examples/fish_user_key_bindings.fish\r\n/usr/share/doc/fzf/examples/fzf.vim\r\n/usr/share/doc/fzf/examples/key-bindings.bash\r\n/usr/share/doc/fzf/examples/key-bindings.fish\r\n/usr/share/doc/fzf/examples/key-bindings.zsh\r\n/usr/share/doc/fzf/examples/plugin\r\n/usr/share/fish\r\n/usr/share/fish/vendor_functions.d\r\n/usr/share/fish/vendor_functions.d/fzf_key_bindings.fish\r\n/usr/share/gocode\r\n/usr/share/gocode/src\r\n/usr/share/gocode/src/github.com\r\n/usr/share/gocode/src/github.com/junegunn\r\n/usr/share/gocode/src/github.com/junegunn/fzf\r\n/usr/share/gocode/src/github.com/junegunn/fzf/go.mod\r\n/usr/share/gocode/src/github.com/junegunn/fzf/go.sum\r\n/usr/share/gocode/src/github.com/junegunn/fzf/main.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/algo\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/algo/algo.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/algo/algo_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/algo/normalize.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/ansi.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/ansi_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/cache.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/cache_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/chunklist.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/chunklist_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/constants.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/core.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/history.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/history_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/item.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/item_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/matcher.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/merger.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/merger_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/options.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/options_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/pattern.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/pattern_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/reader.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/reader_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/result.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/result_others.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/result_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/result_x86.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/terminal.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/terminal_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/terminal_unix.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/terminal_windows.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/tokenizer.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/tokenizer_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/tui\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/tui/dummy.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/tui/light.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/tui/tcell.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/tui/ttyname_unix.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/tui/ttyname_windows.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/tui/tui.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/tui/tui_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/util\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/util/atomicbool.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/util/atomicbool_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/util/chars.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/util/chars_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/util/eventbox.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/util/eventbox_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/util/slab.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/util/util.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/util/util_test.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/util/util_unix.go\r\n/usr/share/gocode/src/github.com/junegunn/fzf/src/util/util_windows.go\r\n/usr/share/man\r\n/usr/share/man/man1\r\n/usr/share/man/man1/fzf-tmux.1.gz\r\n/usr/share/man/man1/fzf.1.gz\r\n/usr/share/zsh\r\n/usr/share/zsh/vendor-completions\r\n/usr/share/zsh/vendor-completions/_fzf\r\n/usr/share/doc/fzf/examples/plugin/fzf.vim\r\n```\r\n</details>\r\n\r\nAccording to these 2 pages the very same package is available for ubuntu:\r\nhttps://packages.debian.org/sid/utils/fzf\r\nhttps://qa.debian.org/developer.php?login=cdluminate%40gmail.com\r\nI do not have means to confirm this theory, nevertheless there is very little chance that ubuntu and debian packages differ in any way.\r\nATM plugin works fine if fzf installed through pacman (archlinux only pretty much), brew or manual installation via git (https://github.com/junegunn/fzf#using-git)\r\nIt's pretty reasonable to expect plugin picking up system package if it's available.\r\n\r\n@maxbrunet FYI \r\nI've already started working on fixing it, will submit PR soon",
        "labels": "Bug",
        "id": 43450
    },
    {
        "title": "Problem to kill process tree",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nProblem to kill process tree, using CTRL + C,\r\n\r\n**System:**\r\n - OS: Windows 10\r\n - zsh 5.5.1 (x86_64-unknown-cygwin)\r\n - cygwin\r\n",
        "labels": "Bug",
        "id": 43451
    },
    {
        "title": "parse errors for functions in debian.plugin.zsh",
        "body": "**Describe the bug**\r\nIn Debian Buster, zsh 5.7.1 (x86_64-debian-linux-gnu), the debian plugin in OMZ gives parse errors:\r\n\r\n```\r\n/home/username/.oh-my-zsh/plugins/debian/debian.plugin.zsh:75: defining function based on alias `abd'  \r\n/home/username/.oh-my-zsh/plugins/debian/debian.plugin.zsh:75: parse error near `()' \r\n```\r\n\r\nIt appears that it doesn't like the functions being defined here without the \"function\" keyword.  This appears to be able to be fixed by adding \"function\" to all the functions defined in that section, namely:\r\n\r\nline 75: \"function abd() {\"\r\nline 86: \"function ai() {\"\r\nline 91: \"function ap() {\"\r\nline 96: \"function ar() {\"\r\n\r\nI'm not sure how to file a pull request or I'd just do so myself, sorry.\r\n\r\n**To Reproduce**\r\n1.) Enable \"debian\" plugin in zshrc\r\n2.) source ~/.zshrc\r\n3.) Receive parse error\r\n\r\n**Expected behavior**\r\nPlugin should load without issue rather than parse errors\r\n\r\n**System:**\r\n - OS: Debian Buster\r\n - Zsh version: 5.7.1 (x86_64-debian-linux-gnu)\r\n - Terminal emulator: urxvt (rxvt-unicode 9.22-6) with tmux 2.8-3",
        "labels": "Bug",
        "id": 43452
    },
    {
        "title": "schrodingers VIRTUAL_ENV_DISABLE_PROMPT ",
        "body": "**Describe the bug**\r\nthe `virtualenv` command generates a `bin/activate` script that modifies `$PS1` to include the virtual environment name.\r\n\r\noh-my-zsh does something similar with `prompt_virtualenv`\r\n\r\neach script decides whether to display virtualenv information based on the `VIRTUAL_ENV_DISABLE_PROMPT` variable. \r\n\r\nthe virtualenv's activate script uses the `-z` test (string is null, that is, has zero length).  oh-my-zsh uses the `-n` (string is not null)....  not sure how to craft a variable that is both null and not null.\r\n\r\n```\r\nprompt_virtualenv () {\r\n    local virtualenv_path=\"$VIRTUAL_ENV\"\r\n    if [[ -n $virtualenv_path && -n $VIRTUAL_ENV_DISABLE_PROMPT ]]\r\n    then\r\n        prompt_segment blue black \"(`basename $virtualenv_path`)\"\r\n    fi\r\n}\r\n```\r\n\r\n```\r\nif [ -z \"${VIRTUAL_ENV_DISABLE_PROMPT-}\" ] ; then\r\n    _OLD_VIRTUAL_PS1=\"${PS1-}\"\r\n    if [ \"x\" != x ] ; then\r\n        PS1=\"${PS1-}\"\r\n    else\r\n        PS1=\"(`basename \\\"$VIRTUAL_ENV\\\"`) ${PS1-}\"\r\n    fi\r\n    export PS1\r\nfi\r\n```\r\n**To Reproduce**\r\n1. Install oh-my-zsh\r\n2. Install python2's virtualenv\r\n3. create a virtual env `virtualenv test`\r\n4. activate virtualenv `source test/bin/activate`\r\n5. No matter what value you put for `VIRTUAL_ENV_DISABLE_PROMPT` always end up with a munged prompt\r\n\r\n\r\n**Expected behavior**\r\nWhen VIRTUAL_ENV_DISABLE_PROMPT is set, don't display the virtual env in PS1\r\n\r\n**System:**\r\n - OS: OSX 10.14.5\r\n - Zsh version zsh 5.3 (x86_64-apple-darwin18.0)\r\n - Terminal emulator: iterm2\r\n - Virtualenv version: /usr/local/bin/virtualenv --version 16.6.1\r\n - Python version: Python 2.7.16\r\n\r\n",
        "labels": "Bug",
        "id": 43453
    },
    {
        "title": "Plugin npx prevents zsh starting",
        "body": "### Description\r\n\r\nAfter upgrading Oh My Zsh to the latest version (c7a7b70), zsh shells did not start anymore: the prompt don't appear.\r\n\r\nI realized that the [npx plugin](https://github.com/robbyrussell/oh-my-zsh/blob/master/plugins/npx/npx.plugin.zsh) is the cause.\r\n\r\n### Steps to reproduce\r\n\r\n1. `upgrade_oh_my_zsh`\r\n2. Enable plugin \"npx\"\r\n3. Run a new shell\r\n4. See nothing…\r\n\r\n### System\r\n - macOS 10.14.5 (18F132)\r\n - Zsh 5.7.1 (x86_64-apple-darwin18.2.0)\r\n - Terminal.app",
        "labels": "Bug",
        "id": 43454
    },
    {
        "title": "Tab complete moves the cursor to a new upper line",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n<!-- A clear and concise description of what the bug is. -->\r\nEach time I autocomplete on a prefix search matching multiple entries the cursor will go up 2 lines\r\n\r\n**To Reproduce**\r\n<!--\r\nSteps to reproduce the behavior:\r\n1. Enable plugin '...'\r\n2. Run command '...', _or_ try to complete command '...', _etc._\r\n3. See error\r\n-->\r\n1. Apply the config\r\n```\r\nexport ZSH=$HOME/.oh-my-zsh\r\n\r\nZSH_THEME=\"spaceship\"\r\n\r\nSPACESHIP_PROMPT_ORDER=(dir git venv exec_time line_sep battery jobs char)\r\nSPACESHIP_VENV_SYMBOL=🐍·\r\nSPACESHIP_VENV_COLOR=yellow\r\nSPACESHIP_PROMPT_SEPARATE_LINE=true\r\n\r\nplugins=(\r\n    git sudo colorize zsh-autosuggestions zsh-syntax-highlighting\r\n    git-extras virtualenvwrapper django heroku jira\r\n)\r\n\r\nsource $ZSH/oh-my-zsh.sh\r\n```\r\n2. `cd <some_chars_to_match_multiple_folders>`\r\n3.  Press `Tab`\r\n\r\n**Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\nThe cursor should remain on the same line\r\n\r\n**Screenshots or recordings**\r\n<!--\r\nIf applicable, add screenshots or record an asciinema session (https://asciinema.org/)\r\nto help explain your problem.\r\n-->\r\n![multi_line_zsh_problem](https://user-images.githubusercontent.com/11786642/60390106-5ec31480-9ad7-11e9-952a-c2511406a777.gif)\r\n\r\n**System:**\r\n - OS: macOS 10.13.6\r\n - Zsh version: 5.7.1\r\n - Terminal emulator: iTerm2\r\n",
        "labels": "Bug",
        "id": 43455
    },
    {
        "title": "Changing default to zsh declared Y to be an invalid choice",
        "body": "**Describe the bug**\r\nInstalled oh my zsh using the homepage curl command. When I got to `Do you want to change your default shell to zsh? [Y/n]` I typed `Y` and hit enter.\r\n\r\nThe installed then said `Invalid choice. Shell change skipped.`. \r\n\r\nOpening a new session has me in bash instead of zsh.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Install oh-my-zsh using the homepage curl command\r\n2. Select `Y` when asked to make zsh the default shell\r\n3. See error\r\n\r\n**Expected behavior**\r\nIt should accept Y as an answer to a `[Y/n]` question\r\n\r\n**Screenshots or recordings**\r\n![image](https://user-images.githubusercontent.com/2625755/60245501-a3bb3100-98b4-11e9-90b7-afd055ff273b.png)\r\n\r\n**System:**\r\n - OS: macOS 10.14.5\r\n - Zsh version: 5.3\r\n - Terminal emulator: Terminal 2.9.5 \r\n",
        "labels": "Bug",
        "id": 43456
    },
    {
        "title": "`/bin/zsh -c nvm` results in cmd not found, but running `nvm` works fine",
        "body": "**Describe the bug**\r\n\r\nIf I run `nvm` direct from terminal, which is using zsh, it works fine.\r\nIf however, I run `/bin/zsh -c nvm` in that same terminal, I get a command not found error.\r\n\r\n**To Reproduce**\r\n\r\n1. Have zsh installed and as the default terminal\r\n2. Have nvm installed correctly and setup in ~./zshrc\r\n3. Run `nvm` in terminal - should work\r\n4. Run `/bin/zsh -c nvm` - should fail\r\n\r\n**Expected behavior**\r\n\r\nI would expect `/bin/zsh -c nvm` to work correctly unless I've missed something?\r\n\r\n**Screenshots or recordings**\r\n\r\n![image](https://user-images.githubusercontent.com/12371363/60101903-82433380-9754-11e9-845b-341c7b0950e3.png)\r\n\r\n**System:**\r\n - OS: macOS 10.14.4\r\n - Zsh version 5.3\r\n - Terminal emulator ?? Default macOS terminal\r\n\r\n**Additional context**\r\n\r\nDiscovered this whilst configuring custom bash run scripts in RubyMine.\r\n",
        "labels": "Bug",
        "id": 43457
    },
    {
        "title": "Multiple users will use original install",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n<!-- A clear and concise description of what the bug is. -->\r\nWhen I install oh-my-zsh on one user, installing on another user fails. It says it's already installed, citing the other user's folder. Also everything links back to the original users home folder\r\n**To Reproduce**\r\n<!--\r\nSteps to reproduce the behavior:\r\n1. Enable plugin '...'\r\n2. Run command '...', _or_ try to complete command '...', _etc._\r\n3. See error\r\n-->\r\n1. Install for user1\r\n2. Switch to user2\r\n3. Oh-my-zsh refused to install, and if I manually set up ,zshrc it says that I need to take ownership of user1's home directory\r\n**Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\nOh-my-zsh to allow each user to install and have their own settings\r\n**Screenshots or recordings**\r\n<!--\r\nIf applicable, add screenshots or record an asciinema session (https://asciinema.org/)\r\nto help explain your problem.\r\n-->\r\n\r\n**System:**\r\n - OS: Ubuntu 18.04\r\n - Zsh version: 5.4.2\r\n - Terminal emulator [e.g. iTerm2]: none, using SSH session\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n",
        "labels": "Bug",
        "id": 43458
    },
    {
        "title": "Gradle plugin completions not working",
        "body": "Fresh install of omz on Fedora 30. \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Enable plugin 'gradle'\r\n2. git clone https://github.com/jitpack/gradle-simple.git \r\n3. cd gradle-simple\r\n4. ./gradlew [tab]\r\n\r\n**Expected behavior**\r\nShow list of tasks. Nothing is shown. \r\n\r\n**System:**\r\n - OS: Fedora 30\r\n - Zsh version 5.0.2: (x86_64-redhat-linux-gnu)\r\n - Terminal emulator: iTerm2 (ssh)\r\n - Gradle wrapper: Gradle 5.1.1 \r\n\r\n**Additional context**\r\nSame issue presents itself on CentOS 7. It does work on my Mac. Same .zshrc on all hosts.\r\n\r\ngit and docker plugins work.\r\n\r\nI deleted zcomp files and got the same result.\r\n\r\n[zsh5038gradlew1.txt](https://github.com/robbyrussell/oh-my-zsh/files/3316791/zsh5038gradlew1.txt)\r\n\r\n",
        "labels": "Bug",
        "id": 43459
    },
    {
        "title": "Foreign language WINE applications break with oh-my-zsh active due to locale",
        "body": "Hello,\r\n\r\nThe high level issue I'm having is that I regularly run several Windows applications from the command line using WINE, and some of these programs do not work anymore after installing oh-my-zsh.\r\n\r\nI am using Arch Linux. I used the oh-my-zsh installation script from this repo. I confirmed this behavior with no oh-my-zsh plugins or themes active.\r\n\r\nI restored my old `.zshrc` to test, and I confirmed that the applications do run in vanilla zsh, but do not run in oh-my-zsh with no other changes.\r\n\r\nOne thing all the broken applications have in common is that they are expected to only work when run in a Japanese locale. I usually do this with a terminal command of the form `LANG=ja_JP.UTF-8 wine ...`\r\n\r\nIs there an expected change of behavior when using the LANG variable in oh-my-zsh compared to vanilla zsh?\r\n\r\nI am not positive that the problem is related to the foreign language, but it is my best guess at the moment. \r\n\r\nThese WINE applications are an important part of my workflow, so I would greatly appreciate any help you can give in overcoming this issue. I am happy to do anything I can on my end to provide more information.",
        "labels": "Bug",
        "id": 43460
    },
    {
        "title": "Line wrapping problem during using ssh under Windows.",
        "body": "**Describe the bug**\r\nI've installed OMZ on my server, and it works well when I log in with ssh under Mac OS. \r\nHowever, when I use any kind of command line tools under Windows to log in my server, the prompt always breaks into two lines, also, it usually messes up the type-in area.\r\n**To Reproduce**\r\n1. Use CMD or Powershell\r\n2. Log in a server with ssh\r\n3. The bug should be obvious\r\n\r\n**Expected behavior**\r\nThe exact one-line prompt\r\n\r\n**Screenshots or recordings**\r\n![image](https://user-images.githubusercontent.com/5158408/59626501-a01a0280-916e-11e9-9828-4a0d7768cd74.png)\r\n![image](https://user-images.githubusercontent.com/5158408/59626543-bd4ed100-916e-11e9-9e89-741b3088e795.png)\r\n![image](https://user-images.githubusercontent.com/5158408/59626652-03a43000-916f-11e9-85bc-75691c78a7cb.png)\r\n\r\n**System:**\r\n - OS: Ubuntu 19.04\r\n - Zsh version 5.5.1\r\n - Terminal emulator Powershell, Fluent Terminal, CMD\r\n",
        "labels": "Bug",
        "id": 43461
    },
    {
        "title": "Uninstall script syntax error",
        "body": "\r\n\r\n**Describe the bug**\r\n```\r\nmachine% sh ~/.oh-my-zsh/tools/uninstall.sh\r\nAre you sure you want to remove Oh My Zsh? [y/N] y\r\n': not a valid identifiers/uninstall.sh: line 1: read: `confirmation\r\n/Users/ph/.oh-my-zsh/tools/uninstall.sh: line 45: syntax error: unexpected end of file\r\nmachine%\r\n```\r\n\r\n**To Reproduce**\r\njust run the uninstall\r\n\r\n**Expected behavior**\r\nto work\r\n\r\n**System:**\r\n - OS: mojave\r\n - Zsh version 5.7.1\r\n - Terminal emulator: iTerm2\r\n\r\n",
        "labels": "Bug",
        "id": 43462
    },
    {
        "title": "kubectl plugin config aliases broken?",
        "body": "**Describe the bug**\r\nUsing the aliases kccc and kcsc don't seem to be working.\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n**To Reproduce**\r\n1. Run kccc\r\n2. Run kcsc new_context\r\n3. Run kccc\r\n\r\n**Expected behavior**\r\nI expect to have the context switch to new_context.\r\n\r\n**System:**\r\n - OS: macOS\r\n - Zsh version 5.3\r\n - Using macOS Terminal\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n➜  kubectl version -o yaml\r\nclientVersion:\r\n  buildDate: 2019-03-25T02:52:13Z\r\n  compiler: gc\r\n  gitCommit: 6f482974b76db3f1e0f5d24605a9d1d38fad9a2b\r\n  gitTreeState: clean\r\n  gitVersion: v1.12.7\r\n  goVersion: go1.10.8\r\n  major: \"1\"\r\n  minor: \"12\"\r\n  platform: darwin/amd64\r\n\r\n\r\nI believe aliases should be changed to something like `kubectl config set set-context`",
        "labels": "Bug",
        "id": 43463
    },
    {
        "title": "overriding `agp` (conflict between 'ubuntu' and 'aws') fails  ",
        "body": "I placed plugin **aws** later than  **ubuntu**, which should override **ubuntu**'s `agp` to **aws**'s.\r\n\r\n```bash\r\nplugins=(\r\nubuntu\r\n#... some other plugins\r\naws\r\n)\r\n```\r\n\r\nHowever, override fails. `agp` is still `apt purge`. The error message below is printed every time I open a new shell.\r\n\r\n```\r\n/home/gilchan/.oh-my-zsh/plugins/aws/aws.plugin.zsh:1: defining function based on alias `agp'\r\n/home/gilchan/.oh-my-zsh/plugins/aws/aws.plugin.zsh:1: parse error near `()'\r\n```\r\n\r\nBefore update today, this hasn't happened with the same setting.",
        "labels": "Bug",
        "id": 43464
    },
    {
        "title": "safe-paste breaks zle vi editing",
        "body": "## Description\r\n\r\nGiven:\r\n* [`safe-paste`](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/safe-paste) is loaded\r\n* Some text is pasted\r\n\r\nThen:\r\n * It is no longer possible to use the `zle` vi editing commands\r\n\r\n## To reproduce\r\n\r\n**Common steps to reproduce:**\r\n\r\n1. Copy the text `clipboard` into the clipboard\r\n1. Open new terminal\r\n1. Start a new `zsh` with no user system or user configuration:\r\n\r\n       VISUAL=vi zsh -f\r\n\r\n1. Paste the clipboard\r\n1. Press keys: <kbd>esc</kbd> <kbd>I</kbd> <kbd>:</kbd> <kbd>space</kbd> \r\n\r\n**Default (and expected) behaviour:**\r\n\r\nThe prompt shows: \r\n\r\n    svelte% : |clipboard\r\n\r\nWhere `|` is the cursor\r\n\r\n\r\n**Load `safe-paste`:**\r\n\r\n    source <(curl -s 'https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/plugins/safe-paste/safe-paste.plugin.zsh')\r\n\r\n**Actual behaviour after loading `safe-paste`:**\r\n\r\nThe command line shows:\r\n    \r\n    svelte% clipboard: |\r\n\r\nWhere `|` is the cursor\r\n\r\n**System:**\r\n - OS: `Linux svelte 5.0.9-2-MANJARO #1 SMP PREEMPT Sun Apr 21 07:11:08 UTC 2019 x86_64 GNU/Linux`\r\n - Zsh version: `zsh 5.7.1 (x86_64-pc-linux-gnu)`\r\n - Terminal emulator: rxvt\r\n\r\n**Related Issues:**\r\n\r\n* [Safe-paste plugin breaks Home/End keys #5237](https://github.com/robbyrussell/oh-my-zsh/issues/5237)\r\n* [Plugin 'safe-paste' messes with 'history-substring-search' #5149](https://github.com/robbyrussell/oh-my-zsh/issues/5149)\r\n\r\nBoth of the above claim to be resolved by [Ditch smkx in favor of custom bindkey extension #5113](https://github.com/robbyrussell/oh-my-zsh/pull/5113) which is still unmerged after being raised on  on 24 May 2016.\r\n\r\nOther, possible related issues:\r\n\r\n* [[Tracking] Terminal and terminfo related issues #4344](https://github.com/robbyrussell/oh-my-zsh/issues/4344) - A meta issue tracking issue\r\n* [The safe-paste plugin does not make pasting safe and breaks other features. #1742](https://github.com/robbyrussell/oh-my-zsh/issues/1742) - On a flaw in the code as written\r\n\r\n",
        "labels": "Bug",
        "id": 43465
    },
    {
        "title": "Yarn plugin does not install completions",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\nYarn plugin does not install completions\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n**To Reproduce**\r\n\r\nAdded `yarn` to the plugins list in .zshrc and restarted zsh\r\n**Expected:** Typing `yarn <TAB>` should list available yarn commands\r\n**Actual:** files are being completed\r\n\r\n**System:**\r\nUbuntu, zsh 5.4.2, Gnome terminal\r\n\r\n**Probable cause** the plugin.zsh file only contains a bunch of aliases - no mention of the _yarn completion file. Probably the install command is missing?",
        "labels": "Bug",
        "id": 43466
    },
    {
        "title": "aws plugin doesn't validate profile name",
        "body": "<img width=\"663\" alt=\"Screenshot 2019-05-24 at 14 14 47\" src=\"https://user-images.githubusercontent.com/9281169/58368936-3ac25100-7ee3-11e9-836c-5684fa5dfb2f.png\">\r\n\r\nI made a typo ``aws-devv`` in spite of ``aws-dev`` and I was able to switch to an invalid profile. I found that PR https://github.com/robbyrussell/oh-my-zsh/pull/7839 solves it.",
        "labels": "Bug",
        "id": 43467
    },
    {
        "title": "After updating \"command not found: compdef\"",
        "body": "https://github.com/robbyrussell/oh-my-zsh/blob/486fa1010df847bfd8823b4492623afc7c935709/lib/directories.zsh#L32\r\n\r\nSeems that after the update I keep getting:\r\n~/.oh-my-zsh/lib/directories.zsh:32: command not found: compdef\r\n",
        "labels": "Bug",
        "id": 43468
    },
    {
        "title": "vi-mode doesn't update",
        "body": "if I press enter while in normal mode the `<<<` remains on the next command line even though I have been put back into insert mode",
        "labels": "Bug",
        "id": 43469
    },
    {
        "title": "GClean should NOT be defined in the git plugin",
        "body": "gclean is a very dangerous alias to have defined in the git plugin. I just discovered it today, and it caused me to lose my source for an app. I thought it was associated with the gcloud command (Hey same prefix), and thought it would clear the app resources out. I was wrong. But a single command that wipes out all of the things should not be included by default.",
        "labels": "Bug",
        "id": 43470
    },
    {
        "title": "grt alias",
        "body": "the `grt` alias here https://github.com/robbyrussell/oh-my-zsh/wiki/Cheatsheet does not work if the path has spaces",
        "labels": "Bug",
        "id": 43471
    },
    {
        "title": "Vi mode breaks special characters ( Home, End, Delete, Backspace)",
        "body": "Experienced on: MacOs and Fedora26.\r\nZsh works fine untill I turn on Vi mode ( either by `set -o vi` or `bindkey -v`).\r\n\r\nNo `bindkey` solutions worked for me.",
        "labels": "Bug",
        "id": 43472
    },
    {
        "title": "Sublime plugin error",
        "body": "I'm getting the following error after adding the Sublime Plugin in .zshrc and running `source ~/.zshrc `\r\n```\r\n/home/username/.oh-my-zsh/plugins/sublime/sublime.plugin.zsh:36: defining function based on alias `subl'\r\n/home/username/.oh-my-zsh/plugins/sublime/sublime.plugin.zsh:39: parse error near `()'\r\n```\r\nI'm on Ubuntu 18.04.2.",
        "labels": "Bug",
        "id": 43473
    },
    {
        "title": "Prompted to enter SSH RSA key password twice when using ssh-agent plugin",
        "body": "Hello everyone. Thank you all for maintaining oh-my-zsh. It has made me more productive for over half a decade.\r\n\r\nCommit 2a603856 started checking for SSH keys that had already been loaded by checking if a key with their signature had already been added to the ssh-agent. See [this line](https://github.com/robbyrussell/oh-my-zsh/commit/2a603856598eafc3c8a0bde80f8a885d2a81dfee#diff-8238d0b5e0b5769ff4f562b971760784R29) for the relevant line in the commit.\r\n\r\nThis has had the unintended consequence that now, if your SSH key is encrypted, you are prompted twice for your SSH key decryption passphrase.  The first time is to decode your passphrase to get the signature, and the second is to decrypt your key to add it the the ssh-agent.  [Here](https://gist.github.com/motevets/1917c70013af86e5c037c87e606e9f5c) is a debug log of the ssh-agent plugin being loaded.\r\n\r\nThis was very confusing for me when it started happening. I was even concerned that something malicious was going on to phish my password. I get the reason why this was added, but I wonder if there's a way to get around being prompted twice. Perhaps we could skip checking the signature if the key's filename already matches a filename loaded into the ssh-agent.",
        "labels": "Bug",
        "id": 43474
    },
    {
        "title": "shrink-path chops folders with spaces",
        "body": "When using `shrink-path` with `-l` enabled (both standalone and as part of `-f`), if the last folder name has spaces in it, only the first word is displayed instead of the full folder name. For instance, `~/foo/bar/Baz Qux` becomes `~/foo/bar/Baz`. My expectation is that fold names with spaces show their full name, not just the first word.",
        "labels": "Bug",
        "id": 43475
    },
    {
        "title": "Fabric completion broken after latest update",
        "body": "Pressing tab to autocomplete on a `fab` command gives the following output instead of correctly autocompleting it.\r\n\r\n```\r\n(base) ➜  folder git:(master)  fab   \r\n(eval):1: _fab: function definition file not found\r\n(eval):1: _fab: function definition file not found\r\n(eval):1: _fab: function definition file not found\r\n```\r\n\r\nIt seems to have been caused by the following commit https://github.com/robbyrussell/oh-my-zsh/commit/fa9d93008b2c9d42f26320c92752f4f019c47404\r\n\r\nRenaming the _fabric file back to _fab as it was originally resolves the issue.",
        "labels": "Bug",
        "id": 43476
    },
    {
        "title": "Wrong handling of time since last commit in Avit theme",
        "body": "The Avit theme has a problem displaying the time since last commit:\r\n\r\n![avit-theme-git-issue](https://user-images.githubusercontent.com/126463/47596708-82d5c100-d95e-11e8-8fb1-a4f7a2040b4c.png)\r\n\r\nIn this scenario, the last commit happened 1 day and 21 minutes ago, but the Avit theme incorrectly shows **\"0h21m\"**.\r\n",
        "labels": "Bug",
        "id": 43477
    },
    {
        "title": "Unable to access .oh-my-zsh through symbolic link on Windows WSL",
        "body": "I am running Windows WSL Ubuntu 18.04. \r\n\r\nThis is my set up:\r\n\r\nAll config files are saved in a cloud synced folder: C:\\Users\\David\\Documents\\Configs\r\n\r\nI have symbolic links set up to connect things like /home/david/.bashrc to C:\\Users\\David\\Documents\\Configs \r\n\r\nThis works fine for .zshrc, . bashrc etc. \r\n\r\nWhen I install .oh-my-zsh, I have it installed at C:\\Users\\David\\Documents\\Configs\\zsh\\.oh-my-zsh\r\n\r\nWhen I open up a new terminal I get the following error code:\r\n\r\n```\r\nzsh: can't open input file: ~/Documents/Configs/zsh/.oh-my-zsh/tools/check_for_upgrade.sh\r\n/home/david/Documents/Configs/zsh/.oh-my-zsh/oh-my-zsh.sh:34: no matches found: ~/Documents/Configs/zsh/.oh-my-zsh/lib/*.zsh\r\n```\r\n\r\nI got it working a couple of months ago but it was sort of janky and I didn't bother getting it set up properly with symbolic links. After a couple of months of using zsh and oh-my-zsh on my Windows laptop, going back to completely plain vanilla bash on my home desktop server is like going back to the stoneage. \r\n\r\nFrom this error code, I gather that .oh-my-zsh is unable to follow the symbolic links or something? \r\n\r\nAnybody have a solution for this? Maybe I need to do a hardlink or something?",
        "labels": "Bug",
        "id": 43478
    },
    {
        "title": "django plugin - does not work with python2/python3",
        "body": "~Using tab completion with `python manage.py <tab>` works but not with~\r\n~`python2 manage.py <tab>` or~\r\n~`python3 manage.py <tab>`~\r\n\r\n~Debian 8~\r\n~zsh version zsh 5.0.7 (x86_64-pc-linux-gnu)~\r\n~oh-my-zsh version 489be24~\r\n\r\nAfter updating to the latest zsh (zsh 5.6.2 (x86_64-pc-linux-gnu)\r\noh-my-zsh version 30125e1\r\n`python manage.py <tab>` - works\r\n`python2 manage.py <tab>` - works\r\n`python3 manage.py <tab>` - **does not work**\r\n",
        "labels": "Bug",
        "id": 43479
    },
    {
        "title": "Problem with backslash on DOMAIN\\User",
        "body": "Hi, I have a problem when zsh print my user/login on shell... I login on a network that have AD Domain, so, my login is MyCompany\\my.user, using theme agnoster zsh print in 2 lines like this:\r\n\r\n```\r\nMyCompany\r\n         y.user@blablabla\r\n```\r\n\r\n```\r\nzsh --version\r\nzsh 5.4.2 (x86_64-ubuntu-linux-gnu)\r\n```\r\n\r\n\r\n```\r\nlsb_release -a\r\nNo LSB modules are available.\r\nDistributor ID:\tUbuntu\r\nDescription:\tUbuntu 18.04.1 LTS\r\nRelease:\t18.04\r\nCodename:\tbionic\r\n```\r\n",
        "labels": "Bug",
        "id": 43480
    },
    {
        "title": "zsh 5.6.2 tmux 2.7 gentoo theme 'cmdand cursh' prompt",
        "body": "When reconnecting to a tmux session after a time away the prompt changes to:\r\n`nyx ~ cmdand cursh#`\r\nAfter a simple return the prompt is correct.\r\n`nyx ~ #`\r\n\r\nusing plugins:\r\n`plugins=(git svn vi-mode tmux)`\r\n\r\nAny ideas what might cause this?",
        "labels": "Bug",
        "id": 43481
    },
    {
        "title": "plugin colorize \"false not detecting pygments\"",
        "body": "In the plugin, the function to detect if pygments is installed does not work on WSL or MSYS2 on Windows 10 Prof, it will always return ` Pygments is not installed!` If commented out the plugin works as intended though. Oddly `which pygmentize` prints `pygmentize: aliased to pygmentize -O style=monokai`. Im not sure whats wrong.\r\n\r\n```zsh\r\ncolorize_via_pygmentize() {  \r\n#    if [ ! -x \"$(which pygmentize)\" ]; then  \r\n#       echo \"package \\'Pygments\\' is not installed!\"  \r\n#        return -1  \r\n#    fi  \r\n\r\n    if [ $# -eq 0 ]; then  \r\n        pygmentize -g $@  \r\n    fi  \r\n\r\n    for FNAME in $@  \r\n    do  \r\n        filename=$(basename \"$FNAME\")  \r\n        lexer=pygmentize -N \\\"$filename\\\"  \r\n        if [ \"Z$lexer\" != \"Ztext\" ]; then  \r\n            pygmentize -l $lexer \"$FNAME\"  \r\n        else  \r\n            pygmentize -g \"$FNAME\"  \r\n        fi  \r\n    done  \r\n}\r\n```\r\n",
        "labels": "Bug",
        "id": 43482
    },
    {
        "title": "precmd does not redraw when using dircycle",
        "body": "Hi,\r\n\r\nI am using the \"refine\" (previously known as \"pure\") theme, which features a double-line style prompt, namely, `precmd()` and `PROMPT`.\r\n\r\nHowever, this is incompatible with the plugin `dircycle`, which only do a `reset-prompt`. The effect of this is that the directory got changed, but the path text, which belongs to the `precmd()` part, does not update.\r\n\r\nAny fix on this?",
        "labels": "Bug",
        "id": 43483
    },
    {
        "title": "Z Plugin: mv: rename /Users/mhluska/.z.12601 to /Users/mhluska/.z: No such file or directory",
        "body": "When I install the Z plugin through oh-my-zsh using `plugins=(z)`, in `.zshrc` I sometimes see this error:\r\n\r\n```\r\nmv: rename /Users/mhluska/.z.12601 to /Users/mhluska/.z: No such file or directory\r\n```\r\n\r\nIt mainly happens when I hold down the enter key for a while in the terminal. This doesn't happen when I install the plugin the conventional way using `brew install z`.",
        "labels": "Bug",
        "id": 43484
    },
    {
        "title": "gpg-agent plugin overwrites $SSH_AUTH_SOCK",
        "body": "https://github.com/robbyrussell/oh-my-zsh/blob/abca62add1a6d0ac34e697beac8682076d5c1dd7/plugins/gpg-agent/gpg-agent.plugin.zsh#L13\r\nThe above line doesn't check if `enable-ssh-agent` is actually enabled. It merely checks for the existence of the phrase.\r\n\r\nThe problem is if the phrase is present and commented out, it will trigger, e.g. `# enable-ssh-support allows gpg to act as a ssh agent`\r\n\r\nChanging the grep command to `grep -qe '^enable-ssh-support' \"$GNUPGCONFIG\"` should eliminate this.\r\n\r\nEDIT: I'd fork and open a PR, but the rate at which PRs are merged is a bit of a worry.",
        "labels": "Bug",
        "id": 43485
    },
    {
        "title": "upgrade_oh_my_zsh fails with `cannot open .git/FETCH_HEAD: Permission denied`",
        "body": "I'm on Mac OSX 10.13.6 and running zsh (5.5.1) in iterm2 (3.2.0).\r\nThis is what I get:\r\n```\r\n~> upgrade_oh_my_zsh\r\nUpdating Oh My Zsh\r\nerror: cannot open .git/FETCH_HEAD: Permission denied\r\nThere was an error updating. Try again later?\r\n```\r\n\r\nIt is a clean install. I don't have any tracked file modified:\r\n```\r\nmaster ~/.oh-my-zsh> git status\r\nOn branch master\r\nYour branch is up to date with 'origin/master'.\r\n\r\nnothing to commit, working tree clean\r\n```\r\nWith `sudo` I get the same error.\r\n\r\nI have ownership of the directory `.oh-my-zsh` and of the files `.zshrc` and `.zsh-history`. I also have ownership of my own home folder.\r\n\r\nAny ideas?\r\n",
        "labels": "Bug",
        "id": 43486
    },
    {
        "title": "Parse error after latest update - macOS 10.13",
        "body": "Recently updated oh-my-zsh and was getting parse errors. This fixed the issue:\r\n```\r\ncd $ZSH\r\ngit config core.autocrlf false\r\ngit rm --cached -r .\r\ngit reset --hard\r\n```",
        "labels": "Bug",
        "id": 43487
    },
    {
        "title": "check_for_upgrade does not work on shell init",
        "body": "Hi guys, I just noticed my shell do not notify me `[Oh My Zsh] Would you like to update? [Y/n]:` for a long while.\r\n\r\nI check shell code of `check_for_upgrade.sh` and search where this script running. I find in `oh-my-zsh.sh` line 14. There is not any information show in my terminal when I run manually `env ZSH=$ZSH ZSH_CACHE_DIR=$ZSH_CACHE_DIR DISABLE_UPDATE_PROMPT=$DISABLE_UPDATE_PROMPT zsh -f $ZSH/tools/check_for_upgrade.sh`\r\n\r\nI have changed `${ZSH_CACHE_DIR}/.zsh-update` to `LAST_EPOCH=0`. Also, when I run `check_for_upgrade.sh` line 41 to 53 in shell (I have set $epoch_diff and $epoch_target), it works fine.\r\n\r\nAt endding, I figure out the problem. For some reason, `$ZSH/log/update.lock` already exist then `if` in 32 line of `check_for_upgrade.sh` return directly without running body of code. \r\n\r\nI thought it might be nice if we rmdir once before we enter if expression.",
        "labels": "Bug",
        "id": 43488
    },
    {
        "title": "Scrolling to page doesn't work on iterm2",
        "body": "Scrolling to page doesn't work when using less on iterm2.\r\nAfter reverting the merge #6611 , it works again.\r\n\r\nSome helpful testings:\r\n\r\n```shell\r\nenv_default LESS '-R' # work\r\nenv_default LESS '-FR' # work\r\nenv_default LESS '-RX' # doesn't work\r\nenv_default LESS '-FRX' # doesn't work\r\n\r\n```\r\n",
        "labels": "Bug",
        "id": 43489
    },
    {
        "title": "shell bugged with 'ghost' characters",
        "body": "Original issue filed here: https://stackoverflow.com/questions/51291531/zsh-command-prompt-has-ghost-characters-when-scrolling-through-history\r\n\r\nI'm not sure if this is a bad config in my environment (Although I have disabled all the evals in my .zshrc)\r\n\r\nWhen I first install oh-my-zsh everything works fine, after running for awhile I end up with the situation where my command prompt ends up with a bugged prompt:\r\n\r\nAssume that the first command is in history and I up-arrow to it.\r\n\r\n    ➜  ~ some-command some-fairly-long-command --with-a-bunch --of-switches\r\n\r\nWhen I down-arrow I expect to see \r\n\r\n    ➜  ~ \r\n\r\nBut what I do see:\r\n\r\n    ➜  ~ so\r\n\r\nIf I try to type there:\r\n\r\n    ➜  ~ so[new text is inserted after those two characters]\r\n\r\nThe additional characters are ignored by the shell and I can't backspace over them.  If I hit enter their ignored etc, but it's not just the first two characters, my whole prompt is bugged at that point.  If I make changes to a history command and try to re-execute what I see on the screen isn't what's executed (IE there's some overwriting going on in the buffer that's not apparent).\r\n\r\nI'm not sure if this is zsh specific as I've seen this reported: https://unix.stackexchange.com/questions/28827/why-is-my-bash-prompt-getting-bugged-when-i-browse-the-history with bash.\r\n\r\nI've scraped out most of the weird stuff in my .zshrc (autocomplete etc) but I still see this.  I have recently re-installed oh-my-zsh and the issue went away for awhile but recently re-occurred.",
        "labels": "Bug",
        "id": 43490
    },
    {
        "title": "Can not execute .sh files with Zsh, even with 777 file permissions",
        "body": "Ubuntu 18.04\r\n\r\nGiven the following\r\n```\r\necho '#!/bin/bash\\n\\nls ~;' >> myscript.sh\r\nchmod 755 ./myscript.sh\r\n./myscript.sh\r\n```\r\n\r\nExecuted in my home folder, all goes as expected and it lists files in my home folder\r\n> output omitted for brevity -- it worked and listed files as the script intended\r\n\r\nExecuted in a secondary drive that I have mounted (with custom mount options, below), I get the below.\r\n```\r\n╭─user@host /media/user/raw/scripts\r\n╰─$ echo '#!/bin/bash\\n\\nls ~;' >> myscript.sh\r\n╭─user@host /media/user/raw/scripts  \r\n╰─$ chmod 755 ./myscript.sh\r\n╭─user@host /media/user/raw/scripts  \r\n╰─$ ./myscript.sh \r\nzsh: permission denied: ./myscript.sh\r\n```\r\nMy /etc/fstab\r\n```\r\n╭─user@host /media/user/raw/scripts  \r\n╰─$ cat /etc/fstab                                                                130 ↵\r\n# /etc/fstab: static file system information.\r\n#\r\n# Use 'blkid' to print the universally unique identifier for a\r\n# device; this may be used with UUID= as a more robust way to name devices\r\n# that works even if disks are added and removed. See fstab(5).\r\n#\r\n# <file system> <mount point>   <type>  <options>       <dump>  <pass>\r\n# / was on /dev/sdb2 during installation\r\nUUID=<<some_uuid>> /               ext4    errors=remount-ro 0       1\r\n# /boot/efi was on /dev/sdb1 during installation\r\nUUID=<<some_uuid>>  /boot/efi       vfat    umask=0077      0       1\r\n/swapfile                                 none            swap    sw              0       0\r\n/dev/disk/by-uuid/<<some_uuid>> /media/user/raw auto user,rw,nofail,x-gvfs-show 0 0\r\n```\r\nSince this executes fine in my home folder and not on this mounted drive, I'm thinking the issue is somewhere within the fstab configuration.  Any ideas?",
        "labels": "Bug",
        "id": 43491
    },
    {
        "title": "my zsh doesn't work after auto update",
        "body": "![image](https://user-images.githubusercontent.com/3422640/42251606-d694f502-7f6a-11e8-98fa-39ce34534019.png)\r\n",
        "labels": "Bug",
        "id": 43492
    },
    {
        "title": "golang plugin: path completion doesn't work with the `run` subcommand",
        "body": "## The Problem:\r\nPath completion doesn't work as expected when using the `go run` subcommand. I believe this issue is related to issue #4323.\r\n\r\n## How to reproduce:\r\n1. `cd` into a subdirectory on your `GOPATH` (one not containing any `.go` files, such as a project's parent directory.)\r\n2. type `go run <TAB>`\r\n\r\nFor example, say you're the directory `$GOPATH/src/github.com`:\r\n\r\n```\r\ngithub.com\r\n├── app1\r\n│   └── main.go\r\n└── app2\r\n    └── main.go\r\n```\r\n\r\nTyping `$ go run <TAB>` on the command line gives no path completion.\r\n\r\n---\r\n\r\n### Expected Behavior\r\nTab completion allows cycling through directories until we locate a `*.go` file in a subdirectory.\r\n\r\n### Actual Behavior\r\nTab completion does not allow cycling through directories.",
        "labels": "Bug",
        "id": 43493
    },
    {
        "title": "Todays update broke powerline shell",
        "body": "As the title says. Disabling oh-my-zsh fixes the problem.\r\nI m running Mac 10.13.14 and the issue happens with iTerm and Default Terminal. \r\n\r\n",
        "labels": "Bug",
        "id": 43494
    },
    {
        "title": "Error after uninstall_oh_my_zsh",
        "body": "Hi,\r\n\r\ntried to run uninstall_oh_my_zsh on macbook pro high sierra.\r\n\r\nWhen restarting terminal starts as follows:\r\n\r\nLast login: Wed May 16 22:19:29 on ttys000\r\n/Users/mebomac/.zshrc:source:66: no such file or directory: /Users/mebomac/.oh-my-zsh/oh-my-zsh.sh\r\nMichaels-MBP-WLAN% \r\n\r\nThat looked very different before?! What went wrong with uninstall? What does WLAN% means here?\r\n\r\nThanks and Regards\r\n\r\nMichael",
        "labels": "Bug",
        "id": 43495
    },
    {
        "title": "Ctrl+C during tab completion hides prompt",
        "body": "Using oh-my-zsh with absolutely default settings, the following happens:\r\n\r\nhttps://asciinema.org/a/w5gDwZS2xjZpxoKGLAz8JP5tV\r\n\r\nThe way to reproduce is:\r\n\r\n1. Enter the start of a command that's ambiguous.\r\n2. Press TAB to show options.\r\n3. Press TAB again to move selection to first option.\r\n4. Press Ctrl+C to cancel selection.\r\n\r\nNow your prompt is hidden.",
        "labels": "Bug",
        "id": 43496
    },
    {
        "title": "check_for_upgrade uses the wrong $PATH",
        "body": "# Updates broken – fatal: HTTP request failed\r\n\r\nHello,\r\n\r\nsince a while the update does not work when »[Oh My Zsh] Would you like to check for updates? [Y/n]:« comes:\r\n\r\n> [Oh My Zsh] Would you like to check for updates? [Y/n]:\r\n> Updating Oh My Zsh\r\n> error: error:1407742E:SSL routines:SSL23_GET_SERVER_HELLO:tlsv1 alert protocol version while accessing https://github.com/robbyrussell/oh-my-zsh.git/info/refs?service=git-upload-pack\r\n> fatal: HTTP request failed\r\n> There was an error updating. Try again later?\r\n\r\nThis happens although I have a macports installed newer git (git version 2.17.0). OS is OSX 10.7.5.\r\n\r\nIf I then use »upgrade_oh_my_zsh« – everything works fine.",
        "labels": "Bug",
        "id": 43497
    },
    {
        "title": "Vagrant completion ignores `VAGRANT_CWD`",
        "body": "Vagrant uses the value of the environment variable [`VAGRANT_CWD`][1] to determine its working directory; the default is the shell's working directory. `oh-my-zsh`'s completion doesn't appear to take account of this - the fix might be just to look for the `Vagrantfile` in `${VAGRANT_CWD:-.}`.\r\n\r\n[1]: https://www.vagrantup.com/docs/other/environmental-variables.html#vagrant_cwd",
        "labels": "Bug",
        "id": 43498
    },
    {
        "title": "gulp autocompletion broken",
        "body": "```\r\nfunction $$gulp_completion {\r\n    compls=$(gulp --tasks-simple 2>/dev/null)\r\n\r\n    completions=(${=compls})\r\n    compadd -- $completions\r\n}\r\n\r\ncompdef $$gulp_completion gulp\r\n```\r\n\r\nIf I I manually type in ``compdef $$gulp_completion gulp`` then it works.\r\n\r\nI added the following lines at the end:\r\n\r\n```\r\necho g: $_comps[gulp]\r\nwhich compdef\r\n```\r\n\r\nThis gives me:\r\n\r\n```\r\ng:\r\ncompdef () {\r\n\t\r\n}\r\n```\r\n\r\nWhich was a little bit surprising.\r\n\r\nI am using antigen.\r\n\r\nI am wondering if the gulp plugin is using a legacy mechanism for enabling completions?",
        "labels": "Bug",
        "id": 43499
    },
    {
        "title": "Installer: spaces in $HOME make the git clone fail",
        "body": "When I follow the instructions for installing zsh on my mac, I get this error after I try to run the install script via curl:\r\n\r\nError: git clone of oh-my-zsh repo failed\r\n\r\nBut in fact I can clone the repo so its not an git issue. ",
        "labels": "Bug",
        "id": 43500
    },
    {
        "title": "Autocompletion isn't working with laravel5 plugin",
        "body": "The autocompletions for artisan from laravel5 plugin don't work in the current form. I think the issue is here: https://github.com/robbyrussell/oh-my-zsh/blob/e273cf004e1ff0510aee61416885f3003bcd15d9/plugins/laravel5/laravel5.plugin.zsh#L12-L16\r\n\r\nI moved the compdef calls after the alias (also added another one for artisan) and now works.\r\nIt would help if somebody else is having this issue and can confirm.",
        "labels": "Bug",
        "id": 43501
    },
    {
        "title": "Shrink_path fails when opening a directory that contains $HOME",
        "body": "When tilde is enabled, shrink_path will throw a lot of `shrink_path:cd:88: no such file or directory` if part of your path contains $HOME (such as mounting your old home in another folder)\r\n\r\nIt will also show a tilde right in the middle of the path.  \r\n\r\nI believe that this could be fixed by tweaking this regexp to only match the beginning of the screen: https://github.com/robbyrussell/oh-my-zsh/blob/master/plugins/shrink-path/shrink-path.plugin.zsh#L94",
        "labels": "Bug",
        "id": 43502
    },
    {
        "title": "Pasting into terminal emulator results in dumped core",
        "body": "zsh version: 5.4.1-1 (archlinux package)\r\noh-my-zsh commit: d848c94\r\nterminal emulator: termite v12\r\n\r\nIf I want to paste something into my terminal emulator I get a dumped core.\r\nWithout oh-my-zsh I have no problems and the template \"zshrc.zsh-template\" also generates a dumped core.\r\n\r\nsystemd-coredump[17617]: Process 17391 (zsh) of user 1000 dumped core.\r\n                                              \r\n                                              Stack trace of thread 17391:\r\n                                              #0  0x00007f5d0354fe74 zle_setline (zle.so)\r\n                                              #1  0x00007f5d03570baf n/a (zle.so)\r\n                                              #2  0x00007f5d035719d9 undo (zle.so)\r\n                                              #3  0x00007f5d03557e30 execzlefunc (zle.so)\r\n                                              #4  0x00007f5d03567f89 n/a (zle.so)\r\n                                              #5  0x000000a61cd48b3f execbuiltin (zsh)\r\n                                              #6  0x000000a61cd57c1a n/a (zsh)\r\n                                              #7  0x000000a61cd5865a n/a (zsh)\r\n                                              #8  0x000000a61cd58a42 n/a (zsh)\r\n                                              #9  0x000000a61cd5a2c8 execlist (zsh)\r\n                                              #10 0x000000a61cd801e8 execif (zsh)\r\n                                              #11 0x000000a61cd56fa0 n/a (zsh)\r\n                                              #12 0x000000a61cd5865a n/a (zsh)\r\n                                              #13 0x000000a61cd58a42 n/a (zsh)\r\n                                              #14 0x000000a61cd5a2c8 execlist (zsh)\r\n                                              #15 0x000000a61cd5a85b execode (zsh)\r\n                                              #16 0x000000a61cd5b5ec runshfunc (zsh)\r\n                                              #17 0x000000a61cd5c086 doshfunc (zsh)\r\n                                              #18 0x000000a61cd5c470 n/a (zsh)\r\n                                              #19 0x000000a61cd57c8f n/a (zsh)\r\n                                              #20 0x000000a61cd5865a n/a (zsh)\r\n                                              #21 0x000000a61cd58a42 n/a (zsh)\r\n                                              #22 0x000000a61cd5a2c8 execlist (zsh)\r\n                                              #23 0x000000a61cd801e8 execif (zsh)\r\n                                              #24 0x000000a61cd56fa0 n/a (zsh)\r\n                                              #25 0x000000a61cd5865a n/a (zsh)\r\n                                              #26 0x000000a61cd58a42 n/a (zsh)\r\n                                              #27 0x000000a61cd5a2c8 execlist (zsh)\r\n                                              #28 0x000000a61cd5a85b execode (zsh)\r\n                                              #29 0x000000a61cd5a9f1 n/a (zsh)\r\n                                              #30 0x000000a61cd57a43 n/a (zsh)\r\n                                              #31 0x000000a61cd5865a n/a (zsh)\r\n                                              #32 0x000000a61cd58a42 n/a (zsh)\r\n                                              #33 0x000000a61cd5a2c8 execlist (zsh)\r\n                                              #34 0x000000a61cd5a85b execode (zsh)\r\n                                              #35 0x000000a61cd5b5ec runshfunc (zsh)\r\n                                              #36 0x000000a61cd5c086 doshfunc (zsh)\r\n                                              #37 0x00007f5d03557b3e execzlefunc (zle.so)\r\n                                              #38 0x00007f5d0355852f zlecore (zle.so)\r\n                                              #39 0x00007f5d03559409 zleread (zle.so)\r\n                                              #40 0x000000a61cd72bf4 zleentry (zsh)\r\n                                              #41 0x000000a61cd741b8 n/a (zsh)\r\n                                              #42 0x000000a61cd6bc5c n/a (zsh)\r\n                                              #43 0x000000a61cd7d9cc n/a (zsh)\r\n                                              #44 0x000000a61cd9cb77 parse_event (zsh)\r\n                                              #45 0x000000a61cd6f4b5 loop (zsh)\r\n                                              #46 0x000000a61cd732d6 zsh_main (zsh)\r\n                                              #47 0x00007f5d042fe4ca __libc_start_main (libc.so.6)\r\n                                              #48 0x000000a61cd398ba _start (zsh)",
        "labels": "Bug",
        "id": 43503
    },
    {
        "title": "git_remote_status error when remote branch has dot",
        "body": "```\r\n$ zsh --version\r\nzsh 5.3.1 (x86_64-unknown-linux-gnu)\r\n$ git --version\r\ngit version 2.13.1\r\n$ cat ~/.antigenrc\r\nantigen use oh-my-zsh\r\nantigen bundle git\r\nantigen bundle pip\r\nantigen bundle thefuck\r\nantigen bundle zsh-users/zsh-syntax-highlighting\r\nantigen bundle zsh-users/zsh-autosuggestions\r\nantigen bundle zsh-users/zsh-history-substring-search\r\n#antigen theme refined\r\n#antigen theme adben\r\nantigen theme cemsbr/asciigit asciigit\r\nantigen apply\r\n```\r\n\r\nNo problem with local branches, though:\r\n```\r\nlocal|ubuntu17.04%$ echo Hi\r\nHi\r\nlocal|ubuntu17.04%$ gpsup                                                     \r\nTotal 0 (delta 0), reused 0 (delta 0)\r\nTo github.com:cemsbr/kytos.git\r\n * [new branch]      ubuntu17.04 -> ubuntu17.04\r\nBranch ubuntu17.04 set up to track remote branch ubuntu17.04 from origin.\r\ngit_remote_status:2: bad math expression: operator expected at `.04'                                                                               \r\ngithub.com/cemsbr/kytos|ubuntu17.04%$ echo Hi  \r\nHi\r\ngit_remote_status:2: bad math expression: operator expected at `.04'                                                                               \r\ngithub.com/cemsbr/kytos|ubuntu17.04%$ git checkout master        \r\nSwitched to branch 'master'\r\nYour branch is up-to-date with 'upstream/master'.\r\ngithub.com/cemsbr/kytos|master%$ echo Hi\r\nHi\r\ngithub.com/cemsbr/kytos|master%$\r\n```",
        "labels": "Bug",
        "id": 43504
    },
    {
        "title": "uninstall zsh didn't revert shell back to bash on OSX",
        "body": "After running the uninstall command for zsh and restarting the terminal, I noted the zsh shell was still in use afterward. \r\n\r\nI had to use:\r\n\r\n`chsh -s /bin/bash`\r\n\r\nand restart the terminal to get the bash shell back.\r\n\r\nI didn't think this was the expected result from the uninstall so I thought I would log an issue.\r\n\r\nOSX Sierra 10.12.5",
        "labels": "Bug",
        "id": 43505
    },
    {
        "title": "colored-man-pages: parse error when an alias exists called man",
        "body": "When using the following I'm getting the following on shell startup:\r\n\r\n```\r\n~/.oh-my-zsh/plugins/colored-man-pages/colored-man-pages.plugin.zsh:19: parse error near `()'\r\n```\r\n\r\nThe line in question is `man() {`.\r\n\r\nIf I change this line to `function man() {` then it works.\r\n\r\nFrom what I'm reading, it's preferred to *not* have the `function` keyword.\r\n\r\nI narrowed down my zshrc until I found the offending line, and the issue is that I have an alias called `man`. In particular, `alias man='LC_ALL=C LANG=C man'`.\r\n\r\nIs there a way for the plugin to coexist with such an alias?",
        "labels": "Bug",
        "id": 43506
    },
    {
        "title": "alias_value fails because it tests alias \"$1\"",
        "body": "Pass: `alias_value \"...\"`\r\nFail: `alias_value grep` yields `test: unknown condition: --color=auto`\r\nFail: `alias_value tree` yields `parse error: condition expected: tree='tree `\r\n\r\n`alias tree` yields `tree=tree --charset=ascii`\r\n`alias tree | sed 's/^tree=\\(.*\\)$/\\1/'` yields `tree --charset=ascii`\r\n`test $(alias \"tree\")` yields `parse error: condition expected: tree='tree `\r\n`test $(alias \"tree='tree --charset=ascii'\")` returns 1 but does not print an error\r\n\r\nRecommendation:\r\n```\r\nalias_value(){\r\nalias \"$1\" | sed 's/^$1=\\(.*\\)$/\\1/'\r\ntest -n \"$(alias $1)\"\r\n}\r\n```\r\n\r\n(Passes for $1 in '...', 'tree', 'grep', etc.; fails for 'asdf')",
        "labels": "Bug",
        "id": 43507
    },
    {
        "title": "Running install script when `su` to another user finds wrong home dir",
        "body": "From an existing zsh shell, I do: `su testuser` which brings me into a bash shell for the user `testuser`.\r\n\r\nI then run the install script from that user. It then tells me oh-my-zsh is already installed because it is found in *my* home dir (the user logged in before switching user):\r\n\r\n```\r\nYou already have Oh My Zsh installed.\r\nYou'll need to remove /home/angelog/.oh-my-zsh if you want to re-install.\r\n```\r\n\r\n**Edit**: It seems like I have to `unset ZSH` and then run the install script for this to work. Should this be closed?",
        "labels": "Bug",
        "id": 43508
    },
    {
        "title": "per-directory-history breaks bgnotify",
        "body": "If plugin per-directory-history is activated, bgnotify could not show the name of the command finished.\r\n\r\nSetting the ``$1`` to ``$2`` [here](https://github.com/robbyrussell/oh-my-zsh/blob/master/plugins/bgnotify/bgnotify.plugin.zsh#L56) works, but it has a little different [meaning](http://zsh.sourceforge.net/Doc/Release/Functions.html):\r\n```\r\nThe actual command that will be executed (including expanded aliases) is passed in two\r\ndifferent forms: the second argument is a single-line, size-limited version of the\r\ncommand (with things like function bodies elided)\r\n```",
        "labels": "Bug",
        "id": 43509
    },
    {
        "title": "COMPLETION_WAITING_DOTS breaks multi-line prompts",
        "body": "Setting COMPLETION_WAITING_DOTS to true breaks multiline prompts. It will move the cursor up to the first line of the prompt and the completion output will start in the middle of your prompt.",
        "labels": "Bug",
        "id": 43510
    },
    {
        "title": "Completion waiting dots cause prompt to disappear with multi line prompts",
        "body": "With completion waiting dots off:\r\n![screen shot 2017-01-09 at 1 47 51 pm](https://cloud.githubusercontent.com/assets/1056886/21784998/b15156e8-d672-11e6-8699-b8fd80de909f.png)\r\n\r\nWith completion waiting dots on:\r\n![screen shot 2017-01-09 at 1 48 08 pm](https://cloud.githubusercontent.com/assets/1056886/21784997/b1508fb0-d672-11e6-9ebe-67313db39311.png)\r\n\r\nThis issue is not specific to my custom theme. I have tried other multi line prompts and all have the same issue. \r\n\r\nIn the meantime I have disabled `COMPLETION_WAITING_DOTS`\r\n",
        "labels": "Bug",
        "id": 43511
    },
    {
        "title": "No error if plugins are separated by comma",
        "body": "All plugins but the last in the list are silently ignored if they are delineated by comma, rather than space.  e.g.\r\n\r\n`plugins=(git, mvn, osx, sublime)`\r\n\r\nSublime will load, but the others will not:  a minor issue to be sure.",
        "labels": "Bug",
        "id": 43512
    },
    {
        "title": "✨, 🥕 and all Unicode 9 emoji appear as hex codes",
        "body": "## Version information\r\nCommit: `26aae6b5834e1342d9b95a894a5bb24159b367bf`\r\nzsh version: `zsh 5.3 (x86_64-apple-darwin16.1.0)`\r\nmacOS version: `10.12.2`\r\nTerminal version: Tested on iTerm 2, Terminal\r\n\r\n## Issue\r\nReproduction steps:\r\n* Paste \"✨🥕🐰\" a terminal of your choosing whilst using oh-my-zsh\r\n* Observe the output is: `<2728><0001f955>🐰` instead of `✨🥕🐰`\r\n![screen shot 2016-12-13 at 20 21 36](https://cloud.githubusercontent.com/assets/149851/21157670/0deed2ec-c172-11e6-85c7-4d59b016ead4.png)\r\n\r\n## Other comments\r\nI'm aware this might be a ZSH issue, but I tried searching and couldn't find anything listed, so figured I'd post here first. Could you point me in the right direction for help if it is please?\r\n\r\nIf I run `bash` and then paste, everything appears fine.\r\n![screen shot 2016-12-13 at 20 25 11](https://cloud.githubusercontent.com/assets/149851/21157721/4629de04-c172-11e6-98a8-7920feb2203a.png)\r\n",
        "labels": "Bug",
        "id": 43513
    },
    {
        "title": "tab completion doesn't work for \"git reset HEAD <new files>\"",
        "body": "When I want to unstage a new file (which has not been committed before), pressing Tab doesn't complete it's name and path for me.\r\n\r\nBTW: I'm using the latest version of oh-my-zsh and its git plugin. ",
        "labels": "Bug",
        "id": 43514
    },
    {
        "title": "rake-fast: if tasks include [], completion includes backslash",
        "body": "If tasks include `[]`, completion includes backslash.\r\n\r\nThe issue is related to this issue https://github.com/robbyrussell/oh-my-zsh/pull/4718\r\n\r\n```\r\n# sachin21dev @ sachin21dev in ~/Projects/github.com/sachin21/nuko on git:enhancement/381 o [12:48:05] C:2\r\n$ rake [tab]\r\nGenerating .rake_tasks...\r\n  rake\r\nabout                                               db:create                                           middleware                                          parallel:spec\\[count,pattern,options\\]\r\nacts_as_taggable_on_engine:install:migrations       db:drop                                             notes                                               parallel:test\\[count,pattern,options\\]\r\nacts_as_taggable_on_engine:tag_names:collate_bin    db:fixtures:load                                    notes:custom                                        rails:template\r\nacts_as_taggable_on_engine:tag_names:collate_ci     db:migrate                                          paperclip:clean                                     rails:update\r\nassets:clean\\[keep\\]                                db:migrate:status                                   paperclip:find_broken_attachments                   routes\r\nassets:clobber                                      db:rollback                                         paperclip:refresh                                   secret\r\nassets:environment                                  db:schema:cache:clear                               paperclip:refresh:metadata                          spec\r\nassets:precompile                                   db:schema:cache:dump                                paperclip:refresh:missing_styles                    spec:controllers\r\nbower:cache:clean                                   db:schema:dump                                      paperclip:refresh:thumbnails                        spec:helpers\r\nbower:clean                                         db:schema:load                                      parallel:create\\[count\\]                            spec:models\r\nbower:install:deployment\\[options\\]                 db:seed                                             parallel:drop\\[count\\]                              spec:requests\r\nbower:install:development\\[options\\]                db:setup                                            parallel:features\\[count,pattern,options\\]          stats\r\nbower:install\\[options\\]                            db:structure:dump                                   parallel:features-spinach\\[count,pattern,options\\]  test\r\nbower:install:production\\[options\\]                 db:structure:load                                   parallel:load_schema\\[count\\]                       test:all\r\nbower:list                                          db:version                                          parallel:load_structure\\[count\\]                    test:all:db\r\nbower:resolve\\[relative_directory\\]                 doc:app                                             parallel:migrate\\[count\\]                           test:db\r\nbower:update\\[options\\]                             i18n:js:export                                      parallel:prepare\\[count\\]                           time:zones:all\r\nbower:update:prune\\[options\\]                       i18n:js:setup                                       parallel:rake\\[command,count\\]                      tmp:clear\r\ncache_digests:dependencies                          i18n:js:update                                      parallel:seed\\[count\\]                              tmp:create\r\ncache_digests:nested_dependencies                   log:clear                                           parallel:setup\\[count\\]\r\n```\r\n\r\n# Environment information\r\n- OS: Linux sachin21dev 4.8.3-1-ARCH #1 SMP PREEMPT Thu Oct 20 19:53:59 CEST 2016 x86_64 GNU/Linux\r\n- Zsh: zsh 5.2 (x86_64-unknown-linux-gnu)\r\n- oh-my-zsh's latest hash: `3477ff2`",
        "labels": "Bug",
        "id": 43515
    },
    {
        "title": "git_prompt_status is slow on cygwin",
        "body": "git_prompt_status is rather slow on cygwin, and on other platforms where spawning a subshell is slow.\nTwo cases:\n(first, just calling the function, second is inside a fresh linux kernel tree. )\n\n```\nTheDauthi@Hera:~$ time (git_prompt_status)\n( git_prompt_status; )  0.21s user 0.41s system 97% cpu 0.636 total\nTheDauthi@Hera:~/Projects/linux$ time (git_prompt_status)\n( git_prompt_status; )  2.41s user 9.50s system 228% cpu 5.216 total\n```\n\n(Not much we can do about the second one, it's due to the slowness of the git status itself)\nIdentical setup on linux:\n\n```\nbillyconn@Hades:~$ time (git_prompt_status)\n( git_prompt_status; )  0.00s user 0.01s system 16% cpu 0.047 total\nbillyconn@Hades:~/Projects/linux$ time (git_prompt_status)\n( git_prompt_status; )  0.06s user 0.08s system 85% cpu 0.173 total\n```\n\nTracking this down, it's the spawning of the greps (which is no shock; cygwin emulation of fork is well-known, and grep is somehow particularly slow).  I rewrote this function to use zsh builtins and an ugly bit of sed instead of spawning greps:\n\nCygwin:\n\n```\nTheDauthi@Hera:~$ time (git_prompt_status)\n( git_prompt_status; )  0.07s user 0.04s system 117% cpu 0.102 total\nTheDauthi@Hera:~/Projects/linux$ time (git_prompt_status)\n( git_prompt_status; )  2.30s user 8.75s system 241% cpu 4.567 total\n```\n\nIt's faster on linux, too, but linux was already fast:\nLinux:\n\n```\nbillyconn@Hades:~$ time (git_prompt_status)           \n( git_prompt_status; )  0.00s user 0.00s system 0% cpu 0.008 total\nbillyconn@Hades:~/Projects/linux$ time (git_prompt_status)\n( git_prompt_status; )  0.06s user 0.09s system 104% cpu 0.137 total\n```\n\nhttps://github.com/TheDauthi/git-prompt-status\n\nI didn't make a pull request; this is in a frequently-used lib so I didn't want to touch it without testing, if there's even interest in using a modified version.  I wrote a FEW tests (they're in the test directory), but will try to add more.  I also would like to know if/how you typically integrate tests, as what's there is just something I hacked up in a couple of hours.\n\nNot sure how the command works on OSX yet, don't have a machine to test on until Monday.  I suspect that the sed statements will need to be re-quoted.  Wanted to gauge interest and get feedback before continuing.\n",
        "labels": "Bug",
        "id": 43516
    },
    {
        "title": "emotty theme + emotty plugin + oh-my-zsh.sh = ☠",
        "body": "```\n% cat ~/.zshrc              \nexport ZSH=/home/constantine/.oh-my-zsh\nZSH_THEME=\"emotty\"\nplugins=(git emotty themes)\nsource $ZSH/oh-my-zsh.sh\n% zsh\nemotty:4: bad math expression: operand expected at `/dev/pts/2...'\nemotty:6: bad math expression: empty string\n```\n\nDeleting the `oh-my-zsh.sh` line fixes the error, as is changing the theme. zsh version 5.2.\n\n**UPD**: writing in `~/.zshenv` the `setopt noglobalrcs` in order to overwrite system configs _(and because it is needed in order to work for \"oh-my-zsh\" in Archlinux)_ still leads to the same result, except that zsh ends up not even having a prompt _(other themes I tried works)_.\n",
        "labels": "Bug",
        "id": 43517
    },
    {
        "title": "trapd00r theme has external dependency",
        "body": "When I use the trapd00r theme I see the following error:\n\n`prompt_jnrowe_precmd:3: command not found: zsh_path`\n",
        "labels": "Bug",
        "id": 43518
    },
    {
        "title": "Backticks and $() evaluated twice",
        "body": "Issue  #2234 is un-fixed with the most recent oh-my-zsh version:\n\n```\n$ echo `echo doh >> doh`\n$ cat doh\ndoh\ndoh\n```\n\nI checked for the fix from #2234 in lib/termsupport.zsh, and it's there but apparently something else is un-fixing it.\n\nInterestingly, the problem now also occurs with `$()`:\n\n```\n$ rm doh\n$ $(echo doh >> doh)\n$ cat doh\ndoh\ndoh\n```\n",
        "labels": "Bug",
        "id": 43519
    },
    {
        "title": "last-working-dir plug-in causes unexpected behavior in Emacs",
        "body": "If you enable `last-working-dir`, shell commands in Emacs are executed in the directory stored in `$cache_file` rather than in the directory of the current file. So if you run `(shell-command \"pwd\")` in Emacs, it'll return the directory stored in `$cache_file` regardless of what file is open in Emacs.\n\nThis breaks packages that rely on shell commands' being run in the same directory as the current file. For example, an Emacs package called Projectile has a command for searching for files by filename in the current Git project. If you run this command with `last-working-dir` enabled, it will search the Git project associated with whatever path is in `$cache-file`. (It will produce an error if there's no associated project.) More details [here](http://emacs.stackexchange.com/questions/27296/why-is-the-projectile-git-repository-being-set-to-the-most-recently-cdd-directo)\n\nThere might not be any easy way of fixing this issue, but I think it would be helpful to include a warning, either in a new README or a source-code comment.\n\nThis is similar to #3999.\n",
        "labels": "Bug",
        "id": 43520
    },
    {
        "title": "Current path is not displayed with Sierra",
        "body": "Hello, I've updated to Sierra recently and my zsh stopped to show my current path. Path is showing only when in a repo (relative).\n\niTerm2 3.0.5\nFreshly updated oh-my-zsh\nzsh 5.2.0\nI'm using `nicoulaj` theme.\n",
        "labels": "Bug",
        "id": 43521
    },
    {
        "title": "\"compdef: unknown command or service: git\" and tab completion broken",
        "body": "I'm running Homebrew'd zsh 5.2 on OS X (Yosemite) and I've broken the permissions such that I'm now always getting:\r\n\r\n```\r\ncompdef: unknown command or service: git\r\ncompdef: unknown command or service: git\r\n```\r\n\r\n...before the prompt shows and tab completion has stopped working. This is basically the same as #4698, but my circumstances are different so I've not yet been able to resolve the problem.\r\n\r\nI broke the permissions by running `sudo chmod -R a+rw /usr/local` as my local admin user (not root -- I don't have root -- but a member of the `admin` group). Zsh is installed via Homebrew, through this local admin user; but OMZ is just installed in my regular user's `$HOME/.oh-my-zsh`.\r\n\r\nI've tried changing the permissions and ownership of the files/directories that `compaudit` complains about, but to no avail. (See also [my post on Super User](http://superuser.com/q/1127173/238993).) I also tried completely uninstalling -- removing them entirely from my system -- and reinstalling OMZ and zsh in the hope that it would reset things. Nope :confused:\r\n\r\nThis problem only occurs when OMZ is installed. Vanilla zsh worked fine.\r\n\r\n---\r\n\r\nFWIW, the output of `ls -ld $(compaudit)` is as one would expect: `0644` for files (`0755` for directories) for `ch12_admin:admin` and some in `wheel` (my regular user is `ch12:1312`). In detail:\r\n\r\n<details>\r\n```\r\ndrwxr-xr-x    5 ch12_admin  admin     170  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh\r\ndrwxr-xr-x  982 ch12_admin  admin   33388 23 Sep 09:48 /usr/local/Cellar/zsh/5.2/share/zsh/functions\r\n-rw-r--r--    1 ch12_admin  admin     279  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_SUSEconfig\r\n-rw-r--r--    1 ch12_admin  admin    2809  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_a2ps\r\n-rw-r--r--    1 ch12_admin  admin     487  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_a2utils\r\n-rw-r--r--    1 ch12_admin  admin    2638  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_aap\r\n-rw-r--r--    1 ch12_admin  admin    1272  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_acpi\r\n-rw-r--r--    1 ch12_admin  admin    2435  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_acpitool\r\n-rw-r--r--    1 ch12_admin  admin    3501  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_acroread\r\n-rw-r--r--    1 ch12_admin  admin   15496  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_adb\r\n-rw-r--r--    1 ch12_admin  admin     632  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_add-zsh-hook\r\n-rw-r--r--    1 ch12_admin  admin     711  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_alias\r\n-rw-r--r--    1 ch12_admin  admin     708  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_aliases\r\n-rw-r--r--    1 ch12_admin  admin     920  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_all_labels\r\n-rw-r--r--    1 ch12_admin  admin     970  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_all_matches\r\n-rw-r--r--    1 ch12_admin  admin    1950  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_alternative\r\n-rw-r--r--    1 ch12_admin  admin     647  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_analyseplugin\r\n-rw-r--r--    1 ch12_admin  admin    6089  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_ant\r\n-rw-r--r--    1 ch12_admin  admin    1109  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_antiword\r\n-rw-r--r--    1 ch12_admin  admin     116  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_apachectl\r\n-rw-r--r--    1 ch12_admin  admin    1680  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_apm\r\n-rw-r--r--    1 ch12_admin  admin    3472  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_approximate\r\n-rw-r--r--    1 ch12_admin  admin   23366  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_apt\r\n-rw-r--r--    1 ch12_admin  admin    2005  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_apt-file\r\n-rw-r--r--    1 ch12_admin  admin    1863  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_apt-move\r\n-rw-r--r--    1 ch12_admin  admin     750  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_apt-show-versions\r\n-rw-r--r--    1 ch12_admin  admin    4287  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_aptitude\r\n-rw-r--r--    1 ch12_admin  admin     413  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_arch_archives\r\n-rw-r--r--    1 ch12_admin  admin    3308  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_arch_namespace\r\n-rw-r--r--    1 ch12_admin  admin    7569  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_arg_compile\r\n-rw-r--r--    1 ch12_admin  admin   17154  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_arguments\r\n-rw-r--r--    1 ch12_admin  admin    1205  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_arp\r\n-rw-r--r--    1 ch12_admin  admin    1351  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_arping\r\n-rw-r--r--    1 ch12_admin  admin      86  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_arrays\r\n-rw-r--r--    1 ch12_admin  admin      64  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_assign\r\n-rw-r--r--    1 ch12_admin  admin    1036  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_at\r\n-rw-r--r--    1 ch12_admin  admin    2294  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_attr\r\n-rw-r--r--    1 ch12_admin  admin    2358  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_augeas\r\n-rw-r--r--    1 ch12_admin  admin    1081  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_auto-apt\r\n-rw-r--r--    1 ch12_admin  admin      85  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_autocd\r\n-rw-r--r--    1 ch12_admin  admin     975  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_awk\r\n-rw-r--r--    1 ch12_admin  admin     872  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_axi-cache\r\n-rw-r--r--    1 ch12_admin  admin    1358  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_bash_completions\r\n-rw-r--r--    1 ch12_admin  admin   16019  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_baz\r\n-rw-r--r--    1 ch12_admin  admin     341  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_be_name\r\n-rw-r--r--    1 ch12_admin  admin    1675  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_beadm\r\n-rw-r--r--    1 ch12_admin  admin    1625  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_beep\r\n-rw-r--r--    1 ch12_admin  admin     416  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_bind_addresses\r\n-rw-r--r--    1 ch12_admin  admin    2093  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_bindkey\r\n-rw-r--r--    1 ch12_admin  admin     923  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_bison\r\n-rw-r--r--    1 ch12_admin  admin    4878  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_bittorrent\r\n-rw-r--r--    1 ch12_admin  admin    5248  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_bogofilter\r\n-rw-r--r--    1 ch12_admin  admin    1280  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_bpython\r\n-rw-r--r--    1 ch12_admin  admin    5735  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_brace_parameter\r\n-rw-r--r--    1 ch12_admin  admin    1926  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_brctl\r\n-rw-r--r--    1 ch12_admin  admin    5548  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_bsd_pkg\r\n-rw-r--r--    1 ch12_admin  admin    2296  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_bsdconfig\r\n-rw-r--r--    1 ch12_admin  admin    1934  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_bsdinstall\r\n-rw-r--r--    1 ch12_admin  admin   11772  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_btrfs\r\n-rw-r--r--    1 ch12_admin  admin    7231  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_bts\r\n-rw-r--r--    1 ch12_admin  admin    4687  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_bug\r\n-rw-r--r--    1 ch12_admin  admin     178  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_builtin\r\n-rw-r--r--    1 ch12_admin  admin    2222  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_bzip2\r\n-rw-r--r--    1 ch12_admin  admin   11436  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_bzr\r\n-rw-r--r--    1 ch12_admin  admin     292  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_cabal\r\n-rw-r--r--    1 ch12_admin  admin     707  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_cache_invalid\r\n-rw-r--r--    1 ch12_admin  admin     547  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_cal\r\n-rw-r--r--    1 ch12_admin  admin    1406  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_calendar\r\n-rw-r--r--    1 ch12_admin  admin     737  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_call_function\r\n-rw-r--r--    1 ch12_admin  admin     442  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_call_program\r\n-rw-r--r--    1 ch12_admin  admin    4203  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_canonical_paths\r\n-rw-r--r--    1 ch12_admin  admin    1444  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_cat\r\n-rw-r--r--    1 ch12_admin  admin     778  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_ccal\r\n-rw-r--r--    1 ch12_admin  admin    4066  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_cd\r\n-rw-r--r--    1 ch12_admin  admin      56  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_cdbs-edit-patch\r\n-rw-r--r--    1 ch12_admin  admin    2142  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_cdcd\r\n-rw-r--r--    1 ch12_admin  admin    1197  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_cdr\r\n-rw-r--r--    1 ch12_admin  admin    8127  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_cdrdao\r\n-rw-r--r--    1 ch12_admin  admin    4862  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_cdrecord\r\n-rw-r--r--    1 ch12_admin  admin    1539  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_chflags\r\n-rw-r--r--    1 ch12_admin  admin     777  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_chkconfig\r\n-rw-r--r--    1 ch12_admin  admin    3183  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_chmod\r\n-rw-r--r--    1 ch12_admin  admin    3223  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_chown\r\n-rw-r--r--    1 ch12_admin  admin    1667  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_chrt\r\n-rw-r--r--    1 ch12_admin  admin    1377  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_chsh\r\n-rw-r--r--    1 ch12_admin  admin    1768  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_clay\r\n-rw-r--r--    1 ch12_admin  admin     102  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_cmdstring\r\n-rw-r--r--    1 ch12_admin  admin    1078  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_cmp\r\n-rw-r--r--    1 ch12_admin  admin    2500  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_combination\r\n-rw-r--r--    1 ch12_admin  admin     816  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_comm\r\n-rw-r--r--    1 ch12_admin  admin     379  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_command\r\n-rw-r--r--    1 ch12_admin  admin    1250  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_command_names\r\n-rw-r--r--    1 ch12_admin  admin     572  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_comp_locale\r\n-rw-r--r--    1 ch12_admin  admin    2261  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_compadd\r\n-rw-r--r--    1 ch12_admin  admin    1963  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_compdef\r\n-rw-r--r--    1 ch12_admin  admin    3167  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_complete\r\n-rw-r--r--    1 ch12_admin  admin    1017  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_complete_debug\r\n-rw-r--r--    1 ch12_admin  admin    2599  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_complete_help\r\n-rw-r--r--    1 ch12_admin  admin     412  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_complete_help_generic\r\n-rw-r--r--    1 ch12_admin  admin    2026 23 Sep 09:48 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_complete_tag\r\n-rw-r--r--    1 ch12_admin  admin    1414  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_compress\r\n-rw-r--r--    1 ch12_admin  admin    1696  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_condition\r\n-rw-r--r--    1 ch12_admin  admin     444  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_configure\r\n-rw-r--r--    1 ch12_admin  admin    1500  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_coreadm\r\n-rw-r--r--    1 ch12_admin  admin     518  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_correct\r\n-rw-r--r--    1 ch12_admin  admin    1961  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_correct_filename\r\n-rw-r--r--    1 ch12_admin  admin     388  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_correct_word\r\n-rw-r--r--    1 ch12_admin  admin     535  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_cowsay\r\n-rw-r--r--    1 ch12_admin  admin    4090  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_cp\r\n-rw-r--r--    1 ch12_admin  admin    4650  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_cpio\r\n-rw-r--r--    1 ch12_admin  admin     343  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_cplay\r\n-rw-r--r--    1 ch12_admin  admin    3336  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_cryptsetup\r\n-rw-r--r--    1 ch12_admin  admin     795  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_cssh\r\n-rw-r--r--    1 ch12_admin  admin    1128  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_csup\r\n-rw-r--r--    1 ch12_admin  admin     170  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_ctags_tags\r\n-rw-r--r--    1 ch12_admin  admin     224  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_curl\r\n-rw-r--r--    1 ch12_admin  admin    2360  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_cut\r\n-rw-r--r--    1 ch12_admin  admin   29005  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_cvs\r\n-rw-r--r--    1 ch12_admin  admin     937  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_cvsup\r\n-rw-r--r--    1 ch12_admin  admin    2052  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_cygcheck\r\n-rw-r--r--    1 ch12_admin  admin    2613  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_cygpath\r\n-rw-r--r--    1 ch12_admin  admin    2772  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_cygrunsrv\r\n-rw-r--r--    1 ch12_admin  admin    1539  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_cygserver\r\n-rw-r--r--    1 ch12_admin  admin    2178  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_cygstart\r\n-rw-r--r--    1 ch12_admin  admin    8973  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_dak\r\n-rw-r--r--    1 ch12_admin  admin    1199  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_darcs\r\n-rw-r--r--    1 ch12_admin  admin    1539  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_date\r\n-rw-r--r--    1 ch12_admin  admin    2715  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_date_formats\r\n-rw-r--r--    1 ch12_admin  admin    4005  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_dates\r\n-rw-r--r--    1 ch12_admin  admin    3539  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_dbus\r\n-rw-r--r--    1 ch12_admin  admin    1100  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_dchroot\r\n-rw-r--r--    1 ch12_admin  admin    1022  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_dchroot-dsa\r\n-rw-r--r--    1 ch12_admin  admin    2945  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_dcop\r\n-rw-r--r--    1 ch12_admin  admin    5050  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_dcut\r\n-rw-r--r--    1 ch12_admin  admin     812  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_dd\r\n-rw-r--r--    1 ch12_admin  admin     311  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_deb_architectures\r\n-rw-r--r--    1 ch12_admin  admin    3712  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_deb_packages\r\n-rw-r--r--    1 ch12_admin  admin    5041  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_debchange\r\n-rw-r--r--    1 ch12_admin  admin    1198  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_debcheckout\r\n-rw-r--r--    1 ch12_admin  admin     906  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_debdiff\r\n-rw-r--r--    1 ch12_admin  admin    3216  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_debfoster\r\n-rw-r--r--    1 ch12_admin  admin     623  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_debsign\r\n-rw-r--r--    1 ch12_admin  admin     682  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_default\r\n-rw-r--r--    1 ch12_admin  admin    1726  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_defaults\r\n-rw-r--r--    1 ch12_admin  admin     330  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_delimiters\r\n-rw-r--r--    1 ch12_admin  admin    3701  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_describe\r\n-rw-r--r--    1 ch12_admin  admin    3054  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_description\r\n-rw-r--r--    1 ch12_admin  admin    4641  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_devtodo\r\n-rw-r--r--    1 ch12_admin  admin    2824  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_df\r\n-rw-r--r--    1 ch12_admin  admin     925  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_dhclient\r\n-rw-r--r--    1 ch12_admin  admin    1203  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_dhcpinfo\r\n-rw-r--r--    1 ch12_admin  admin    2141  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_dict\r\n-rw-r--r--    1 ch12_admin  admin    1292  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_dict_words\r\n-rw-r--r--    1 ch12_admin  admin      90  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_diff\r\n-rw-r--r--    1 ch12_admin  admin    8686  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_diff_options\r\n-rw-r--r--    1 ch12_admin  admin     727  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_diffstat\r\n-rw-r--r--    1 ch12_admin  admin     680  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_dir_list\r\n-rw-r--r--    1 ch12_admin  admin     123  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_directories\r\n-rw-r--r--    1 ch12_admin  admin    1421  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_directory_stack\r\n-rw-r--r--    1 ch12_admin  admin     262  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_dirs\r\n-rw-r--r--    1 ch12_admin  admin     683  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_disable\r\n-rw-r--r--    1 ch12_admin  admin    2057  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_dispatch\r\n-rw-r--r--    1 ch12_admin  admin    5965  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_django\r\n-rw-r--r--    1 ch12_admin  admin   26730  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_dladm\r\n-rw-r--r--    1 ch12_admin  admin     893  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_dlocate\r\n-rw-r--r--    1 ch12_admin  admin     935  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_dmidecode\r\n-rw-r--r--    1 ch12_admin  admin    8235  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_dnf\r\n-rw-r--r--    1 ch12_admin  admin     585  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_domains\r\n-rw-r--r--    1 ch12_admin  admin    1275  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_dpatch-edit-patch\r\n-rw-r--r--    1 ch12_admin  admin    8084  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_dpkg\r\n-rw-r--r--    1 ch12_admin  admin    1141  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_dpkg-buildpackage\r\n-rw-r--r--    1 ch12_admin  admin    1147  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_dpkg-cross\r\n-rw-r--r--    1 ch12_admin  admin     321  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_dpkg-repack\r\n-rw-r--r--    1 ch12_admin  admin    1318  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_dpkg_source\r\n-rw-r--r--    1 ch12_admin  admin    2153  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_dput\r\n-rw-r--r--    1 ch12_admin  admin    1713  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_dsh\r\n-rw-r--r--    1 ch12_admin  admin    2124  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_dtrace\r\n-rw-r--r--    1 ch12_admin  admin    4492  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_du\r\n-rw-r--r--    1 ch12_admin  admin     596  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_dumpadm\r\n-rw-r--r--    1 ch12_admin  admin     377  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_dumper\r\n-rw-r--r--    1 ch12_admin  admin     780  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_dupload\r\n-rw-r--r--    1 ch12_admin  admin    4041  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_dvi\r\n-rw-r--r--    1 ch12_admin  admin     378  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_dynamic_directory_name\r\n-rw-r--r--    1 ch12_admin  admin    8530  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_ecasound\r\n-rw-r--r--    1 ch12_admin  admin      93  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_echotc\r\n-rw-r--r--    1 ch12_admin  admin      94  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_echoti\r\n-rw-r--r--    1 ch12_admin  admin    1405  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_elfdump\r\n-rw-r--r--    1 ch12_admin  admin    2958  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_elinks\r\n-rw-r--r--    1 ch12_admin  admin     653  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_elm\r\n-rw-r--r--    1 ch12_admin  admin    5540  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_email_addresses\r\n-rw-r--r--    1 ch12_admin  admin     274  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_emulate\r\n-rw-r--r--    1 ch12_admin  admin     692  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_enable\r\n-rw-r--r--    1 ch12_admin  admin    5362  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_enscript\r\n-rw-r--r--    1 ch12_admin  admin     429  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_env\r\n-rw-r--r--    1 ch12_admin  admin      33  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_equal\r\n-rw-r--r--    1 ch12_admin  admin    2083  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_espeak\r\n-rw-r--r--    1 ch12_admin  admin    2135  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_etags\r\n-rw-r--r--    1 ch12_admin  admin    6763  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_ethtool\r\n-rw-r--r--    1 ch12_admin  admin    6938  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_expand\r\n-rw-r--r--    1 ch12_admin  admin    2072  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_expand_alias\r\n-rw-r--r--    1 ch12_admin  admin     307  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_expand_word\r\n-rw-r--r--    1 ch12_admin  admin    1018  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_extensions\r\n-rw-r--r--    1 ch12_admin  admin     923  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_external_pwds\r\n-rw-r--r--    1 ch12_admin  admin     486  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_fakeroot\r\n-rw-r--r--    1 ch12_admin  admin    3068  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_fc\r\n-rw-r--r--    1 ch12_admin  admin    7011  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_feh\r\n-rw-r--r--    1 ch12_admin  admin    1394  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_fetch\r\n-rw-r--r--    1 ch12_admin  admin     554  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_fetchmail\r\n-rw-r--r--    1 ch12_admin  admin    8017  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_ffmpeg\r\n-rw-r--r--    1 ch12_admin  admin    1503  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_figlet\r\n-rw-r--r--    1 ch12_admin  admin    1474  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_file_descriptors\r\n-rw-r--r--    1 ch12_admin  admin    1263  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_file_systems\r\n-rw-r--r--    1 ch12_admin  admin    3745  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_files\r\n-rw-r--r--    1 ch12_admin  admin    5101  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_find\r\n-rw-r--r--    1 ch12_admin  admin    1334  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_find_net_interfaces\r\n-rw-r--r--    1 ch12_admin  admin    2157  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_finger\r\n-rw-r--r--    1 ch12_admin  admin    5397  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_fink\r\n-rw-r--r--    1 ch12_admin  admin    1631  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_first\r\n-rw-r--r--    1 ch12_admin  admin    1660  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_flasher\r\n-rw-r--r--    1 ch12_admin  admin    1451  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_flex\r\n-rw-r--r--    1 ch12_admin  admin     110  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_floppy\r\n-rw-r--r--    1 ch12_admin  admin    2563  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_flowadm\r\n-rw-r--r--    1 ch12_admin  admin    2365  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_fmadm\r\n-rw-r--r--    1 ch12_admin  admin     601  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_fortune\r\n-rw-r--r--    1 ch12_admin  admin     935  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_freebsd-update\r\n-rw-r--r--    1 ch12_admin  admin     519  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_fsh\r\n-rw-r--r--    1 ch12_admin  admin     675  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_fstat\r\n-rw-r--r--    1 ch12_admin  admin     233  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_functions\r\n-rw-r--r--    1 ch12_admin  admin    1078  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_fuse_arguments\r\n-rw-r--r--    1 ch12_admin  admin    1648  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_fuse_values\r\n-rw-r--r--    1 ch12_admin  admin    2503  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_fuser\r\n-rw-r--r--    1 ch12_admin  admin     650  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_fusermount\r\n-rw-r--r--    1 ch12_admin  admin   60611 23 Sep 09:48 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_gcc\r\n-rw-r--r--    1 ch12_admin  admin    1422  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_gcore\r\n-rw-r--r--    1 ch12_admin  admin    1738  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_gdb\r\n-rw-r--r--    1 ch12_admin  admin     328  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_generic\r\n-rw-r--r--    1 ch12_admin  admin    2006  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_genisoimage\r\n-rw-r--r--    1 ch12_admin  admin     532  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_getclip\r\n-rw-r--r--    1 ch12_admin  admin    2213  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_getconf\r\n-rw-r--r--    1 ch12_admin  admin    1660  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_getent\r\n-rw-r--r--    1 ch12_admin  admin    1370  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_getfacl\r\n-rw-r--r--    1 ch12_admin  admin    1080  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_getmail\r\n-rw-r--r--    1 ch12_admin  admin  307442  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_git\r\n-rw-r--r--    1 ch12_admin  admin    2631  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_git-buildpackage\r\n-rw-r--r--    1 ch12_admin  admin    3186  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_global\r\n-rw-r--r--    1 ch12_admin  admin     186  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_global_tags\r\n-rw-r--r--    1 ch12_admin  admin     993  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_globflags\r\n-rw-r--r--    1 ch12_admin  admin     466  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_globqual_delims\r\n-rw-r--r--    1 ch12_admin  admin    6061  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_globquals\r\n-rw-r--r--    1 ch12_admin  admin     139  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_gnome-gv\r\n-rw-r--r--    1 ch12_admin  admin     178  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_gnu_generic\r\n-rw-r--r--    1 ch12_admin  admin    5699  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_gnupod\r\n-rw-r--r--    1 ch12_admin  admin    6248  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_gnutls\r\n-rw-r--r--    1 ch12_admin  admin     256  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_go\r\n-rw-r--r--    1 ch12_admin  admin   11225  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_gpg\r\n-rw-r--r--    1 ch12_admin  admin    2503  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_gphoto2\r\n-rw-r--r--    1 ch12_admin  admin    1337  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_gprof\r\n-rw-r--r--    1 ch12_admin  admin     619  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_gqview\r\n-rw-r--r--    1 ch12_admin  admin    6980  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_gradle\r\n-rw-r--r--    1 ch12_admin  admin   28896  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_graphicsmagick\r\n-rw-r--r--    1 ch12_admin  admin    4104  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_grep\r\n-rw-r--r--    1 ch12_admin  admin     315  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_grep-excuses\r\n-rw-r--r--    1 ch12_admin  admin    2251  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_groff\r\n-rw-r--r--    1 ch12_admin  admin    1007  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_groups\r\n-rw-r--r--    1 ch12_admin  admin   19615  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_growisofs\r\n-rw-r--r--    1 ch12_admin  admin    1616  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_gs\r\n-rw-r--r--    1 ch12_admin  admin     169  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_guard\r\n-rw-r--r--    1 ch12_admin  admin    1552  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_guilt\r\n-rw-r--r--    1 ch12_admin  admin    1349  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_gv\r\n-rw-r--r--    1 ch12_admin  admin    4049  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_gzip\r\n-rw-r--r--    1 ch12_admin  admin    1128  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_hash\r\n-rw-r--r--    1 ch12_admin  admin     910  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_have_glob_qual\r\n-rw-r--r--    1 ch12_admin  admin   22548  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_hdiutil\r\n-rw-r--r--    1 ch12_admin  admin    1675  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_head\r\n-rw-r--r--    1 ch12_admin  admin   31046  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_hg\r\n-rw-r--r--    1 ch12_admin  admin    1474  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_history\r\n-rw-r--r--    1 ch12_admin  admin    3451  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_history_complete_word\r\n-rw-r--r--    1 ch12_admin  admin    1982  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_history_modifiers\r\n-rw-r--r--    1 ch12_admin  admin    2691  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_hosts\r\n-rw-r--r--    1 ch12_admin  admin    1917  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_hwinfo\r\n-rw-r--r--    1 ch12_admin  admin    2861  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_iconv\r\n-rw-r--r--    1 ch12_admin  admin    1685  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_id\r\n-rw-r--r--    1 ch12_admin  admin    2880  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_ifconfig\r\n-rw-r--r--    1 ch12_admin  admin     665  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_iftop\r\n-rw-r--r--    1 ch12_admin  admin    1647  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_ignored\r\n-rw-r--r--    1 ch12_admin  admin   28137  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_imagemagick\r\n-rw-r--r--    1 ch12_admin  admin     813  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_in_vared\r\n-rw-r--r--    1 ch12_admin  admin     406  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_inetadm\r\n-rw-r--r--    1 ch12_admin  admin    2609  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_init_d\r\n-rw-r--r--    1 ch12_admin  admin    6328  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_initctl\r\n-rw-r--r--    1 ch12_admin  admin     555  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_invoke-rc.d\r\n-rw-r--r--    1 ch12_admin  admin     337  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_ionice\r\n-rw-r--r--    1 ch12_admin  admin   20452  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_ip\r\n-rw-r--r--    1 ch12_admin  admin   12608  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_ipadm\r\n-rw-r--r--    1 ch12_admin  admin    6178  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_ipset\r\n-rw-r--r--    1 ch12_admin  admin   10602  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_iptables\r\n-rw-r--r--    1 ch12_admin  admin    1413  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_irssi\r\n-rw-r--r--    1 ch12_admin  admin    4210  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_ispell\r\n-rw-r--r--    1 ch12_admin  admin    2397  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_iwconfig\r\n-rw-r--r--    1 ch12_admin  admin     747  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_jails\r\n-rw-r--r--    1 ch12_admin  admin   25193  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_java\r\n-rw-r--r--    1 ch12_admin  admin     693  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_java_class\r\n-rw-r--r--    1 ch12_admin  admin     460  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_jexec\r\n-rw-r--r--    1 ch12_admin  admin     705  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_jls\r\n-rw-r--r--    1 ch12_admin  admin    1987  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_jobs\r\n-rw-r--r--    1 ch12_admin  admin      27  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_jobs_bg\r\n-rw-r--r--    1 ch12_admin  admin     360  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_jobs_builtin\r\n-rw-r--r--    1 ch12_admin  admin      31  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_jobs_fg\r\n-rw-r--r--    1 ch12_admin  admin    2274  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_joe\r\n-rw-r--r--    1 ch12_admin  admin    1184  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_join\r\n-rw-r--r--    1 ch12_admin  admin    3267  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_kfmclient\r\n-rw-r--r--    1 ch12_admin  admin     678  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_kill\r\n-rw-r--r--    1 ch12_admin  admin     365  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_killall\r\n-rw-r--r--    1 ch12_admin  admin     857  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_kld\r\n-rw-r--r--    1 ch12_admin  admin     304  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_knock\r\n-rw-r--r--    1 ch12_admin  admin     542  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_kvno\r\n-rw-r--r--    1 ch12_admin  admin    1941  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_last\r\n-rw-r--r--    1 ch12_admin  admin    1169  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_ld_debug\r\n-rw-r--r--    1 ch12_admin  admin    1649  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_ldd\r\n-rw-r--r--    1 ch12_admin  admin    5689  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_less\r\n-rw-r--r--    1 ch12_admin  admin    1739  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_lha\r\n-rw-r--r--    1 ch12_admin  admin     413  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_lighttpd\r\n-rw-r--r--    1 ch12_admin  admin     166  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_limit\r\n-rw-r--r--    1 ch12_admin  admin     105  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_limits\r\n-rw-r--r--    1 ch12_admin  admin    2091  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_links\r\n-rw-r--r--    1 ch12_admin  admin    4695  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_lintian\r\n-rw-r--r--    1 ch12_admin  admin     822  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_list\r\n-rw-r--r--    1 ch12_admin  admin    1420  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_list_files\r\n-rw-r--r--    1 ch12_admin  admin    2602  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_lldb\r\n-rw-r--r--    1 ch12_admin  admin    3291  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_ln\r\n-rw-r--r--    1 ch12_admin  admin     595  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_loadkeys\r\n-rw-r--r--    1 ch12_admin  admin     349  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_locales\r\n-rw-r--r--    1 ch12_admin  admin    4608  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_locate\r\n-rw-r--r--    1 ch12_admin  admin     455  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_logical_volumes\r\n-rw-r--r--    1 ch12_admin  admin     444  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_look\r\n-rw-r--r--    1 ch12_admin  admin    1467  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_losetup\r\n-rw-r--r--    1 ch12_admin  admin    8279  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_lp\r\n-rw-r--r--    1 ch12_admin  admin    6479  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_ls\r\n-rw-r--r--    1 ch12_admin  admin     658  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_lscfg\r\n-rw-r--r--    1 ch12_admin  admin    1427  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_lsdev\r\n-rw-r--r--    1 ch12_admin  admin     348  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_lslv\r\n-rw-r--r--    1 ch12_admin  admin    3410  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_lsof\r\n-rw-r--r--    1 ch12_admin  admin     432  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_lspv\r\n-rw-r--r--    1 ch12_admin  admin     861  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_lsusb\r\n-rw-r--r--    1 ch12_admin  admin     505  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_lsvg\r\n-rw-r--r--    1 ch12_admin  admin   11166  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_lynx\r\n-rw-r--r--    1 ch12_admin  admin    3839  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_lzop\r\n-rw-r--r--    1 ch12_admin  admin     139  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_mac_applications\r\n-rw-r--r--    1 ch12_admin  admin    2000  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_mac_files_for_application\r\n-rw-r--r--    1 ch12_admin  admin     644  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_madison\r\n-rw-r--r--    1 ch12_admin  admin     467  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_mail\r\n-rw-r--r--    1 ch12_admin  admin    6024  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_mailboxes\r\n-rw-r--r--    1 ch12_admin  admin   10840  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_main_complete\r\n-rw-r--r--    1 ch12_admin  admin    9318  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_make\r\n-rw-r--r--    1 ch12_admin  admin    2656  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_make-kpkg\r\n-rw-r--r--    1 ch12_admin  admin    3314  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_man\r\n-rw-r--r--    1 ch12_admin  admin    2429  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_match\r\n-rw-r--r--    1 ch12_admin  admin     483  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_math\r\n-rw-r--r--    1 ch12_admin  admin      60  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_math_params\r\n-rw-r--r--    1 ch12_admin  admin    1434  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_matlab\r\n-rw-r--r--    1 ch12_admin  admin     661  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_md5sum\r\n-rw-r--r--    1 ch12_admin  admin    8216  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_mdadm\r\n-rw-r--r--    1 ch12_admin  admin     390  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_members\r\n-rw-r--r--    1 ch12_admin  admin    1082  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_mencal\r\n-rw-r--r--    1 ch12_admin  admin     558  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_menu\r\n-rw-r--r--    1 ch12_admin  admin      57  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_mere\r\n-rw-r--r--    1 ch12_admin  admin     106  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_mergechanges\r\n-rw-r--r--    1 ch12_admin  admin     788  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_message\r\n-rw-r--r--    1 ch12_admin  admin    1321  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_metaflac\r\n-rw-r--r--    1 ch12_admin  admin    3764  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_mh\r\n-rw-r--r--    1 ch12_admin  admin     748  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_mii-tool\r\n-rw-r--r--    1 ch12_admin  admin    1180  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_mime_types\r\n-rw-r--r--    1 ch12_admin  admin     576  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_mixerctl\r\n-rw-r--r--    1 ch12_admin  admin    1772  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_mkdir\r\n-rw-r--r--    1 ch12_admin  admin    1274  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_mkshortcut\r\n-rw-r--r--    1 ch12_admin  admin     371  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_mkzsh\r\n-rw-r--r--    1 ch12_admin  admin    5468  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_module\r\n-rw-r--r--    1 ch12_admin  admin    2095  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_module-assistant\r\n-rw-r--r--    1 ch12_admin  admin     218  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_module_math_func\r\n-rw-r--r--    1 ch12_admin  admin    4998  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_modutils\r\n-rw-r--r--    1 ch12_admin  admin    2001  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_mondo\r\n-rw-r--r--    1 ch12_admin  admin    2376  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_monotone\r\n-rw-r--r--    1 ch12_admin  admin   12027  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_moosic\r\n-rw-r--r--    1 ch12_admin  admin     848  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_mosh\r\n-rw-r--r--    1 ch12_admin  admin     871  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_most_recent_file\r\n-rw-r--r--    1 ch12_admin  admin   40266  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_mount\r\n-rw-r--r--    1 ch12_admin  admin    4777  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_mozilla\r\n-rw-r--r--    1 ch12_admin  admin    6720  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_mpc\r\n-rw-r--r--    1 ch12_admin  admin    8340  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_mplayer\r\n-rw-r--r--    1 ch12_admin  admin    3212  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_mt\r\n-rw-r--r--    1 ch12_admin  admin    4090  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_mtools\r\n-rw-r--r--    1 ch12_admin  admin    1032  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_mtr\r\n-rw-r--r--    1 ch12_admin  admin    8351  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_multi_parts\r\n-rw-r--r--    1 ch12_admin  admin    1314  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_mutt\r\n-rw-r--r--    1 ch12_admin  admin      45  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_my_accounts\r\n-rw-r--r--    1 ch12_admin  admin    9979  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_mysql_utils\r\n-rw-r--r--    1 ch12_admin  admin    1057  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_mysqldiff\r\n-rw-r--r--    1 ch12_admin  admin     538  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_nautilus\r\n-rw-r--r--    1 ch12_admin  admin     429  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_ncftp\r\n-rw-r--r--    1 ch12_admin  admin    2865  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_nedit\r\n-rw-r--r--    1 ch12_admin  admin     204  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_net_interfaces\r\n-rw-r--r--    1 ch12_admin  admin    1269  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_netcat\r\n-rw-r--r--    1 ch12_admin  admin    2935  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_netscape\r\n-rw-r--r--    1 ch12_admin  admin    2276  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_netstat\r\n-rw-r--r--    1 ch12_admin  admin     210  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_newsgroups\r\n-rw-r--r--    1 ch12_admin  admin     600  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_next_label\r\n-rw-r--r--    1 ch12_admin  admin    3464  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_next_tags\r\n-rw-r--r--    1 ch12_admin  admin     246  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_nice\r\n-rw-r--r--    1 ch12_admin  admin    2146  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_nkf\r\n-rw-r--r--    1 ch12_admin  admin    1872  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_nl\r\n-rw-r--r--    1 ch12_admin  admin    3722  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_nm\r\n-rw-r--r--    1 ch12_admin  admin    3475  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_nmap\r\n-rw-r--r--    1 ch12_admin  admin    8973  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_nmcli\r\n-rw-r--r--    1 ch12_admin  admin    1011  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_normal\r\n-rw-r--r--    1 ch12_admin  admin      90  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_nothing\r\n-rw-r--r--    1 ch12_admin  admin    1883  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_notmuch\r\n-rw-r--r--    1 ch12_admin  admin     173  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_npm\r\n-rw-r--r--    1 ch12_admin  admin    5677  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_nslookup\r\n-rw-r--r--    1 ch12_admin  admin     195  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_objdump\r\n-rw-r--r--    1 ch12_admin  admin     146  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_object_classes\r\n-rw-r--r--    1 ch12_admin  admin    2973  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_od\r\n-rw-r--r--    1 ch12_admin  admin     334  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_okular\r\n-rw-r--r--    1 ch12_admin  admin    1915  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_oldlist\r\n-rw-r--r--    1 ch12_admin  admin    1103  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_open\r\n-rw-r--r--    1 ch12_admin  admin     182  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_options\r\n-rw-r--r--    1 ch12_admin  admin     299  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_options_set\r\n-rw-r--r--    1 ch12_admin  admin     309  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_options_unset\r\n-rw-r--r--    1 ch12_admin  admin    4123  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_osc\r\n-rw-r--r--    1 ch12_admin  admin      64  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_other_accounts\r\n-rw-r--r--    1 ch12_admin  admin     361  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_pack\r\n-rw-r--r--    1 ch12_admin  admin      37  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_parameter\r\n-rw-r--r--    1 ch12_admin  admin     975  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_parameters\r\n-rw-r--r--    1 ch12_admin  admin    8152  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_patch\r\n-rw-r--r--    1 ch12_admin  admin    4858  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_patchutils\r\n-rw-r--r--    1 ch12_admin  admin    2834  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_path_commands\r\n-rw-r--r--    1 ch12_admin  admin   28002 23 Sep 09:48 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_path_files\r\n-rw-r--r--    1 ch12_admin  admin    2790  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_pax\r\n-rw-r--r--    1 ch12_admin  admin   25861  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_pbm\r\n-rw-r--r--    1 ch12_admin  admin    1212  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_pbuilder\r\n-rw-r--r--    1 ch12_admin  admin     422  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_pdf\r\n-rw-r--r--    1 ch12_admin  admin    1369  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_pdftk\r\n-rw-r--r--    1 ch12_admin  admin   88504  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_perforce\r\n-rw-r--r--    1 ch12_admin  admin    5389  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_perl\r\n-rw-r--r--    1 ch12_admin  admin     716  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_perl_basepods\r\n-rw-r--r--    1 ch12_admin  admin    4678  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_perl_modules\r\n-rw-r--r--    1 ch12_admin  admin    2337  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_perldoc\r\n-rw-r--r--    1 ch12_admin  admin    4205  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_pfctl\r\n-rw-r--r--    1 ch12_admin  admin     670  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_pfexec\r\n-rw-r--r--    1 ch12_admin  admin    5043  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_pgrep\r\n-rw-r--r--    1 ch12_admin  admin    3178  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_php\r\n-rw-r--r--    1 ch12_admin  admin     124  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_physical_volumes\r\n-rw-r--r--    1 ch12_admin  admin     918  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_pick_variant\r\n-rw-r--r--    1 ch12_admin  admin    1835  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_pids\r\n-rw-r--r--    1 ch12_admin  admin    2945  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_pine\r\n-rw-r--r--    1 ch12_admin  admin    2158  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_ping\r\n-rw-r--r--    1 ch12_admin  admin     976  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_piuparts\r\n-rw-r--r--    1 ch12_admin  admin    2182  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_pkg-config\r\n-rw-r--r--    1 ch12_admin  admin   12441  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_pkg5\r\n-rw-r--r--    1 ch12_admin  admin     353  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_pkg_instance\r\n-rw-r--r--    1 ch12_admin  admin    1012  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_pkgadd\r\n-rw-r--r--    1 ch12_admin  admin     613  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_pkginfo\r\n-rw-r--r--    1 ch12_admin  admin     551  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_pkgrm\r\n-rw-r--r--    1 ch12_admin  admin    2436  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_pkgtool\r\n-rw-r--r--    1 ch12_admin  admin     443  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_pon\r\n-rw-r--r--    1 ch12_admin  admin     563  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_portaudit\r\n-rw-r--r--    1 ch12_admin  admin     748  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_portlint\r\n-rw-r--r--    1 ch12_admin  admin    3975  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_portmaster\r\n-rw-r--r--    1 ch12_admin  admin     285  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_ports\r\n-rw-r--r--    1 ch12_admin  admin    1047  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_portsnap\r\n-rw-r--r--    1 ch12_admin  admin     530  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_postfix\r\n-rw-r--r--    1 ch12_admin  admin     333  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_postscript\r\n-rw-r--r--    1 ch12_admin  admin     628  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_powerd\r\n-rw-r--r--    1 ch12_admin  admin    6848  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_prcs\r\n-rw-r--r--    1 ch12_admin  admin     188  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_precommand\r\n-rw-r--r--    1 ch12_admin  admin    1618  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_prefix\r\n-rw-r--r--    1 ch12_admin  admin    3552  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_print\r\n-rw-r--r--    1 ch12_admin  admin     104  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_printenv\r\n-rw-r--r--    1 ch12_admin  admin    3209  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_printers\r\n-rw-r--r--    1 ch12_admin  admin     706  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_procstat\r\n-rw-r--r--    1 ch12_admin  admin     296  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_prompt\r\n-rw-r--r--    1 ch12_admin  admin    2420  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_prove\r\n-rw-r--r--    1 ch12_admin  admin    1809  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_prstat\r\n-rw-r--r--    1 ch12_admin  admin    6769  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_ps\r\n-rw-r--r--    1 ch12_admin  admin    5688  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_ps1234\r\n-rw-r--r--    1 ch12_admin  admin     716  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_pscp\r\n-rw-r--r--    1 ch12_admin  admin     341  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_pspdf\r\n-rw-r--r--    1 ch12_admin  admin    3782  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_psutils\r\n-rw-r--r--    1 ch12_admin  admin     209  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_ptree\r\n-rw-r--r--    1 ch12_admin  admin    1441  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_pump\r\n-rw-r--r--    1 ch12_admin  admin     538  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_putclip\r\n-rw-r--r--    1 ch12_admin  admin     858  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_pydoc\r\n-rw-r--r--    1 ch12_admin  admin    2160  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_python\r\n-rw-r--r--    1 ch12_admin  admin    1114  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_python_modules\r\n-rw-r--r--    1 ch12_admin  admin    2748  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_qdbus\r\n-rw-r--r--    1 ch12_admin  admin    2616  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_qemu\r\n-rw-r--r--    1 ch12_admin  admin    2647  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_qiv\r\n-rw-r--r--    1 ch12_admin  admin     525  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_qtplay\r\n-rw-r--r--    1 ch12_admin  admin    8881  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_quilt\r\n-rw-r--r--    1 ch12_admin  admin    2740  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_raggle\r\n-rw-r--r--    1 ch12_admin  admin    2849  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_rake\r\n-rw-r--r--    1 ch12_admin  admin     403  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_ranlib\r\n-rw-r--r--    1 ch12_admin  admin    4573  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_rar\r\n-rw-r--r--    1 ch12_admin  admin     766  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_rcs\r\n-rw-r--r--    1 ch12_admin  admin    2001  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_rdesktop\r\n-rw-r--r--    1 ch12_admin  admin     919  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_read\r\n-rw-r--r--    1 ch12_admin  admin    3852  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_read_comp\r\n-rw-r--r--    1 ch12_admin  admin    3058  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_readelf\r\n-rw-r--r--    1 ch12_admin  admin    1057  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_readshortcut\r\n-rw-r--r--    1 ch12_admin  admin     712  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_rebootin\r\n-rw-r--r--    1 ch12_admin  admin     421  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_redirect\r\n-rw-r--r--    1 ch12_admin  admin    2496  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_regex_arguments\r\n-rw-r--r--    1 ch12_admin  admin     856  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_regex_words\r\n-rw-r--r--    1 ch12_admin  admin    2527  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_remote_files\r\n-rw-r--r--    1 ch12_admin  admin     424  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_renice\r\n-rw-r--r--    1 ch12_admin  admin    2639  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_reprepro\r\n-rw-r--r--    1 ch12_admin  admin     268  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_requested\r\n-rw-r--r--    1 ch12_admin  admin     732  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_retrieve_cache\r\n-rw-r--r--    1 ch12_admin  admin    3303  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_retrieve_mac_apps\r\n-rw-r--r--    1 ch12_admin  admin    3798  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_ri\r\n-rw-r--r--    1 ch12_admin  admin    1850  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_rlogin\r\n-rw-r--r--    1 ch12_admin  admin    1803  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_rm\r\n-rw-r--r--    1 ch12_admin  admin   11311  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_rpm\r\n-rw-r--r--    1 ch12_admin  admin    3388  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_rpmbuild\r\n-rw-r--r--    1 ch12_admin  admin     491  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_rrdtool\r\n-rw-r--r--    1 ch12_admin  admin   12893  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_rsync\r\n-rw-r--r--    1 ch12_admin  admin    2726  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_rubber\r\n-rw-r--r--    1 ch12_admin  admin    5494  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_ruby\r\n-rw-r--r--    1 ch12_admin  admin     224 23 Sep 09:48 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_run-help\r\n-rw-r--r--    1 ch12_admin  admin    2203  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_runit\r\n-rw-r--r--    1 ch12_admin  admin    1803  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_sablotron\r\n-rw-r--r--    1 ch12_admin  admin    3436  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_samba\r\n-rw-r--r--    1 ch12_admin  admin     228  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_savecore\r\n-rw-r--r--    1 ch12_admin  admin    6190  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_sccs\r\n-rw-r--r--    1 ch12_admin  admin     467  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_sched\r\n-rw-r--r--    1 ch12_admin  admin     916  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_schedtool\r\n-rw-r--r--    1 ch12_admin  admin    1497  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_schroot\r\n-rw-r--r--    1 ch12_admin  admin    1007  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_scl\r\n-rw-r--r--    1 ch12_admin  admin    6753  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_screen\r\n-rw-r--r--    1 ch12_admin  admin    1936  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_sed\r\n-rw-r--r--    1 ch12_admin  admin    3797  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_sep_parts\r\n-rw-r--r--    1 ch12_admin  admin    1316  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_sequence\r\n-rw-r--r--    1 ch12_admin  admin    1048  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_service\r\n-rw-r--r--    1 ch12_admin  admin     951  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_services\r\n-rw-r--r--    1 ch12_admin  admin    1473  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_set\r\n-rw-r--r--    1 ch12_admin  admin     815  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_set_command\r\n-rw-r--r--    1 ch12_admin  admin    2010  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_setfacl\r\n-rw-r--r--    1 ch12_admin  admin     571  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_setopt\r\n-rw-r--r--    1 ch12_admin  admin    2246  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_setup\r\n-rw-r--r--    1 ch12_admin  admin    2431  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_setxkbmap\r\n-rw-r--r--    1 ch12_admin  admin     290  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_sh\r\n-rw-r--r--    1 ch12_admin  admin     428  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_showmount\r\n-rw-r--r--    1 ch12_admin  admin    1013  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_signals\r\n-rw-r--r--    1 ch12_admin  admin    3937  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_sisu\r\n-rw-r--r--    1 ch12_admin  admin    1131  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_slrn\r\n-rw-r--r--    1 ch12_admin  admin     856  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_smit\r\n-rw-r--r--    1 ch12_admin  admin    1842  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_snoop\r\n-rw-r--r--    1 ch12_admin  admin    1089  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_socket\r\n-rw-r--r--    1 ch12_admin  admin    1065  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_sockstat\r\n-rw-r--r--    1 ch12_admin  admin    2332  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_softwareupdate\r\n-rw-r--r--    1 ch12_admin  admin    3663  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_sort\r\n-rw-r--r--    1 ch12_admin  admin     226  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_source\r\n-rw-r--r--    1 ch12_admin  admin     475  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_spamassassin\r\n-rw-r--r--    1 ch12_admin  admin    1588  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_sqlite\r\n-rw-r--r--    1 ch12_admin  admin    2158  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_sqsh\r\n-rw-r--r--    1 ch12_admin  admin    4018  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_ss\r\n-rw-r--r--    1 ch12_admin  admin   24536  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_ssh\r\n-rw-r--r--    1 ch12_admin  admin    1014  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_sshfs\r\n-rw-r--r--    1 ch12_admin  admin     568  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_stat\r\n-rw-r--r--    1 ch12_admin  admin    1289  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_stgit\r\n-rw-r--r--    1 ch12_admin  admin    1929  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_store_cache\r\n-rw-r--r--    1 ch12_admin  admin    6735  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_strace\r\n-rw-r--r--    1 ch12_admin  admin     275  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_strftime\r\n-rw-r--r--    1 ch12_admin  admin    2341  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_strip\r\n-rw-r--r--    1 ch12_admin  admin     770  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_stty\r\n-rw-r--r--    1 ch12_admin  admin    2295  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_su\r\n-rw-r--r--    1 ch12_admin  admin     136  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_sub_commands\r\n-rw-r--r--    1 ch12_admin  admin    4291  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_subscript\r\n-rw-r--r--    1 ch12_admin  admin   12890  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_subversion\r\n-rw-r--r--    1 ch12_admin  admin    2875  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_sudo\r\n-rw-r--r--    1 ch12_admin  admin     525  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_suffix_alias_files\r\n-rw-r--r--    1 ch12_admin  admin   18143  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_surfraw\r\n-rw-r--r--    1 ch12_admin  admin    1808  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_svcadm\r\n-rw-r--r--    1 ch12_admin  admin    2124  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_svccfg\r\n-rw-r--r--    1 ch12_admin  admin     793  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_svcprop\r\n-rw-r--r--    1 ch12_admin  admin    1029  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_svcs\r\n-rw-r--r--    1 ch12_admin  admin    2892  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_svcs_fmri\r\n-rw-r--r--    1 ch12_admin  admin    2583  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_svn-buildpackage\r\n-rw-r--r--    1 ch12_admin  admin    1794  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_sysctl\r\n-rw-r--r--    1 ch12_admin  admin    5304  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_sysstat\r\n-rw-r--r--    1 ch12_admin  admin    2857  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_systat\r\n-rw-r--r--    1 ch12_admin  admin    1311  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_system_profiler\r\n-rw-r--r--    1 ch12_admin  admin    1466  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_tags\r\n-rw-r--r--    1 ch12_admin  admin    2911  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_tail\r\n-rw-r--r--    1 ch12_admin  admin    6110  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_tar\r\n-rw-r--r--    1 ch12_admin  admin    1014  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_tar_archive\r\n-rw-r--r--    1 ch12_admin  admin     678  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_tardy\r\n-rw-r--r--    1 ch12_admin  admin    4299  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_tcpdump\r\n-rw-r--r--    1 ch12_admin  admin     925  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_tcpsys\r\n-rw-r--r--    1 ch12_admin  admin     583  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_tcptraceroute\r\n-rw-r--r--    1 ch12_admin  admin    2913  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_telnet\r\n-rw-r--r--    1 ch12_admin  admin     230  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_terminals\r\n-rw-r--r--    1 ch12_admin  admin    1967  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_tex\r\n-rw-r--r--    1 ch12_admin  admin     129  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_texi\r\n-rw-r--r--    1 ch12_admin  admin    8723  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_texinfo\r\n-rw-r--r--    1 ch12_admin  admin    7285  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_tidy\r\n-rw-r--r--    1 ch12_admin  admin    7230  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_tiff\r\n-rw-r--r--    1 ch12_admin  admin     732  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_tilde\r\n-rw-r--r--    1 ch12_admin  admin     676  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_tilde_files\r\n-rw-r--r--    1 ch12_admin  admin     222  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_time_zone\r\n-rw-r--r--    1 ch12_admin  admin    2116  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_tin\r\n-rw-r--r--    1 ch12_admin  admin   17999  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_tla\r\n-rw-r--r--    1 ch12_admin  admin   55857  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_tmux\r\n-rw-r--r--    1 ch12_admin  admin    4169  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_todo.sh\r\n-rw-r--r--    1 ch12_admin  admin     863  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_toilet\r\n-rw-r--r--    1 ch12_admin  admin     328  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_toolchain-source\r\n-rw-r--r--    1 ch12_admin  admin     177  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_topgit\r\n-rw-r--r--    1 ch12_admin  admin     287  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_totd\r\n-rw-r--r--    1 ch12_admin  admin     975  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_tpb\r\n-rw-r--r--    1 ch12_admin  admin    1120  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_tpconfig\r\n-rw-r--r--    1 ch12_admin  admin    1500  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_tr\r\n-rw-r--r--    1 ch12_admin  admin      87  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_tracepath\r\n-rw-r--r--    1 ch12_admin  admin     101  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_trap\r\n-rw-r--r--    1 ch12_admin  admin    1917  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_tree\r\n-rw-r--r--    1 ch12_admin  admin     113  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_ttyctl\r\n-rw-r--r--    1 ch12_admin  admin     474  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_ttys\r\n-rw-r--r--    1 ch12_admin  admin    1405  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_tune2fs\r\n-rw-r--r--    1 ch12_admin  admin    1705  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_twidge\r\n-rw-r--r--    1 ch12_admin  admin    1406  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_twisted\r\n-rw-r--r--    1 ch12_admin  admin    5146  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_typeset\r\n-rw-r--r--    1 ch12_admin  admin    1020  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_ulimit\r\n-rw-r--r--    1 ch12_admin  admin    5261  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_uml\r\n-rw-r--r--    1 ch12_admin  admin     472  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_unace\r\n-rw-r--r--    1 ch12_admin  admin    3021  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_uname\r\n-rw-r--r--    1 ch12_admin  admin     620  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_unexpand\r\n-rw-r--r--    1 ch12_admin  admin     400  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_unhash\r\n-rw-r--r--    1 ch12_admin  admin    1398  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_uniq\r\n-rw-r--r--    1 ch12_admin  admin    5516  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_unison\r\n-rw-r--r--    1 ch12_admin  admin    2812 23 Sep 09:48 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_units\r\n-rw-r--r--    1 ch12_admin  admin    1771  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_update-alternatives\r\n-rw-r--r--    1 ch12_admin  admin     637  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_update-rc.d\r\n-rw-r--r--    1 ch12_admin  admin    6050 23 Sep 09:48 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_urls\r\n-rw-r--r--    1 ch12_admin  admin   13570  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_urpmi\r\n-rw-r--r--    1 ch12_admin  admin    2829 23 Sep 09:48 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_urxvt\r\n-rw-r--r--    1 ch12_admin  admin    1037  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_uscan\r\n-rw-r--r--    1 ch12_admin  admin    2003  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_user_admin\r\n-rw-r--r--    1 ch12_admin  admin     729  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_user_at_host\r\n-rw-r--r--    1 ch12_admin  admin    3582  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_user_expand\r\n-rw-r--r--    1 ch12_admin  admin     185  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_user_math_func\r\n-rw-r--r--    1 ch12_admin  admin     240  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_users\r\n-rw-r--r--    1 ch12_admin  admin     253  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_users_on\r\n-rw-r--r--    1 ch12_admin  admin     304  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_uzbl\r\n-rw-r--r--    1 ch12_admin  admin    4991  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_valgrind\r\n-rw-r--r--    1 ch12_admin  admin    1623  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_value\r\n-rw-r--r--    1 ch12_admin  admin    3775  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_values\r\n-rw-r--r--    1 ch12_admin  admin     326  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_vared\r\n-rw-r--r--    1 ch12_admin  admin     469  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_vars\r\n-rw-r--r--    1 ch12_admin  admin    2383  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_vcsh\r\n-rw-r--r--    1 ch12_admin  admin    5472  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_vim\r\n-rw-r--r--    1 ch12_admin  admin    1909  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_vim-addons\r\n-rw-r--r--    1 ch12_admin  admin    3667  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_vmstat\r\n-rw-r--r--    1 ch12_admin  admin    4157  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_vnc\r\n-rw-r--r--    1 ch12_admin  admin      87  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_volume_groups\r\n-rw-r--r--    1 ch12_admin  admin    5699  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_vorbis\r\n-rw-r--r--    1 ch12_admin  admin     617  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_vorbiscomment\r\n-rw-r--r--    1 ch12_admin  admin    3058  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_vserver\r\n-rw-r--r--    1 ch12_admin  admin    1812  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_vux\r\n-rw-r--r--    1 ch12_admin  admin    4531  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_w3m\r\n-rw-r--r--    1 ch12_admin  admin      66  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_wait\r\n-rw-r--r--    1 ch12_admin  admin    2513  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_wajig\r\n-rw-r--r--    1 ch12_admin  admin     439  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_wakeup_capable_devices\r\n-rw-r--r--    1 ch12_admin  admin    2070  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_wanna-build\r\n-rw-r--r--    1 ch12_admin  admin     183  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_wanted\r\n-rw-r--r--    1 ch12_admin  admin     205  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_watch\r\n-rw-r--r--    1 ch12_admin  admin     400  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_watch-snoop\r\n-rw-r--r--    1 ch12_admin  admin     793  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_wc\r\n-rw-r--r--    1 ch12_admin  admin     210  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_webbrowser\r\n-rw-r--r--    1 ch12_admin  admin   10103  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_wget\r\n-rw-r--r--    1 ch12_admin  admin      36  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_whereis\r\n-rw-r--r--    1 ch12_admin  admin    1191  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_which\r\n-rw-r--r--    1 ch12_admin  admin    4819  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_whois\r\n-rw-r--r--    1 ch12_admin  admin    1119  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_wiggle\r\n-rw-r--r--    1 ch12_admin  admin     825  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_wpa_cli\r\n-rw-r--r--    1 ch12_admin  admin     600  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_x_arguments\r\n-rw-r--r--    1 ch12_admin  admin     125  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_x_borderwidth\r\n-rw-r--r--    1 ch12_admin  admin    1007  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_x_color\r\n-rw-r--r--    1 ch12_admin  admin     396  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_x_colormapid\r\n-rw-r--r--    1 ch12_admin  admin     409  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_x_cursor\r\n-rw-r--r--    1 ch12_admin  admin      75  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_x_display\r\n-rw-r--r--    1 ch12_admin  admin     484  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_x_extension\r\n-rw-r--r--    1 ch12_admin  admin     286  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_x_font\r\n-rw-r--r--    1 ch12_admin  admin     125  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_x_geometry\r\n-rw-r--r--    1 ch12_admin  admin     615  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_x_keysym\r\n-rw-r--r--    1 ch12_admin  admin     120  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_x_locale\r\n-rw-r--r--    1 ch12_admin  admin     153  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_x_modifier\r\n-rw-r--r--    1 ch12_admin  admin     116  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_x_name\r\n-rw-r--r--    1 ch12_admin  admin     124  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_x_resource\r\n-rw-r--r--    1 ch12_admin  admin     130  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_x_selection_timeout\r\n-rw-r--r--    1 ch12_admin  admin     118  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_x_title\r\n-rw-r--r--    1 ch12_admin  admin    6052  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_x_utils\r\n-rw-r--r--    1 ch12_admin  admin     272  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_x_visual\r\n-rw-r--r--    1 ch12_admin  admin     402  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_x_window\r\n-rw-r--r--    1 ch12_admin  admin    2614  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_xargs\r\n-rw-r--r--    1 ch12_admin  admin    2580  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_xauth\r\n-rw-r--r--    1 ch12_admin  admin     631  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_xautolock\r\n-rw-r--r--    1 ch12_admin  admin     969  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_xclip\r\n-rw-r--r--    1 ch12_admin  admin    1704  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_xdvi\r\n-rw-r--r--    1 ch12_admin  admin    1972  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_xfig\r\n-rw-r--r--    1 ch12_admin  admin    1349  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_xft_fonts\r\n-rw-r--r--    1 ch12_admin  admin    3902  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_xloadimage\r\n-rw-r--r--    1 ch12_admin  admin    6630  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_xmlsoft\r\n-rw-r--r--    1 ch12_admin  admin    5387  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_xmms2\r\n-rw-r--r--    1 ch12_admin  admin    2274  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_xmodmap\r\n-rw-r--r--    1 ch12_admin  admin     126  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_xournal\r\n-rw-r--r--    1 ch12_admin  admin    1759  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_xpdf\r\n-rw-r--r--    1 ch12_admin  admin    2298  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_xrandr\r\n-rw-r--r--    1 ch12_admin  admin     823  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_xscreensaver\r\n-rw-r--r--    1 ch12_admin  admin    5196  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_xset\r\n-rw-r--r--    1 ch12_admin  admin    1744  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_xt_arguments\r\n-rw-r--r--    1 ch12_admin  admin      40  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_xt_session_id\r\n-rw-r--r--    1 ch12_admin  admin     939  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_xterm\r\n-rw-r--r--    1 ch12_admin  admin    2484  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_xv\r\n-rw-r--r--    1 ch12_admin  admin    4743  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_xwit\r\n-rw-r--r--    1 ch12_admin  admin    1957  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_xxd\r\n-rw-r--r--    1 ch12_admin  admin    4202  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_xz\r\n-rw-r--r--    1 ch12_admin  admin    1844  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_yafc\r\n-rw-r--r--    1 ch12_admin  admin     650  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_yast\r\n-rw-r--r--    1 ch12_admin  admin     658  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_yodl\r\n-rw-r--r--    1 ch12_admin  admin    3242  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_yp\r\n-rw-r--r--    1 ch12_admin  admin    8643  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_yum\r\n-rw-r--r--    1 ch12_admin  admin    2061  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_zargs\r\n-rw-r--r--    1 ch12_admin  admin     597  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_zattr\r\n-rw-r--r--    1 ch12_admin  admin     217  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_zcalc\r\n-rw-r--r--    1 ch12_admin  admin    1742  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_zcalc_line\r\n-rw-r--r--    1 ch12_admin  admin     109  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_zcat\r\n-rw-r--r--    1 ch12_admin  admin     927  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_zcompile\r\n-rw-r--r--    1 ch12_admin  admin     112  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_zdump\r\n-rw-r--r--    1 ch12_admin  admin     179  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_zed\r\n-rw-r--r--    1 ch12_admin  admin   18547  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_zfs\r\n-rw-r--r--    1 ch12_admin  admin    2724  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_zfs_dataset\r\n-rw-r--r--    1 ch12_admin  admin     408  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_zfs_keysource_props\r\n-rw-r--r--    1 ch12_admin  admin      51  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_zfs_pool\r\n-rw-r--r--    1 ch12_admin  admin    2582  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_zftp\r\n-rw-r--r--    1 ch12_admin  admin    5323  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_zip\r\n-rw-r--r--    1 ch12_admin  admin    2634  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_zle\r\n-rw-r--r--    1 ch12_admin  admin     437  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_zlogin\r\n-rw-r--r--    1 ch12_admin  admin    2753  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_zmodload\r\n-rw-r--r--    1 ch12_admin  admin     805  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_zmv\r\n-rw-r--r--    1 ch12_admin  admin    4061  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_zoneadm\r\n-rw-r--r--    1 ch12_admin  admin     256  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_zones\r\n-rw-r--r--    1 ch12_admin  admin    9263  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_zpool\r\n-rw-r--r--    1 ch12_admin  admin    2084  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_zpty\r\n-rw-r--r--    1 ch12_admin  admin     590  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_zsh\r\n-rw-r--r--    1 ch12_admin  admin     719  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_zsh-mime-handler\r\n-rw-r--r--    1 ch12_admin  admin     384  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_zsocket\r\n-rw-r--r--    1 ch12_admin  admin   15987  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_zstyle\r\n-rw-r--r--    1 ch12_admin  admin     586  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_ztodo\r\n-rw-r--r--    1 ch12_admin  admin    6093  2 Dec  2015 /usr/local/Cellar/zsh/5.2/share/zsh/functions/_zypper\r\ndrwxr-xr-x    6 ch12_admin  wheel     204 23 Sep 09:48 /usr/local/share/zsh\r\ndrwxr-xr-x    4 ch12_admin  wheel     136 23 Sep 09:44 /usr/local/share/zsh/site-functions\r\nlrwxr-xr-x    1 ch12_admin  wheel      39 23 Sep 09:44 /usr/local/share/zsh/site-functions/_brew -> ../../../Homebrew/completions/zsh/_brew\r\nlrwxr-xr-x    1 ch12_admin  wheel      44 23 Sep 09:44 /usr/local/share/zsh/site-functions/_brew_cask -> ../../../Homebrew/completions/zsh/_brew_cask\r\n```\r\n</details>",
        "labels": "Bug",
        "id": 43522
    },
    {
        "title": "cd auto-completion of .. fails with parentheses in directory name",
        "body": "In my `.zshrc` file, I have\n\n```\nzstyle ':completion:*' special-dirs true\n```\n\nand auto-completion generally works well. The following case however fails reproducibly whenever there are parentheses in the parent directory. Steps to reproduce:\n\n```\nmkdir 'A(B)'\nmkdir 'A(B)/C'\ncd 'A(B)'\n```\n\nIn this directory, `cd ..<TAB>` works fine (displays auto-completion)\n\n```\ncd C\n```\n\nIn this directory `cd ..<TAB>` does nothing. Notably, `ls ..<TAB>` still works fine.\n",
        "labels": "Bug",
        "id": 43523
    },
    {
        "title": "cp plugin cpv has not path autocompletion",
        "body": "As title.\nhttps://github.com/robbyrussell/oh-my-zsh/blob/master/plugins/cp/cp.plugin.zsh\n\nCan anyone help?\n",
        "labels": "Bug",
        "id": 43524
    },
    {
        "title": "Opening files with emacsclient, creates a second frame...",
        "body": "When I open files with `e` from the command line emacs opens a second frame. Why not open the file in the main frame? \n\nhttps://github.com/jakobadam/oh-my-zsh/blob/master/plugins/emacs/emacsclient.sh#L8\n\nkind regards,\nJakob\n",
        "labels": "Bug",
        "id": 43525
    },
    {
        "title": "Error displayed when coreutils is in the path ",
        "body": "Hey,\n\nIf my path is prepended with coreutils binaries path I get an error whenever I enter a command :\n\n```\n$ grep ^path ~/.zshrc                                                                                                                                \npath=($(brew --prefix coreutils)/libexec/gnubin /usr/local/bin $path)\n\n$ zsh                                                                                                                                                    \ndate: 10560: No such file or directory\n```\n",
        "labels": "Bug",
        "id": 43526
    },
    {
        "title": "plugin:\"last-working-dir\" conflict with \"open babun here\" context menu",
        "body": "When I add plugin `last-working-dir` to my plugin list, I find the context menu `Open Babun Here` does not work anymore.\n\nFinally, I find the problem caused by `last-working-dir` as described `Jump to last working directory (automatically called for new shells)`.\n\nSo I want to know if there is a setting to disable the function to automatically jump to last working directory for new shells but keep the command `lwd` after new shell is established.\n\n@op\n",
        "labels": "Bug",
        "id": 43527
    },
    {
        "title": "Task completion crashes on zsh 5.0.2 and task 2.5.1",
        "body": "For example `task 3 mod[tab]` I expect `task 3 modify` but it crashes\n\n``` bash\n~ zsh --version\nzsh 5.0.2 (x86_64-pc-linux-gnu)\n~ task --version\n2.5.1\n```\n",
        "labels": "Bug",
        "id": 43528
    },
    {
        "title": "complete:13: command not found: compdef",
        "body": "Hello,\nI have been struggling with this error since installing oh-my-zsh.\nI think I have read every other ticket regarding this issue but still cannot figure out what I have to do.\nI am using compiled zsh 5.2 on Ubuntu 12.04 but version 4.x gave the same error.\n\nTried: \n- deleting .zcompdef*\n- cleared .profile\n- compaudit returns nothing\n",
        "labels": "Bug",
        "id": 43529
    },
    {
        "title": "candy-kingdom theme hg prompt error.",
        "body": "I'm running Ubuntu 14.04 with mercurial straight off apt. \nIts currently at version 2.8.2\n\nThe candy-kingdom theme seems to be using a hg prompt that is not available with my hg version.\nThus for candy-kingdom, I always keep getting the git basic commands and global options outputs. Very annoying, and just destroys my user experience.\n\nAlso #5029 issue is on me as well. A lot of people will be using oh-my-zsh on desktops, or servers thus the battery plugin is just not an option. \n",
        "labels": "Bug",
        "id": 43530
    },
    {
        "title": "npm.plugin.zsh:4: command not found: npm",
        "body": "I've just updated my oh-my-zsh:\n\n``` bash\n/Users/username/.oh-my-zsh/plugins/npm/npm.plugin.zsh:4: command not found: npm\n/Users/username/.oh-my-zsh/plugins/npm/npm.plugin.zsh:source:7: no such file or directory: /Users/username/.oh-my-zsh/cache//npm_completion\n```\n\n**npm** is available in my shell.\nI don't know which information to provide for you to help to fix it. 😞 \n",
        "labels": "Bug",
        "id": 43531
    },
    {
        "title": "pj will report files as projects for autocomplete",
        "body": "If you do\n\n```\n$ pj <TAB>\n```\n\nit will show you an autocomplete-list of projects. However, it also includes files in the base of your Project-directory-tree, i.e.\n\n```\n$ pj <TAB>\nDirectory1/ Directory2/ file1.ext file2.ext\n```\n\nOf course, autocompleting to a file leads to an error:\n\n```\nNo such project file1.ext\n```\n\npossibly related to #5267 \n",
        "labels": "Bug",
        "id": 43532
    },
    {
        "title": "Install script set my shell to /usr/local/bin/zsh instead of /bin/zsh",
        "body": "The installer set my shell to `/usr/local/bin/zsh`, but I don't even have brew installed and that path doesn't exist.\n\nI was able to fix this by manually settings my shell to /bin/bash in terminal preferences, then running `chsh -s /bin/zsh` and everything is working as expected now.\n\nI should also mention that I am using macOS Sierra beta2\n",
        "labels": "Bug",
        "id": 43533
    },
    {
        "title": "pj doesn't support project directories with spaces in them",
        "body": "pj will just truncate at the space and then be unable to open the directory.\n\nExample directory: $HOME/Projects/sample directory/\n.zshrc content: $PROJECT_HOMES = ( $HOME/Projects )\n\n```\n$~:\n$~: pj <TAB>\nsample\n$~: pj sample\nNo such project sample\n$~: pj sample\\ diretory\n$~/Projects/sample directory/:\n```\n\nAlso it has problems with special characters (they are displayed as escaped by \"\\\" in the auto-completion display).\n\nAny ideas how to fix those?\n",
        "labels": "Bug",
        "id": 43534
    },
    {
        "title": "pj <tab> causes (eval):1: parse error near `&'",
        "body": "```\n❯ pj ...... \n(eval):1: parse error near `&'\n(eval):1: parse error near `&'\n```\n",
        "labels": "Bug",
        "id": 43535
    },
    {
        "title": "smt theme git commit time wrong for new repo",
        "body": "In a freshly init'd git repo with no commits, the smt theme tells me it's been ~17000 days since my last commit. That's the time since the epoch.\n\n```\n[17003d17h32m]\n```\n",
        "labels": "Bug",
        "id": 43536
    },
    {
        "title": "omz_urlencode conflicts with alias from common_aliases",
        "body": "Hi there!\n\ncommon_aliases.plugin.zsh contains this line:\n\n``` sh\nalias -g P=\"2>&1| pygmentize -l pytb\"\n```\n\nAt the same time there is the function `omz_urlencode`:\n\n``` sh\nfunction omz_urlencode() {\n  emulate -L zsh\n  zparseopts -D -E -a opts r m P\n```\n\nThe last letter `P` expands as an alias and causes errors `omz_urlencode:2: command not found: pygmentize`.\n\nAs a quick solution I commented out the alias, but I think there is a more elegant solution for it.\n",
        "labels": "Bug",
        "id": 43537
    },
    {
        "title": "failed to load module `zsh/datetime'",
        "body": "**TL;DR:** should be fixed by using the same zsh binary as the one being executed\r\n\r\n----\r\n\r\nI installed oh-my-zsh on a remote machine. It gives the following error every time a zsh shell starts:\r\n\r\n```\r\n.oh-my-zsh/tools/check_for_upgrade.sh:3: failed to load module `zsh/datetime': /local/p4clients/pkgbuild-ZgWJw/workspace/src/Zsh/build/private/install/lib/zsh/5.0.7/zsh/datetime.so: cannot open shared object file: No such file or directory\r\n_current_epoch:1: bad math expression: operand expected at`/ 60 / 60 ...'\r\n```\r\n\r\nThis is odd because when I run `zmodload zsh/datetime` in the shell, it works. What could be causing this?\r\n",
        "labels": "Bug",
        "id": 43538
    },
    {
        "title": "zsh ignores interactive shell and outer environment",
        "body": "when we do something like this when developing, the zsh is ignoring the sourced outer environment.\n\n```\n  # starting from bash or zsh doesnt matter\n  source ./env/activate # from virtualenv  which makes our_command available\n  which our_command # just fine\n  zsh # with ohmyzsh installed     , also zsh -i doesnt make a difference, we always get a fresh shell\n  which our_command # not found\n  exit # now we are back in invoking (outer) shell\n  zsh -c 'which our_command'    # this WORKS!\n  zsh -c 'print `which our_command`; zsh -i' # this prints correct, but new zsh doesnt keep it\n```\n\nif i uninstall ohmyzsh and use regular zsh it is working as expected.\n\nit seams that zsh is always starting a fresh login zsh. but only when in interactive mode. if we use for example -c , its working.\n\nalso this did work a few month ago without any problems. Just after one of the ohmyzsh upgrades, it did break. maybe its a new feature and we need to set somewhere a parameter?\n",
        "labels": "Bug",
        "id": 43539
    },
    {
        "title": "mvn-color seems to swallow prompts for input",
        "body": "Hi,\n\nWhen using mvn-color vs just regular mvn, any prompts by maven end up getting swallowed, making it seem like mvn locked up.  For example:\n\nmvn-color archetype:generate should have as the las line:\nChoose a number or apply filter (format: [groupId:]artifactId, case sensitive contains): 771:\n\nmvn archetype:generate \ncorrectly shows the prompt.\n\nThis is not limited to just generating an archetype, but in any instance where maven asks for input.\n",
        "labels": "Bug",
        "id": 43540
    },
    {
        "title": "kiwi and candy-kingdom themes use battery functions without testing for battery plugin",
        "body": "These two themes both try to call battery_pct_prompt even when the battery plugin isn't loaded.\n",
        "labels": "Bug",
        "id": 43541
    },
    {
        "title": "upgrade does not respect $HOME - wrong ownership after upgrade",
        "body": "Hello,\n\nthank you for that great piece of software, I use it on all my computers!\n\nOne issue that occurs often, is that an upgrade does not respect $HOME. I always have a couple of opened screen sessions on my computers. Often I log in as user, then do a \nsudo /bin/zsh\n to become root but then stay in \n/home/user #\n(I do not change directory) and logout. Now root is in \"/home/user #\". The session remains open. If I do a login a couple of days later, oh-my-zsh prompts for an update and – if YES – upgrades the installation in /home/user as root giving the files wrong permissions.\n\nInstead upgrade.sh should respect $HOME and look, if there are changes in it's  installation in the homedir of the current user and upgrade that.\n",
        "labels": "Bug",
        "id": 43542
    },
    {
        "title": "Installer assumes zsh is not installed if it's not in /etc/shells",
        "body": "Hi,\r\n\r\nI have zsh installed and used it already some time, but without oh-my-zsh. I would like to give it a try but ran into the error that the install.sh didn't recognize my already installed zsh?\r\n\r\n```\r\n[userX@hostX1]~% zsh --version\r\nzsh 5.1.1 (x86_64-redhat-linux-gnu\r\n[userX@hostX1]~% rpm -qa | grep zsh\r\nzsh-5.1.1-4.fc23.x86_64\r\n[userX@hostX1]~% echo $SHELL\r\n/bin/zsh\r\n[userX@hostX1]~% cat /etc/redhat-release\r\nFedora release 23 (Twenty Three)\r\n[userX@hostX1]~% sh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\r\n**Zsh is not installed! Please install zsh first!**\r\n[userX@hostX1]~% \r\n```\r\n\r\nCould you give me a hint what's wrong? It's nothing special on my zsh or on my Fedora 23 setup.\r\n\r\nThanks,\r\n\r\nregards,\r\nulf\r\n",
        "labels": "Bug",
        "id": 43543
    },
    {
        "title": "virtualenvwrapper.plugin.zsh does not support tmux and pyenv together",
        "body": "Hi,\n\nI started using pyenv with [pyenv-virtualenvwrapper](https://github.com/yyuu/pyenv-virtualenvwrapper) an it works like a sharm with this plugin.\n\nThe problem comes when I try to use tmux. For example, when I run this:\n\n``` shell\n$ tmux new -s session_name\n```\n\nI get `[exited]` as response:\n![screenshot from 2016-03-27 19 16 05](https://cloud.githubusercontent.com/assets/1572530/14068672/77b70d74-f450-11e5-817b-b0d003606003.png)\n\nI realized [this line](https://github.com/robbyrussell/oh-my-zsh/blob/master/plugins/virtualenvwrapper/virtualenvwrapper.plugin.zsh#L7) in the plugin makes tmux exits automatically:\n\n``` shell\nsource ${${virtualenvwrapper}:c}\n```\n\nI could start tmux in my zsh config file. Despite that, I can not start any other session so the usage of tmuxinator, for instance, is not possible :(\n\nI really appreciate your help. This is a [link with of my dotfiles](https://github.com/oskargicast/shascii).\n\nThanks.\n",
        "labels": "Bug",
        "id": 43544
    },
    {
        "title": "'noclobber' option makes many plugins fall over",
        "body": "Many plugins redirect output, even to things like \" > /dev/null\", which causes them to fail if the noclobber option is set.  Maybe (as a start) new code could use >| /dev/null when that's what they mean to do.\n",
        "labels": "Bug",
        "id": 43545
    },
    {
        "title": "extract plugin: deb fails if content is xz compressed",
        "body": "Recent deb files contain archives xz compressed (e.g., data.tar.xz instead of data.tar.gz). extract always tries to extract a tar.gz and fails. Some fallback code for tar.xz would be needed.\n",
        "labels": "Bug",
        "id": 43546
    },
    {
        "title": "Num Pad can't input",
        "body": "I'm using Mac + ZSH for developer and Gentoo + ZSH for server.\nBoth of those my Keyboard's num-pad can't input any char(1,2,3,4,5,6,7,8,9,0,.,=,/,*,-,+,enter)\nBut when I change to bash, those keys are OK.\nIn any other Applicatons, those keys are OK too.\n\nI'm using Razer's BlackWidow keyboard.\n",
        "labels": "Bug",
        "id": 43547
    },
    {
        "title": "improper path expander when path includes an underline char",
        "body": "I have a folder named with a underline char (_).\nThe folder structure is like this.\n├── ODL_Development\n│      └── syslogsvr\n\nWhen I type `odl/svr` in terminal and press tab, zsh cannot expand the path as expected.\nBut it can works fine when I input `odl`, press tab, input `svr`, press tab.\n",
        "labels": "Bug",
        "id": 43548
    },
    {
        "title": "OS X El Capitan \"command not found: ___main\"",
        "body": "Hello - I just upgraded to El Capitan, and did the bidding of the brew doctor, but I am getting an error when I start my shell: \n\n```\nzsh:12: command not found: ___main\n(eval):1: no matches found: *:all-files\n_tags:comptags:36: can only be called from completion function\n_tags:comptry:55: can only be called from completion function\n_tags:comptags:60: can only be called from completion function\n_tags:comptags:67: can only be called from completion function\n```\n\nMy diag dump is here: \nhttps://gist.github.com/RickCogley/937578f27a0ee21f7dbb\n\nCould someone kindly take a look? \n\nSincerely,\nRick\n",
        "labels": "Bug",
        "id": 43549
    },
    {
        "title": "Tab completion segfault with zsh 5.1.1",
        "body": "With a recent update to zsh 5.1.1 in Arch/Manjaro, and with OMZ sourced in .zshrc, tab completion leads to a segfault in zsh (even with no loaded plugins). Commenting the source line lets tab completion work correctly. Tab completion worked perfectly with zsh 5.0.8.\n\nstrace of tab completion event:\n\n```\npoll([{fd=4, events=POLLIN}, {fd=6, events=POLLIN}, {fd=7, events=POLLIN}, {fd=10, events=POLLIN}], 4, 30) = ? ERESTART_RESTARTBLOCK (Interrupted by signal)\n--- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_KILLED, si_pid=17320, si_uid=1000, si_status=SIGSEGV, si_utime=10, si_stime=3} ---\nwrite(13, \"\\1\\0\\0\\0\\0\\0\\0\\0\", 8)        = 8\nrt_sigreturn({mask=[]})                 = -1 EINTR (Interrupted system call)\nwrite(6, \"\\1\\0\\0\\0\\0\\0\\0\\0\", 8)         = 8\nwrite(12, \"\\n\\0\\0\\0\", 4)                = 4\nwrite(12, \"\\300\\305\\252\\1\\0\\0\\0\\0\", 8)  = 8\nwrite(12, \"\\v\\0\\0\\0\", 4)                = 4\nread(12, \"\\0\", 1)                       = 1\nclose(11)                               = 0\nclose(10)                               = 0\nwrite(6, \"\\1\\0\\0\\0\\0\\0\\0\\0\", 8)         = 8\nfutex(0xe3ff50, FUTEX_WAKE_PRIVATE, 2147483647) = 0\nclose(12)                               = 0\nkill(17319, SIGTERM)                    = 0\n--- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=17319, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---\nwrite(13, \"\\1\\0\\0\\0\\0\\0\\0\\0\", 8)        = 8\nrt_sigreturn({mask=[]})                 = 15236864\nexit_group(1)                           = ?\n+++ exited with 1 +++\n```\n\n``` bash\n$ zsh --version\nzsh 5.1.1 (x86_64-unknown-linux-gnu)\n```\n",
        "labels": "Bug",
        "id": 43550
    },
    {
        "title": "node version stucked at the terminal even after nvm deactivate",
        "body": "I'm using nvm at my system.\n\nIf I run `nvm deactivate` and `which node` for confirming I'm using the system node, the node version keep stucked in my terminal. For exemple:\n\n```\nayrton@localhost ~/workspace/whatever/something-ng                      [14:27:12] \n> $                                                                ⬡ 0.12.7 [±develop]\n```\n\nAlso, if I open a new terminal, this information keep stucked forever in my terminal:\n\n```\nayrton@localhost ~/workspace/whatever/something-ng                      [14:30:07] \n> $                                                                ⬡ 0.12.7 \n```\n",
        "labels": "Bug",
        "id": 43551
    },
    {
        "title": "nvm_prompt_info doesn't work with Homebrew installed nvm",
        "body": "The command `nvm_prompt_info` returns an empty string for me even though I have nvm installed (with Homebrew). It looks to me like there's a bug in lib/nvm.zsh in that it bails out if it can't find nvm at `$HOME/.nvm/nvm.sh` whereas my nvm is installed at `/usr/local/opt/nvm/nvm.sh`. On closer inspection it also looks like plugins/nvm/nvm.plugin.zsh and plugins/nvm/_nvm also make incorrect assumptions about the path where nvm is installed.\n",
        "labels": "Bug",
        "id": 43552
    },
    {
        "title": "How does one suppress rum-prompt or battery-prompt type errors?",
        "body": "With certain themes, every new line is preceded by an error such as\n\n```\nzsh: no such file or directory: /Users/username/.rvm/bin/rvm-prompt\n```\n\nHow does one suppress these errors?\n",
        "labels": "Bug",
        "id": 43553
    },
    {
        "title": "virtualenvwrapper get stuck in project root",
        "body": "Hi\n\nWhen I enable the `virtualwrapper` plugin, I can no longer `cd` into subdirectories of my virtualenv-based project directories.\n\nHere are my plugins:\n\n```\nplugins=(osx vi-mode tmux z sudo cp docker git python virtualenv virtualenvwrapper django web-search)\n```\n\nNow let's say I `cd` into my project root:\n\n``` bash\ncd ~/Documents/git/my-project/\n```\n\nThe `virtualenvwrapper` plugin will automatically load my virtualenv, which is fine. But from now on, I can't change into subdirectories:\n\n``` bash\ncd ~/Documents/git/my-project/\npwd\n# OUTPUT: /Users/dbarton/Documents/git/my-project/ \n\ncd some-subdir/\n\npwd\n# OUTPUT: /Users/dbarton/Documents/git/my-project/ \n```\n\nI'm stuck in the project root dir. When I disable the `virtualenvwrapper` plugin, everything seems to be working fine (except of loading the virtualenv automatically of course).\n\nI'm working with Mac OS X and using the latest oh-my-zsh version (just updated it).\n",
        "labels": "Bug",
        "id": 43554
    },
    {
        "title": "Git clone errors if .gitconfig specifies autocrlf = true",
        "body": "This pertains to issues #1730 #3294, #3304 and perhaps others.  Cloning the repository fails if `core.autocrlf = true`.  A workaround is OK but I don't understand why the issue is considered resolved; autocrlf is a standard Git setting and users should be able to clone the repository successfully whichever setting they choose.\n\n---\n### WORKAROUND:\n\nRun the following:\n\n``` sh\ncd $ZSH\ngit config core.autocrlf false\ngit rm --cached -r .\ngit reset --hard\n```\n",
        "labels": "Bug",
        "id": 43555
    },
    {
        "title": "get errors with brew zsh, but with default osx zsh it works with no errors",
        "body": "osx 10.10.3\nthe user is not admin, don't know if it related.\n\nevery time i start the terminal, i get this:\n\n```\ncolors () {\n  emulate -L zsh\n  typeset -Ag color colour\n  color=(00 none 01 bold 02 faint 22 normal 03 standout 23 no-standout 04 underline 24 no-underline 05 blink 25 no-blink 07 reverse 27 no-reverse 08 conceal 28 no-conceal 30 black 40 bg-black 31 red 41 bg-red 32 green 42 bg-green 33 yellow 43 bg-yellow 34 blue 44 bg-blue 35 magenta 45 bg-magenta 36 cyan 46 bg-cyan 37 white 47 bg-white 39 default 49 bg-default)\n  local k\n  for k in ${(k)color}\n  do\n    color[${color[$k]}]=$k\n  done\n  for k in ${color[(I)3?]}\n  do\n    color[fg-${color[$k]}]=$k\n  done\n  color[grey]=${color[black]}\n  color[fg-grey]=${color[grey]}\n  color[bg-grey]=${color[bg-black]}\n  colour=(${(kv)color})\n  local lc=$'\\e[' rc=m\n  typeset -Hg reset_color bold_color\n  reset_color=\"$lc${color[none]}$rc\"\n  bold_color=\"$lc${color[bold]}$rc\"\n  typeset -AHg fg fg_bold fg_no_bold\n  for k in ${(k)color[(I)fg-*]}\n  do\n    fg[${k#fg-}]=\"$lc${color[$k]}$rc\"\n    fg_bold[${k#fg-}]=\"$lc${color[bold]};${color[$k]}$rc\"\n    fg_no_bold[${k#fg-}]=\"$lc${color[normal]};${color[$k]}$rc\"\n  done\n  typeset -AHg bg bg_bold bg_no_bold\n  for k in ${(k)color[(I)bg-*]}\n  do\n    bg[${k#bg-}]=\"$lc${color[$k]}$rc\"\n    bg_bold[${k#bg-}]=\"$lc${color[bold]};${color[$k]}$rc\"\n    bg_no_bold[${k#bg-}]=\"$lc${color[normal]};${color[$k]}$rc\"\n  done\n}\ncompdump () {\n  # undefined\n  builtin autoload -XUz\n}\ncompinit () {\n  emulate -L zsh\n  setopt extendedglob\n  typeset _i_dumpfile _i_files _i_line _i_done _i_dir _i_autodump=1\n  typeset _i_tag _i_file _i_addfiles _i_fail=ask _i_check=yes _i_name\n  while [[ $# -gt 0 && $1 = -[dDiuC] ]]\n  do\n    case \"$1\" in\n      (-d) _i_autodump=1\n        shift\n        if [[ $# -gt 0 && \"$1\" != -[dfQC] ]]\n        then\n          _i_dumpfile=\"$1\"\n          shift\n        fi ;;\n      (-D) _i_autodump=0\n        shift ;;\n      (-i) _i_fail=ign\n        shift ;;\n      (-u) _i_fail=use\n        shift ;;\n      (-C) _i_check=\n        shift ;;\n    esac\n  done\n  typeset -gHA _comps _services _patcomps _postpatcomps\n  typeset -gHA _compautos\n  typeset -gHA _lastcomp\n  if [[ -n $_i_dumpfile ]]\n  then\n    typeset -g _comp_dumpfile=\"$_i_dumpfile\"\n  else\n    typeset -g _comp_dumpfile=\"${ZDOTDIR:-$HOME}/.zcompdump\"\n  fi\n  typeset -gHa _comp_options\n  _comp_options=(bareglobqual extendedglob glob multibyte multifuncdef nullglob rcexpandparam unset NO_allexport NO_aliases NO_cshnullglob NO_cshjunkiequotes NO_errexit NO_globsubst NO_histsubstpattern NO_ignorebraces NO_ignoreclosebraces NO_kshglob NO_ksharrays NO_kshtypeset NO_markdirs NO_octalzeroes NO_shwordsplit NO_shglob NO_warncreateglobal)\n  typeset -gH _comp_setup='local -A _comp_caller_options;\n             _comp_caller_options=(${(kv)options[@]});\n             setopt localoptions localtraps localpatterns ${_comp_options[@]};\n             local IFS=$'\\'\\ \\\\t\\\\r\\\\n\\\\0\\''\n             enable -p \\| \\~ \\( \\? \\* \\[ \\< \\^ \\#\n             exec </dev/null;\n             trap - ZERR\n             local -a reply\n             local REPLY'\n  typeset -ga compprefuncs comppostfuncs\n  compprefuncs=()\n  comppostfuncs=()\n  : $funcstack\n  compdef () {\n    local opt autol type func delete eval new i ret=0 cmd svc\n    local -a match mbegin mend\n    emulate -L zsh\n    setopt extendedglob\n    if (( ! $# ))\n    then\n      print -u2 \"$0: I need arguments\"\n      return 1\n    fi\n    while getopts \"anpPkKde\" opt\n    do\n      case \"$opt\" in\n        (a) autol=yes  ;;\n        (n) new=yes  ;;\n        ([pPkK]) if [[ -n \"$type\" ]]\n          then\n            print -u2 \"$0: type already set to $type\"\n            return 1\n          fi\n          if [[ \"$opt\" = p ]]\n          then\n            type=pattern\n          elif [[ \"$opt\" = P ]]\n          then\n            type=postpattern\n          elif [[ \"$opt\" = K ]]\n          then\n            type=widgetkey\n          else\n            type=key\n          fi ;;\n        (d) delete=yes  ;;\n        (e) eval=yes  ;;\n      esac\n    done\n    shift OPTIND-1\n    if (( ! $# ))\n    then\n      print -u2 \"$0: I need arguments\"\n      return 1\n    fi\n    if [[ -z \"$delete\" ]]\n    then\n      if [[ -z \"$eval\" ]] && [[ \"$1\" = *\\=* ]]\n      then\n        while (( $# ))\n        do\n          if [[ \"$1\" = *\\=* ]]\n          then\n            cmd=\"${1%%\\=*}\"\n            svc=\"${1#*\\=}\"\n            func=\"$_comps[${_services[(r)$svc]:-$svc}]\"\n            [[ -n ${_services[$svc]} ]] && svc=${_services[$svc]}\n            [[ -z \"$func\" ]] && func=\"${${_patcomps[(K)$svc][1]}:-${_postpatcomps[(K)$svc][1]}}\"\n            if [[ -n \"$func\" ]]\n            then\n              _comps[$cmd]=\"$func\"\n              _services[$cmd]=\"$svc\"\n            else\n              print -u2 \"$0: unknown command or service: $svc\"\n              ret=1\n            fi\n          else\n            print -u2 \"$0: invalid argument: $1\"\n            ret=1\n          fi\n          shift\n        done\n        return ret\n      fi\n      func=\"$1\"\n      [[ -n \"$autol\" ]] && autoload -Uz \"$func\"\n      shift\n      case \"$type\" in\n        (widgetkey) while [[ -n $1 ]]\n          do\n            if [[ $# -lt 3 ]]\n            then\n              print -u2 \"$0: compdef -K requires <widget> <comp-widget> <key>\"\n              return 1\n            fi\n            [[ $1 = _* ]] || 1=\"_$1\"\n            [[ $2 = .* ]] || 2=\".$2\"\n            [[ $2 = .menu-select ]] && zmodload -i zsh/complist\n            zle -C \"$1\" \"$2\" \"$func\"\n            if [[ -n $new ]]\n            then\n              bindkey \"$3\" | IFS=$' \\t' read -A opt\n              [[ $opt[-1] = undefined-key ]] && bindkey \"$3\" \"$1\"\n            else\n              bindkey \"$3\" \"$1\"\n            fi\n            shift 3\n          done ;;\n        (key) if [[ $# -lt 2 ]]\n          then\n            print -u2 \"$0: missing keys\"\n            return 1\n          fi\n          if [[ $1 = .* ]]\n          then\n            [[ $1 = .menu-select ]] && zmodload -i zsh/complist\n            zle -C \"$func\" \"$1\" \"$func\"\n          else\n            [[ $1 = menu-select ]] && zmodload -i zsh/complist\n            zle -C \"$func\" \".$1\" \"$func\"\n          fi\n          shift\n          for i\n          do\n            if [[ -n $new ]]\n            then\n              bindkey \"$i\" | IFS=$' \\t' read -A opt\n              [[ $opt[-1] = undefined-key ]] || continue\n            fi\n            bindkey \"$i\" \"$func\"\n          done ;;\n        (*) while (( $# ))\n          do\n            if [[ \"$1\" = -N ]]\n            then\n              type=normal\n            elif [[ \"$1\" = -p ]]\n            then\n              type=pattern\n            elif [[ \"$1\" = -P ]]\n            then\n              type=postpattern\n            else\n              case \"$type\" in\n                (pattern) if [[ $1 = (#b)(*)=(*) ]]\n                  then\n                    _patcomps[$match[1]]=\"=$match[2]=$func\"\n                  else\n                    _patcomps[$1]=\"$func\"\n                  fi ;;\n                (postpattern) if [[ $1 = (#b)(*)=(*) ]]\n                  then\n                    _postpatcomps[$match[1]]=\"=$match[2]=$func\"\n                  else\n                    _postpatcomps[$1]=\"$func\"\n                  fi ;;\n                (*) if [[ \"$1\" = *\\=* ]]\n                  then\n                    cmd=\"${1%%\\=*}\"\n                    svc=yes\n                  else\n                    cmd=\"$1\"\n                    svc=\n                  fi\n                  if [[ -z \"$new\" || -z \"${_comps[$1]}\" ]]\n                  then\n                    _comps[$cmd]=\"$func\"\n                    [[ -n \"$svc\" ]] && _services[$cmd]=\"${1#*\\=}\"\n                  fi ;;\n              esac\n            fi\n            shift\n          done ;;\n      esac\n    else\n      case \"$type\" in\n        (pattern) unset \"_patcomps[$^@]\" ;;\n        (postpattern) unset \"_postpatcomps[$^@]\" ;;\n        (key) print -u2 \"$0: cannot restore key bindings\"\n          return 1 ;;\n        (*) unset \"_comps[$^@]\" ;;\n      esac\n    fi\n  }\n  typeset _i_wdirs _i_wfiles\n  _i_wdirs=()\n  _i_wfiles=()\n  autoload -Uz compaudit\n  if [[ -n \"$_i_check\" ]]\n  then\n    typeset _i_q\n    if ! eval compaudit\n    then\n      if [[ -n \"$_i_q\" ]]\n      then\n        if [[ \"$_i_fail\" = ask ]]\n        then\n          if ! read -q \"?zsh compinit: insecure $_i_q, run compaudit for list.\nIgnore insecure $_i_q and continue [y] or abort compinit [n]? \"\n          then\n            print -u2 \"$0: initialization aborted\"\n            unfunction compinit compdef\n            unset _comp_dumpfile _comp_secure compprefuncs comppostfuncs _comps _patcomps _postpatcomps _compautos _lastcomp\n            return 1\n          fi\n          _i_wfiles=()\n          _i_wdirs=()\n        else\n          (( $#_i_wfiles )) && _i_files=(\"${(@)_i_files:#(${(j:|:)_i_wfiles%.zwc})}\")\n          (( $#_i_wdirs )) && _i_files=(\"${(@)_i_files:#(${(j:|:)_i_wdirs%.zwc})/*}\")\n        fi\n      fi\n      typeset -g _comp_secure=yes\n    fi\n  fi\n  autoload -Uz compdump compinstall\n  _i_done=''\n  if [[ -f \"$_comp_dumpfile\" ]]\n  then\n    if [[ -n \"$_i_check\" ]]\n    then\n      IFS=$' \\t' read -rA _i_line < \"$_comp_dumpfile\"\n      if [[ _i_autodump -eq 1 && $_i_line[2] -eq $#_i_files && $ZSH_VERSION = $_i_line[4] ]]\n      then\n        builtin . \"$_comp_dumpfile\"\n        _i_done=yes\n      fi\n    else\n      builtin . \"$_comp_dumpfile\"\n      _i_done=yes\n    fi\n  fi\n  if [[ -z \"$_i_done\" ]]\n  then\n    typeset -A _i_test\n    for _i_dir in $fpath\n    do\n      [[ $_i_dir = . ]] && continue\n      (( $_i_wdirs[(I)$_i_dir] )) && continue\n      for _i_file in $_i_dir/^([^_]*|*~|*.zwc)(N)\n      do\n        _i_name=\"${_i_file:t}\"\n        (( $+_i_test[$_i_name] + $_i_wfiles[(I)$_i_file] )) && continue\n        _i_test[$_i_name]=yes\n        IFS=$' \\t' read -rA _i_line < $_i_file\n        _i_tag=$_i_line[1]\n        shift _i_line\n        case $_i_tag in\n          (\\#compdef) if [[ $_i_line[1] = -[pPkK](n|) ]]\n            then\n              compdef ${_i_line[1]}na \"${_i_name}\" \"${(@)_i_line[2,-1]}\"\n            else\n              compdef -na \"${_i_name}\" \"${_i_line[@]}\"\n            fi ;;\n          (\\#autoload) autoload -Uz \"$_i_line[@]\" ${_i_name}\n            [[ \"$_i_line\" != \\ # ]] && _compautos[${_i_name}]=\"$_i_line\"  ;;\n        esac\n      done\n    done\n    if [[ $_i_autodump = 1 ]]\n    then\n      compdump\n    fi\n  fi\n  for _i_line in complete-word delete-char-or-list expand-or-complete expand-or-complete-prefix list-choices menu-complete menu-expand-or-complete reverse-menu-complete\n  do\n    zle -C $_i_line .$_i_line _main_complete\n  done\n  zle -la menu-select && zle -C menu-select .menu-select _main_complete\n  bindkey '^i' | IFS=$' \\t' read -A _i_line\n  if [[ ${_i_line[2]} = expand-or-complete ]] && zstyle -a ':completion:' completer _i_line && (( ${_i_line[(i)_expand]} <= ${#_i_line} ))\n  then\n    bindkey '^i' complete-word\n  fi\n  unfunction compinit compaudit\n  autoload -Uz compinit compaudit\n  return 0\n}\ncompinstall () {\n  # undefined\n  builtin autoload -XUz\n}\nedit-command-line () {\n  # undefined\n  builtin autoload -XU\n}\nurl-quote-magic () {\n  # undefined\n  builtin autoload -XU\n}\ncompdef: unknown command or service: git\ncompdef: unknown command or service: grep\ncompdef: unknown command or service: git\n```\n",
        "labels": "Bug",
        "id": 43556
    },
    {
        "title": "Installer leaks \"~/.zshrc-e\" file, maybe from bad \"-i\" option",
        "body": "The oh-my-zsh installer is leaving behind apparently unused files named `~/.zhsrc-e` that appear to be copies of the zshrc template, only partially processed. I think this is due to an issue with the options passed to `sed` by the installer.\n\nConsider the `sed` calls at lines 26 and 31.\n\n``` shell\nsed -i -e \"/export PATH=/ c\\\\\nexport PATH=\\\"$PATH\\\"\n\" ~/.zshrc\n```\n\nThat's broken over multiple lines, but it's of the form `sed -i -e \"blah_blah\" ~/.zshrc`. The problem is that the `-i` option takes an argument, which is the suffix to use for creating backup files. Here, that `-e` is interpreted as the argument to `-i`, not a separate option. So it's creating a backup file ending in `-e` every time it's called. For in-place editing with no backup, you need to give a zero-length suffix with an explicit `\"\"` empty string: `sed -i -e \"blah-blah\" ~/.zshrc`.\n\nIt might be better to avoid `-i` altogether and use explicit temp files, because `-i` is a nonstandard extension that's not supported on all systems. (See #3367.)\n",
        "labels": "Bug",
        "id": 43557
    },
    {
        "title": "vi-mode broken since last auto-update?",
        "body": "Since last autoupdate I get the following message when I open a terminal: `TRAPWINCH:zle:2: widgets can only be called when ZLE is active`. I figured out that the TRAPWINCH function comes from the vi-mode plugin. To test I deactivated this plugin and the messages disappeared.\n\nI haven't changed anything manually in in my .zshrc after the autoupdate. Before this update there was no error message.\n",
        "labels": "Bug",
        "id": 43558
    },
    {
        "title": "Chuck norris plugin not working on os x",
        "body": "I used the brew version of fortune. For some reason it doesn't recognise the fortunes file.\n\nConsole output:\n\n```\nfortune: /Users/pablo/.oh-my-zsh/plugins/chucknorris/fortunes: No fortune files in directory.\nfortune:/Users/pablo/.oh-my-zsh/plugins/chucknorris/fortunes not a fortune file or directory\n```\n",
        "labels": "Bug",
        "id": 43559
    },
    {
        "title": "Installer fails on cygwin with git and chsh errors",
        "body": "I tried doing a fresh install of oh-my-zsh in Cygwin on Windows 7 x64, and it failed to install, with kind of cryptic messages. Both my Windows and cygwin installations are up to date as of 2/14/2015.\n\nIf you have Git for Windows installed and on the path, but not Cygwin's git installed, `install.sh` will use the Windows git, and for me it failed to clone the OMZ repo. Looks like Cygwin's git must be installed for `install.sh` to work.\n\nIf `install.sh` makes it past the repo cloning, it will then fail when trying to change the shell, because `chsh` does not exist on Cygwin.\n## What the failure looks like\n\nHere's me running install when Windows Git 1.9.4 but not Cygwin git is installed.\n\n```\ngwydion% which git\n/cygdrive/c/Program Files (x86)/Git/cmd/git\ngwydion% git --version\ngit version 1.9.4.msysgit.0\ngwydion% curl -L http://install.ohmyz.sh | sh\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100   115  100   115    0     0    149      0 --:--:-- --:--:-- --:--:--   393\n100  1930  100  1930    0     0   2014      0 --:--:-- --:--:-- --:--:--  2014\n\\033[0;34mCloning Oh My Zsh...\\033[0m\nCloning into '/home/janke/.oh-my-zsh'...\n\\033[0;34mLooking for an existing zsh config...\\033[0m\n\\033[0;33mFound ~/.zshrc.\\033[0m \\033[0;32mBacking up to ~/.zshrc.pre-oh-my-zsh\\033[0m\n\\033[0;34mUsing the Oh My Zsh template file and adding it to ~/.zshrc\\033[0m\ncp: cannot stat ‘/home/janke/.oh-my-zsh/templates/zshrc.zsh-template’: No such file or directory\ngwydion%\n```\n\nWith Windows Git 1.9.5 installed, it fails at the same point but you get a different error message.\n\n```\ngwydion% curl -L http://install.ohmyz.sh | sh\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100   115  100   115    0     0     80      0  0:00:01  0:00:01 --:--:--   155\n100  1930  100  1930    0     0    643      0  0:00:03  0:00:03 --:--:--  1783\n\\033[0;34mCloning Oh My Zsh...\\033[0m\nfatal: destination path '/home/janke/.oh-my-zsh' already exists and is not an empty directory.\ngit not installed\ngwydion%\n```\n\nDespite what the error message says, '/home/janke/.oh-my-zsh' did not in fact exist.\n\nI think what's going on here is that git 1.9.5 is now returning an exit status in this case. The code in install.zsh is lumping any error from the git invocation together and reporting it as not being installed. This should probably be two separate checks.\n\n```\nhash git >/dev/null 2>&1 && env git clone --depth=1 https://github.com/robbyrussell/oh-my-zsh.git $ZSH || {\n  echo \"git not installed\"\n  exit\n}\n```\n\nI was able to get the clone to work using Windows git if I gave it a relative path to clone to. May be something with how Windows git is handling Unix style paths.\n\n```\ngwydion% env git clone --depth=1 https://github.com/robbyrussell/oh-my-zsh.git $ZSH\nfatal: destination path '/home/janke/.oh-my-zsh' already exists and is not an empty directory.\ngwydion% file /home/janke/.oh-my-zsh\n/home/janke/.oh-my-zsh: cannot open `/home/janke/.oh-my-zsh' (No such file or directory)\ngwydion% env git clone --depth=1 https://github.com/robbyrussell/oh-my-zsh.git .oh-my-zsh\nCloning into '.oh-my-zsh'...\ngwydion%\n```\n\nInstalling Cygwin git fixes that issue. After that, it will get most of the way through the install, and then break when trying to call chsh.\n\n```\ngwydion% which git\n/usr/bin/git\ngwydion% curl -L http://install.ohmyz.sh | sh\n...\n\\033[0;34mCloning Oh My Zsh...\\033[0m\nCloning into '/home/janke/.oh-my-zsh'...\n...\n\\033[0;34mLooking for an existing zsh config...\\033[0m\n\\033[0;33mFound ~/.zshrc.\\033[0m \\033[0;32mBacking up to ~/.zshrc.pre-oh-my-zsh\\033[0m\n\\033[0;34mUsing the Oh My Zsh template file and adding it to ~/.zshrc\\033[0m\n\\033[0;34mCopying your current PATH and adding it to the end of ~/.zshrc for you.\\033[0m\n\\033[0;34mTime to change your default shell to zsh!\\033[0m\nsh: line 37: chsh: command not found\ngwydion%\n\n## What to do?\n\nSince running the installer on cygwin has some prerequisites, we should probably document them in the installation instructions. And maybe we could change `install.zsh` to handle the cygwin cases by:\n* Detecting if the `git` it found is the Windows/MSYS Git and throwing an error message asking for Cygwin git to be installed\n* Testing whether `chsh` exists on the system, and giving a \"please change your shell manually\" message if it doesn't\n\nAlso, it seems the installer should exit with a nonzero status when it's aborting due to an error, like git missing or OMZ already being installed.\n```\n",
        "labels": "Bug",
        "id": 43560
    },
    {
        "title": "segfault with ubuntu 12.04",
        "body": "Hi guys,\n\nI get a segfault after 2 minutes I run any command at the shell. Even a 'ls' causes that.\n\nFeb  4 10:20:35 venus1553624 kernel: [  268.932535] zsh[18525]: segfault at 0 ip b759d5e2 sp bfe9f490 error 6 in libc-2.15.so[b750f000+1a4000]\n\nAny hint?\n",
        "labels": "Bug",
        "id": 43561
    },
    {
        "title": "jump completion does not work on yosemite aka 10.10",
        "body": "Somehow the completion for the jump command stopped working on yosemite aka 10.10 .\n\nI tried to fix it and removing the `-e` in line 44 helps. But I have no clue what that thing did.\n",
        "labels": "Bug",
        "id": 43562
    },
    {
        "title": "Alt-Left-Arrow and Alt-Right-Arrow broken on urxvt in openSUSE",
        "body": "since a recent \"git pull\" the always working bound-keys\r\n```\r\n^[^[[D (Alt-Cursor-Left)\r\n^[^[[C (Alt-Cursor-Right)\r\n```\r\nare not resulting anymore in a backward-word (or forward-word), even though the correct bind keys are set.\r\n```\r\n\"^[^[[D\" backward-word\r\n\"^[B\" backward-word\r\n\"^[[1;5D\" backward-word\r\n\"^[b\" backward-word\r\n```\r\nAlt-B and Alt-F are still working.\r\nI'm puzzled.\r\nThanks for any help as these keys are really in my muscle-memory and I can't live without them...\r\n",
        "labels": "Bug",
        "id": 43563
    },
    {
        "title": "Error on load: \"cannot bind to an empty key sequence\"",
        "body": "I just updated oh-my-zsh to the latest version.\nWhen I open a new terminal, the following error appears:\n\n``` bash\nLast login: Fri Mar 21 09:06:37 on ttys001\n/Users/ec/.oh-my-zsh/lib/key-bindings.zsh:bindkey:23: cannot bind to an empty key sequence\n/Users/ec/.oh-my-zsh/lib/key-bindings.zsh:bindkey:24: cannot bind to an empty key sequence\n/Users/ec/.oh-my-zsh/lib/key-bindings.zsh:bindkey:30: cannot bind to an empty key sequence\n/Users/ec/.oh-my-zsh/lib/key-bindings.zsh:bindkey:40: cannot bind to an empty key sequence\n➜  ~  \n```\n",
        "labels": "Bug",
        "id": 43564
    },
    {
        "title": "Completion behavior",
        "body": "Hi,\nSince the last automatic update I've lost the initial behavior of the completion plugin. The colored prompt disapeared and the completion is based on the complete command instead of a part of the text I've entered. \nFor example, before when I was typing \"git pu\" I was getting each command starting with \"git pu\" and the entered search was highlighted but now I'm having every command starting with \"git\" and the highlight is gone.\n\nBefore issuing I've looked to the 2 history plugins I was using (history and history-substring-search) but there was no recent change made to them.\n\nI have 2 computers with the same zshrc (1 ubuntu and 1 osx Mountain Lion) and the problem is only present on OSX.\n",
        "labels": "Bug",
        "id": 43565
    },
    {
        "title": "rkj-repos.zsh-theme prompt crash with hg",
        "body": "When you install hg with this plugin, there is a problem with hg feature, the prompt like this:\n\n``` bash\n┌─[pablo@GGG-Pserrano] - [~/dev] - [2014-03-20 07:44:22]\n└─[0] <Mercurial Distributed SCM\n\nbasic commands:\n\n add           add the specified files on the next commit\n annotate      show changeset information by line for each file\n clone         make a copy of an existing repository\n commit        commit the specified files or all outstanding changes\n diff          diff repository (or selected files)\n export        dump the header and diffs for one or more changesets\n forget        forget the specified files on the next commit\n init          create a new repository in the given directory\n log           show revision history of entire repository or files\n merge         merge working directory with another revision\n pull          pull changes from the specified source\n push          push changes to the specified destination\n remove        remove the specified files on the next commit\n serve         start stand-alone webserver\n status        show changed files in the working directory\n summary       summarize working directory state\n update        update working directory (or switch revisions)\n\nuse \"hg help\" for the full list of commands or \"hg -v\" for details>\n\n´´´\n```\n",
        "labels": "Bug",
        "id": 43566
    },
    {
        "title": "history-substring-search stopped finding infixes",
        "body": "After a recent update (can't provide specifics but I'm updating pretty often) the history-substring-search plugin stopped working. When I write `ser` and press the up arrow, it used to propose `grunt serve`. Now it proposes `servers.sh` which doesn't even exist in the current directory. When I type `cl` and press the up arrow, I get the commands I executed that _started_ with this substring.\n\nIt seems it stopped finding substrings from the middle of the command.\n\nThis is one of the most useful features for me, please bring it back!\n\nEDIT: my `.zshrc`:\n\n``` bash\nZSH=$HOME/.oh-my-zsh\nZSH_THEME=\"mgol\"\n\nplugins=(bundler brew cabal cp django git git-flow github gnu-utils grunt history-substring-search mercurial node npm nvm osx pip python rsync ruby rvm ssh-agent svn terminalapp textmate urltools vagrant web-search)\n\nsource $ZSH/oh-my-zsh.sh\n\nPATH=\"/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/usr/texbin\"\nexport PATH=\"$HOME/bin:./node_modules/.bin:$HOME/.cabal/bin:/usr/local/opt/ruby/bin:/usr/local/bin:/usr/local/sbin:/Applications/CrossOver.app/Contents/SharedSupport/CrossOver/bin:$PATH\"\n\nif [ -f ~/.zsh_nocorrect ]; then\n    while read -r COMMAND; do\n        alias $COMMAND=\"nocorrect $COMMAND\"\n    done < ~/.zsh_nocorrect\nfi\n\n. `brew --prefix`/etc/profile.d/z.sh\n. `brew --prefix`/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh\n. `brew --prefix nvm`/nvm.sh\n\nsetopt interactivecomments\nzstyle \":completion:*:commands\" rehash 1\n\nsource ~/.aliases\n\nalias -g ...='../..'\nalias -g ....='../../..'\nalias -g .....='../../../..'\n\nalias zshrc='source ~/.zshrc'\n```\n",
        "labels": "Bug",
        "id": 43567
    },
    {
        "title": "screen plugin is not working",
        "body": "I do:\n\nscreen\n\nand got\n\nsort: invalid option -- 4\nTry `sort --help' for more information.\n┌─(~)────────────(alan@amadeus:s006)─┐\n└─(18:01:32)──>        ──(Mon,Mar10)─┘\n\nSo, besides the \"sort\" error message I don't get to see any extra info about if I am within a screen etc.\n\nZSH_THEME=\"jonathan\"\nplugins=(git osx extract screen)\n",
        "labels": "Bug",
        "id": 43568
    },
    {
        "title": "The pygmalion theme became odd since 4954335",
        "body": "A two-year-old PR (#781) was merged recently (in 4954335b64e294923d64c4a9208e732bb9399268) and it makes the pygmalion theme odd especially in a wide terminal (e.g. guake). It limits the length of the prompt to 40 characters, which is improper in a normal terminal.\n\n![example](http://ibin.co/14Fl2wtAs3S2)\n",
        "labels": "Bug",
        "id": 43569
    },
    {
        "title": "history-substring-search doesn't work after update to Ubuntu 12.10 [has workaround]",
        "body": "history-substring-search just doesn't work since I update my distro from 12.04 to 12.10.\nI mean that when I type smth, eg `ls` and press up-arrow button, it shows me last history item, not started from `ls`.\n\nMy .zshrc\n\n```\n$ cat .zshrc | grep -v -E \"^# .*\"\nZSH=$HOME/.oh-my-zsh\nZSH_THEME=\"clean\" # fletcherm\nplugins=(git history-substring-search command-not-found)\nsource $ZSH/oh-my-zsh.sh\nexport PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games\n```\n\nZSH version\n\n```\n$ zsh --version\nzsh 5.0.0 (i686-pc-linux-gnu)\n```\n",
        "labels": "Bug",
        "id": 43570
    },
    {
        "title": "Tab completion broken when file names contain underscores.",
        "body": "e.g.\n\n```\nmkdir test\ntouch a.z b.z c.z d.z a_.z b_.z c_.z\nls <tab>\n```\n\non the first tab you see\n\n```\nls .z\n```\n\non the second, you see\n\n```\na.z  b.z  c.z  d.z\n```\n\nfiles with underscores are not shown.\n",
        "labels": "Bug",
        "id": 43571
    },
    {
        "title": "zsh PATH becomes virtualenv PATH if in a virtualenv while installing.",
        "body": "If oh-my-zsh is installed while in a virtualenv, PATH will be the PATH from the virtualenv.\n",
        "labels": "Bug",
        "id": 43572
    },
    {
        "title": "Upgrade command quirky",
        "body": "Noticed today...\n\n```\n[~] upgrade_oh_my_zsh                                                                                                                                                13:57:54 \n-e Upgrading Oh My Zsh\nfatal: Not a git repository (or any of the parent directories): .git\n-e          __                                     __   \n-e   ____  / /_     ____ ___  __  __   ____  _____/ /_  \n-e  / __ \\/ __ \\   / __ `__ \\/ / / /  /_  / / ___/ __ \\ \n-e / /_/ / / / /  / / / / / / /_/ /    / /_(__  ) / / / \n-e \\____/_/ /_/  /_/ /_/ /_/\\__, /    /___/____/_/ /_/  \n-e                         /____/                       \n-e Hooray! Oh My Zsh has been updated and/or is at the current version.\n-e To keep up on the latest, be sure to follow Oh My Zsh on twitter: http://twitter.com/ohmyzsh\n[~]                                                                                                                                                                  13:57:55 \n```\n\nAnyone want to poke at this? the `-e` is definitely undesired... and the git error needs to be looked at...\n",
        "labels": "Bug",
        "id": 43573
    },
    {
        "title": "add-zsh-hook: function definition file not found",
        "body": "_hiya!_\nafter the last update I get\n\n/Users/hugo/.oh-my-zsh/lib/termsupport.zsh:32: add-zsh-hook: function definition file not found\n/Users/hugo/.oh-my-zsh/lib/termsupport.zsh:33: add-zsh-hook: function definition file not found\n\nkind regards\nWolfgang\n",
        "labels": "Bug",
        "id": 43574
    },
    {
        "title": "sometime get into a git dir(use git plugin), the system crash.",
        "body": "Sometime.\n\nI use sh get into this dir, it is ok\n",
        "labels": "Bug",
        "id": 43575
    },
    {
        "title": "\"~/.oh-my-zsh/lib/spectrum.zsh:6: you have running jobs.\"",
        "body": "Hi,\n\nHaving installed Robby Russell's oh-my-zsh, every time I open a terminal\n(i.e., launch a login shell), I see the following:\n\n[4] 6039\n/global/users/thomas/.oh-my-zsh/lib/spectrum.zsh:6: you have running jobs.\n[4]  + 6039 done       typeset -Ag FX FG\n\nAny ideas why this might be?  This is a default install of your\noh-my-zsh -- the only thing I've done is changed my theme to\n\"eastwood\" in ~/.zshrc\n\nShould it matter (and from my cursory glance at what this spectrum.zsh\nfile does, it might), I am launching a login shell of zsh via tmux\neach time -- hence, my TERM is set to \"screen-256color\" -- and from a\nquick glance at this script, it seems to try and make 256 colours\neasier on the eye?\n",
        "labels": "Bug",
        "id": 43576
    },
    {
        "title": "Auto-update not working",
        "body": "It looks like the LAST_EPOCH is updating itself everyday... not seen it prompt me to upgrade in quite some time.  Need to investigate...\n",
        "labels": "Bug",
        "id": 43577
    },
    {
        "title": "Capistrano tasks auto-completion is broken",
        "body": "When I try to do a cap tasks auto completion it fails due to the show_tasks task not existing.  I do have the plugin turned on.\n",
        "labels": "Bug",
        "id": 43578
    },
    {
        "title": "Git plugin issue",
        "body": "I'm on OS X (Snow Leopard), and I just tried to install oh-my-zsh, but whenever I try to tab-complete a git command, I get \"fatal: error processing config file(s)\"\n\nHere's a screenshot:\n\nhttp://skitch.com/jackowayed/d8x34/daniel-daniel-jackoways-macbook-pro-zsh-80x24\n",
        "labels": "Bug",
        "id": 43579
    },
    {
        "title": "Annoying Appearance Bug",
        "body": "1) When a new window or tab is created in Terminal, a % appears then half a screen of blank before the prompt.\n",
        "labels": "Bug",
        "id": 43580
    },
    {
        "title": "check for upgrade syntax error",
        "body": "I upgraded oh my zsh today and am now getting this:\n\n`/Users/robbyrussell/.oh-my-zsh/tools/check_for_upgrade.sh: line 8: 14547 - : syntax error: operand expected (error token is \" \")`\n",
        "labels": "Bug",
        "id": 43581
    },
    {
        "title": "Errors if .ssh/known_hosts does not exist",
        "body": "Just setup a new Debian virtual machine and setup oh-my-ssh. When I login I get the following errors due to the absense of an ~/.ssh/known_hosts file\n\nsed: can't read /home/wmoore/.ssh/known_hosts: No such file or directory\nsed: can't read /home/wmoore/.ssh/known_hosts: No such file or directory\n\nThe references seem to be in lib/completion.zsh\n\nA test for existence of the file probably should be done before adding the completions\n",
        "labels": "Bug",
        "id": 43582
    },
    {
        "title": "Alias conflicts with gdb",
        "body": "alias gdb='git branch -d' conflicts with GDB (GNU Debugger).\n",
        "labels": "Bug",
        "id": 43583
    },
    {
        "title": "Where is the location of 'src' which I use to compile .zshrc when I update certain dot files?",
        "body": "This is not a big problem, but I have been using 'src' to compile my .zshrc for sometime and I have no clue where it comes from or where it resides on my machine.  Can someopne enlighten me on where it comes from and where it is on the disk?  I can do a which src and I see the code but again, no ideal where is comes from or what plugin, if any, it is associated with.\r\n\r\nThanks for your help\r\nJoe\r\njoe@bram.net\r\n",
        "labels": "Support",
        "id": 43584
    },
    {
        "title": "No function called and no name too",
        "body": "https://github.com/ohmyzsh/ohmyzsh/blob/95a06f3927a286db257dc99791b02caba757fe33/tools/check_for_upgrade.sh#L32",
        "labels": "Support",
        "id": 43585
    },
    {
        "title": "Issue in using theme when they are in their own folder in custom theme directory",
        "body": "When trying to use a custom theme [powerlevel10k](https://github.com/romkatv/powerlevel10k), I ran into a problem where oh-my-zsh was throwing me errors saying couldn't find the theme.\r\n`/Users/timemuffin/.oh-my-zsh/oh-my-zsh.sh:source:128: no such file or directory: /Users/timemuffin/.oh-my-zsh/themes/powerlevel10k.zsh-theme`\r\nOn checking the oh-my-zsh.sh script I noticed the condition written to handle custom themes only looked for zsh-theme file in the custom/themes directory but if the theme comes in its own folder there was no way to handle that.\r\n`/Users/timemuffin/.oh-my-zsh/custom/themes/powerlevel10k/powerlevel10k.zsh-theme`\r\nI just added one more condition to check for the theme in `$ZSH_CUSTOM/themes/$ZSH_THEME/$ZSH_THEME.zsh-theme` to the existing condition and the theme worked as expected.\r\n```\r\nelif [ -f \"$ZSH_CUSTOM/themes/$ZSH_THEME/$ZSH_THEME.zsh-theme\" ]; then\r\n    source \"$ZSH_CUSTOM/themes/$ZSH_THEME/$ZSH_THEME.zsh-theme\"\r\n```",
        "labels": "Support",
        "id": 43586
    },
    {
        "title": "Unable to omz update due to unknown option --interactive in vim",
        "body": "```\r\n❯ omz update\r\nVIM - Vi IMproved 8.2 (2019 Dec 12, compiled Jan  4 2021 19:10:05)\r\nUnknown option argument: \"--interactive\"\r\nMore info with: \"vim -h\"\r\n```\r\n\r\nI am on the latest version of vim installed from homebrew on MacOS but unclear why the --interactive option is unknown. Did previously have success running omz update on older versions of Vim",
        "labels": "Support",
        "id": 43587
    },
    {
        "title": "Escape key functions as alt",
        "body": "Hello, i'm using zsh with oh-my-zsh installed. this is weird, whenever I press escape and another key like `l` it will become alt + `l`. how can i disable it? \r\n\r\nI'm using Arch btw.",
        "labels": "Support",
        "id": 43588
    },
    {
        "title": "How to change zsh-autocomplete color or make text item list under like zsh-autosuggestions",
        "body": "Hi. Current when i press '[TAB]' and it will be show the list under command like this. But color of them is alternative to command \r\n\r\n![image](https://user-images.githubusercontent.com/17109300/110980806-d531a400-8398-11eb-940e-f03b4f3b0ddf.png)\r\n\r\nI like all item of under list will colored like zsh-autosuggestions\r\n\r\n![image](https://user-images.githubusercontent.com/17109300/110980934-fb574400-8398-11eb-8fd1-47751abaf194.png)\r\n\r\nHow can i do that , thank all !",
        "labels": "Support",
        "id": 43589
    },
    {
        "title": "Terminal lagy after the latest update",
        "body": "Is anyone experience a certain amount of lag while typing into the terminal after the latest update?",
        "labels": "Support",
        "id": 43590
    },
    {
        "title": "Run *.sh file has if statement in oh my zsh has error",
        "body": "Hi everyone,\r\nI am using oh my zsh and has a .sh file below \r\n```\r\ncover=\"-coverprofile=cover -coverpkg=./handlers\"\r\n\r\nexport BOOKING_SERVICE_CONFIG=\"../config\"\r\n\r\ncase $1 in\r\n\r\n  \"1\")\r\n\r\n    if [[ -z $2 ]] ;\r\n\r\n    then\r\n\r\n      go test -v ./testing ${cover}/airConditioner -run Booking_AirConditioner\r\n\r\n    else\r\n\r\n      go test -v ./testing ${cover}/airConditioner -run Booking_AirConditioner/^$2$\r\n\r\n    fi\r\n\r\n    ;;\r\n\r\n  *)\r\n\r\n    go test -v ./testing ${cover}/... -timeout 1h\r\n\r\n    ;;\r\n\r\nesac\r\n```\r\n\r\nWhen i ran command \"./test.sh 1\", I received error \"./test.sh: 5: ./test.sh: [[: not found\"\r\n\r\nHow can i fix this with oh my zsh?\r\n\r\nThank you!",
        "labels": "Support",
        "id": 43591
    },
    {
        "title": "nvm command not found tr, uname, mkdir",
        "body": "I'm getting the following errors when I open a terminal:\r\n\r\n```\r\nnvm:7: command not found: tr\r\nnvm:7: command not found: tr\r\n/usr/local/share/autojump/autojump.zsh:22: command not found: uname\r\n/usr/local/share/autojump/autojump.zsh:31: command not found: mkdir\r\n/usr/local/Cellar/autojump/22.5.3_2/share/autojump/autojump.zsh:22: command not found: uname\r\n/usr/local/Cellar/autojump/22.5.3_2/share/autojump/autojump.zsh:31: command not found: mkdir\r\n/Users/shinokada/.zshrc:68: command not found: starship\r\n```\r\n![image](https://user-images.githubusercontent.com/147320/109583611-7e7bcd00-7b43-11eb-914d-6769fba011aa.png)\r\n\r\n\r\nI think it is something to do with the PATH, but I'm not sure. The autojump works and `nvm --version` outputs as well. \r\n\r\nMy .zshrc has the following:\r\n\r\n```\r\n# Path to your oh-my-zsh installation.\r\nexport ZSH=\"/Users/shinokada/.oh-my-zsh\"\r\n\r\n# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes\r\nZSH_THEME=\"cobalt2\"\r\n\r\n# Uncomment the following line to enable command auto-correction.\r\nENABLE_CORRECTION=\"true\"\r\n\r\n# Uncomment the following line to display red dots whilst waiting for completion.\r\nCOMPLETION_WAITING_DOTS=\"true\"\r\n\r\nplugins=(\r\n  extract git zsh-autosuggestions zsh-syntax-highlighting brew\r\n)\r\n\r\nsource $ZSH/oh-my-zsh.sh\r\n\r\nset number\r\n# My environment settings\r\nexport EDITOR=vim\r\nexport VISUAL=\"$EDITOR\"\r\n\r\n# Start PATH\r\nexport PATH=\"$PATH:/usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin\"\r\n\r\n# pyenv\r\nexport PYENV_ROOT=\"$HOME/.pyenv\"\r\nexport PATH=\"$PYENV_ROOT/bin:$PATH\"\r\n\r\nexport PATH=\"$HOME/.composer/vendor/bin:$PATH\"\r\nexport PATH=\"/usr/local/mysql/bin:$PATH\"\r\nexport PATH=\"$HOME/.local/bin:$PATH\"\r\nexport PATH=\"$HOME/bin:$PATH\"\r\nexport PATH=\"$HOME/.cargo/bin:$PATH\"\r\nexport PATH=\"/usr/local/opt/sqlite/bin:$PATH\"\r\n\r\n# Perl\r\npath=\"/Users/shinokada/perl5/bin${PATH:+:${PATH}}\"\r\nPERL5LIB=\"/Users/shinokada/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}\"\r\nexport PERL5LIB\r\nPERL_LOCAL_LIB_ROOT=\"/Users/shinokada/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}\"\r\nexport PERL_LOCAL_LIB_ROOT\r\nPERL_MB_OPT=\"--install_base \\\"/Users/shinokada/perl5\\\"\"\r\nexport PERL_MB_OPT\r\nPERL_MM_OPT=\"INSTALL_BASE=/Users/shinokada/perl5\"\r\nexport PERL_MM_OPT\r\n\r\nexport NVM_DIR=$HOME/.nvm\r\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\" # This loads nvm\r\nexport LANG=\"en_US.UTF-8\"\r\nexport LC_ALL=\"en_US.UTF-8\"\r\nexport LC_CTYPE=\"en_US.UTF-8\"\r\n\r\n# autojump using j\r\n[ -f /usr/local/etc/profile.d/autojump.sh ] && . /usr/local/etc/profile.d/autojump.sh\r\n\r\n### help function\r\nfunction help() {\r\n  bash -c \"help $@\"\r\n}\r\n### end help function\r\n\r\n# starship\r\neval \"$(starship init zsh)\"\r\n\r\n# Docker format\r\nFORMAT=\"\\nID\\t{{.ID}}\\nIMAGE\\t{{.Image}}\\nCOMMAND\\t{{.Command}}\\nCREATED\\t{{.RunningFor}}\\nSTATUS\\t{{.Status}}\\nPORTS\\t{{.Ports}}\\nNAMES\\t{{.Names}}\\n\"\r\n\r\n# Start alias\r\nalias del=\"rmtrash\"\r\nalias typora=\"open -a typora\"\r\n# brew update && brew outdated && brew upgrade ➡️  buou\r\nalias buou=\"brew update && brew outdated && brew upgrade && brew cleanup\"\r\n# npm outdated -g --depth=0 && npm update -g\r\nalias npmou=\"npm outdated -g --depth=0 && npm update -g\"\r\n# mkdir -p test && cd test ➡️  mkcd test\r\nalias mkcd='foo(){ mkdir -p \"$1\"; cd \"$1\" }; foo '\r\n\r\n# For Big Sur problem with pyenv\r\n#If you need to have openssl@1.1 first\r\nexport PATH=\"/usr/local/opt/openssl@1.1/bin:$PATH\"\r\n\r\n# For compilers to find openssl@1.1\r\nexport LDFLAGS=\"-L/usr/local/opt/openssl@1.1/lib\"\r\nexport CPPFLAGS=\"-I/usr/local/opt/openssl@1.1/include\"\r\n\r\n# For pkg-config to find openssl@1.1\r\nexport PKG_CONFIG_PATH=\"/usr/local/opt/openssl@1.1/lib/pkgconfig\"\r\n\r\n# For compilers to find readline\r\nexport LDFLAGS=\"-L/usr/local/opt/readline/lib\"\r\nexport CPPFLAGS=\"-I/usr/local/opt/readline/include\"\r\n\r\n# For pkg-config to find readline\r\nexport PKG_CONFIG_PATH=\"/usr/local/opt/readline/lib/pkgconfig\"\r\n\r\n# For compilers to find zlib\r\nexport LDFLAGS=\"-L/usr/local/opt/zlib/lib\"\r\nexport CPPFLAGS=\"-I/usr/local/opt/zlib/include\"\r\n\r\n# For pkg-config to find zlib\r\nexport PKG_CONFIG_PATH=\"/usr/local/opt/zlib/lib/pkgconfig\"\r\n\r\n# For compilers to find sqlite\r\nexport LDFLAGS=\"-L/usr/local/opt/sqlite/lib\"\r\nexport CPPFLAGS=\"-I/usr/local/opt/sqlite/include\"\r\n\r\n# For pkg-config to find sqlite\r\nexport PKG_CONFIG_PATH=\"/usr/local/opt/sqlite/lib/pkgconfig\"\r\n\r\n# End of Big Sur fix\r\nexport PATH=\"/Users/shinokada/.deta/bin:$PATH\"\r\n\r\n# pyenv-virtalenv\r\neval \"$(pyenv init -)\"\r\neval \"$(pyenv virtualenv-init -)\"\r\n\r\n# to avoid % at the end of partial lines\r\nPROMPT_EOL_MARK=''\r\n```\r\n\r\nI appreciate your help.",
        "labels": "Support",
        "id": 43592
    },
    {
        "title": "ZSH ignoring DEFAULT_USER in VS Code",
        "body": "**Describe the bug**\r\nAfter the most recent ZSH update, ZSH is ignoring my DEFAULT_USER setting and displaying the `user@host` at the beginning of each prompt in the VS Code integrated terminal. In .zshrc, I have tried:\r\n\r\n* `DEFAULT_USER=\"jessica\"` (what I had and was working before)\r\n* ``DEFAULT_USER=`whoami` ``\r\n* `DEFAULT_USER=$(whoami)`\r\n\r\nAll of them still display the `user@host`, and my host is pretty long making it a pain to use. I have confirmed that the environment variable is set and correct with `ECHO $DEFAULT_USER`. To be clear, this setting is still working in my basic terminal, but not in the integrated VS Code terminal (which is was before).\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Set DEFAULT_USER in .zshrc\r\n2. Start a new terminal\r\n3. `user@host` is displayed at the beginning of every line.\r\n\r\n**Expected behavior**\r\nThe `user@host` should not be displayed when the user matches `DEFAULT_USER`\r\n\r\n**Self Check**\r\n\r\nI have searched for existing bugs regarding this, but they seem to be about unset `DEFAULT_USER`, and weren't working previously.\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: macOS (Catalina)\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: 5.8\r\n - Terminal emulator: VS Code Integrated Terminal\r\n",
        "labels": "Support",
        "id": 43593
    },
    {
        "title": "Not all completion options showing for git?",
        "body": "My issue seems to be exactly opposite to #7523—I currently have just `git` installed as a plugin, though I tried adding `gitfast` as well and the same happens.\r\nWhen I type `git c` and press tab, I only get 3 completion settings. I'm wondering why commands such as `cherry-pick` don't appear. The same with `stash` as well. I was expecting it to show as in the above issue, but I'm not sure what I have misconfigured. I did a clean reinstall of OMZ and wiped my zshrc to make sure nothing else I could tell was interfering. \r\n\r\n```\r\n❯ git c\r\ncheckout  -- checkout a branch or paths to the working tree\r\nclone     -- clone a repository into a new directory\r\ncommit    -- record changes to the repository\r\n```\r\n\r\nAny guidance would be much appreciated!",
        "labels": "Support",
        "id": 43594
    },
    {
        "title": "% sign on emacs vterm",
        "body": "i have vterm installed on emacs and using zsh as default on it. but when the vterm is loaded first using zsh there is a % sign on the beginning line. but when I open another vterm , it doesn't have any problem\r\n\r\n\r\nSteps to reproduce the behavior, for example:\r\n1.install emacs\r\n2.install vterm\r\n3.install zsh\r\n4.open vterm inside emacs\r\n\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/76902855/109408998-e7810a80-79b4-11eb-8829-2dce0a8bc66e.png)\r\n\r\n\r\n\r\n\r\nI'm using artix linux and both emacs and the zsh on the latest version\r\n",
        "labels": "Support",
        "id": 43595
    },
    {
        "title": "How to manage my custom ohmyzsh config including plugins with git?",
        "body": "I find myself often reinstalling my ohmyzsh config with plugins and themes on multiple machines.\r\nIs there a good way how I can manage my custom ready to use installation such that I can still get updates?\r\nMaybe a fork and adding the plugins and themes under custom/ as submodules? Assuming that zsh is already the standard shell on the target machine.",
        "labels": "Support",
        "id": 43596
    },
    {
        "title": "!! shortcut no longer works properly after installing Oh My Zsh",
        "body": "I use this shortcut frequently when testing scripts and whatnot. Usually, typing `!!` and hitting `Enter` in my prompt will execute the previous command.\r\n\r\nAfter installing Oh My Zsh last night, I noticed that typing `!!` and hitting `Enter` instead expands the `!!` to show what my previous command was, and I have to hit `Enter` a second time to execute the command.\r\n\r\nI know this seems super minor, but muscle memory is a pain to overwrite.\r\n\r\nHere are my system details:\r\n```\r\nOS: Mac OS 11.2 Big Sur\r\nChip: M1\r\nTerm: iTerm2\r\n```",
        "labels": "Support",
        "id": 43597
    },
    {
        "title": "No native ls colours when using grc plugin",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n\r\nWhen using the `grc` plugin (and possibly others), the ‘native’ colours from `ls` will be ignored.\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable this plugin `grc`\r\n2. Run command `ls -l` in a directory with some stuff in it like sub-directories and executable files\r\n3. We see the colours from `grc` (permissions, date), but not the colours from `ls` (highlighted executables or directories)\r\n\r\n**Expected behavior**\r\n\r\nI want both the original colours from `ls` and the new colours from `grc`\r\n\r\n**Additional context**\r\n\r\nI am using GNU `ls` (Ubuntu). The `grc` plugin only loads the `grc.zsh` from the system.\r\n\r\nThe final resulting alias of Oh My Zsh and applied plugin is `grc --colour=auto ls --color=tty`. The problem is that with the prefixed `grc`, `ls` does not consider itself running in a TTY anymore, meaning it will decide not to show its colours anymore. Changing the alias definition in `lib/theme-and-appearance.zsh` (line 35) fixes this for me, but that is not the general fix, I assume.\r\n\r\nAdding `alias ls='grc --colour=auto ls --color=always'` in `plugins/grc/grc.plugin.zsh` also fixes this quite nicely, this may be a better place for colour-hungry people.",
        "labels": "Support",
        "id": 43598
    },
    {
        "title": "Vi-mode custom key macros?",
        "body": "Hello,\r\n\r\nI am trying to set some custom key remaps in ZSH vi-mode that would be useful on the command line. Like binding ‘bb’ to ‘0ciw’ basically a shortcut to go to beginning of line, remove the first word and go into insert mode. This would allow me to sub out cat for ls, for example, quickly. That key string works fine manually but is 4 keystrokes. Can you nnoremap similar to in a .vimrc file?\r\n\r\nThanks",
        "labels": "Support",
        "id": 43599
    },
    {
        "title": "Text Misaligned in the terminal window",
        "body": "Has anyone ever encountered this issue while using ohmyzsh ?\r\n\r\n![image](https://user-images.githubusercontent.com/7425921/107161681-507fee80-69c4-11eb-8f61-779b68932a8b.png)\r\n\r\nI have to start a new terminal session whenver this issue is encountered.\r\n\r\nI am using MacOS Big Sur, iTerm2",
        "labels": "Support",
        "id": 43600
    },
    {
        "title": "? symbol in CLI charts",
        "body": "![Screenshot from 2021-02-04 01-14-44](https://user-images.githubusercontent.com/32242596/106800435-73d63100-6686-11eb-9d20-7766948e360a.png)\r\n\r\n-> gnome-terminator\r\n-> Powerline font\r\n-> Updated ZSH and other deps\r\n-> OS : Ubuntu",
        "labels": "Support",
        "id": 43601
    },
    {
        "title": "`compinit:141: parse error: condition expected: $1` when opening new terminal",
        "body": "Searched, didn't find any similar issues. \r\n\r\nThis started happening after a recent update, when opening a new window: \r\n\r\n```\r\nbashcompinit:75: parse error near `('\r\ncompinit:141: parse error: condition expected: $1\r\n```\r\n\r\n```\r\n✗ zsh --version\r\nzsh 5.7.1 (x86_64-apple-darwin19.0)\r\n```\r\n\r\nI found a script to list my plugins and all i have is git. But I am running nvm and the last time I ran into a problem like this it was related to nvm. But I don't have an nvm plugin installed in zsh. \r\n\r\nSometimes zsh and brew don't get along so here's my brew version: \r\n\r\n```\r\n✗ brew --version\r\nHomebrew 2.7.7\r\nHomebrew/homebrew-core (git revision ca1d3; last commit 2021-02-03)\r\nHomebrew/homebrew-cask (git revision 8d1ea; last commit 2021-02-03)\r\n```\r\n\r\n\r\n\r\n\r\n",
        "labels": "Support",
        "id": 43602
    },
    {
        "title": "We can't visit the url in China https://raw.githubusercontent.com, where can we get the install.sh?",
        "body": "1. Look for similar issues already posted (including closed ones)\r\n2. Include as much relevant information as possible\r\n3. Try to make sure the issue is due to Oh My Zsh\r\n",
        "labels": "Support",
        "id": 43603
    },
    {
        "title": "Problems installing  Oh My Zsh using curl [WSL2]",
        "body": "**Describe the bug**\r\ninstalling with curl command inside ohmyzsh official site `sh -c \"$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"`\r\n\r\ngives this error `curl: (77) error setting certificate verify locations:\r\n  CAfile: /etc/ssl/certs/ca-certificates.crt\r\n  CApath: /etc/ssl/certs`\r\n\r\n**To Reproduce**\r\n1. install wsl2 with ubuntu 20.04 lts\r\n2. Run copi command from https://ohmyz.sh/#install  `sh -c \"$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"`\r\n3. outputs this error `curl: (77) error setting certificate verify locations:\r\n  CAfile: /etc/ssl/certs/ca-certificates.crt\r\n  CApath: /etc/ssl/certs`\r\n\r\n**Screenshots and/or Recordings**\r\n![screenshot](https://user-images.githubusercontent.com/46758053/106456010-47a39000-648d-11eb-84a6-ac5a8df8cec3.jpg)\r\n\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: [Windows]\r\n - If on Windows what version of WSL: [WSL2]\r\n",
        "labels": "Support",
        "id": 43604
    },
    {
        "title": "\"for\" sentences not working properly",
        "body": "**Describe the bug**\r\nWhen running a command that uses a \"for\" loop the terminal seems to not delete the containers properly.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Execute:\r\n```shell\r\ndockers=`docker ps -a | awk '{print $1}'`\r\nfor container in $dockers; do docker rm $container;done\r\n```\r\n2. Check if containers have been deleted with docker ps -a\r\n3. See the error\r\n\r\n**Expected behavior**\r\nWhen executing \"docker rm ...\" in a \"for\" loop the involved containers should be deleted. I executed the same sentence in \"bash\" and successfully deleted all the indicated containers.\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: Ubuntu 16.07\r\n  - Latest ohmyzsh update?: automatically updated\r\n - ZSH Version: [e.g. 5.1.1]",
        "labels": "Support",
        "id": 43605
    },
    {
        "title": "kubectl completion not working",
        "body": "I have installed on a MacBook Air M1 running big-sur and am trying to get kubectl completion working.  I have enabled the plugin and can see that 'git' completion is running fine.\r\n\r\n'kubectl' or 'kc' attempts at completion just result in a list of files and directories.  I found a closed issue around a very similar problem and have tried all the steps mentioned there including deleting my completions file and restarting item.\r\n\r\nNot sure where to go next with this\r\n\r\nkubectl version:\r\nClient Version: version.Info{Major:\"1\", Minor:\"20+\", GitVersion:\"v1.20.2-dirty\", GitCommit:\"faecb196815e248d3ecfb03c680a4507229c2a56\", GitTreeState:\"dirty\", BuildDate:\"2021-01-30T13:00:28Z\", GoVersion:\"go1.16rc1\", Compiler:\"gc\", Platform:\"darwin/arm64\"}\r\nServer Version: version.Info{Major:\"1\", Minor:\"20\", GitVersion:\"v1.20.2\", GitCommit:\"faecb196815e248d3ecfb03c680a4507229c2a56\", GitTreeState:\"clean\", BuildDate:\"2021-01-13T13:20:00Z\", GoVersion:\"go1.15.5\", Compiler:\"gc\", Platform:\"linux/arm64\"}\r\n\r\nMacOS: BigSur 11.1\r\n\r\nzsh version: zsh 5.8 (x86_64-apple-darwin20.0)\r\n",
        "labels": "Support",
        "id": 43606
    },
    {
        "title": "Agnoster theme: how to show only the last two directories?",
        "body": "![image](https://user-images.githubusercontent.com/37370643/105472578-c9810580-5ca4-11eb-91a0-787401fa96bc.png)\r\n\r\n****I want to it to show only the last two directories.. Is there anything I can do? \r\nThanks in advance.****  ",
        "labels": "Support",
        "id": 43607
    },
    {
        "title": "provide help for history command (and maybe other standard features?)",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\n\r\nThis relates to the history command, and maybe it would be improved via the history plugin, but perhaps this needs to be done at the core level?\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n\r\nI can't seem to get any read on the options available for the history command.  I was hoping to see something like this https://ss64.com/osx/history.html but I see from https://github.com/ohmyzsh/ohmyzsh/blob/master/lib/history.zsh and only the c and l flags are supported.  I was particularly keen to see the `s` flag supported to be able to \r\n\r\n**Describe the solution you'd like**\r\n\r\nI would like to be able to run at least of the following to be able to see the history syntax:\r\n\r\n```\r\n$ help history\r\n$ history help\r\n$ man history\r\n$ history --help\r\n```\r\n\r\nand ideally I'd like to be able to use the `s` flag to insert specific items into the history \r\n\r\n**Describe alternatives you've considered**\r\n\r\nI can't think of any at the moment.  I hadn't realised that `history` was basically just an alias for `fc` but it looks like I can't easily get syntax help for `fc` either and it's `s` flag is not the same as the `history` one ...",
        "labels": "Support",
        "id": 43608
    },
    {
        "title": "ZSH ask password every new shell opened",
        "body": "I first look at  the [issue 7509](https://github.com/ohmyzsh/ohmyzsh/issues/7509) but it did not resolve my bad behavior.\r\n2. Include as much relevant information as possible\r\nI'm using Tmux, oh-my-zsh (my dotfiles are available [here](https://github.com/MorpheusH3x/dotfiles-linux).\r\nEvery time I just create a new windows, I am asked for my password.\r\nIt ask me one first opening terminal (I have AUTOSTART_TMUX on), when I create a new window in the current session, in another session and in another terminal.\r\nI would like to just know what ask me to enter my passwd so I could that issue.",
        "labels": "Support",
        "id": 43609
    },
    {
        "title": "compinit:503: no such file or directory: /usr/local/share/zsh/site-functions/_brew",
        "body": "I am using Apple M1.\r\n\r\nWhen I added this line:\r\n`export PATH=\"/opt/homebrew/bin:$PATH\"`\r\nto ~/.zshrc file.\r\nThese error messages came up:\r\ncompinit:503: no such file or directory: /usr/local/share/zsh/site-functions/_brew\r\ncompinit:503: no such file or directory: /usr/local/share/zsh/site-functions/_brew_cask\r\n\r\nI dont know that's the problem and how to fix this.\r\n\r\nI went to the directory `/usr/local/share/zsh/site-functions` and these two files do exist. \r\nAlso, I used `chmod 755 /usr/local/share/zsh/site-functions/_brew` and `chmod 755 /usr/local/share/zsh/site-functions/_brew_chask`\r\n\r\n\r\nMy ~/.zshrc file:\r\n```\r\n#ZSH_DISABLE_COMPFIX=true\r\n\r\n# If you come from bash you might have to change your $PATH.\r\n# export PATH=$HOME/bin:/usr/local/bin:$PATH\r\n\r\n#Homebrew\r\nexport PATH=\"/opt/homebrew/bin:$PATH\"\r\nexport PATH=\"/opt/homebrew/sbin:$PATH\"\r\n#Homebrew END\r\n\r\n#Wget\r\nexport LDFLAGS=\"-L/opt/homebrew/opt/openssl@1.1/lib\"\r\nexport CPPFLAGS=\"-I/opt/homebrew/opt/openssl@1.1/include\"\r\n#Wget END\r\n\r\n #Path to your oh-my-zsh installation.\r\nexport ZSH=\"/Users/caizhuoyue/.oh-my-zsh\"\r\n\r\n# Set name of the theme to load --- if set to \"random\", it will\r\n# load a random theme each time oh-my-zsh is loaded, in which case,\r\n# to know which specific one was loaded, run: echo $RANDOM_THEME\r\n# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes\r\nZSH_THEME=\"random\"\r\n\r\n\"~/.zshrc\" 114L, 3999C\r\n```\r\n\r\nProblem solved.",
        "labels": "Support",
        "id": 43610
    },
    {
        "title": "Why which cp outputs cp:aliased to nocorrect cp",
        "body": "When I type `which cp`, the output is `cp: aliased to nocorrect cp`.\r\n\r\nAll the commands in this [link](https://github.com/ohmyzsh/ohmyzsh/blob/master/lib/correction.zsh) return in the same manner.\r\n\r\nWhy is it?",
        "labels": "Support",
        "id": 43611
    },
    {
        "title": "[Hang]: Shell getting stuck during empty file content by redirecting to Null",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nFacing a hang/stuck during empty file content by redirecting to Null, shell getting stuck at that position.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Create a file and add some content to it.\r\n2. Redirecting to Null, in order to empty the file.\r\n\r\nLeetcode|master⚡ ⇒ vim tem.txt\r\nLeetcode|master⚡ ⇒ cat tem.txt \r\nCheck for operation\r\nLeetcode|master⚡ ⇒ > tem.txt \r\n\r\n\r\n**Expected behavior**\r\nThe command should successfully be executed and would return back the shell \r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: Fedora 33\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: zsh-5.8-3\r\n",
        "labels": "Support",
        "id": 43612
    },
    {
        "title": "Border color white",
        "body": "\r\nHello I don't know as but now I have white color in the bord of my terminal.\r\nSomeone can help me to back again with black color in the bord?\r\nThanks.",
        "labels": "Support",
        "id": 43613
    },
    {
        "title": "OSX plugin:  unsupported terminal app: Terminal error when using split_tab or vsplit_tab",
        "body": "I enabled the [osx](https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/osx) plugin by adding it to the existing ones in the `~/.zshrc` file as follows:\r\n```\r\nplugins=(git rails docker textmate ruby kubectl osx)\r\n```\r\nWhen restarting the Terminal and hitting `split_tab`followed by `Enter`I got the error:\r\n<img width=\"333\" alt=\"Screenshot 2021-01-09 at 12 48 47\" src=\"https://user-images.githubusercontent.com/83579/104091010-dc461400-527a-11eb-8655-6bbec441a17e.png\">\r\n\r\n\r\nThe same when calling `vsplit_tab`.\r\nReproduced at macOS `11.1`(Big Sur).",
        "labels": "Support",
        "id": 43614
    },
    {
        "title": "fpath information",
        "body": "What is the purpose of:\r\n```sh\r\nfpath=($ZSH/functions $ZSH/completions $fpath)\r\n```\r\nin oh-my-zsh.sh?\r\nThere is no functions and completions directory, is it for user customization?",
        "labels": "Support",
        "id": 43615
    },
    {
        "title": "vi-mode changed the cursor shape; how do I disable it?",
        "body": "The most recent commit to the vi-mode plugin changes the cursor shape to a vertical bar in insert mode. How do I disable this? I prefer a block cursor, always. Thank you.",
        "labels": "Support",
        "id": 43616
    },
    {
        "title": "Output GIT information on current sheet",
        "body": "For some reason, each GIT command, when viewing the list, displays them in a blank sheet, which is not very convenient. How can I disable this setting? \r\n\r\n![image](https://user-images.githubusercontent.com/37277056/103453691-7a6f3280-4ced-11eb-8e4b-b39f489b5d69.png)\r\n\r\nAfter entering the command, the information is displayed in a new list, on a clean terminal. It is not comfortable.\r\n\r\n![image](https://user-images.githubusercontent.com/37277056/103453682-6c211680-4ced-11eb-9e0d-e59f3282b187.png)\r\n\r\nI want the information to be displayed on the current list of entered commands",
        "labels": "Support",
        "id": 43617
    },
    {
        "title": "finding the docker daemon launch script in MacOS",
        "body": "Hi all,\r\n\r\nI have docker for mac installed and each time I run a Zsh session and docker for mac is not running I see\r\n`Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?`\r\n\r\nI cannot for the life of me find where this daemon is trying to run from, anyone have an idea how I can find this and stop it from running on startup?",
        "labels": "Support",
        "id": 43618
    },
    {
        "title": "why i installed the oh-my-zsh doesn't create the folder /usr/local/share/zsh",
        "body": "\r\nwhy i installed the oh-my-zsh doesn't create the folder /usr/local/share/zsh\r\n\r\n - OS / Distro:  macOS m1 11.0.1\r\n - Latest ohmyzsh update?: [Yes]\r\n - ZSH Version: [5.6]\r\n - Terminal emulator: [iTerm2]\r\n![image](https://user-images.githubusercontent.com/18423358/103127040-41223b80-46cb-11eb-8c78-3d6362201c82.png)\r\n\r\n",
        "labels": "Support",
        "id": 43619
    },
    {
        "title": "Cannot execute zshrc anymore",
        "body": "Hi guys I have an issue I was following some [tutorial](https://www.codeprocess.io/set-mac-terminal-shell-with-proper-GNU-bash-version-v4/) to make works ` shoot globstar` on my zsh.\r\nAnd suddenly my zsh, my theme disappeared.\r\n\r\nI tried several solutions I found on internet but none is working (i.e using csh + restarting computer).\r\n\r\nThis is the proof that I have zsh setup as shell\r\n```\r\nbash-5.1$ echo $SHELL\r\n/bin/zsh\r\n```\r\n\r\nMy iterm2 app is using `/bin/zsh` also in `Preferences > Profile` \r\n\r\nBut weirdly I have bash-5.1 displayed instead of my zsh config\r\n\r\n## Problem\r\nFor now I am not able to run `source ~/.zshrc` (I am on macOS btw)\r\nI have this error (I translated some part from French to English):\r\n```\r\nbash-5.1$ source ~/.zshrc\r\nbash: autoload : command not found\r\nbash: /Users/xxx/.oh-my-zsh/oh-my-zsh.sh: line 34: syntax error expected symbol « ( »\r\nbash: /Users/xxx/.oh-my-zsh/oh-my-zsh.sh: line 34: `for config_file ($ZSH/lib/*.zsh); do'\r\n```\r\nHere is my zsh file which I never touched since a long time. I think the article quoted above just destroyed something on my shell and I don't know what.\r\n[zshrc_issue.txt](https://github.com/ohmyzsh/ohmyzsh/files/5735586/zshrc_issue.txt)\r\n\r\n\r\nDo you have any idea what happened and how to solve it ? Thx",
        "labels": "Support",
        "id": 43620
    },
    {
        "title": "unable to establish SSL connection",
        "body": "`Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 151.101.76.133\r\nConnecting to raw.githubusercontent.com (raw.githubusercontent.com)|151.101.76.133|:443... connected.\r\nUnable to establish SSL connection.`\r\n\r\nwget version 1.20.3\r\neven use --no-check-certificate can't solve the problem.\r\nHope for help .thanks",
        "labels": "Support",
        "id": 43621
    },
    {
        "title": "* Console Output produced during zsh initialization follows -- .zshrc:120 unmatched \" *",
        "body": "I have an empty line 120.\r\n```\r\n# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.\r\n# Initialization code that may require console input (password prompts, [y/n]\r\n# confirmations, etc.) must go above this block; everything else may go below.\r\nif [[ -r \"${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh\" ]]; then\r\n  source \"${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh\"\r\nfi\r\n\r\n# If you come from bash you might have to change your $PATH.\r\n# export PATH=$HOME/bin:/usr/local/bin:$PATH\r\n\r\n# Path to your oh-my-zsh installation.\r\nexport ZSH=\"/home/magus/.oh-my-zsh\"\r\n\r\n# Set name of the theme to load --- if set to \"random\", it will\r\n# load a random theme each time oh-my-zsh is loaded, in which case,\r\n# to know which specific one was loaded, run: echo $RANDOM_THEME\r\n# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes\r\n### ZSH_THEME=\"robbyrussell\"\r\n\r\nZSH_THEME=\"powerlevel10k/powerlevel10k\"\r\n# Set list of themes to pick from when loading at random\r\n# Setting this variable when ZSH_THEME=random will cause zsh to load\r\n# a theme from this variable instead of looking in $ZSH/themes/\r\n# If set to an empty array, this variable will have no effect.\r\n# ZSH_THEME_RANDOM_CANDIDATES=( \"robbyrussell\" \"agnoster\" )\r\n\r\n# Uncomment the following line to use case-sensitive completion.\r\n# CASE_SENSITIVE=\"true\"\r\n\r\n# Uncomment the following line to use hyphen-insensitive completion.\r\n# Case-sensitive completion must be off. _ and - will be interchangeable.\r\n# HYPHEN_INSENSITIVE=\"true\"\r\n\r\n# Uncomment the following line to disable bi-weekly auto-update checks.\r\n# DISABLE_AUTO_UPDATE=\"true\"\r\n\r\n# Uncomment the following line to automatically update without prompting.\r\n# DISABLE_UPDATE_PROMPT=\"true\"\r\n\r\n# Uncomment the following line to change how often to auto-update (in days).\r\n# export UPDATE_ZSH_DAYS=13\r\n\r\n# Uncomment the following line if pasting URLs and other text is messed up.\r\n# DISABLE_MAGIC_FUNCTIONS=\"true\"\r\n\r\n# Uncomment the following line to disable colors in ls.\r\n# DISABLE_LS_COLORS=\"true\"\r\n\r\n# Uncomment the following line to disable auto-setting terminal title.\r\n# DISABLE_AUTO_TITLE=\"true\"\r\n\r\n# Uncomment the following line to enable command auto-correction.\r\n# ENABLE_CORRECTION=\"true\"\r\n\r\n# Uncomment the following line to display red dots whilst waiting for completion.\r\n# COMPLETION_WAITING_DOTS=\"true\"\r\n\r\n# Uncomment the following line if you want to disable marking untracked files\r\n# under VCS as dirty. This makes repository status check for large repositories\r\n# much, much faster.\r\n# DISABLE_UNTRACKED_FILES_DIRTY=\"true\"\r\n\r\n# Uncomment the following line if you want to change the command execution time\r\n# stamp shown in the history command output.\r\n# You can set one of the optional three formats:\r\n# \"mm/dd/yyyy\"|\"dd.mm.yyyy\"|\"yyyy-mm-dd\"\r\n# or set a custom format using the strftime function format specifications,\r\n# see 'man strftime' for details.\r\n# HIST_STAMPS=\"mm/dd/yyyy\"\r\n\r\n# Would you like to use another custom folder than $ZSH/custom?\r\n# ZSH_CUSTOM=/path/to/new-custom-folder\r\n\r\n# Which plugins would you like to load?\r\n# Standard plugins can be found in $ZSH/plugins/\r\n# Custom plugins may be added to $ZSH_CUSTOM/plugins/\r\n# Example format: plugins=(rails git textmate ruby lighthouse)\r\n# Add wisely, as too many plugins slow down shell startup.\r\nplugins=(git)\r\n\r\nsource $ZSH/oh-my-zsh.sh\r\n\r\n# User configuration\r\n\r\n# export MANPATH=\"/usr/local/man:$MANPATH\"\r\n\r\n# You may need to manually set your language environment\r\n# export LANG=en_US.UTF-8\r\n\r\n# Preferred editor for local and remote sessions\r\n# if [[ -n $SSH_CONNECTION ]]; then\r\n#   export EDITOR='vim'\r\n# else\r\n#   export EDITOR='mvim'\r\n# fi\r\n\r\n# Compilation flags\r\n# export ARCHFLAGS=\"-arch x86_64\"\r\n\r\n# Set personal aliases, overriding those provided by oh-my-zsh libs,\r\n# plugins, and themes. Aliases can be placed here, though oh-my-zsh\r\n# users are encouraged to define aliases within the ZSH_CUSTOM folder.\r\n# For a full list of active aliases, run `alias`.\r\n#\r\n# Example aliases\r\n# alias zshconfig=\"mate ~/.zshrc\"\r\n# alias ohmyzsh=\"mate ~/.oh-my-zsh\"\r\n\r\n#### ZSH_THEME=\"powerlevel10k/powerlevel10k\"\r\n\r\n### ZSH_THEME=\"spaceship\"\r\n\r\n### ZSH_THEME=\"bira\"\r\n\r\n# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.\r\n\r\n[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh\r\nalias v=\"code . && exit\"\r\nalias gcnc=\"git add . && git commit -m \"New Commit by 'Sugam'\"\r\nPOWERLEVEL_10K_DEBUG_ISSUE_315=true\r\n```",
        "labels": "Support",
        "id": 43622
    },
    {
        "title": "I can't apply theme even I did everything in explain.",
        "body": "here is sources of $home .zshrc\r\n\r\n```zsh\r\n# export MANPATH=\"/usr/local/man:$MANPATH\"\r\n# If you come from bash you might have to change your $PATH.\r\n# export PATH=$HOME/bin:/usr/local/bin:$PATH\r\n\r\n# Path to your oh-my-zsh installation.\r\nexport ZSH=\"/Users/ysw/.oh-my-zsh\"\r\n\r\n# Set name of the theme to load --- if set to \"random\", it will\r\n# load a random theme each time oh-my-zsh is loaded, in which case,\r\n# to know which specific one was loaded, run: echo $RANDOM_THEME\r\n# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes\r\n# ZSH_THEME=\"agnoster\"\r\n\r\n# Set list of themes to pick from when loading at random\r\n# Setting this variable when ZSH_THEME=random will cause zsh to load\r\n# a theme from this variable instead of looking in $ZSH/themes/\r\n# If set to an empty array, this variable will have no effect.\r\n# ZSH_THEME_RANDOM_CANDIDATES=( \"robbyrussell\" \"agnoster\" )\r\n\r\n# Uncomment the following line to use case-sensitive completion.\r\n# CASE_SENSITIVE=\"true\"\r\n\r\n# Uncomment the following line to use hyphen-insensitive completion.\r\n# Case-sensitive completion must be off. _ and - will be interchangeable.\r\n# HYPHEN_INSENSITIVE=\"true\"\r\n```\r\n\r\nplease help me thank you\r\n",
        "labels": "Support",
        "id": 43623
    },
    {
        "title": ".oh-my-zsh dir keeps moving",
        "body": "I'm not sure if this is a bug or something wrong with my setup/environment, but it keeps happening and I don't know what causes it.  I am using a default oh-my-zsh install & the default .zshrc.  What I'm noticing that after blowing away all the zsh settings, at some point this happens:\r\n\r\n```\r\n➜  ~ pwd\r\npwd\r\n/Users/chris\r\n➜  ~ ls -al ./\\~/\r\nls -al ./\\~/\r\ntotal 0\r\ndrwxr-xr-x    3 chris  staff    96 Dec 15 13:17 .\r\ndrwxr-xr-x@ 132 chris  staff  4224 Dec 16 11:20 ..\r\ndrwxr-xr-x   21 chris  staff   672 Dec 15 13:17 .oh-my-zsh\r\n➜  ~ ls -al .oh-my-zsh\r\nls -al .oh-my-zsh\r\nls: .oh-my-zsh: No such file or directory\r\n➜  ~ which zsh\r\nwhich zsh\r\n/usr/local/bin/zsh\r\n➜  ~ zsh --version\r\nzsh --version\r\nzsh 5.8 (x86_64-apple-darwin20.1.0)\r\n```\r\n\r\nBasically, something at some point is creating /Users/chris/~ & putting .oh-my-zsh in there and I kinda suspected the automatic update process.  Anyone seen anything like this?",
        "labels": "Support",
        "id": 43624
    },
    {
        "title": "`nvm use` command does not switch to new node version",
        "body": "Forgive me if this question has been answered, I did a search and didn't seem to find anything like this anywhere.\r\n\r\nAfter installing ohmyzsh and after installing the `nvm` plugin, issuing the command `nvm use` does not actually seem to be switching to the version of `nvm` in my `.nvmrc` file.\r\n\r\nHere are the contents of my `.zshrc` file:\r\n\r\n```\r\n# If you come from bash you might have to change your $PATH.\r\n# export PATH=$HOME/bin:/usr/local/bin:$PATH\r\nPATH=$HOME/bin:$(getconf PATH)\r\n\r\n# Path to your oh-my-zsh installation.\r\nexport ZSH=\"/Users/evanstern/.oh-my-zsh\"\r\n\r\n# Set name of the theme to load --- if set to \"random\", it will\r\n# load a random theme each time oh-my-zsh is loaded, in which case,\r\n# to know which specific one was loaded, run: echo $RANDOM_THEME\r\n# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes\r\nZSH_THEME=\"robbyrussell\"\r\n\r\n# Set list of themes to pick from when loading at random\r\n# Setting this variable when ZSH_THEME=random will cause zsh to load\r\n# a theme from this variable instead of looking in $ZSH/themes/\r\n# If set to an empty array, this variable will have no effect.\r\n# ZSH_THEME_RANDOM_CANDIDATES=( \"robbyrussell\" \"agnoster\" )\r\n\r\n# Uncomment the following line to use case-sensitive completion.\r\n# CASE_SENSITIVE=\"true\"\r\n\r\n# Uncomment the following line to use hyphen-insensitive completion.\r\n# Case-sensitive completion must be off. _ and - will be interchangeable.\r\n# HYPHEN_INSENSITIVE=\"true\"\r\n\r\n# Uncomment the following line to disable bi-weekly auto-update checks.\r\n# DISABLE_AUTO_UPDATE=\"true\"\r\n\r\n# Uncomment the following line to automatically update without prompting.\r\n# DISABLE_UPDATE_PROMPT=\"true\"\r\n\r\n# Uncomment the following line to change how often to auto-update (in days).\r\n# export UPDATE_ZSH_DAYS=13\r\n\r\n# Uncomment the following line if pasting URLs and other text is messed up.\r\n# DISABLE_MAGIC_FUNCTIONS=\"true\"\r\n\r\n# Uncomment the following line to disable colors in ls.\r\n# DISABLE_LS_COLORS=\"true\"\r\n\r\n# Uncomment the following line to disable auto-setting terminal title.\r\n# DISABLE_AUTO_TITLE=\"true\"\r\n\r\n# Uncomment the following line to enable command auto-correction.\r\n# ENABLE_CORRECTION=\"true\"\r\n\r\n# Uncomment the following line to display red dots whilst waiting for completion.\r\n# COMPLETION_WAITING_DOTS=\"true\"\r\n\r\n# Uncomment the following line if you want to disable marking untracked files\r\n# under VCS as dirty. This makes repository status check for large repositories\r\n# much, much faster.\r\n# DISABLE_UNTRACKED_FILES_DIRTY=\"true\"\r\n\r\n# Uncomment the following line if you want to change the command execution time\r\n# stamp shown in the history command output.\r\n# You can set one of the optional three formats:\r\n# \"mm/dd/yyyy\"|\"dd.mm.yyyy\"|\"yyyy-mm-dd\"\r\n# or set a custom format using the strftime function format specifications,\r\n# see 'man strftime' for details.\r\n# HIST_STAMPS=\"mm/dd/yyyy\"\r\n\r\n# Would you like to use another custom folder than $ZSH/custom?\r\n# ZSH_CUSTOM=/path/to/new-custom-folder\r\n\r\n# Which plugins would you like to load?\r\n# Standard plugins can be found in $ZSH/plugins/\r\n# Custom plugins may be added to $ZSH_CUSTOM/plugins/\r\n# Example format: plugins=(rails git textmate ruby lighthouse)\r\n# Add wisely, as too many plugins slow down shell startup.\r\nplugins=(git npm gatsby pyenv nvm)\r\n\r\nsource $ZSH/oh-my-zsh.sh\r\n\r\n# User configuration\r\n\r\n# export MANPATH=\"/usr/local/man:$MANPATH\"\r\n\r\n# You may need to manually set your language environment\r\n# export LANG=en_US.UTF-8\r\n\r\n# Preferred editor for local and remote sessions\r\n# if [[ -n $SSH_CONNECTION ]]; then\r\n#   export EDITOR='vim'\r\n# else\r\n#   export EDITOR='mvim'\r\n# fi\r\n\r\n# Compilation flags\r\n# export ARCHFLAGS=\"-arch x86_64\"\r\n\r\n# Set personal aliases, overriding those provided by oh-my-zsh libs,\r\n# plugins, and themes. Aliases can be placed here, though oh-my-zsh\r\n# users are encouraged to define aliases within the ZSH_CUSTOM folder.\r\n# For a full list of active aliases, run `alias`.\r\n#\r\n# Example aliases\r\n# alias zshconfig=\"mate ~/.zshrc\"\r\n# alias ohmyzsh=\"mate ~/.oh-my-zsh\"\r\nalias ls=\"ls -G\"\r\nalias l=\"ls -lG\"\r\n\r\n# Adds node_modules/.bin to the PATH\r\nnpm_chpwd_hook() {\r\n    if [ -n \"${PRENPMPATH+x}\" ]; then\r\n        PATH=$PRENPMPATH\r\n        unset PRENPMPATH\r\n    fi\r\n    if [ -f package.json ]; then\r\n        PRENPMPATH=$PATH\r\n        PATH=$(npm bin):$PATH\r\n    fi\r\n}\r\n\r\nadd-zsh-hook preexec npm_chpwd_hook\r\n```\r\n\r\nAnd here is the `PATH` environment variable upon starting up a `zsh` shell.\r\n\r\n```\r\n/Users/xxx/.nvm/versions/node/v14.15.1/bin:/Users/xxx/.pyenv/shims:/Users/xxx/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/opt/pyenv/bin\r\n```\r\n\r\nNow, let's say I have a `.nvmrc` file with the contents `14.15.2`. This is what I see happen:\r\n\r\n```zsh\r\n➜ $ cd /path/to/my/project\r\n➜ $ cat .nvmrc\r\n14.15.2\r\n➜  $ node --version\r\nv14.15.1\r\n➜  $ nvm use\r\nFound '/Users/xxx/projects/xxx/xxx/.nvmrc' with version <14.15.2>\r\nNow using node v14.15.2 (npm v6.14.9)\r\n➜  $ node --version\r\nv14.15.1\r\n```\r\n\r\nNotice that originally my node version is set to `14.15.1` and when I issue the command `nvm use` it reports that I have switched to `14.15.2`. Yet when I check the node version it has not been updated from the old version.\r\n\r\nHere is the resulting $PATH after `nvm use`:\r\n\r\n```\r\n/Users/xxx/projects/xxx/xxx/node_modules/.bin:/Users/xxx/.nvm/versions/node/v14.15.1/bin:/Users/xxx/.pyenv/shims:/Users/xxx/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/opt/pyenv/bin\r\n```\r\n\r\nIt's as if, for some reason, the `14.15.1` (old version) of `node` is pre-loaded in my `PATH` and isn't being overwritten with `nvm use`. In `bash`, when I would issue the `nvm use` command, it would alter the `PATH` so that whatever version of `node` I specified would be listed there.\r\n\r\nAnyone have any idea what might be going on or how I can fix this? I've already tried reinstalling ohmyzsh several times, I've tried deleting my `bashrc` files before installation as well. I even tried manually uninstalling/reinstalling `nvm`.\r\n\r\nAny help would be greatly appreciated.\r\n\r\n\r\n",
        "labels": "Support",
        "id": 43625
    },
    {
        "title": "Delete Key with empty line exits iTerm2",
        "body": "Hi All, \r\nBeen using OMZ for a while, and loving it - thanks for all the hard work. \r\nMy setup is (I think) relatively simple: \r\n- MacOS Catalina 10.15.7\r\n- iTerm2 3.4.3\r\n- zsh 5.8 (x86_64-apple-darwin19.6.0)\r\n- OhMyZsh - latest (upgrade_oh_my_zsh run today)\r\n- PowerLevel10k theme\r\n\r\nMy issue is that when I press the \"Del\" key on a blank line in a terminal session, the session ends.  If I have text on the line to the left of the cursor, then I get a system bell. If I have text to the right of the cursor then it deletes this text as expected. \r\n\r\nI can't see an exit command being sent (am only checking .zsh_history), and don't have any custom key mappings in OMZ.  Tested in standard Terminal app, and it doesn't happen.  Also tested in iTerm with a bash session and it doesn't happen. \r\n\r\nThe issue has only started relatively recently - I've tried reversing all the changes I can remember, but hasn't helped.  I've removed all plugins and changed to robbyrussell theme, but still happening. \r\n\r\nI'm sure it's a configuration somewhere, but don't know where to look next. Appreciate any suggestions.",
        "labels": "Support",
        "id": 43626
    },
    {
        "title": "Zsh function problem",
        "body": "I have a small doubt with Zsh. First of all, sorry about putting this issue here, but I don't find the solution for my problem.\r\nI want to create a function that, depending on which terminal I'm using, returns one or other thing. This is what I have. Where is the error?\r\nThanks and sorry for this stupid issue :(\r\n```\r\nfunction sshCompatible {\r\n  if [$TERM != \"xterm-256color\"]; then\r\n    ssh $1\r\n  else\r\n    TERM=xterm-256color ssh $1\r\n  fi\r\n}\r\n```",
        "labels": "Support",
        "id": 43627
    },
    {
        "title": "Include function in grep.zsh",
        "body": "I want to include this in my `custom/lib/grep.zsh` but I don't know how to do it because of the cache.\r\n\r\n```\r\n# Recursively search pattern, ignore case, ignore binary files,\r\n# prefix with line number within file\r\nfunction grepr() {\r\n  grep -rIin \"$1\" . \"$GREP_OPTIONS\"\r\n}\r\n```\r\n",
        "labels": "Support",
        "id": 43628
    },
    {
        "title": "Windows WSL2 Ubuntu terminal abnormal color block on some file name/dir",
        "body": "Hi, I am using WSL2 ubuntu on Windows Terminal version 1.4.3243.0, and my zsh version is zsh 5.4.2 (x86_64-ubuntu-linux-gnu). I recently updated both my Windows Terminal and my zsh, and now zsh theme doesn't work correctly as there are color boxes on some of the file names. I am using theme dracula, and I have the same problem with other themes, such as robbyrussell.\r\n![image](https://user-images.githubusercontent.com/47999440/101697283-8d237e00-3a45-11eb-8cb9-c4a02f81fadf.png)\r\n![image](https://user-images.githubusercontent.com/47999440/101697425-cf4cbf80-3a45-11eb-9aad-3d844d7b4ac9.png)\r\n",
        "labels": "Support",
        "id": 43629
    },
    {
        "title": "tab autocompletion doesn't work after equal sign (=)",
        "body": "Hi, my zsh can auto complete the path when using tab after regular commands like \"cd $directory\". However, when I try to fill out a command using \"some function input=$directory\" it can not auto complete the directory. Could you please help me understand what's going on here? Thanks!",
        "labels": "Support",
        "id": 43630
    },
    {
        "title": "I just installed OMZ and my command prompt is just an arrow with no information?",
        "body": "<img width=\"567\" alt=\"Screen Shot 2020-12-08 at 7 16 00 pm\" src=\"https://user-images.githubusercontent.com/19885532/101464406-53417180-398a-11eb-8e42-0bad1d3c5eae.png\">\r\n\r\nI've tried unistalling and reinstalling zsh with homebrew. I've also tried updating OMZ. I have no idea what the issue is because I can't find anyone else who's had this issue. I also have checked the .zshrc file and the default theme is there? Why can't I see what folder I am in? I am on Mac OS Mojave. Please Help!",
        "labels": "Support",
        "id": 43631
    },
    {
        "title": "zsh isn't aware of new installations",
        "body": "➜  zsh --version\r\nzsh 5.8 (x86_64-ubuntu-linux-gnu)\r\n\r\n$ sudo apt install xxxyyyzzz\r\n$ xxx(TAB)\r\n\r\nIt doesn't auto complete, `source ~/.zshrc` doesn't work either.\r\n\r\nWhen I open another terminal,however, it works fine.   ",
        "labels": "Support",
        "id": 43632
    },
    {
        "title": "Windows Subsystem for Linux (V2) Colors and Git Slow",
        "body": "Hello,\r\nI have setup OMZ on a new laptop W10 with WSL2.\r\nI is within the Windows Terminal.\r\nThe colors are not displayed as demoed here : https://github.com/ohmyzsh/ohmyzsh/wiki/Themes\r\ne.g. the folders have a green background (what ever the theme, Robby, agnoster, Bira)\r\n\r\n",
        "labels": "Support",
        "id": 43633
    },
    {
        "title": "How can I source a script before a theme?",
        "body": "Hi, I want to add [kube_ps1](https://github.com/jonmosco/kube-ps1) to my custom PROMPT,\r\nIn order to use the function `kube_ps1` I need to source the `sh` file before.\r\nIs there any way to source the sh before loading the theme?\r\nBecause sourcing from the theme just doesn't work (:\r\nThanks.\r\n\r\n\r\n",
        "labels": "Support",
        "id": 43634
    },
    {
        "title": "Cannot source .zshrc.   autoload - command not found and errors with .oh-my-zsh/tools/ when building a Docker container",
        "body": "Hey, There are many things to add at the beginning:\r\n1. I am sourcing .zshrc in Dockerfile (blackarch-zsh found on my dockerfiles [repo](https://github.com/Cloufish/dockerfiles)  so you can I think reproduce this issue)\r\n2. I think I've installed properly oh-my-zsh with get oneliner, though if not, then I'm really sorry!\r\n3. I'm using Luke Smiths wget .zshrc here [.zshrc](https://raw.githubusercontent.com/Cloufish/voidrice/master/.config/zsh/.zshrc)\r\n4. The OS is Arch Linux\r\n\r\n![image](https://user-images.githubusercontent.com/32965886/100478374-4cde0a80-30eb-11eb-90fe-10640111858a.png)\r\n\r\nIf there's more to add, let me know!\r\n",
        "labels": "Support",
        "id": 43635
    },
    {
        "title": "'一天' caused zsh prompt removed",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n'一天' caused sh prompt removed\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. paste '一天' in term\r\n2. press backspace 1 time\r\n3. See error\r\n\r\n**Expected behavior**\r\nsh prompt should not be removed\r\n\r\n**Screenshots and/or Recordings**\r\nIf applicable, add screenshots to help explain your problem.\r\nYou can also record an asciinema session: https://asciinema.org/\r\n<img width=\"232\" alt=\"Screen Shot 2020-11-27 at 17 52 14\" src=\"https://user-images.githubusercontent.com/1279128/100435786-64ac9300-30d9-11eb-8ad4-413b3faa132a.png\">\r\n\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: macOS\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: zsh 5.7.1 (x86_64-apple-darwin19.0)\r\n - Terminal emulator: iTerm2 3.3.11\r\n\r\n",
        "labels": "Support",
        "id": 43636
    },
    {
        "title": "installer: Failed to connect to github: Connection refused",
        "body": "\r\n sh -c \"$(curl -fsSL http://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\r\n\r\ncurl: (7) Failed connect to raw.github.com:443; Connection refused",
        "labels": "Support",
        "id": 43637
    },
    {
        "title": "ZSH issues after a known bug occurrence",
        "body": "Soon after installing Brew then NVM, I got the `Insecure completion-dependent directories detected:` error in Iterm2 on MAC Catalina (which comes installed with zsh) and after doing research, I stumbled upon https://github.com/ohmyzsh/ohmyzsh/issues/6835.  \r\n\r\nRan:\r\n`chmod 755 /usr/local/share/zsh`\r\n`chmod 755 /usr/local/share/zsh/site-functions`\r\n\r\nand also did the following:\r\n\r\n> Set ZSH_DISABLE_COMPFIX=true in your zshrc file, before oh-my-zsh.sh is sourced, and update OMZ to the latest version. It should ignore these permission issues and load the completion system normally.\r\n\r\nRelaunched Iterm2, but it takes forever to load and all the commands run about 5 seconds slower than before.  Also gets stuck on `git` during the load - once it's fully loaded and in usable state, I get this error:\r\n\r\n<img width=\"774\" alt=\"Screen Shot 2020-11-20 at 1 16 59 PM\" src=\"https://user-images.githubusercontent.com/13421938/99846884-62c05e00-2b34-11eb-8fd5-152d80dc5213.png\">\r\n\r\nAfter running the git diagnostics command as instructed got a long slew of errors which I'm filing an issue at:\r\n\r\n>  https://github.com/romkatv/gitstatus/issues/new\r\n\r\nI think `gitstatus` doesn't play nicely with POWERLEVEL9K\r\n",
        "labels": "Support",
        "id": 43638
    },
    {
        "title": "plugin pyenv does not work or I don't know How use it ?",
        "body": "Hi,\r\n\r\nI just install a fresh version of ohmyzsh and I want to use pyenv plugin.\r\n\r\nso I have add the plugin in my .zshrc \r\n\r\n`plugin=(git pyenv)`\r\n\r\nI have restart my shell, but when I am in a directory with a pyenv local python version (I have .python-version in my folder) they are nothing in my prompt.\r\n\r\nNormaly the version of python should be write in my prompt ?\r\n\r\nthanks for your help\r\n ",
        "labels": "Support",
        "id": 43639
    },
    {
        "title": "Vertical allign in zsh.",
        "body": "I am using iterm+zsh. Is there any way to vertically allign(center) after the command is executed?",
        "labels": "Support",
        "id": 43640
    },
    {
        "title": "I reported an error when I installed zsh-autosuggestions",
        "body": "hi：I reported an error when I installed zsh-autosuggestions\r\n\r\nThe error message is as follows：\r\n/Users/ice/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.plugin.zsh:source:1: no such file or directory: /Users/ice/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh^M\r\n\r\n\r\n\r\nmacOS: 10.13.6\r\nzsh --verison\r\nzsh 5.8 (x86_64-apple-darwin17.7.0)\r\n\r\n\r\nI installed it\r\ngit clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions\r\n\r\nvim  ~./.zshrc\r\n\r\nplugins=(git zsh-autosuggestions)\r\n\r\nsource ~/.zshrc \r\n\r\nThen report the error",
        "labels": "Support",
        "id": 43641
    },
    {
        "title": "symlink is expanded in prompt after using sudo",
        "body": "`.oh-mu-zsh` commit id is `9b11986`\r\n\r\n`Linux bbe-0 4.14.108-ti-r137 #1bionic SMP PREEMPT Tue Aug 25 02:46:55 UTC 2020 armv7l armv7l armv7l GNU/Linux`\r\n\r\n`zsh 5.4.2 (arm-unknown-linux-gnueabihf)`\r\n\r\n![image](https://user-images.githubusercontent.com/956693/99504265-400a3a00-29ba-11eb-9ec3-85ad6508c03e.png)\r\n",
        "labels": "Support",
        "id": 43642
    },
    {
        "title": "possible to share configs between users and in sudo? (mac)",
        "body": "Hi, \r\n\r\nI just installed zsh and omz on Mac OS 10.14 using iterm. For context I am a person with a rudimentary grasp of *nix. \r\n\r\nI think this is pretty spiffy and I would like to\r\n\r\n1. share plugin, theme and other configurations between users on my machine. So for example if I install and enable a theme for user1, user2 will be the same. \r\n\r\n2. for above, also include sudo/su/root. \r\n\r\nFor (1) some possible ways of doing this might be\r\na. tell zsh that instead of looking for it's configuration files in  `~/.oh-my-zsh`, it should look elsewhere and specify a location outside any home directory (to avoid permissions issues I guess). \r\nb. use some sort of syncing program to watch for changes in any of the relevant files/directories and automatically update all the others as needed\r\n\r\nI am not able to locate any zsh/omz config files in home directory for root which `/var/root` so even if I had to do it manually I am not sure how. \r\n\r\nAlso I will say that even though I have multiple users on my computer, I am actually the only person who uses it. So any solution need not be comprehensible to anyone else, and there would be no possibility of the same file being actively edited by multiple people simultaneously. \r\n\r\ni'm sure someone else has already thought of this and figured it out.. unfortunately it's the kind of problem whose keywords are so vague as to make finding info difficult\r\n\r\nany thoughts aoppreciated\r\n",
        "labels": "Support",
        "id": 43643
    },
    {
        "title": "Display error when use tab to autocomplete",
        "body": "#### 1. Look for similar issues already posted (including closed ones)\r\n\r\nThere is a similar issue #7784. But it doesn't help me.\r\n\r\nWhen I use tab to autocomple the command, two cases happen:\r\n1. command start with what I have typed is unique:  \r\nIt autocomple directly. At this time everything is ok.\r\n2. command start with what I have typed is not unique:  \r\nZsh will show items below to be selected. At this time, the first two character will duplicate.\r\n\r\nFor example,\r\n\r\n```sh\r\n➜  ~ ec<tab>\r\n➜  ~ echo\r\n\r\n➜  ~ echo<tab>\r\n➜  ~ ececho\r\necho    echotc  echoti\r\n```\r\n \r\n#### 2. Include as much relevant information as possible\r\n\r\nI install archlinux in virtualbox(version 6.1.16-1).\r\n\r\n* `Linux Arch-vbox 5.9.8-arch1-1 #1 SMP PREEMPT Tue, 10 Nov 2020 22:44:11 +0000 x86_64 GNU/Linux`\r\n* `zsh 5.8 (x86_64-pc-linux-gnu)`\r\n* `oh-my-zsh version: 9b119866`\r\n* `.zshrc`\r\n```config\r\nexport ZSH=\"$HOME/.oh-my-zsh\"\r\nZSH_THEME=\"robbyrussell\"\r\nsource $ZSH/oh-my-zsh.sh\r\n```\r\n\r\n#### 3. Try to make sure the issue is due to Oh My Zsh\r\n\r\nIf I comment out `source $ZSH/oh-my-zsh.sh`, pure zsh works well.\r\n\r\nI've tried xterm or alacritty, both works well.",
        "labels": "Support",
        "id": 43644
    },
    {
        "title": "APP Snaps icon packs a few after using On My ZSH with KDE",
        "body": "I'm using KDE Neon 5.20, after installing ZSH the icons of the snaps packages are no longer available in the released Plasma, so the only way to access the APP is by searching for its name, I noticed that this also happens with Kubuntu, Xubuntu, and other derivatives with KDE.\r\n\r\nI was able to correct the problem by adding the following line `emulate sh -c 'source /etc/profile.d/apps-bin-path.sh'` in the file `/etc/zsh/zprofile`.\r\n\r\nBut this is a bit of a pain to keep doing, are there any other alternatives, or any predictions for correcting the problem?\r\n\r\nNOTE: I am not using plugs with ZSH.",
        "labels": "Support",
        "id": 43645
    },
    {
        "title": "I cannot print a single minus character",
        "body": "**Describe the bug** && **To Reproduce**\r\nI cannot print a single minus character\r\n![image](https://user-images.githubusercontent.com/1277920/98738125-fe5c0c80-2385-11eb-8e44-b9051969ac84.png)\r\n\r\n - OS / Distro: Ubuntu 20.04\r\n - Latest ohmyzsh update? Yes\r\n - ZSH Version: zsh 5.8 (x86_64-ubuntu-linux-gnu)\r\n - Terminal emulator: [e.g. Tilix]\r\n",
        "labels": "Support",
        "id": 43646
    },
    {
        "title": "Have no history in new tabs",
        "body": "I understand from the similar issues, in latest release was implemented possibility to have separate history of commands. I used `unsetopt no_share_history` and `setopt share_history` in all console tabs, but after restart of my PC some of consoles now have absolutely no history, which kinda blocks me from normal effective work.\r\nCan I set somewhere that i want always and everywhere have all my history shared among every tab ever and never ever lose it unless I explicitly configure it?\r\n",
        "labels": "Support",
        "id": 43647
    },
    {
        "title": "omz_urlencode:2: bad set of key/value pairs for associative array on macOS",
        "body": "Steps to reproduce.\r\n1. Press <kbd>Enter</kbd>\r\n\r\n**Error**\r\n\r\n```\r\nomz_urlencode:2: bad set of key/value pairs for associative array                                                      \r\nomz_urlencode:2: bad set of key/value pairs for associative array\r\n```\r\n> .zshrc\r\n```zsh\r\nexport LANG=\"en_US.UTF-8\"\r\nexport LC_ALL=\"en_US.UTF-8\"\r\nexport EDITOR=\"vim\"\r\n# Path to your oh-my-zsh installation.\r\nexport ZSH=\"$HOME/.dotfiles/.oh-my-zsh\"\r\n\r\nCOMPLETION_WAITING_DOTS=\"true\"\r\n\r\nZSH_THEME=\"robbyrussell\"\r\nsource $ZSH/oh-my-zsh.sh\r\nsource $HOME/.zplug/init.zsh\r\n\r\n# zsh Plugins using zplug \r\nzplug \"zsh-users/zsh-syntax-highlighting\"\r\nzplug \"zsh-users/zsh-autosuggestions\"\r\nzplug \"zsh-users/zsh-completions\"\r\nzplug \"tysonwolker/iterm-tab-colors\"\r\nzplug \"momo-lab/zsh-abbrev-alias\"\r\nzplug \"peterhurford/up.zsh\"\r\nzplug \"jimeh/zsh-peco-history\"\r\nzplug load\r\n\r\nif command -v pyenv 1>/dev/null 2>&1; then\r\n\teval \"$(pyenv init -)\"\r\n\teval \"$(pyenv virtualenv-init -)\"\r\nfi\r\nexport PYENV_VIRTUALENV_DISABLE_PROMPT=0\r\n```",
        "labels": "Support",
        "id": 43648
    },
    {
        "title": "fatal: could not create leading directories error on macOS",
        "body": "When I run `sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"` on macOS, I get the following error\r\n\r\n```\r\nCloning Oh My Zsh...\r\nfatal: could not create leading directories of '/home/me/.oh-my-zsh': Operation not supported\r\nError: git clone of oh-my-zsh repo failed\r\n```\r\n\r\nThis is for a fresh install. My home directory is `/Users/mydomainlogin`. I'm running macOS on a computer managed by my work, so not only is the OMZ installer trying to install OMZ in the standard Linux home directory, it's also thinking that my firstname is my username (whereas whoami reports `mydomainlogin`). I also tried running bash and then invoking the install script, but I still get the same error.\r\n\r\nDoes anyone know what may be causing this issue?\r\n\r\nmacOS version: 10.15.7, Catalina\r\nZSH: 5.8 (from Homebrew)\r\nTerminal: tried iTerm2 and the stock Terminal app",
        "labels": "Support",
        "id": 43649
    },
    {
        "title": "Offline installation package",
        "body": "When my device has no way to connect to the Internet, and there is no offline package to install this software?",
        "labels": "Support",
        "id": 43650
    },
    {
        "title": "How to change time from 12H to 24H.",
        "body": "Good morning!\r\n\r\nI have a simple question. **Does anyone know how to change the time of zsh (or oh-my-zsh, I don't know which) from 12H to 24H?**\r\nIn the next screenshot you can see that in my computer are the 14:23 but in the terminal it shows 2:23.\r\nThanks!\r\n![Captura de pantalla de 2020-10-25 14-23-42](https://user-images.githubusercontent.com/66907184/97108419-b7a3bc80-16cd-11eb-8a3a-b186b856e2b5.png)\r\n",
        "labels": "Support",
        "id": 43651
    },
    {
        "title": "Can't unset alias with bang even with NO_BANG_HIST",
        "body": "\r\n**Describe the bug**\r\nA clear description of what the bug is.\r\nCan't unset alias with bang even with NO_BANG_HIST\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable this plugin 'git'\r\n2. Run command 'unset 'gca!''\r\n3. See error\r\nunset: gca!: invalid parameter name\r\n\r\n**Expected behavior**\r\nalias is deleted\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: macOS\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: zsh 5.3 (x86_64-apple-darwin18.0)\r\n - Terminal emulator:Terminal\r\n\r\n",
        "labels": "Support",
        "id": 43652
    },
    {
        "title": "zsh is not working (cd: string not in pwd)",
        "body": "![image](https://user-images.githubusercontent.com/42068419/96346895-0e9f0580-10c0-11eb-8223-104123113294.png)\r\n\r\ncd: string not in pwd\r\nPlease help me to solve my problem\r\n\r\n-----\r\n\r\nTranscript:\r\n```console\r\n$ cd \"u:\\My Space\\C++\\\" && g++ Maincode.cpp -o Maincode && \"u:\\My Space\\C++\\\"Maincode\r\ncd: string not in pwd: u:\\My Space\\C++\\\" && g++ Maincode.cpp -o Maincode && \"u:\\My\r\n```",
        "labels": "Support",
        "id": 43653
    },
    {
        "title": "Executing the same piece of code in zsh or in bash doesn't have the same behavior (involving a TCP connection)",
        "body": "Hi, \r\n\r\nI have a C++ module that handle logging for me. I have several loggers to be able to log in the console, in a file, in the syslog, in a server using TCP, and sometimes at the same time. The TCP logging is the latest addition to the module and it works like expected in bash, basic string messages are sent to my server that fill some log file for me. \r\nHowever when executing this code from a zsh environment it seems no message is sent at all. Or maybe they are sent but caught at some point?\r\n\r\nHere is some piece of executed code that could help (not all the module obviously):\r\n\r\n```\r\nenum LogPriority {\r\n  kLogEmergency = LOG_EMERG,\r\n  kLogAlert     = LOG_ALERT,\r\n  kLogCritical  = LOG_CRIT,\r\n  kLogError     = LOG_ERR,\r\n  kLogWarning   = LOG_WARNING,\r\n  kLogNotice    = LOG_NOTICE,\r\n  kLogInfo      = LOG_INFO,\r\n  kLogDebug     = LOG_DEBUG\r\n};\r\n\r\ninline std::string GetPrioString(const smu::logging::LogPriority& prio) {\r\n  int32 max = 10;\r\n  std::string val;\r\n  switch (prio) {\r\n    case kLogEmergency:\r\n      val = \"Emergency\";\r\n      break;\r\n    case kLogAlert:\r\n      val = \"Alert    \";\r\n      break;\r\n    case kLogCritical:\r\n      val = \"Critical \";\r\n      break;\r\n    case kLogError:\r\n      val = \"Error    \";\r\n      break;\r\n    case kLogWarning:\r\n      val = \"Warning  \";\r\n      break;\r\n    case kLogNotice:\r\n      val = \"Notice   \";\r\n      break;\r\n    case kLogInfo:\r\n      val = \"Info     \";\r\n      break;\r\n    case kLogDebug:\r\n      val = \"Debug    \";\r\n      break;\r\n    default:\r\n      val = \"Info     \";\r\n      break;\r\n  }\r\n  val.append(max - val.length(), ' ');\r\n  return val;\r\n}\r\n\r\ntemplate <typename char_type, typename traits = std::char_traits<char_type> >\r\nclass TCPStreamBuffer: public std::basic_streambuf<char_type, traits> {\r\n public:\r\n  typedef typename traits::int_type int_type;\r\n\r\n  TCPStreamBuffer(const std::pair<std::string, int32>& ip_port):\r\n      std::basic_streambuf<char_type, traits>() {\r\n    client.reset(new smu::connect::TCPClient(\r\n      ip_port.first, static_cast<uint16>(ip_port.second)));\r\n  }\r\n\r\n protected:\r\n  int_type overflow(int_type c) override {\r\n    int_type const eof = traits::eof();\r\n    if(traits::eq_int_type(c, eof))\r\n      sync();\r\n    else\r\n      buffer += traits::to_char_type(c);\r\n    return c;\r\n  }\r\n\r\n  int32 sync() override {\r\n    if(buffer.size() > 0) {\r\n      client->Send(buffer);\r\n      buffer.clear();\r\n    }\r\n    return 0;\r\n  }\r\n\r\n private:\r\n  std::unique_ptr<smu::connect::TCPClient> client;\r\n  std::string buffer;\r\n};\r\n\r\nclass LogStream : public std::ostream {\r\n public:\r\n  LogStream(std::basic_streambuf<char>* sb): std::ostream(sb) {}\r\n  virtual LogStream& operator<<(const LogPriority& prio) = 0;\r\n};\r\n\r\nclass TCPStream : public LogStream {\r\n public:\r\n  explicit TCPStream(const std::pair<std::string, int32> ip_port):\r\n    LogStream(&tcpbuf), tcpbuf(ip_port) {}\r\n\r\n  TCPStream& operator<<(const LogPriority& prio) {\r\n    *this << GetPrioString(prio) << \"    \";\r\n    return *this;\r\n  }\r\n\r\n private:\r\n  TCPStreamBuffer<char> tcpbuf;\r\n};\r\n```\r\n",
        "labels": "Support",
        "id": 43654
    },
    {
        "title": "unable to install oh my zsh. Developer tools are not installing",
        "body": "Using curl I tried to install oh my zsh. But a pop up came to install developer tools. When I proceed further it searched for software and filed with \"This software cannot install the software because it is not currently available from the software update server\". \r\n\r\nthis is what i am getting \r\n\r\nxcode-select: note: no developer tools were found at '/Applications/Xcode.app', requesting install. Choose an option in the dialog to download the command line developer tools.\r\n\r\nAppreciate your help me on this. \r\n\r\nThanks \r\nRaghu",
        "labels": "Support",
        "id": 43655
    },
    {
        "title": "psql tool under oh-my-zsh clears output from the screen",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\npsql tool from PostgreSQL removes long output from the screen when user exit pager.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. open terminal (with oh-my-zsh default configuration)\r\n2. run `psql <your_database>`\r\n3. run any sql query that produces long output (to trigger pager)\r\n4. You can see query result on the screen\r\n5. press `q` to quit pager\r\n6. query result disappears from the screen\r\n\r\n**Expected behavior**\r\nQuery result stays on the screen.\r\n\r\n**Screenshots and/or Recordings**\r\nDemo and workaround\r\nhttps://asciinema.org/a/fj1Ax8qNd4lXhHfUNSi9A1Yjd\r\n\r\n**Self Check**\r\n\r\n- Have you tried reaching out on the [Discord server](https://discord.gg/ohmyzsh)? No\r\n  This can help cut down on filling up issues. We always have a few people\r\n  online that are in a variety of timezones that are willing to help you!\r\n\r\n- Also searching existing [GitHub Issues](https://github.com/ohmyzsh/ohmyzsh/issues?q=) might help you get quicker support Yes\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: [macOS 10.15.7 (19H2)]\r\n - If on Windows what version of WSL: [e.g. WSL1, WSL2]\r\n - Latest ohmyzsh update?: [e.g. Yes/No] Yes (2657c87f0aa1fe7f66062bc3452ad68347be356f)\r\n - ZSH Version: [e.g. 5.6] zsh 5.7.1 (x86_64-apple-darwin19.0)\r\n - Terminal emulator: [e.g. iTerm2] Apple_Terminal version 433, TERM=xterm-256color\r\n\r\n**Additional context**\r\nAdd any other context about the problem here. This can be themes, plugins, custom configs.\r\n",
        "labels": "Support",
        "id": 43656
    },
    {
        "title": "Why the theme changed ? maran theme",
        "body": "![image](https://user-images.githubusercontent.com/33475775/95694259-a08fb400-0c63-11eb-904e-31e9672cb469.png)\r\n![image](https://user-images.githubusercontent.com/33475775/95694264-a84f5880-0c63-11eb-9037-c4807f5f0098.png)\r\n\r\nno ssh ,when i open the iterm \r\nIt was @localhost before,update zsh changed",
        "labels": "Support",
        "id": 43657
    },
    {
        "title": "\"zsh: command not found: upgrade_oh_my_zsh\" on zsh installed via brew",
        "body": "I installed zsh via brew.\r\n`brew install zsh`\r\nI can't run update zsh:\r\n`omz update  \r\nzsh: command not found: omz`\r\nIs it an expected behavior?\r\nAre plugins need to be auto-installed from plugin section in .zshc? \r\n~/.oh-my-zsh  doesn't contain tools, it contains only 3 plugins:\r\n```\r\n% find $ZSH:\r\n/Users/igracheva/.oh-my-zsh\r\n/Users/igracheva/.oh-my-zsh/.zsh_history\r\n/Users/igracheva/.oh-my-zsh/custom\r\n```\r\n..\r\n/Users/igracheva/.oh-my-zsh/custom/plugins/zsh-completions/src/_git-flow\r\n\r\nI am just wandering how can I do best.",
        "labels": "Support",
        "id": 43658
    },
    {
        "title": "The shell console is cleared when exit from the vi editor.",
        "body": "When I work in vi and exit vi, all the original output on the shell console is flushed and only the blank page is left. Is there any setting that won't let it refresh, or am I setting something wrong? All my changes to `~/.zshrc` are limited to theme, I changed the default theme to `ys`.",
        "labels": "Support",
        "id": 43659
    },
    {
        "title": "No working at all",
        "body": "For any reason, it doesn't work at all. I've installed it some hours ago and it does work, although I use zsh for weeks. I failed both on the normal user and root user. I also tried to reinstall zsh and download it through both github and using the command specified on the oh-my-zsh website.\r\n\r\nThat is what it returns:\r\n```\r\n/root/.oh-my-zsh/tools/check_for_upgrade.sh: line 31: syntax error near unexpected token `)'\r\n/root/.oh-my-zsh/tools/check_for_upgrade.sh: line 31: `() {'\r\n./oh-my-zsh.sh: line 21: autoload: command not found\r\n./oh-my-zsh.sh: line 39: syntax error near unexpected token `('\r\n./oh-my-zsh.sh: line 39: `for plugin ($plugins); do'\r\n```\r\nAt last, I tried to open the codes and see what's wrong but, again, I failed. There are some other mistakes in the upgrade script (according to my system, Arch, I can't read it properly)",
        "labels": "Support",
        "id": 43660
    },
    {
        "title": "How to press Esc+. shortcut in vi-mode?",
        "body": "The problem is that Esc key exits to normal mode so Esc+. doesn't work in my case. How to solve it?",
        "labels": "Support",
        "id": 43661
    },
    {
        "title": "After each command, the executed command is printed before the result",
        "body": "I am not sure if it is an issue of oh-my-zsh/ but I have tested with clean systems\r\nAfter I install oh-my-zsh, all the commands executed afterwards are printed before the result\r\n\r\nFor example the command `ls` in my home folder outputs\r\n> lsDesktop  Documents  Downloads  Music  Pictures  Temporary  Video  Workspace\r\n\r\nas you can see the `ls` is the first what is printed\r\n\r\n`lsblk` - outputs\r\n> lsblkNAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT  \r\n> sda      8:0    0  113G  0 disk  \r\n> ├─sda1   8:1    0  512M  0 part  \r\n> ├─sda2   8:2    0   50G  0 part /  \r\n> └─sda3   8:3    0 62.5G  0 part /home  \r\n> sdb      8:16   1  7.2G  0 disk  \r\n> ├─sdb1   8:17   1  647M  0 part  \r\n> └─sdb2   8:18   1   64M  0 part\r\n\r\nand so with every command which is annoying\r\n\r\nif I disable `oh-my-zsh` then the problem disappears.",
        "labels": "Support",
        "id": 43662
    },
    {
        "title": "Battery plugin not updating symbol/percentage",
        "body": "**Describe the bug**\r\nI have the ``battery`` plugin activated and the battery prompt in my right hand promt.\r\nIf I open my terminal and have a charger connected, I get the infinity symbol, as expected.\r\nHowever, if I disconnect the charger then the symbol does not update.\r\nOpening a new terminal correctly shows the percentage for the time when the terminal was opened, which does not update either.\r\n\r\n**To Reproduce**\r\n1. enable the battery plugin and add ``battery_pct_prompt`` to the righthand prompt\r\n2. connect the charger\r\n3. open a terminal and see the infinity sign\r\n4. disconnect the charger\r\n5. use some battery\r\n6. still see the infinity sign.\r\nWorks with percentage too.\r\n\r\n**Expected behavior**\r\nSign/ percentage should update\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: Arch Linux\r\n - Latest ohmyzsh update?: yes. commit 93c837fec8e9fe61509b9dff9e909e84f7ebe32d\r\n - ZSH Version: zsh 5.8 (x86_64-pc-linux-gnu)\r\n - Terminal emulator: lilyterm\r\n\r\n**Additional context**\r\nPrompt variable I use. the time works fine.\r\n```\r\n # current time in 24hh:mm:ss, battery status\r\nRPROMPT=\"%* $(battery_pct_prompt)\" \r\n```\r\nmy theme: https://github.com/meredrica/system/blob/master/h/.oh-my-zsh/themes/meredrica.zsh-theme\r\nmy zsh.rc: https://github.com/meredrica/system/blob/master/h/.zshrc",
        "labels": "Support",
        "id": 43663
    },
    {
        "title": "How to disable some commands?",
        "body": "For example, I want to disable the Linux command \"CP\" and \"SCP\".",
        "labels": "Support",
        "id": 43664
    },
    {
        "title": "Permission denied for ~/.zshrc",
        "body": "I am always getting permission denied on using the command `~/.zshrc` , in zsh and also in bash. \r\nTo solve this problem I followed the issue post such as https://github.com/ohmyzsh/ohmyzsh/issues/3291 and many more but cant seem to solve my problem. \r\nI am doing this to add a theme powerlevel9k to Oh-my-Zsh on Ubuntu.\r\nI have tried using `vim ~/.zshrc` and quite confused to solve this problem using Vscode.\r\nThe outcome of `ls -l $HOME/.zshrc ` is `-rw-r--r-- 1 rack rack 3535 Sep 20 19:20 /home/rack/.zshrc` if it helps in any way.\r\nThank You\r\nP.S. Total Noob in terminal and linux please help😢😢😢",
        "labels": "Support",
        "id": 43665
    },
    {
        "title": "Terminal shows a red prompt when startup on Mac",
        "body": "Only startup in terminal, it shows red prompt, other operations are showing right color prompt.\r\n**.zshrc** file I don't change anything and no errors show, how should I check the details when startup or how to fix it?  \r\n![image](https://user-images.githubusercontent.com/11239033/93663172-4a7e8500-fa98-11ea-8bd9-e7c2d2b25430.png)\r\n",
        "labels": "Support",
        "id": 43666
    },
    {
        "title": " Insecure completion-dependent directories detected",
        "body": "After installing it on my mac, I'm facing these messages / errors. \r\n\r\n```\r\n[oh-my-zsh] Insecure completion-dependent directories detected:\r\ndrwxr-xr-x  3 502  admin   96 Jul 25 23:13 /usr/local/share/zsh\r\ndrwxr-xr-x  4 502  admin  128 Jul 26 03:38 /usr/local/share/zsh/site-functions\r\nlrwxr-xr-x  1 502  admin   39 Jul 26 03:38 /usr/local/share/zsh/site-functions/_brew -> ../../../Homebrew/completions/zsh/_brew\r\nlrwxr-xr-x  1 502  admin   44 Jul 26 03:38 /usr/local/share/zsh/site-functions/_brew_cask -> ../../../Homebrew/completions/zsh/_brew_cask\r\n\r\n[oh-my-zsh] For safety, we will not load completions from these directories until\r\n[oh-my-zsh] you fix their permissions and ownership and restart zsh.\r\n[oh-my-zsh] See the above list for directories with group or other writability.\r\n\r\n[oh-my-zsh] To fix your permissions you can do so by disabling\r\n[oh-my-zsh] the write permission of \"group\" and \"others\" and making sure that the\r\n[oh-my-zsh] owner of these directories is either root or your current user.\r\n[oh-my-zsh] The following command may help:\r\n[oh-my-zsh]     compaudit | xargs chmod g-w,o-w\r\n\r\n[oh-my-zsh] If the above didn't help or you want to skip the verification of\r\n[oh-my-zsh] insecure directories you can set the variable ZSH_DISABLE_COMPFIX to\r\n[oh-my-zsh] \"true\" before oh-my-zsh is sourced in your zshrc file.\r\n```",
        "labels": "Support",
        "id": 43667
    },
    {
        "title": "How can I start zsh with different environments?",
        "body": "Looking to emulate `/bin/bash -l --init-script '/path'` with zsh.\r\n\r\nSpecifically, I'm starting a number of python virtualenv or nodeenv. These require sourcing environment into the current shell.\r\n\r\nEg `source penv/bin/activate` which sets a bunch of stuff to relocate package search directories and updates PATH.\r\n\r\nI need to start 4 of them with different environments, and am trying to automate iterm to do this and start the apps. \r\n\r\nI found a solution somewhere where I've added this to my ZSHRC\r\n\r\nLet's say there's no direct way to execute zsh with an --init-script like bash does. How can I manually kickoff executing the full login startup?\r\n\r\nSo far, I have this...\r\n\r\nadd the following to .zshrc\r\n```\r\nif [[ $1 == eval ]]\r\nthen\r\n    \"$@\"\r\n    set --\r\nfi\r\n```\r\nThen, I call zsh like this: `/bin/zsh -s eval \"source path/to/bin/activate; python -c 'print(\\'it works\\')`\r\n\r\nI don't know why it runs .zshrc, but doesn't set ALL my normal PATH variables, but it is missing some.\r\n\r\nIf there isn't a way to emulate bash, then is there a way to execute the missing startup scripts?\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "labels": "Support",
        "id": 43668
    },
    {
        "title": "env: node: No such file or directory",
        "body": "I've recently installed oh-my-zsh and I noticed that after installing it I'm unable to use npm commands, it is unable to find node. \r\n\r\nI've also not recently switched from bash to zsh, I've been using zsh from past 7-8 months. \r\n\r\nHere is the screenshot of .zshrc file\r\n![Screenshot 2020-09-13 at 4 17 22 PM](https://user-images.githubusercontent.com/33938128/93016807-76ee5900-f5e1-11ea-8776-804dc13574a0.png)\r\n![Screenshot 2020-09-13 at 4 17 36 PM](https://user-images.githubusercontent.com/33938128/93016808-79e94980-f5e1-11ea-9ffe-839d8d3ade5c.png)\r\n\r\n",
        "labels": "Support",
        "id": 43669
    },
    {
        "title": "git - repo's current master branch displays as \"*1 !1 ?1\"",
        "body": "Hi all, I spent some time researching this issue and looking at the docs, but unfortunately I couldn't find anything helpful out there.\r\n\r\nI have one specific GitHub repository that's current (last commit + push was yesterday), yet still displays as `master *1 !1 ?1`. All other repositories I work with don't display any markers when `master` is clean (see screenshot for a comparison).\r\n\r\n`git status` doesn't help, just says that everything's current and working tree is clean; `git log` doesn't tell me anything else either.\r\n\r\nI'd really appreciate it if someone could either explain what those markers mean or point me to some resource where that's documented so I can find out why they're being displayed for that repo in the first place.\r\n\r\n![Screenshot_20200910_102012](https://user-images.githubusercontent.com/41571384/92700569-43949b80-f34f-11ea-8dc0-5b4f14c918c1.png)",
        "labels": "Support",
        "id": 43670
    },
    {
        "title": "MacOS /usr/local/share/zsh folder permissions",
        "body": "**Describe the bug**\r\nAbstract: Permissions for user is ok but for the group seems not to be right.\r\n\r\nWhen I set users of these folders as chown my-user:admin and their permissions as chmod 755 seem to be ok.\r\nBut when I set users as chown root:admin and chmod 775 gives this error.\r\n\r\nIt doesn't make sense providing security by giving \"write rights\" to a user but not giving to a group, especially if the group is admin.\r\n\r\n`[oh-my-zsh] Insecure completion-dependent directories detected:\r\ndrwxrwxr-x  3 root  admin   96 Nov 21  2018 /usr/local/share/zsh\r\ndrwxrwxr-x  5 root  admin  160 Aug 18 14:27 /usr/local/share/zsh/site-functions\r\n\r\n[oh-my-zsh] For safety, we will not load completions from these directories until\r\n[oh-my-zsh] you fix their permissions and ownership and restart zsh.\r\n[oh-my-zsh] See the above list for directories with group or other writability.\r\n\r\n[oh-my-zsh] To fix your permissions you can do so by disabling\r\n[oh-my-zsh] the write permission of \"group\" and \"others\" and making sure that the\r\n[oh-my-zsh] owner of these directories is either root or your current user.\r\n[oh-my-zsh] The following command may help:\r\n[oh-my-zsh]     compaudit | xargs chmod g-w,o-w\r\n\r\n[oh-my-zsh] If the above didn't help or you want to skip the verification of\r\n[oh-my-zsh] insecure directories you can set the variable ZSH_DISABLE_COMPFIX to\r\n[oh-my-zsh] \"true\" before oh-my-zsh is sourced in your zshrc file.`\r\n\r\n**To Reproduce**\r\n1. Add user to a group\r\n2. Set owner of folders under /usr/local (not /usr/local but /usr/local/*) as root:admin by using chown\r\n3. Set mod of folders under /usr/local (not /usr/local but /usr/local/*) as 775 by using chmod\r\n4. Start a shell\r\n\r\n**Expected behavior**\r\nGiving write permission for /usr/local/share/zsh to the admin group should not be a problem.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: macOS\r\n - If on Windows what version of WSL: Catallina 10.15.6\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: 5.7.1\r\n - Terminal emulator: iTerm2\r\n",
        "labels": "Support",
        "id": 43671
    },
    {
        "title": "Kitty + zsh ",
        "body": "**Describe the bug**\r\nWhen going to zsh as my main shell (either by changing from `/bin/bash` to `/bin/zsh` in `/etc/passwd` or by doing the `chsh` command), Kitty is not in the list of installed software (while being present in ~/.local/bin and ../share/applications/kitty.desktop).\r\nI tested by going to /bin/bash as my shell and kitty is present and I can launch it normally.\r\nOther softwares in share/applications (mupdf, lf file manager, zotero...) are recognized and I can interact with them from my launcher.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Change to /bin/zsh as main shell\r\n2. Kitty cannot be launched normally through launcher, I need to run it from my terminal where it is found\r\n\r\n**Expected behavior**\r\nI would expect that changing the shell to zsh while having the exact same \"$PATH\" would work.\r\n\r\n**Environment details**\r\nKDE Neon 5.19.5\r\nKDE Framework 5.73 \r\nKitty 0.18.3\r\nZsh : 5.8\r\n\r\nThe .zshrc file is standard except my $PATH my list of export and my aliases. If you think any of this might be the culprit, I will paste them.",
        "labels": "Support",
        "id": 43672
    },
    {
        "title": "I want to modify my zsh prompt",
        "body": "I like robbyrussell theme by I don't want it to show my PC username. I'm using WSL2 and terminal(with Ubuntu). And I want it to say `codingonsteroid💉💉💉 ➜ _(yes I want to use emoji)_\r\n\r\nInstead of my `PC_USER_NAME ➜`\r\n\r\n**robbyrussell.zsh-theme file**\r\n```\r\nPROMPT=\"%(?:%{$fg_bold[green]%}➜ :%{$fg_bold[red]%}➜ )\"\r\nPROMPT+=' %{$fg[cyan]%}%c%{$reset_color%} $(git_prompt_info)'\r\n\r\nZSH_THEME_GIT_PROMPT_PREFIX=\"%{$fg_bold[blue]%}git:(%{$fg[red]%}\"\r\nZSH_THEME_GIT_PROMPT_SUFFIX=\"%{$reset_color%} \"\r\nZSH_THEME_GIT_PROMPT_DIRTY=\"%{$fg[blue]%}) %{$fg[yellow]%}✗\"\r\nZSH_THEME_GIT_PROMPT_CLEAN=\"%{$fg[blue]%})\"\r\n```",
        "labels": "Support",
        "id": 43673
    },
    {
        "title": "shrink-path change view using shortcut",
        "body": "Hi!\r\nMy path uses not the full path of my current directory.\r\nFor example: ~/Dow/test/test-124-12424-fsfs-232442-fsf-/forum/something\r\n\r\nLike you can see instead \"Download\" is \"Dow\".\r\nI would like to use keyboard shortcut which will show me the original path and undo this using the same shortcut.\r\n\r\nHow can I achieve that?",
        "labels": "Support",
        "id": 43674
    },
    {
        "title": "Git pull and push ask credentials",
        "body": "Hello there I am using oh my zsh as a terminal shell on windows 10. Before I used git bash. On git bash when I trying to push or pull code it was not prompting to put user name and password of my company. But on oh my zsh it is asking the credentials. Why is that? Is there any solution to that?\r\n",
        "labels": "Support",
        "id": 43675
    },
    {
        "title": "complete:13: command not found: compdef and it cannot be solved by any mehod mentioned before",
        "body": "\r\nHi team, \r\nI met this error from ytd. I saw there was an issue with the same question. but I tried every method mentioned in that issue and it didn't help at all. \r\nmy zsh version : zsh 5.7.1 (x86_64-apple-darwin19.0)\r\nwhen I tired to delete zcompdump files, it's said cannot find that file:\r\n$ rm ~/.zcompdump*\r\nrm: /Users/yangyi/.zcompdump*: No such file or directory\r\n",
        "labels": "Support",
        "id": 43676
    },
    {
        "title": "Function not working properly after oh my zsh update",
        "body": "So after an update in ohmyzsh one of my function stopped working randomly I didn't change the function at all and have been using it for past 2 years on ohmyzsh without any issue but suddenly it started erroring. Though am not good in making functions but this one never had any issue for me. Also it works on bash and zsh without oh my zsh. So maybe something changed in ohmyzsh maybe that am not aware of that started causing this issue. All of my other functions are working without any issues.\r\n Function\r\n```\r\nfunction diff() {\r\n  cd /home/nishith/Projects/Swift/Compare/$1/\r\n  rm -r $2\r\n  rm -r $3\r\n  mkdir $2\r\n  mkdir $3\r\n  cd /home/nishith/Projects/Swift/Decompiled_Apps/$1/$2/res/\r\nfd -td layout ~/Projects/Swift/Themes/swift_installer/app/src/main/assets/overlays/$4/versions/$2/common/ | while read file\r\ndo\r\ncd $file \r\nfor f in $(ls); do\r\ncd ~/Projects/Swift/Decompiled_Apps/$1/$2/res/\r\nfd -tf $f -x cp --parents -r {} ~/Projects/Swift/Compare/$1/$2\r\ncp ./values/attrs.xml ~/Projects/Swift/Compare/$1/$2\r\ndone\r\ndone\r\n\r\ncd ~/Projects/Swift/Decompiled_Apps/$1/$3/res/\r\nfd -td layout ~/Projects/Swift/Themes/swift_installer/app/src/main/assets/overlays/$4/versions/$3/common/ | while read file\r\ndo\r\ncd $file \r\nfor f in $(ls); do\r\ncd ~/Projects/Swift/Decompiled_Apps/$1/$3/res/\r\nfd -tf $f -x cp --parents -r {} ~/Projects/Swift/Compare/$1/$3\r\ncp ./values/attrs.xml ~/Projects/Swift/Compare/$1/$3\r\ndone\r\ndone\r\ncd ~/Projects/Swift/Compare/$1/\r\nmeld $2 $3\r\n}\r\n```\r\nError \r\n```\r\ndiff:cd:1: no such file or directory: /home/nishith/Projects/Swift/Compare/--color/\r\n```\r\n\r\nIt throws errors like this with --color in the end which idk why it is happening. Tried to reinstall zsh and oh my zsh but it didn't fix.\r\n\r\n",
        "labels": "Support",
        "id": 43677
    },
    {
        "title": "terminal issue",
        "body": "Hey I am having this issue I would like help it is showing like this .oh-my-zsh git:(master) but I don't like it I want to it to look like -> only\r\n![Screenshot from 2020-08-28 04-40-10](https://user-images.githubusercontent.com/51192943/91503691-c7c73780-e8e8-11ea-895f-d004313ab0ed.png)\r\n\r\nhow can I solve this issue?\r\n",
        "labels": "Support",
        "id": 43678
    },
    {
        "title": "I recorded a scenario on a website.Is it right.",
        "body": "# About install oh my zsh and use\r\n\r\nGo to the scenario bu this link -> [I'm a link](https://katacoda.com/sysdl132/scenarios/zsh)\r\n\r\nSo is it have any bugs?\r\n\r\n- [ ] intro bugs\r\n- [ ] Command bugs\r\n- [ ] Describe bugs\r\n- [ ] Other bugs(comment what bug in a new reply)\r\n\r\n**Note** : If you want to see source code,view it in [sysdl132/katacoda-scenarios](https://github.com/sysdl132/katacoda-scenarios)  \r\n\r\n**Note 2** : My session is running on ubuntu 18.04, not 20.04",
        "labels": "Support",
        "id": 43679
    },
    {
        "title": "Font error",
        "body": "Hi after installing I got this:\r\n\r\n![image](https://user-images.githubusercontent.com/60715874/90964581-87238480-e4ca-11ea-9264-4704f09de6ce.png)\r\n\r\nWhat wrong?",
        "labels": "Support",
        "id": 43680
    },
    {
        "title": "C-r History copying 2 characters on navigation",
        "body": "When ever I use the C-r history, and use the up/down arrows (or type), the first 2 characters from the line I am interactive with seem to prepend the rest of the line (see images below). I've tried updating my ZSH, which hasn't seem to have changed anything. This did just start happening out of nowhere as well.\r\n\r\n Not sure where to go from here, any help would be super appreciated!\r\n\r\n![image](https://user-images.githubusercontent.com/17806508/90955820-b4325180-e44e-11ea-80a8-fc723a4e11c6.png)\r\n\r\n![image](https://user-images.githubusercontent.com/17806508/90955854-0a9f9000-e44f-11ea-9324-c86e20472f3f.png)\r\n",
        "labels": "Support",
        "id": 43681
    },
    {
        "title": "Branch info is always displayed, even when i am in a Folder that is not under version control.",
        "body": "Hey,\r\n\r\ni am new to ohmyzsh, just installed it. Everything is working fine so far, but as i described in the title, the branch info is always displayed even when i am in a folder that isn't under version control.  Is this the default behavior? How can i change it so that the branch only gets displayed when i am in a folder that is under version control?\r\n\r\nMySystem:\r\n<img width=\"567\" alt=\"Bildschirmfoto 2020-08-22 um 13 26 13\" src=\"https://user-images.githubusercontent.com/40342018/90955123-0ee1a280-e47b-11ea-9586-adfbb9256619.png\">\r\n\r\nHow it should be:\r\n<img width=\"627\" alt=\"Bildschirmfoto 2020-08-22 um 13 26 48\" src=\"https://user-images.githubusercontent.com/40342018/90955133-24ef6300-e47b-11ea-84d4-f2138f47563b.png\">\r\n\r\nThank you for your help!",
        "labels": "Support",
        "id": 43682
    },
    {
        "title": "I have error after the last update: parse error near `<<<'",
        "body": "After the last update of oh-my-zsh I always receive the following error on every terminal start:\r\n\r\n> /home/prolife/.oh-my-zsh/lib/key-bindings.zsh:18: parse error near `<<<'\r\n\r\nAt that line of key-bindings.zsh I have the following code:\r\n```\r\n<<<<<<< Updated upstream\r\n# Use emacs key bindings\r\nbindkey -e\r\n=======\r\n#bindkey -e                                            # Use emacs key bindings\r\n>>>>>>> Stashed changes\r\n```\r\n\r\nHow to repair it?\r\n\r\n - OS / Distro: Linux Mint 19.1\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: zsh 5.4.2 (x86_64-ubuntu-linux-gnu)\r\n - Terminal emulator: urxvt\r\n",
        "labels": "Support",
        "id": 43683
    },
    {
        "title": "Where is the location of 'src' which I use to compile .zshrc when I update certain dot files?",
        "body": "This is not a big problem, but I have been using 'src' to compile my .zshrc for sometime and I have no clue where it comes from or where it resides on my machine.  Can someopne enlighten me on where it comes from and where it is on the disk?  I can do a which src and I see the code but again, no ideal where is comes from or what plugin, if any, it is associated with.\r\n\r\nThanks for your help\r\nJoe\r\njoe@bram.net\r\n",
        "labels": "Support",
        "id": 43684
    },
    {
        "title": "No function called and no name too",
        "body": "https://github.com/ohmyzsh/ohmyzsh/blob/95a06f3927a286db257dc99791b02caba757fe33/tools/check_for_upgrade.sh#L32",
        "labels": "Support",
        "id": 43685
    },
    {
        "title": "Issue in using theme when they are in their own folder in custom theme directory",
        "body": "When trying to use a custom theme [powerlevel10k](https://github.com/romkatv/powerlevel10k), I ran into a problem where oh-my-zsh was throwing me errors saying couldn't find the theme.\r\n`/Users/timemuffin/.oh-my-zsh/oh-my-zsh.sh:source:128: no such file or directory: /Users/timemuffin/.oh-my-zsh/themes/powerlevel10k.zsh-theme`\r\nOn checking the oh-my-zsh.sh script I noticed the condition written to handle custom themes only looked for zsh-theme file in the custom/themes directory but if the theme comes in its own folder there was no way to handle that.\r\n`/Users/timemuffin/.oh-my-zsh/custom/themes/powerlevel10k/powerlevel10k.zsh-theme`\r\nI just added one more condition to check for the theme in `$ZSH_CUSTOM/themes/$ZSH_THEME/$ZSH_THEME.zsh-theme` to the existing condition and the theme worked as expected.\r\n```\r\nelif [ -f \"$ZSH_CUSTOM/themes/$ZSH_THEME/$ZSH_THEME.zsh-theme\" ]; then\r\n    source \"$ZSH_CUSTOM/themes/$ZSH_THEME/$ZSH_THEME.zsh-theme\"\r\n```",
        "labels": "Support",
        "id": 43686
    },
    {
        "title": "Unable to omz update due to unknown option --interactive in vim",
        "body": "```\r\n❯ omz update\r\nVIM - Vi IMproved 8.2 (2019 Dec 12, compiled Jan  4 2021 19:10:05)\r\nUnknown option argument: \"--interactive\"\r\nMore info with: \"vim -h\"\r\n```\r\n\r\nI am on the latest version of vim installed from homebrew on MacOS but unclear why the --interactive option is unknown. Did previously have success running omz update on older versions of Vim",
        "labels": "Support",
        "id": 43687
    },
    {
        "title": "Escape key functions as alt",
        "body": "Hello, i'm using zsh with oh-my-zsh installed. this is weird, whenever I press escape and another key like `l` it will become alt + `l`. how can i disable it? \r\n\r\nI'm using Arch btw.",
        "labels": "Support",
        "id": 43688
    },
    {
        "title": "How to change zsh-autocomplete color or make text item list under like zsh-autosuggestions",
        "body": "Hi. Current when i press '[TAB]' and it will be show the list under command like this. But color of them is alternative to command \r\n\r\n![image](https://user-images.githubusercontent.com/17109300/110980806-d531a400-8398-11eb-940e-f03b4f3b0ddf.png)\r\n\r\nI like all item of under list will colored like zsh-autosuggestions\r\n\r\n![image](https://user-images.githubusercontent.com/17109300/110980934-fb574400-8398-11eb-8fd1-47751abaf194.png)\r\n\r\nHow can i do that , thank all !",
        "labels": "Support",
        "id": 43689
    },
    {
        "title": "Terminal lagy after the latest update",
        "body": "Is anyone experience a certain amount of lag while typing into the terminal after the latest update?",
        "labels": "Support",
        "id": 43690
    },
    {
        "title": "Run *.sh file has if statement in oh my zsh has error",
        "body": "Hi everyone,\r\nI am using oh my zsh and has a .sh file below \r\n```\r\ncover=\"-coverprofile=cover -coverpkg=./handlers\"\r\n\r\nexport BOOKING_SERVICE_CONFIG=\"../config\"\r\n\r\ncase $1 in\r\n\r\n  \"1\")\r\n\r\n    if [[ -z $2 ]] ;\r\n\r\n    then\r\n\r\n      go test -v ./testing ${cover}/airConditioner -run Booking_AirConditioner\r\n\r\n    else\r\n\r\n      go test -v ./testing ${cover}/airConditioner -run Booking_AirConditioner/^$2$\r\n\r\n    fi\r\n\r\n    ;;\r\n\r\n  *)\r\n\r\n    go test -v ./testing ${cover}/... -timeout 1h\r\n\r\n    ;;\r\n\r\nesac\r\n```\r\n\r\nWhen i ran command \"./test.sh 1\", I received error \"./test.sh: 5: ./test.sh: [[: not found\"\r\n\r\nHow can i fix this with oh my zsh?\r\n\r\nThank you!",
        "labels": "Support",
        "id": 43691
    },
    {
        "title": "nvm command not found tr, uname, mkdir",
        "body": "I'm getting the following errors when I open a terminal:\r\n\r\n```\r\nnvm:7: command not found: tr\r\nnvm:7: command not found: tr\r\n/usr/local/share/autojump/autojump.zsh:22: command not found: uname\r\n/usr/local/share/autojump/autojump.zsh:31: command not found: mkdir\r\n/usr/local/Cellar/autojump/22.5.3_2/share/autojump/autojump.zsh:22: command not found: uname\r\n/usr/local/Cellar/autojump/22.5.3_2/share/autojump/autojump.zsh:31: command not found: mkdir\r\n/Users/shinokada/.zshrc:68: command not found: starship\r\n```\r\n![image](https://user-images.githubusercontent.com/147320/109583611-7e7bcd00-7b43-11eb-914d-6769fba011aa.png)\r\n\r\n\r\nI think it is something to do with the PATH, but I'm not sure. The autojump works and `nvm --version` outputs as well. \r\n\r\nMy .zshrc has the following:\r\n\r\n```\r\n# Path to your oh-my-zsh installation.\r\nexport ZSH=\"/Users/shinokada/.oh-my-zsh\"\r\n\r\n# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes\r\nZSH_THEME=\"cobalt2\"\r\n\r\n# Uncomment the following line to enable command auto-correction.\r\nENABLE_CORRECTION=\"true\"\r\n\r\n# Uncomment the following line to display red dots whilst waiting for completion.\r\nCOMPLETION_WAITING_DOTS=\"true\"\r\n\r\nplugins=(\r\n  extract git zsh-autosuggestions zsh-syntax-highlighting brew\r\n)\r\n\r\nsource $ZSH/oh-my-zsh.sh\r\n\r\nset number\r\n# My environment settings\r\nexport EDITOR=vim\r\nexport VISUAL=\"$EDITOR\"\r\n\r\n# Start PATH\r\nexport PATH=\"$PATH:/usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin\"\r\n\r\n# pyenv\r\nexport PYENV_ROOT=\"$HOME/.pyenv\"\r\nexport PATH=\"$PYENV_ROOT/bin:$PATH\"\r\n\r\nexport PATH=\"$HOME/.composer/vendor/bin:$PATH\"\r\nexport PATH=\"/usr/local/mysql/bin:$PATH\"\r\nexport PATH=\"$HOME/.local/bin:$PATH\"\r\nexport PATH=\"$HOME/bin:$PATH\"\r\nexport PATH=\"$HOME/.cargo/bin:$PATH\"\r\nexport PATH=\"/usr/local/opt/sqlite/bin:$PATH\"\r\n\r\n# Perl\r\npath=\"/Users/shinokada/perl5/bin${PATH:+:${PATH}}\"\r\nPERL5LIB=\"/Users/shinokada/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}\"\r\nexport PERL5LIB\r\nPERL_LOCAL_LIB_ROOT=\"/Users/shinokada/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}\"\r\nexport PERL_LOCAL_LIB_ROOT\r\nPERL_MB_OPT=\"--install_base \\\"/Users/shinokada/perl5\\\"\"\r\nexport PERL_MB_OPT\r\nPERL_MM_OPT=\"INSTALL_BASE=/Users/shinokada/perl5\"\r\nexport PERL_MM_OPT\r\n\r\nexport NVM_DIR=$HOME/.nvm\r\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\" # This loads nvm\r\nexport LANG=\"en_US.UTF-8\"\r\nexport LC_ALL=\"en_US.UTF-8\"\r\nexport LC_CTYPE=\"en_US.UTF-8\"\r\n\r\n# autojump using j\r\n[ -f /usr/local/etc/profile.d/autojump.sh ] && . /usr/local/etc/profile.d/autojump.sh\r\n\r\n### help function\r\nfunction help() {\r\n  bash -c \"help $@\"\r\n}\r\n### end help function\r\n\r\n# starship\r\neval \"$(starship init zsh)\"\r\n\r\n# Docker format\r\nFORMAT=\"\\nID\\t{{.ID}}\\nIMAGE\\t{{.Image}}\\nCOMMAND\\t{{.Command}}\\nCREATED\\t{{.RunningFor}}\\nSTATUS\\t{{.Status}}\\nPORTS\\t{{.Ports}}\\nNAMES\\t{{.Names}}\\n\"\r\n\r\n# Start alias\r\nalias del=\"rmtrash\"\r\nalias typora=\"open -a typora\"\r\n# brew update && brew outdated && brew upgrade ➡️  buou\r\nalias buou=\"brew update && brew outdated && brew upgrade && brew cleanup\"\r\n# npm outdated -g --depth=0 && npm update -g\r\nalias npmou=\"npm outdated -g --depth=0 && npm update -g\"\r\n# mkdir -p test && cd test ➡️  mkcd test\r\nalias mkcd='foo(){ mkdir -p \"$1\"; cd \"$1\" }; foo '\r\n\r\n# For Big Sur problem with pyenv\r\n#If you need to have openssl@1.1 first\r\nexport PATH=\"/usr/local/opt/openssl@1.1/bin:$PATH\"\r\n\r\n# For compilers to find openssl@1.1\r\nexport LDFLAGS=\"-L/usr/local/opt/openssl@1.1/lib\"\r\nexport CPPFLAGS=\"-I/usr/local/opt/openssl@1.1/include\"\r\n\r\n# For pkg-config to find openssl@1.1\r\nexport PKG_CONFIG_PATH=\"/usr/local/opt/openssl@1.1/lib/pkgconfig\"\r\n\r\n# For compilers to find readline\r\nexport LDFLAGS=\"-L/usr/local/opt/readline/lib\"\r\nexport CPPFLAGS=\"-I/usr/local/opt/readline/include\"\r\n\r\n# For pkg-config to find readline\r\nexport PKG_CONFIG_PATH=\"/usr/local/opt/readline/lib/pkgconfig\"\r\n\r\n# For compilers to find zlib\r\nexport LDFLAGS=\"-L/usr/local/opt/zlib/lib\"\r\nexport CPPFLAGS=\"-I/usr/local/opt/zlib/include\"\r\n\r\n# For pkg-config to find zlib\r\nexport PKG_CONFIG_PATH=\"/usr/local/opt/zlib/lib/pkgconfig\"\r\n\r\n# For compilers to find sqlite\r\nexport LDFLAGS=\"-L/usr/local/opt/sqlite/lib\"\r\nexport CPPFLAGS=\"-I/usr/local/opt/sqlite/include\"\r\n\r\n# For pkg-config to find sqlite\r\nexport PKG_CONFIG_PATH=\"/usr/local/opt/sqlite/lib/pkgconfig\"\r\n\r\n# End of Big Sur fix\r\nexport PATH=\"/Users/shinokada/.deta/bin:$PATH\"\r\n\r\n# pyenv-virtalenv\r\neval \"$(pyenv init -)\"\r\neval \"$(pyenv virtualenv-init -)\"\r\n\r\n# to avoid % at the end of partial lines\r\nPROMPT_EOL_MARK=''\r\n```\r\n\r\nI appreciate your help.",
        "labels": "Support",
        "id": 43692
    },
    {
        "title": "ZSH ignoring DEFAULT_USER in VS Code",
        "body": "**Describe the bug**\r\nAfter the most recent ZSH update, ZSH is ignoring my DEFAULT_USER setting and displaying the `user@host` at the beginning of each prompt in the VS Code integrated terminal. In .zshrc, I have tried:\r\n\r\n* `DEFAULT_USER=\"jessica\"` (what I had and was working before)\r\n* ``DEFAULT_USER=`whoami` ``\r\n* `DEFAULT_USER=$(whoami)`\r\n\r\nAll of them still display the `user@host`, and my host is pretty long making it a pain to use. I have confirmed that the environment variable is set and correct with `ECHO $DEFAULT_USER`. To be clear, this setting is still working in my basic terminal, but not in the integrated VS Code terminal (which is was before).\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Set DEFAULT_USER in .zshrc\r\n2. Start a new terminal\r\n3. `user@host` is displayed at the beginning of every line.\r\n\r\n**Expected behavior**\r\nThe `user@host` should not be displayed when the user matches `DEFAULT_USER`\r\n\r\n**Self Check**\r\n\r\nI have searched for existing bugs regarding this, but they seem to be about unset `DEFAULT_USER`, and weren't working previously.\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: macOS (Catalina)\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: 5.8\r\n - Terminal emulator: VS Code Integrated Terminal\r\n",
        "labels": "Support",
        "id": 43693
    },
    {
        "title": "Not all completion options showing for git?",
        "body": "My issue seems to be exactly opposite to #7523—I currently have just `git` installed as a plugin, though I tried adding `gitfast` as well and the same happens.\r\nWhen I type `git c` and press tab, I only get 3 completion settings. I'm wondering why commands such as `cherry-pick` don't appear. The same with `stash` as well. I was expecting it to show as in the above issue, but I'm not sure what I have misconfigured. I did a clean reinstall of OMZ and wiped my zshrc to make sure nothing else I could tell was interfering. \r\n\r\n```\r\n❯ git c\r\ncheckout  -- checkout a branch or paths to the working tree\r\nclone     -- clone a repository into a new directory\r\ncommit    -- record changes to the repository\r\n```\r\n\r\nAny guidance would be much appreciated!",
        "labels": "Support",
        "id": 43694
    },
    {
        "title": "% sign on emacs vterm",
        "body": "i have vterm installed on emacs and using zsh as default on it. but when the vterm is loaded first using zsh there is a % sign on the beginning line. but when I open another vterm , it doesn't have any problem\r\n\r\n\r\nSteps to reproduce the behavior, for example:\r\n1.install emacs\r\n2.install vterm\r\n3.install zsh\r\n4.open vterm inside emacs\r\n\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/76902855/109408998-e7810a80-79b4-11eb-8829-2dce0a8bc66e.png)\r\n\r\n\r\n\r\n\r\nI'm using artix linux and both emacs and the zsh on the latest version\r\n",
        "labels": "Support",
        "id": 43695
    },
    {
        "title": "How to manage my custom ohmyzsh config including plugins with git?",
        "body": "I find myself often reinstalling my ohmyzsh config with plugins and themes on multiple machines.\r\nIs there a good way how I can manage my custom ready to use installation such that I can still get updates?\r\nMaybe a fork and adding the plugins and themes under custom/ as submodules? Assuming that zsh is already the standard shell on the target machine.",
        "labels": "Support",
        "id": 43696
    },
    {
        "title": "!! shortcut no longer works properly after installing Oh My Zsh",
        "body": "I use this shortcut frequently when testing scripts and whatnot. Usually, typing `!!` and hitting `Enter` in my prompt will execute the previous command.\r\n\r\nAfter installing Oh My Zsh last night, I noticed that typing `!!` and hitting `Enter` instead expands the `!!` to show what my previous command was, and I have to hit `Enter` a second time to execute the command.\r\n\r\nI know this seems super minor, but muscle memory is a pain to overwrite.\r\n\r\nHere are my system details:\r\n```\r\nOS: Mac OS 11.2 Big Sur\r\nChip: M1\r\nTerm: iTerm2\r\n```",
        "labels": "Support",
        "id": 43697
    },
    {
        "title": "No native ls colours when using grc plugin",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n\r\nWhen using the `grc` plugin (and possibly others), the ‘native’ colours from `ls` will be ignored.\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable this plugin `grc`\r\n2. Run command `ls -l` in a directory with some stuff in it like sub-directories and executable files\r\n3. We see the colours from `grc` (permissions, date), but not the colours from `ls` (highlighted executables or directories)\r\n\r\n**Expected behavior**\r\n\r\nI want both the original colours from `ls` and the new colours from `grc`\r\n\r\n**Additional context**\r\n\r\nI am using GNU `ls` (Ubuntu). The `grc` plugin only loads the `grc.zsh` from the system.\r\n\r\nThe final resulting alias of Oh My Zsh and applied plugin is `grc --colour=auto ls --color=tty`. The problem is that with the prefixed `grc`, `ls` does not consider itself running in a TTY anymore, meaning it will decide not to show its colours anymore. Changing the alias definition in `lib/theme-and-appearance.zsh` (line 35) fixes this for me, but that is not the general fix, I assume.\r\n\r\nAdding `alias ls='grc --colour=auto ls --color=always'` in `plugins/grc/grc.plugin.zsh` also fixes this quite nicely, this may be a better place for colour-hungry people.",
        "labels": "Support",
        "id": 43698
    },
    {
        "title": "Vi-mode custom key macros?",
        "body": "Hello,\r\n\r\nI am trying to set some custom key remaps in ZSH vi-mode that would be useful on the command line. Like binding ‘bb’ to ‘0ciw’ basically a shortcut to go to beginning of line, remove the first word and go into insert mode. This would allow me to sub out cat for ls, for example, quickly. That key string works fine manually but is 4 keystrokes. Can you nnoremap similar to in a .vimrc file?\r\n\r\nThanks",
        "labels": "Support",
        "id": 43699
    },
    {
        "title": "Text Misaligned in the terminal window",
        "body": "Has anyone ever encountered this issue while using ohmyzsh ?\r\n\r\n![image](https://user-images.githubusercontent.com/7425921/107161681-507fee80-69c4-11eb-8f61-779b68932a8b.png)\r\n\r\nI have to start a new terminal session whenver this issue is encountered.\r\n\r\nI am using MacOS Big Sur, iTerm2",
        "labels": "Support",
        "id": 43700
    },
    {
        "title": "? symbol in CLI charts",
        "body": "![Screenshot from 2021-02-04 01-14-44](https://user-images.githubusercontent.com/32242596/106800435-73d63100-6686-11eb-9d20-7766948e360a.png)\r\n\r\n-> gnome-terminator\r\n-> Powerline font\r\n-> Updated ZSH and other deps\r\n-> OS : Ubuntu",
        "labels": "Support",
        "id": 43701
    },
    {
        "title": "`compinit:141: parse error: condition expected: $1` when opening new terminal",
        "body": "Searched, didn't find any similar issues. \r\n\r\nThis started happening after a recent update, when opening a new window: \r\n\r\n```\r\nbashcompinit:75: parse error near `('\r\ncompinit:141: parse error: condition expected: $1\r\n```\r\n\r\n```\r\n✗ zsh --version\r\nzsh 5.7.1 (x86_64-apple-darwin19.0)\r\n```\r\n\r\nI found a script to list my plugins and all i have is git. But I am running nvm and the last time I ran into a problem like this it was related to nvm. But I don't have an nvm plugin installed in zsh. \r\n\r\nSometimes zsh and brew don't get along so here's my brew version: \r\n\r\n```\r\n✗ brew --version\r\nHomebrew 2.7.7\r\nHomebrew/homebrew-core (git revision ca1d3; last commit 2021-02-03)\r\nHomebrew/homebrew-cask (git revision 8d1ea; last commit 2021-02-03)\r\n```\r\n\r\n\r\n\r\n\r\n",
        "labels": "Support",
        "id": 43702
    },
    {
        "title": "We can't visit the url in China https://raw.githubusercontent.com, where can we get the install.sh?",
        "body": "1. Look for similar issues already posted (including closed ones)\r\n2. Include as much relevant information as possible\r\n3. Try to make sure the issue is due to Oh My Zsh\r\n",
        "labels": "Support",
        "id": 43703
    },
    {
        "title": "Problems installing  Oh My Zsh using curl [WSL2]",
        "body": "**Describe the bug**\r\ninstalling with curl command inside ohmyzsh official site `sh -c \"$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"`\r\n\r\ngives this error `curl: (77) error setting certificate verify locations:\r\n  CAfile: /etc/ssl/certs/ca-certificates.crt\r\n  CApath: /etc/ssl/certs`\r\n\r\n**To Reproduce**\r\n1. install wsl2 with ubuntu 20.04 lts\r\n2. Run copi command from https://ohmyz.sh/#install  `sh -c \"$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"`\r\n3. outputs this error `curl: (77) error setting certificate verify locations:\r\n  CAfile: /etc/ssl/certs/ca-certificates.crt\r\n  CApath: /etc/ssl/certs`\r\n\r\n**Screenshots and/or Recordings**\r\n![screenshot](https://user-images.githubusercontent.com/46758053/106456010-47a39000-648d-11eb-84a6-ac5a8df8cec3.jpg)\r\n\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: [Windows]\r\n - If on Windows what version of WSL: [WSL2]\r\n",
        "labels": "Support",
        "id": 43704
    },
    {
        "title": "\"for\" sentences not working properly",
        "body": "**Describe the bug**\r\nWhen running a command that uses a \"for\" loop the terminal seems to not delete the containers properly.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Execute:\r\n```shell\r\ndockers=`docker ps -a | awk '{print $1}'`\r\nfor container in $dockers; do docker rm $container;done\r\n```\r\n2. Check if containers have been deleted with docker ps -a\r\n3. See the error\r\n\r\n**Expected behavior**\r\nWhen executing \"docker rm ...\" in a \"for\" loop the involved containers should be deleted. I executed the same sentence in \"bash\" and successfully deleted all the indicated containers.\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: Ubuntu 16.07\r\n  - Latest ohmyzsh update?: automatically updated\r\n - ZSH Version: [e.g. 5.1.1]",
        "labels": "Support",
        "id": 43705
    },
    {
        "title": "kubectl completion not working",
        "body": "I have installed on a MacBook Air M1 running big-sur and am trying to get kubectl completion working.  I have enabled the plugin and can see that 'git' completion is running fine.\r\n\r\n'kubectl' or 'kc' attempts at completion just result in a list of files and directories.  I found a closed issue around a very similar problem and have tried all the steps mentioned there including deleting my completions file and restarting item.\r\n\r\nNot sure where to go next with this\r\n\r\nkubectl version:\r\nClient Version: version.Info{Major:\"1\", Minor:\"20+\", GitVersion:\"v1.20.2-dirty\", GitCommit:\"faecb196815e248d3ecfb03c680a4507229c2a56\", GitTreeState:\"dirty\", BuildDate:\"2021-01-30T13:00:28Z\", GoVersion:\"go1.16rc1\", Compiler:\"gc\", Platform:\"darwin/arm64\"}\r\nServer Version: version.Info{Major:\"1\", Minor:\"20\", GitVersion:\"v1.20.2\", GitCommit:\"faecb196815e248d3ecfb03c680a4507229c2a56\", GitTreeState:\"clean\", BuildDate:\"2021-01-13T13:20:00Z\", GoVersion:\"go1.15.5\", Compiler:\"gc\", Platform:\"linux/arm64\"}\r\n\r\nMacOS: BigSur 11.1\r\n\r\nzsh version: zsh 5.8 (x86_64-apple-darwin20.0)\r\n",
        "labels": "Support",
        "id": 43706
    },
    {
        "title": "Agnoster theme: how to show only the last two directories?",
        "body": "![image](https://user-images.githubusercontent.com/37370643/105472578-c9810580-5ca4-11eb-91a0-787401fa96bc.png)\r\n\r\n****I want to it to show only the last two directories.. Is there anything I can do? \r\nThanks in advance.****  ",
        "labels": "Support",
        "id": 43707
    },
    {
        "title": "provide help for history command (and maybe other standard features?)",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\n\r\nThis relates to the history command, and maybe it would be improved via the history plugin, but perhaps this needs to be done at the core level?\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n\r\nI can't seem to get any read on the options available for the history command.  I was hoping to see something like this https://ss64.com/osx/history.html but I see from https://github.com/ohmyzsh/ohmyzsh/blob/master/lib/history.zsh and only the c and l flags are supported.  I was particularly keen to see the `s` flag supported to be able to \r\n\r\n**Describe the solution you'd like**\r\n\r\nI would like to be able to run at least of the following to be able to see the history syntax:\r\n\r\n```\r\n$ help history\r\n$ history help\r\n$ man history\r\n$ history --help\r\n```\r\n\r\nand ideally I'd like to be able to use the `s` flag to insert specific items into the history \r\n\r\n**Describe alternatives you've considered**\r\n\r\nI can't think of any at the moment.  I hadn't realised that `history` was basically just an alias for `fc` but it looks like I can't easily get syntax help for `fc` either and it's `s` flag is not the same as the `history` one ...",
        "labels": "Support",
        "id": 43708
    },
    {
        "title": "ZSH ask password every new shell opened",
        "body": "I first look at  the [issue 7509](https://github.com/ohmyzsh/ohmyzsh/issues/7509) but it did not resolve my bad behavior.\r\n2. Include as much relevant information as possible\r\nI'm using Tmux, oh-my-zsh (my dotfiles are available [here](https://github.com/MorpheusH3x/dotfiles-linux).\r\nEvery time I just create a new windows, I am asked for my password.\r\nIt ask me one first opening terminal (I have AUTOSTART_TMUX on), when I create a new window in the current session, in another session and in another terminal.\r\nI would like to just know what ask me to enter my passwd so I could that issue.",
        "labels": "Support",
        "id": 43709
    },
    {
        "title": "compinit:503: no such file or directory: /usr/local/share/zsh/site-functions/_brew",
        "body": "I am using Apple M1.\r\n\r\nWhen I added this line:\r\n`export PATH=\"/opt/homebrew/bin:$PATH\"`\r\nto ~/.zshrc file.\r\nThese error messages came up:\r\ncompinit:503: no such file or directory: /usr/local/share/zsh/site-functions/_brew\r\ncompinit:503: no such file or directory: /usr/local/share/zsh/site-functions/_brew_cask\r\n\r\nI dont know that's the problem and how to fix this.\r\n\r\nI went to the directory `/usr/local/share/zsh/site-functions` and these two files do exist. \r\nAlso, I used `chmod 755 /usr/local/share/zsh/site-functions/_brew` and `chmod 755 /usr/local/share/zsh/site-functions/_brew_chask`\r\n\r\n\r\nMy ~/.zshrc file:\r\n```\r\n#ZSH_DISABLE_COMPFIX=true\r\n\r\n# If you come from bash you might have to change your $PATH.\r\n# export PATH=$HOME/bin:/usr/local/bin:$PATH\r\n\r\n#Homebrew\r\nexport PATH=\"/opt/homebrew/bin:$PATH\"\r\nexport PATH=\"/opt/homebrew/sbin:$PATH\"\r\n#Homebrew END\r\n\r\n#Wget\r\nexport LDFLAGS=\"-L/opt/homebrew/opt/openssl@1.1/lib\"\r\nexport CPPFLAGS=\"-I/opt/homebrew/opt/openssl@1.1/include\"\r\n#Wget END\r\n\r\n #Path to your oh-my-zsh installation.\r\nexport ZSH=\"/Users/caizhuoyue/.oh-my-zsh\"\r\n\r\n# Set name of the theme to load --- if set to \"random\", it will\r\n# load a random theme each time oh-my-zsh is loaded, in which case,\r\n# to know which specific one was loaded, run: echo $RANDOM_THEME\r\n# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes\r\nZSH_THEME=\"random\"\r\n\r\n\"~/.zshrc\" 114L, 3999C\r\n```\r\n\r\nProblem solved.",
        "labels": "Support",
        "id": 43710
    },
    {
        "title": "Why which cp outputs cp:aliased to nocorrect cp",
        "body": "When I type `which cp`, the output is `cp: aliased to nocorrect cp`.\r\n\r\nAll the commands in this [link](https://github.com/ohmyzsh/ohmyzsh/blob/master/lib/correction.zsh) return in the same manner.\r\n\r\nWhy is it?",
        "labels": "Support",
        "id": 43711
    },
    {
        "title": "[Hang]: Shell getting stuck during empty file content by redirecting to Null",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nFacing a hang/stuck during empty file content by redirecting to Null, shell getting stuck at that position.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Create a file and add some content to it.\r\n2. Redirecting to Null, in order to empty the file.\r\n\r\nLeetcode|master⚡ ⇒ vim tem.txt\r\nLeetcode|master⚡ ⇒ cat tem.txt \r\nCheck for operation\r\nLeetcode|master⚡ ⇒ > tem.txt \r\n\r\n\r\n**Expected behavior**\r\nThe command should successfully be executed and would return back the shell \r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: Fedora 33\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: zsh-5.8-3\r\n",
        "labels": "Support",
        "id": 43712
    },
    {
        "title": "Border color white",
        "body": "\r\nHello I don't know as but now I have white color in the bord of my terminal.\r\nSomeone can help me to back again with black color in the bord?\r\nThanks.",
        "labels": "Support",
        "id": 43713
    },
    {
        "title": "OSX plugin:  unsupported terminal app: Terminal error when using split_tab or vsplit_tab",
        "body": "I enabled the [osx](https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/osx) plugin by adding it to the existing ones in the `~/.zshrc` file as follows:\r\n```\r\nplugins=(git rails docker textmate ruby kubectl osx)\r\n```\r\nWhen restarting the Terminal and hitting `split_tab`followed by `Enter`I got the error:\r\n<img width=\"333\" alt=\"Screenshot 2021-01-09 at 12 48 47\" src=\"https://user-images.githubusercontent.com/83579/104091010-dc461400-527a-11eb-8655-6bbec441a17e.png\">\r\n\r\n\r\nThe same when calling `vsplit_tab`.\r\nReproduced at macOS `11.1`(Big Sur).",
        "labels": "Support",
        "id": 43714
    },
    {
        "title": "fpath information",
        "body": "What is the purpose of:\r\n```sh\r\nfpath=($ZSH/functions $ZSH/completions $fpath)\r\n```\r\nin oh-my-zsh.sh?\r\nThere is no functions and completions directory, is it for user customization?",
        "labels": "Support",
        "id": 43715
    },
    {
        "title": "vi-mode changed the cursor shape; how do I disable it?",
        "body": "The most recent commit to the vi-mode plugin changes the cursor shape to a vertical bar in insert mode. How do I disable this? I prefer a block cursor, always. Thank you.",
        "labels": "Support",
        "id": 43716
    },
    {
        "title": "Output GIT information on current sheet",
        "body": "For some reason, each GIT command, when viewing the list, displays them in a blank sheet, which is not very convenient. How can I disable this setting? \r\n\r\n![image](https://user-images.githubusercontent.com/37277056/103453691-7a6f3280-4ced-11eb-8e4b-b39f489b5d69.png)\r\n\r\nAfter entering the command, the information is displayed in a new list, on a clean terminal. It is not comfortable.\r\n\r\n![image](https://user-images.githubusercontent.com/37277056/103453682-6c211680-4ced-11eb-9e0d-e59f3282b187.png)\r\n\r\nI want the information to be displayed on the current list of entered commands",
        "labels": "Support",
        "id": 43717
    },
    {
        "title": "finding the docker daemon launch script in MacOS",
        "body": "Hi all,\r\n\r\nI have docker for mac installed and each time I run a Zsh session and docker for mac is not running I see\r\n`Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?`\r\n\r\nI cannot for the life of me find where this daemon is trying to run from, anyone have an idea how I can find this and stop it from running on startup?",
        "labels": "Support",
        "id": 43718
    },
    {
        "title": "why i installed the oh-my-zsh doesn't create the folder /usr/local/share/zsh",
        "body": "\r\nwhy i installed the oh-my-zsh doesn't create the folder /usr/local/share/zsh\r\n\r\n - OS / Distro:  macOS m1 11.0.1\r\n - Latest ohmyzsh update?: [Yes]\r\n - ZSH Version: [5.6]\r\n - Terminal emulator: [iTerm2]\r\n![image](https://user-images.githubusercontent.com/18423358/103127040-41223b80-46cb-11eb-8c78-3d6362201c82.png)\r\n\r\n",
        "labels": "Support",
        "id": 43719
    },
    {
        "title": "Cannot execute zshrc anymore",
        "body": "Hi guys I have an issue I was following some [tutorial](https://www.codeprocess.io/set-mac-terminal-shell-with-proper-GNU-bash-version-v4/) to make works ` shoot globstar` on my zsh.\r\nAnd suddenly my zsh, my theme disappeared.\r\n\r\nI tried several solutions I found on internet but none is working (i.e using csh + restarting computer).\r\n\r\nThis is the proof that I have zsh setup as shell\r\n```\r\nbash-5.1$ echo $SHELL\r\n/bin/zsh\r\n```\r\n\r\nMy iterm2 app is using `/bin/zsh` also in `Preferences > Profile` \r\n\r\nBut weirdly I have bash-5.1 displayed instead of my zsh config\r\n\r\n## Problem\r\nFor now I am not able to run `source ~/.zshrc` (I am on macOS btw)\r\nI have this error (I translated some part from French to English):\r\n```\r\nbash-5.1$ source ~/.zshrc\r\nbash: autoload : command not found\r\nbash: /Users/xxx/.oh-my-zsh/oh-my-zsh.sh: line 34: syntax error expected symbol « ( »\r\nbash: /Users/xxx/.oh-my-zsh/oh-my-zsh.sh: line 34: `for config_file ($ZSH/lib/*.zsh); do'\r\n```\r\nHere is my zsh file which I never touched since a long time. I think the article quoted above just destroyed something on my shell and I don't know what.\r\n[zshrc_issue.txt](https://github.com/ohmyzsh/ohmyzsh/files/5735586/zshrc_issue.txt)\r\n\r\n\r\nDo you have any idea what happened and how to solve it ? Thx",
        "labels": "Support",
        "id": 43720
    },
    {
        "title": "unable to establish SSL connection",
        "body": "`Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 151.101.76.133\r\nConnecting to raw.githubusercontent.com (raw.githubusercontent.com)|151.101.76.133|:443... connected.\r\nUnable to establish SSL connection.`\r\n\r\nwget version 1.20.3\r\neven use --no-check-certificate can't solve the problem.\r\nHope for help .thanks",
        "labels": "Support",
        "id": 43721
    },
    {
        "title": "* Console Output produced during zsh initialization follows -- .zshrc:120 unmatched \" *",
        "body": "I have an empty line 120.\r\n```\r\n# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.\r\n# Initialization code that may require console input (password prompts, [y/n]\r\n# confirmations, etc.) must go above this block; everything else may go below.\r\nif [[ -r \"${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh\" ]]; then\r\n  source \"${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh\"\r\nfi\r\n\r\n# If you come from bash you might have to change your $PATH.\r\n# export PATH=$HOME/bin:/usr/local/bin:$PATH\r\n\r\n# Path to your oh-my-zsh installation.\r\nexport ZSH=\"/home/magus/.oh-my-zsh\"\r\n\r\n# Set name of the theme to load --- if set to \"random\", it will\r\n# load a random theme each time oh-my-zsh is loaded, in which case,\r\n# to know which specific one was loaded, run: echo $RANDOM_THEME\r\n# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes\r\n### ZSH_THEME=\"robbyrussell\"\r\n\r\nZSH_THEME=\"powerlevel10k/powerlevel10k\"\r\n# Set list of themes to pick from when loading at random\r\n# Setting this variable when ZSH_THEME=random will cause zsh to load\r\n# a theme from this variable instead of looking in $ZSH/themes/\r\n# If set to an empty array, this variable will have no effect.\r\n# ZSH_THEME_RANDOM_CANDIDATES=( \"robbyrussell\" \"agnoster\" )\r\n\r\n# Uncomment the following line to use case-sensitive completion.\r\n# CASE_SENSITIVE=\"true\"\r\n\r\n# Uncomment the following line to use hyphen-insensitive completion.\r\n# Case-sensitive completion must be off. _ and - will be interchangeable.\r\n# HYPHEN_INSENSITIVE=\"true\"\r\n\r\n# Uncomment the following line to disable bi-weekly auto-update checks.\r\n# DISABLE_AUTO_UPDATE=\"true\"\r\n\r\n# Uncomment the following line to automatically update without prompting.\r\n# DISABLE_UPDATE_PROMPT=\"true\"\r\n\r\n# Uncomment the following line to change how often to auto-update (in days).\r\n# export UPDATE_ZSH_DAYS=13\r\n\r\n# Uncomment the following line if pasting URLs and other text is messed up.\r\n# DISABLE_MAGIC_FUNCTIONS=\"true\"\r\n\r\n# Uncomment the following line to disable colors in ls.\r\n# DISABLE_LS_COLORS=\"true\"\r\n\r\n# Uncomment the following line to disable auto-setting terminal title.\r\n# DISABLE_AUTO_TITLE=\"true\"\r\n\r\n# Uncomment the following line to enable command auto-correction.\r\n# ENABLE_CORRECTION=\"true\"\r\n\r\n# Uncomment the following line to display red dots whilst waiting for completion.\r\n# COMPLETION_WAITING_DOTS=\"true\"\r\n\r\n# Uncomment the following line if you want to disable marking untracked files\r\n# under VCS as dirty. This makes repository status check for large repositories\r\n# much, much faster.\r\n# DISABLE_UNTRACKED_FILES_DIRTY=\"true\"\r\n\r\n# Uncomment the following line if you want to change the command execution time\r\n# stamp shown in the history command output.\r\n# You can set one of the optional three formats:\r\n# \"mm/dd/yyyy\"|\"dd.mm.yyyy\"|\"yyyy-mm-dd\"\r\n# or set a custom format using the strftime function format specifications,\r\n# see 'man strftime' for details.\r\n# HIST_STAMPS=\"mm/dd/yyyy\"\r\n\r\n# Would you like to use another custom folder than $ZSH/custom?\r\n# ZSH_CUSTOM=/path/to/new-custom-folder\r\n\r\n# Which plugins would you like to load?\r\n# Standard plugins can be found in $ZSH/plugins/\r\n# Custom plugins may be added to $ZSH_CUSTOM/plugins/\r\n# Example format: plugins=(rails git textmate ruby lighthouse)\r\n# Add wisely, as too many plugins slow down shell startup.\r\nplugins=(git)\r\n\r\nsource $ZSH/oh-my-zsh.sh\r\n\r\n# User configuration\r\n\r\n# export MANPATH=\"/usr/local/man:$MANPATH\"\r\n\r\n# You may need to manually set your language environment\r\n# export LANG=en_US.UTF-8\r\n\r\n# Preferred editor for local and remote sessions\r\n# if [[ -n $SSH_CONNECTION ]]; then\r\n#   export EDITOR='vim'\r\n# else\r\n#   export EDITOR='mvim'\r\n# fi\r\n\r\n# Compilation flags\r\n# export ARCHFLAGS=\"-arch x86_64\"\r\n\r\n# Set personal aliases, overriding those provided by oh-my-zsh libs,\r\n# plugins, and themes. Aliases can be placed here, though oh-my-zsh\r\n# users are encouraged to define aliases within the ZSH_CUSTOM folder.\r\n# For a full list of active aliases, run `alias`.\r\n#\r\n# Example aliases\r\n# alias zshconfig=\"mate ~/.zshrc\"\r\n# alias ohmyzsh=\"mate ~/.oh-my-zsh\"\r\n\r\n#### ZSH_THEME=\"powerlevel10k/powerlevel10k\"\r\n\r\n### ZSH_THEME=\"spaceship\"\r\n\r\n### ZSH_THEME=\"bira\"\r\n\r\n# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.\r\n\r\n[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh\r\nalias v=\"code . && exit\"\r\nalias gcnc=\"git add . && git commit -m \"New Commit by 'Sugam'\"\r\nPOWERLEVEL_10K_DEBUG_ISSUE_315=true\r\n```",
        "labels": "Support",
        "id": 43722
    },
    {
        "title": "I can't apply theme even I did everything in explain.",
        "body": "here is sources of $home .zshrc\r\n\r\n```zsh\r\n# export MANPATH=\"/usr/local/man:$MANPATH\"\r\n# If you come from bash you might have to change your $PATH.\r\n# export PATH=$HOME/bin:/usr/local/bin:$PATH\r\n\r\n# Path to your oh-my-zsh installation.\r\nexport ZSH=\"/Users/ysw/.oh-my-zsh\"\r\n\r\n# Set name of the theme to load --- if set to \"random\", it will\r\n# load a random theme each time oh-my-zsh is loaded, in which case,\r\n# to know which specific one was loaded, run: echo $RANDOM_THEME\r\n# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes\r\n# ZSH_THEME=\"agnoster\"\r\n\r\n# Set list of themes to pick from when loading at random\r\n# Setting this variable when ZSH_THEME=random will cause zsh to load\r\n# a theme from this variable instead of looking in $ZSH/themes/\r\n# If set to an empty array, this variable will have no effect.\r\n# ZSH_THEME_RANDOM_CANDIDATES=( \"robbyrussell\" \"agnoster\" )\r\n\r\n# Uncomment the following line to use case-sensitive completion.\r\n# CASE_SENSITIVE=\"true\"\r\n\r\n# Uncomment the following line to use hyphen-insensitive completion.\r\n# Case-sensitive completion must be off. _ and - will be interchangeable.\r\n# HYPHEN_INSENSITIVE=\"true\"\r\n```\r\n\r\nplease help me thank you\r\n",
        "labels": "Support",
        "id": 43723
    },
    {
        "title": ".oh-my-zsh dir keeps moving",
        "body": "I'm not sure if this is a bug or something wrong with my setup/environment, but it keeps happening and I don't know what causes it.  I am using a default oh-my-zsh install & the default .zshrc.  What I'm noticing that after blowing away all the zsh settings, at some point this happens:\r\n\r\n```\r\n➜  ~ pwd\r\npwd\r\n/Users/chris\r\n➜  ~ ls -al ./\\~/\r\nls -al ./\\~/\r\ntotal 0\r\ndrwxr-xr-x    3 chris  staff    96 Dec 15 13:17 .\r\ndrwxr-xr-x@ 132 chris  staff  4224 Dec 16 11:20 ..\r\ndrwxr-xr-x   21 chris  staff   672 Dec 15 13:17 .oh-my-zsh\r\n➜  ~ ls -al .oh-my-zsh\r\nls -al .oh-my-zsh\r\nls: .oh-my-zsh: No such file or directory\r\n➜  ~ which zsh\r\nwhich zsh\r\n/usr/local/bin/zsh\r\n➜  ~ zsh --version\r\nzsh --version\r\nzsh 5.8 (x86_64-apple-darwin20.1.0)\r\n```\r\n\r\nBasically, something at some point is creating /Users/chris/~ & putting .oh-my-zsh in there and I kinda suspected the automatic update process.  Anyone seen anything like this?",
        "labels": "Support",
        "id": 43724
    },
    {
        "title": "`nvm use` command does not switch to new node version",
        "body": "Forgive me if this question has been answered, I did a search and didn't seem to find anything like this anywhere.\r\n\r\nAfter installing ohmyzsh and after installing the `nvm` plugin, issuing the command `nvm use` does not actually seem to be switching to the version of `nvm` in my `.nvmrc` file.\r\n\r\nHere are the contents of my `.zshrc` file:\r\n\r\n```\r\n# If you come from bash you might have to change your $PATH.\r\n# export PATH=$HOME/bin:/usr/local/bin:$PATH\r\nPATH=$HOME/bin:$(getconf PATH)\r\n\r\n# Path to your oh-my-zsh installation.\r\nexport ZSH=\"/Users/evanstern/.oh-my-zsh\"\r\n\r\n# Set name of the theme to load --- if set to \"random\", it will\r\n# load a random theme each time oh-my-zsh is loaded, in which case,\r\n# to know which specific one was loaded, run: echo $RANDOM_THEME\r\n# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes\r\nZSH_THEME=\"robbyrussell\"\r\n\r\n# Set list of themes to pick from when loading at random\r\n# Setting this variable when ZSH_THEME=random will cause zsh to load\r\n# a theme from this variable instead of looking in $ZSH/themes/\r\n# If set to an empty array, this variable will have no effect.\r\n# ZSH_THEME_RANDOM_CANDIDATES=( \"robbyrussell\" \"agnoster\" )\r\n\r\n# Uncomment the following line to use case-sensitive completion.\r\n# CASE_SENSITIVE=\"true\"\r\n\r\n# Uncomment the following line to use hyphen-insensitive completion.\r\n# Case-sensitive completion must be off. _ and - will be interchangeable.\r\n# HYPHEN_INSENSITIVE=\"true\"\r\n\r\n# Uncomment the following line to disable bi-weekly auto-update checks.\r\n# DISABLE_AUTO_UPDATE=\"true\"\r\n\r\n# Uncomment the following line to automatically update without prompting.\r\n# DISABLE_UPDATE_PROMPT=\"true\"\r\n\r\n# Uncomment the following line to change how often to auto-update (in days).\r\n# export UPDATE_ZSH_DAYS=13\r\n\r\n# Uncomment the following line if pasting URLs and other text is messed up.\r\n# DISABLE_MAGIC_FUNCTIONS=\"true\"\r\n\r\n# Uncomment the following line to disable colors in ls.\r\n# DISABLE_LS_COLORS=\"true\"\r\n\r\n# Uncomment the following line to disable auto-setting terminal title.\r\n# DISABLE_AUTO_TITLE=\"true\"\r\n\r\n# Uncomment the following line to enable command auto-correction.\r\n# ENABLE_CORRECTION=\"true\"\r\n\r\n# Uncomment the following line to display red dots whilst waiting for completion.\r\n# COMPLETION_WAITING_DOTS=\"true\"\r\n\r\n# Uncomment the following line if you want to disable marking untracked files\r\n# under VCS as dirty. This makes repository status check for large repositories\r\n# much, much faster.\r\n# DISABLE_UNTRACKED_FILES_DIRTY=\"true\"\r\n\r\n# Uncomment the following line if you want to change the command execution time\r\n# stamp shown in the history command output.\r\n# You can set one of the optional three formats:\r\n# \"mm/dd/yyyy\"|\"dd.mm.yyyy\"|\"yyyy-mm-dd\"\r\n# or set a custom format using the strftime function format specifications,\r\n# see 'man strftime' for details.\r\n# HIST_STAMPS=\"mm/dd/yyyy\"\r\n\r\n# Would you like to use another custom folder than $ZSH/custom?\r\n# ZSH_CUSTOM=/path/to/new-custom-folder\r\n\r\n# Which plugins would you like to load?\r\n# Standard plugins can be found in $ZSH/plugins/\r\n# Custom plugins may be added to $ZSH_CUSTOM/plugins/\r\n# Example format: plugins=(rails git textmate ruby lighthouse)\r\n# Add wisely, as too many plugins slow down shell startup.\r\nplugins=(git npm gatsby pyenv nvm)\r\n\r\nsource $ZSH/oh-my-zsh.sh\r\n\r\n# User configuration\r\n\r\n# export MANPATH=\"/usr/local/man:$MANPATH\"\r\n\r\n# You may need to manually set your language environment\r\n# export LANG=en_US.UTF-8\r\n\r\n# Preferred editor for local and remote sessions\r\n# if [[ -n $SSH_CONNECTION ]]; then\r\n#   export EDITOR='vim'\r\n# else\r\n#   export EDITOR='mvim'\r\n# fi\r\n\r\n# Compilation flags\r\n# export ARCHFLAGS=\"-arch x86_64\"\r\n\r\n# Set personal aliases, overriding those provided by oh-my-zsh libs,\r\n# plugins, and themes. Aliases can be placed here, though oh-my-zsh\r\n# users are encouraged to define aliases within the ZSH_CUSTOM folder.\r\n# For a full list of active aliases, run `alias`.\r\n#\r\n# Example aliases\r\n# alias zshconfig=\"mate ~/.zshrc\"\r\n# alias ohmyzsh=\"mate ~/.oh-my-zsh\"\r\nalias ls=\"ls -G\"\r\nalias l=\"ls -lG\"\r\n\r\n# Adds node_modules/.bin to the PATH\r\nnpm_chpwd_hook() {\r\n    if [ -n \"${PRENPMPATH+x}\" ]; then\r\n        PATH=$PRENPMPATH\r\n        unset PRENPMPATH\r\n    fi\r\n    if [ -f package.json ]; then\r\n        PRENPMPATH=$PATH\r\n        PATH=$(npm bin):$PATH\r\n    fi\r\n}\r\n\r\nadd-zsh-hook preexec npm_chpwd_hook\r\n```\r\n\r\nAnd here is the `PATH` environment variable upon starting up a `zsh` shell.\r\n\r\n```\r\n/Users/xxx/.nvm/versions/node/v14.15.1/bin:/Users/xxx/.pyenv/shims:/Users/xxx/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/opt/pyenv/bin\r\n```\r\n\r\nNow, let's say I have a `.nvmrc` file with the contents `14.15.2`. This is what I see happen:\r\n\r\n```zsh\r\n➜ $ cd /path/to/my/project\r\n➜ $ cat .nvmrc\r\n14.15.2\r\n➜  $ node --version\r\nv14.15.1\r\n➜  $ nvm use\r\nFound '/Users/xxx/projects/xxx/xxx/.nvmrc' with version <14.15.2>\r\nNow using node v14.15.2 (npm v6.14.9)\r\n➜  $ node --version\r\nv14.15.1\r\n```\r\n\r\nNotice that originally my node version is set to `14.15.1` and when I issue the command `nvm use` it reports that I have switched to `14.15.2`. Yet when I check the node version it has not been updated from the old version.\r\n\r\nHere is the resulting $PATH after `nvm use`:\r\n\r\n```\r\n/Users/xxx/projects/xxx/xxx/node_modules/.bin:/Users/xxx/.nvm/versions/node/v14.15.1/bin:/Users/xxx/.pyenv/shims:/Users/xxx/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/opt/pyenv/bin\r\n```\r\n\r\nIt's as if, for some reason, the `14.15.1` (old version) of `node` is pre-loaded in my `PATH` and isn't being overwritten with `nvm use`. In `bash`, when I would issue the `nvm use` command, it would alter the `PATH` so that whatever version of `node` I specified would be listed there.\r\n\r\nAnyone have any idea what might be going on or how I can fix this? I've already tried reinstalling ohmyzsh several times, I've tried deleting my `bashrc` files before installation as well. I even tried manually uninstalling/reinstalling `nvm`.\r\n\r\nAny help would be greatly appreciated.\r\n\r\n\r\n",
        "labels": "Support",
        "id": 43725
    },
    {
        "title": "Delete Key with empty line exits iTerm2",
        "body": "Hi All, \r\nBeen using OMZ for a while, and loving it - thanks for all the hard work. \r\nMy setup is (I think) relatively simple: \r\n- MacOS Catalina 10.15.7\r\n- iTerm2 3.4.3\r\n- zsh 5.8 (x86_64-apple-darwin19.6.0)\r\n- OhMyZsh - latest (upgrade_oh_my_zsh run today)\r\n- PowerLevel10k theme\r\n\r\nMy issue is that when I press the \"Del\" key on a blank line in a terminal session, the session ends.  If I have text on the line to the left of the cursor, then I get a system bell. If I have text to the right of the cursor then it deletes this text as expected. \r\n\r\nI can't see an exit command being sent (am only checking .zsh_history), and don't have any custom key mappings in OMZ.  Tested in standard Terminal app, and it doesn't happen.  Also tested in iTerm with a bash session and it doesn't happen. \r\n\r\nThe issue has only started relatively recently - I've tried reversing all the changes I can remember, but hasn't helped.  I've removed all plugins and changed to robbyrussell theme, but still happening. \r\n\r\nI'm sure it's a configuration somewhere, but don't know where to look next. Appreciate any suggestions.",
        "labels": "Support",
        "id": 43726
    },
    {
        "title": "Zsh function problem",
        "body": "I have a small doubt with Zsh. First of all, sorry about putting this issue here, but I don't find the solution for my problem.\r\nI want to create a function that, depending on which terminal I'm using, returns one or other thing. This is what I have. Where is the error?\r\nThanks and sorry for this stupid issue :(\r\n```\r\nfunction sshCompatible {\r\n  if [$TERM != \"xterm-256color\"]; then\r\n    ssh $1\r\n  else\r\n    TERM=xterm-256color ssh $1\r\n  fi\r\n}\r\n```",
        "labels": "Support",
        "id": 43727
    },
    {
        "title": "Include function in grep.zsh",
        "body": "I want to include this in my `custom/lib/grep.zsh` but I don't know how to do it because of the cache.\r\n\r\n```\r\n# Recursively search pattern, ignore case, ignore binary files,\r\n# prefix with line number within file\r\nfunction grepr() {\r\n  grep -rIin \"$1\" . \"$GREP_OPTIONS\"\r\n}\r\n```\r\n",
        "labels": "Support",
        "id": 43728
    },
    {
        "title": "Windows WSL2 Ubuntu terminal abnormal color block on some file name/dir",
        "body": "Hi, I am using WSL2 ubuntu on Windows Terminal version 1.4.3243.0, and my zsh version is zsh 5.4.2 (x86_64-ubuntu-linux-gnu). I recently updated both my Windows Terminal and my zsh, and now zsh theme doesn't work correctly as there are color boxes on some of the file names. I am using theme dracula, and I have the same problem with other themes, such as robbyrussell.\r\n![image](https://user-images.githubusercontent.com/47999440/101697283-8d237e00-3a45-11eb-8cb9-c4a02f81fadf.png)\r\n![image](https://user-images.githubusercontent.com/47999440/101697425-cf4cbf80-3a45-11eb-9aad-3d844d7b4ac9.png)\r\n",
        "labels": "Support",
        "id": 43729
    },
    {
        "title": "tab autocompletion doesn't work after equal sign (=)",
        "body": "Hi, my zsh can auto complete the path when using tab after regular commands like \"cd $directory\". However, when I try to fill out a command using \"some function input=$directory\" it can not auto complete the directory. Could you please help me understand what's going on here? Thanks!",
        "labels": "Support",
        "id": 43730
    },
    {
        "title": "I just installed OMZ and my command prompt is just an arrow with no information?",
        "body": "<img width=\"567\" alt=\"Screen Shot 2020-12-08 at 7 16 00 pm\" src=\"https://user-images.githubusercontent.com/19885532/101464406-53417180-398a-11eb-8e42-0bad1d3c5eae.png\">\r\n\r\nI've tried unistalling and reinstalling zsh with homebrew. I've also tried updating OMZ. I have no idea what the issue is because I can't find anyone else who's had this issue. I also have checked the .zshrc file and the default theme is there? Why can't I see what folder I am in? I am on Mac OS Mojave. Please Help!",
        "labels": "Support",
        "id": 43731
    },
    {
        "title": "zsh isn't aware of new installations",
        "body": "➜  zsh --version\r\nzsh 5.8 (x86_64-ubuntu-linux-gnu)\r\n\r\n$ sudo apt install xxxyyyzzz\r\n$ xxx(TAB)\r\n\r\nIt doesn't auto complete, `source ~/.zshrc` doesn't work either.\r\n\r\nWhen I open another terminal,however, it works fine.   ",
        "labels": "Support",
        "id": 43732
    },
    {
        "title": "Windows Subsystem for Linux (V2) Colors and Git Slow",
        "body": "Hello,\r\nI have setup OMZ on a new laptop W10 with WSL2.\r\nI is within the Windows Terminal.\r\nThe colors are not displayed as demoed here : https://github.com/ohmyzsh/ohmyzsh/wiki/Themes\r\ne.g. the folders have a green background (what ever the theme, Robby, agnoster, Bira)\r\n\r\n",
        "labels": "Support",
        "id": 43733
    },
    {
        "title": "How can I source a script before a theme?",
        "body": "Hi, I want to add [kube_ps1](https://github.com/jonmosco/kube-ps1) to my custom PROMPT,\r\nIn order to use the function `kube_ps1` I need to source the `sh` file before.\r\nIs there any way to source the sh before loading the theme?\r\nBecause sourcing from the theme just doesn't work (:\r\nThanks.\r\n\r\n\r\n",
        "labels": "Support",
        "id": 43734
    },
    {
        "title": "Cannot source .zshrc.   autoload - command not found and errors with .oh-my-zsh/tools/ when building a Docker container",
        "body": "Hey, There are many things to add at the beginning:\r\n1. I am sourcing .zshrc in Dockerfile (blackarch-zsh found on my dockerfiles [repo](https://github.com/Cloufish/dockerfiles)  so you can I think reproduce this issue)\r\n2. I think I've installed properly oh-my-zsh with get oneliner, though if not, then I'm really sorry!\r\n3. I'm using Luke Smiths wget .zshrc here [.zshrc](https://raw.githubusercontent.com/Cloufish/voidrice/master/.config/zsh/.zshrc)\r\n4. The OS is Arch Linux\r\n\r\n![image](https://user-images.githubusercontent.com/32965886/100478374-4cde0a80-30eb-11eb-90fe-10640111858a.png)\r\n\r\nIf there's more to add, let me know!\r\n",
        "labels": "Support",
        "id": 43735
    },
    {
        "title": "'一天' caused zsh prompt removed",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n'一天' caused sh prompt removed\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. paste '一天' in term\r\n2. press backspace 1 time\r\n3. See error\r\n\r\n**Expected behavior**\r\nsh prompt should not be removed\r\n\r\n**Screenshots and/or Recordings**\r\nIf applicable, add screenshots to help explain your problem.\r\nYou can also record an asciinema session: https://asciinema.org/\r\n<img width=\"232\" alt=\"Screen Shot 2020-11-27 at 17 52 14\" src=\"https://user-images.githubusercontent.com/1279128/100435786-64ac9300-30d9-11eb-8ad4-413b3faa132a.png\">\r\n\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: macOS\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: zsh 5.7.1 (x86_64-apple-darwin19.0)\r\n - Terminal emulator: iTerm2 3.3.11\r\n\r\n",
        "labels": "Support",
        "id": 43736
    },
    {
        "title": "installer: Failed to connect to github: Connection refused",
        "body": "\r\n sh -c \"$(curl -fsSL http://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\r\n\r\ncurl: (7) Failed connect to raw.github.com:443; Connection refused",
        "labels": "Support",
        "id": 43737
    },
    {
        "title": "ZSH issues after a known bug occurrence",
        "body": "Soon after installing Brew then NVM, I got the `Insecure completion-dependent directories detected:` error in Iterm2 on MAC Catalina (which comes installed with zsh) and after doing research, I stumbled upon https://github.com/ohmyzsh/ohmyzsh/issues/6835.  \r\n\r\nRan:\r\n`chmod 755 /usr/local/share/zsh`\r\n`chmod 755 /usr/local/share/zsh/site-functions`\r\n\r\nand also did the following:\r\n\r\n> Set ZSH_DISABLE_COMPFIX=true in your zshrc file, before oh-my-zsh.sh is sourced, and update OMZ to the latest version. It should ignore these permission issues and load the completion system normally.\r\n\r\nRelaunched Iterm2, but it takes forever to load and all the commands run about 5 seconds slower than before.  Also gets stuck on `git` during the load - once it's fully loaded and in usable state, I get this error:\r\n\r\n<img width=\"774\" alt=\"Screen Shot 2020-11-20 at 1 16 59 PM\" src=\"https://user-images.githubusercontent.com/13421938/99846884-62c05e00-2b34-11eb-8fd5-152d80dc5213.png\">\r\n\r\nAfter running the git diagnostics command as instructed got a long slew of errors which I'm filing an issue at:\r\n\r\n>  https://github.com/romkatv/gitstatus/issues/new\r\n\r\nI think `gitstatus` doesn't play nicely with POWERLEVEL9K\r\n",
        "labels": "Support",
        "id": 43738
    },
    {
        "title": "plugin pyenv does not work or I don't know How use it ?",
        "body": "Hi,\r\n\r\nI just install a fresh version of ohmyzsh and I want to use pyenv plugin.\r\n\r\nso I have add the plugin in my .zshrc \r\n\r\n`plugin=(git pyenv)`\r\n\r\nI have restart my shell, but when I am in a directory with a pyenv local python version (I have .python-version in my folder) they are nothing in my prompt.\r\n\r\nNormaly the version of python should be write in my prompt ?\r\n\r\nthanks for your help\r\n ",
        "labels": "Support",
        "id": 43739
    },
    {
        "title": "Vertical allign in zsh.",
        "body": "I am using iterm+zsh. Is there any way to vertically allign(center) after the command is executed?",
        "labels": "Support",
        "id": 43740
    },
    {
        "title": "I reported an error when I installed zsh-autosuggestions",
        "body": "hi：I reported an error when I installed zsh-autosuggestions\r\n\r\nThe error message is as follows：\r\n/Users/ice/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.plugin.zsh:source:1: no such file or directory: /Users/ice/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh^M\r\n\r\n\r\n\r\nmacOS: 10.13.6\r\nzsh --verison\r\nzsh 5.8 (x86_64-apple-darwin17.7.0)\r\n\r\n\r\nI installed it\r\ngit clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions\r\n\r\nvim  ~./.zshrc\r\n\r\nplugins=(git zsh-autosuggestions)\r\n\r\nsource ~/.zshrc \r\n\r\nThen report the error",
        "labels": "Support",
        "id": 43741
    },
    {
        "title": "symlink is expanded in prompt after using sudo",
        "body": "`.oh-mu-zsh` commit id is `9b11986`\r\n\r\n`Linux bbe-0 4.14.108-ti-r137 #1bionic SMP PREEMPT Tue Aug 25 02:46:55 UTC 2020 armv7l armv7l armv7l GNU/Linux`\r\n\r\n`zsh 5.4.2 (arm-unknown-linux-gnueabihf)`\r\n\r\n![image](https://user-images.githubusercontent.com/956693/99504265-400a3a00-29ba-11eb-9ec3-85ad6508c03e.png)\r\n",
        "labels": "Support",
        "id": 43742
    },
    {
        "title": "possible to share configs between users and in sudo? (mac)",
        "body": "Hi, \r\n\r\nI just installed zsh and omz on Mac OS 10.14 using iterm. For context I am a person with a rudimentary grasp of *nix. \r\n\r\nI think this is pretty spiffy and I would like to\r\n\r\n1. share plugin, theme and other configurations between users on my machine. So for example if I install and enable a theme for user1, user2 will be the same. \r\n\r\n2. for above, also include sudo/su/root. \r\n\r\nFor (1) some possible ways of doing this might be\r\na. tell zsh that instead of looking for it's configuration files in  `~/.oh-my-zsh`, it should look elsewhere and specify a location outside any home directory (to avoid permissions issues I guess). \r\nb. use some sort of syncing program to watch for changes in any of the relevant files/directories and automatically update all the others as needed\r\n\r\nI am not able to locate any zsh/omz config files in home directory for root which `/var/root` so even if I had to do it manually I am not sure how. \r\n\r\nAlso I will say that even though I have multiple users on my computer, I am actually the only person who uses it. So any solution need not be comprehensible to anyone else, and there would be no possibility of the same file being actively edited by multiple people simultaneously. \r\n\r\ni'm sure someone else has already thought of this and figured it out.. unfortunately it's the kind of problem whose keywords are so vague as to make finding info difficult\r\n\r\nany thoughts aoppreciated\r\n",
        "labels": "Support",
        "id": 43743
    },
    {
        "title": "Display error when use tab to autocomplete",
        "body": "#### 1. Look for similar issues already posted (including closed ones)\r\n\r\nThere is a similar issue #7784. But it doesn't help me.\r\n\r\nWhen I use tab to autocomple the command, two cases happen:\r\n1. command start with what I have typed is unique:  \r\nIt autocomple directly. At this time everything is ok.\r\n2. command start with what I have typed is not unique:  \r\nZsh will show items below to be selected. At this time, the first two character will duplicate.\r\n\r\nFor example,\r\n\r\n```sh\r\n➜  ~ ec<tab>\r\n➜  ~ echo\r\n\r\n➜  ~ echo<tab>\r\n➜  ~ ececho\r\necho    echotc  echoti\r\n```\r\n \r\n#### 2. Include as much relevant information as possible\r\n\r\nI install archlinux in virtualbox(version 6.1.16-1).\r\n\r\n* `Linux Arch-vbox 5.9.8-arch1-1 #1 SMP PREEMPT Tue, 10 Nov 2020 22:44:11 +0000 x86_64 GNU/Linux`\r\n* `zsh 5.8 (x86_64-pc-linux-gnu)`\r\n* `oh-my-zsh version: 9b119866`\r\n* `.zshrc`\r\n```config\r\nexport ZSH=\"$HOME/.oh-my-zsh\"\r\nZSH_THEME=\"robbyrussell\"\r\nsource $ZSH/oh-my-zsh.sh\r\n```\r\n\r\n#### 3. Try to make sure the issue is due to Oh My Zsh\r\n\r\nIf I comment out `source $ZSH/oh-my-zsh.sh`, pure zsh works well.\r\n\r\nI've tried xterm or alacritty, both works well.",
        "labels": "Support",
        "id": 43744
    },
    {
        "title": "APP Snaps icon packs a few after using On My ZSH with KDE",
        "body": "I'm using KDE Neon 5.20, after installing ZSH the icons of the snaps packages are no longer available in the released Plasma, so the only way to access the APP is by searching for its name, I noticed that this also happens with Kubuntu, Xubuntu, and other derivatives with KDE.\r\n\r\nI was able to correct the problem by adding the following line `emulate sh -c 'source /etc/profile.d/apps-bin-path.sh'` in the file `/etc/zsh/zprofile`.\r\n\r\nBut this is a bit of a pain to keep doing, are there any other alternatives, or any predictions for correcting the problem?\r\n\r\nNOTE: I am not using plugs with ZSH.",
        "labels": "Support",
        "id": 43745
    },
    {
        "title": "I cannot print a single minus character",
        "body": "**Describe the bug** && **To Reproduce**\r\nI cannot print a single minus character\r\n![image](https://user-images.githubusercontent.com/1277920/98738125-fe5c0c80-2385-11eb-8e44-b9051969ac84.png)\r\n\r\n - OS / Distro: Ubuntu 20.04\r\n - Latest ohmyzsh update? Yes\r\n - ZSH Version: zsh 5.8 (x86_64-ubuntu-linux-gnu)\r\n - Terminal emulator: [e.g. Tilix]\r\n",
        "labels": "Support",
        "id": 43746
    },
    {
        "title": "Have no history in new tabs",
        "body": "I understand from the similar issues, in latest release was implemented possibility to have separate history of commands. I used `unsetopt no_share_history` and `setopt share_history` in all console tabs, but after restart of my PC some of consoles now have absolutely no history, which kinda blocks me from normal effective work.\r\nCan I set somewhere that i want always and everywhere have all my history shared among every tab ever and never ever lose it unless I explicitly configure it?\r\n",
        "labels": "Support",
        "id": 43747
    },
    {
        "title": "omz_urlencode:2: bad set of key/value pairs for associative array on macOS",
        "body": "Steps to reproduce.\r\n1. Press <kbd>Enter</kbd>\r\n\r\n**Error**\r\n\r\n```\r\nomz_urlencode:2: bad set of key/value pairs for associative array                                                      \r\nomz_urlencode:2: bad set of key/value pairs for associative array\r\n```\r\n> .zshrc\r\n```zsh\r\nexport LANG=\"en_US.UTF-8\"\r\nexport LC_ALL=\"en_US.UTF-8\"\r\nexport EDITOR=\"vim\"\r\n# Path to your oh-my-zsh installation.\r\nexport ZSH=\"$HOME/.dotfiles/.oh-my-zsh\"\r\n\r\nCOMPLETION_WAITING_DOTS=\"true\"\r\n\r\nZSH_THEME=\"robbyrussell\"\r\nsource $ZSH/oh-my-zsh.sh\r\nsource $HOME/.zplug/init.zsh\r\n\r\n# zsh Plugins using zplug \r\nzplug \"zsh-users/zsh-syntax-highlighting\"\r\nzplug \"zsh-users/zsh-autosuggestions\"\r\nzplug \"zsh-users/zsh-completions\"\r\nzplug \"tysonwolker/iterm-tab-colors\"\r\nzplug \"momo-lab/zsh-abbrev-alias\"\r\nzplug \"peterhurford/up.zsh\"\r\nzplug \"jimeh/zsh-peco-history\"\r\nzplug load\r\n\r\nif command -v pyenv 1>/dev/null 2>&1; then\r\n\teval \"$(pyenv init -)\"\r\n\teval \"$(pyenv virtualenv-init -)\"\r\nfi\r\nexport PYENV_VIRTUALENV_DISABLE_PROMPT=0\r\n```",
        "labels": "Support",
        "id": 43748
    },
    {
        "title": "fatal: could not create leading directories error on macOS",
        "body": "When I run `sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"` on macOS, I get the following error\r\n\r\n```\r\nCloning Oh My Zsh...\r\nfatal: could not create leading directories of '/home/me/.oh-my-zsh': Operation not supported\r\nError: git clone of oh-my-zsh repo failed\r\n```\r\n\r\nThis is for a fresh install. My home directory is `/Users/mydomainlogin`. I'm running macOS on a computer managed by my work, so not only is the OMZ installer trying to install OMZ in the standard Linux home directory, it's also thinking that my firstname is my username (whereas whoami reports `mydomainlogin`). I also tried running bash and then invoking the install script, but I still get the same error.\r\n\r\nDoes anyone know what may be causing this issue?\r\n\r\nmacOS version: 10.15.7, Catalina\r\nZSH: 5.8 (from Homebrew)\r\nTerminal: tried iTerm2 and the stock Terminal app",
        "labels": "Support",
        "id": 43749
    },
    {
        "title": "Offline installation package",
        "body": "When my device has no way to connect to the Internet, and there is no offline package to install this software?",
        "labels": "Support",
        "id": 43750
    },
    {
        "title": "How to change time from 12H to 24H.",
        "body": "Good morning!\r\n\r\nI have a simple question. **Does anyone know how to change the time of zsh (or oh-my-zsh, I don't know which) from 12H to 24H?**\r\nIn the next screenshot you can see that in my computer are the 14:23 but in the terminal it shows 2:23.\r\nThanks!\r\n![Captura de pantalla de 2020-10-25 14-23-42](https://user-images.githubusercontent.com/66907184/97108419-b7a3bc80-16cd-11eb-8a3a-b186b856e2b5.png)\r\n",
        "labels": "Support",
        "id": 43751
    },
    {
        "title": "Can't unset alias with bang even with NO_BANG_HIST",
        "body": "\r\n**Describe the bug**\r\nA clear description of what the bug is.\r\nCan't unset alias with bang even with NO_BANG_HIST\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable this plugin 'git'\r\n2. Run command 'unset 'gca!''\r\n3. See error\r\nunset: gca!: invalid parameter name\r\n\r\n**Expected behavior**\r\nalias is deleted\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: macOS\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: zsh 5.3 (x86_64-apple-darwin18.0)\r\n - Terminal emulator:Terminal\r\n\r\n",
        "labels": "Support",
        "id": 43752
    },
    {
        "title": "zsh is not working (cd: string not in pwd)",
        "body": "![image](https://user-images.githubusercontent.com/42068419/96346895-0e9f0580-10c0-11eb-8223-104123113294.png)\r\n\r\ncd: string not in pwd\r\nPlease help me to solve my problem\r\n\r\n-----\r\n\r\nTranscript:\r\n```console\r\n$ cd \"u:\\My Space\\C++\\\" && g++ Maincode.cpp -o Maincode && \"u:\\My Space\\C++\\\"Maincode\r\ncd: string not in pwd: u:\\My Space\\C++\\\" && g++ Maincode.cpp -o Maincode && \"u:\\My\r\n```",
        "labels": "Support",
        "id": 43753
    },
    {
        "title": "Executing the same piece of code in zsh or in bash doesn't have the same behavior (involving a TCP connection)",
        "body": "Hi, \r\n\r\nI have a C++ module that handle logging for me. I have several loggers to be able to log in the console, in a file, in the syslog, in a server using TCP, and sometimes at the same time. The TCP logging is the latest addition to the module and it works like expected in bash, basic string messages are sent to my server that fill some log file for me. \r\nHowever when executing this code from a zsh environment it seems no message is sent at all. Or maybe they are sent but caught at some point?\r\n\r\nHere is some piece of executed code that could help (not all the module obviously):\r\n\r\n```\r\nenum LogPriority {\r\n  kLogEmergency = LOG_EMERG,\r\n  kLogAlert     = LOG_ALERT,\r\n  kLogCritical  = LOG_CRIT,\r\n  kLogError     = LOG_ERR,\r\n  kLogWarning   = LOG_WARNING,\r\n  kLogNotice    = LOG_NOTICE,\r\n  kLogInfo      = LOG_INFO,\r\n  kLogDebug     = LOG_DEBUG\r\n};\r\n\r\ninline std::string GetPrioString(const smu::logging::LogPriority& prio) {\r\n  int32 max = 10;\r\n  std::string val;\r\n  switch (prio) {\r\n    case kLogEmergency:\r\n      val = \"Emergency\";\r\n      break;\r\n    case kLogAlert:\r\n      val = \"Alert    \";\r\n      break;\r\n    case kLogCritical:\r\n      val = \"Critical \";\r\n      break;\r\n    case kLogError:\r\n      val = \"Error    \";\r\n      break;\r\n    case kLogWarning:\r\n      val = \"Warning  \";\r\n      break;\r\n    case kLogNotice:\r\n      val = \"Notice   \";\r\n      break;\r\n    case kLogInfo:\r\n      val = \"Info     \";\r\n      break;\r\n    case kLogDebug:\r\n      val = \"Debug    \";\r\n      break;\r\n    default:\r\n      val = \"Info     \";\r\n      break;\r\n  }\r\n  val.append(max - val.length(), ' ');\r\n  return val;\r\n}\r\n\r\ntemplate <typename char_type, typename traits = std::char_traits<char_type> >\r\nclass TCPStreamBuffer: public std::basic_streambuf<char_type, traits> {\r\n public:\r\n  typedef typename traits::int_type int_type;\r\n\r\n  TCPStreamBuffer(const std::pair<std::string, int32>& ip_port):\r\n      std::basic_streambuf<char_type, traits>() {\r\n    client.reset(new smu::connect::TCPClient(\r\n      ip_port.first, static_cast<uint16>(ip_port.second)));\r\n  }\r\n\r\n protected:\r\n  int_type overflow(int_type c) override {\r\n    int_type const eof = traits::eof();\r\n    if(traits::eq_int_type(c, eof))\r\n      sync();\r\n    else\r\n      buffer += traits::to_char_type(c);\r\n    return c;\r\n  }\r\n\r\n  int32 sync() override {\r\n    if(buffer.size() > 0) {\r\n      client->Send(buffer);\r\n      buffer.clear();\r\n    }\r\n    return 0;\r\n  }\r\n\r\n private:\r\n  std::unique_ptr<smu::connect::TCPClient> client;\r\n  std::string buffer;\r\n};\r\n\r\nclass LogStream : public std::ostream {\r\n public:\r\n  LogStream(std::basic_streambuf<char>* sb): std::ostream(sb) {}\r\n  virtual LogStream& operator<<(const LogPriority& prio) = 0;\r\n};\r\n\r\nclass TCPStream : public LogStream {\r\n public:\r\n  explicit TCPStream(const std::pair<std::string, int32> ip_port):\r\n    LogStream(&tcpbuf), tcpbuf(ip_port) {}\r\n\r\n  TCPStream& operator<<(const LogPriority& prio) {\r\n    *this << GetPrioString(prio) << \"    \";\r\n    return *this;\r\n  }\r\n\r\n private:\r\n  TCPStreamBuffer<char> tcpbuf;\r\n};\r\n```\r\n",
        "labels": "Support",
        "id": 43754
    },
    {
        "title": "unable to install oh my zsh. Developer tools are not installing",
        "body": "Using curl I tried to install oh my zsh. But a pop up came to install developer tools. When I proceed further it searched for software and filed with \"This software cannot install the software because it is not currently available from the software update server\". \r\n\r\nthis is what i am getting \r\n\r\nxcode-select: note: no developer tools were found at '/Applications/Xcode.app', requesting install. Choose an option in the dialog to download the command line developer tools.\r\n\r\nAppreciate your help me on this. \r\n\r\nThanks \r\nRaghu",
        "labels": "Support",
        "id": 43755
    },
    {
        "title": "psql tool under oh-my-zsh clears output from the screen",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\npsql tool from PostgreSQL removes long output from the screen when user exit pager.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. open terminal (with oh-my-zsh default configuration)\r\n2. run `psql <your_database>`\r\n3. run any sql query that produces long output (to trigger pager)\r\n4. You can see query result on the screen\r\n5. press `q` to quit pager\r\n6. query result disappears from the screen\r\n\r\n**Expected behavior**\r\nQuery result stays on the screen.\r\n\r\n**Screenshots and/or Recordings**\r\nDemo and workaround\r\nhttps://asciinema.org/a/fj1Ax8qNd4lXhHfUNSi9A1Yjd\r\n\r\n**Self Check**\r\n\r\n- Have you tried reaching out on the [Discord server](https://discord.gg/ohmyzsh)? No\r\n  This can help cut down on filling up issues. We always have a few people\r\n  online that are in a variety of timezones that are willing to help you!\r\n\r\n- Also searching existing [GitHub Issues](https://github.com/ohmyzsh/ohmyzsh/issues?q=) might help you get quicker support Yes\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: [macOS 10.15.7 (19H2)]\r\n - If on Windows what version of WSL: [e.g. WSL1, WSL2]\r\n - Latest ohmyzsh update?: [e.g. Yes/No] Yes (2657c87f0aa1fe7f66062bc3452ad68347be356f)\r\n - ZSH Version: [e.g. 5.6] zsh 5.7.1 (x86_64-apple-darwin19.0)\r\n - Terminal emulator: [e.g. iTerm2] Apple_Terminal version 433, TERM=xterm-256color\r\n\r\n**Additional context**\r\nAdd any other context about the problem here. This can be themes, plugins, custom configs.\r\n",
        "labels": "Support",
        "id": 43756
    },
    {
        "title": "Why the theme changed ? maran theme",
        "body": "![image](https://user-images.githubusercontent.com/33475775/95694259-a08fb400-0c63-11eb-904e-31e9672cb469.png)\r\n![image](https://user-images.githubusercontent.com/33475775/95694264-a84f5880-0c63-11eb-9037-c4807f5f0098.png)\r\n\r\nno ssh ,when i open the iterm \r\nIt was @localhost before,update zsh changed",
        "labels": "Support",
        "id": 43757
    },
    {
        "title": "\"zsh: command not found: upgrade_oh_my_zsh\" on zsh installed via brew",
        "body": "I installed zsh via brew.\r\n`brew install zsh`\r\nI can't run update zsh:\r\n`omz update  \r\nzsh: command not found: omz`\r\nIs it an expected behavior?\r\nAre plugins need to be auto-installed from plugin section in .zshc? \r\n~/.oh-my-zsh  doesn't contain tools, it contains only 3 plugins:\r\n```\r\n% find $ZSH:\r\n/Users/igracheva/.oh-my-zsh\r\n/Users/igracheva/.oh-my-zsh/.zsh_history\r\n/Users/igracheva/.oh-my-zsh/custom\r\n```\r\n..\r\n/Users/igracheva/.oh-my-zsh/custom/plugins/zsh-completions/src/_git-flow\r\n\r\nI am just wandering how can I do best.",
        "labels": "Support",
        "id": 43758
    },
    {
        "title": "The shell console is cleared when exit from the vi editor.",
        "body": "When I work in vi and exit vi, all the original output on the shell console is flushed and only the blank page is left. Is there any setting that won't let it refresh, or am I setting something wrong? All my changes to `~/.zshrc` are limited to theme, I changed the default theme to `ys`.",
        "labels": "Support",
        "id": 43759
    },
    {
        "title": "No working at all",
        "body": "For any reason, it doesn't work at all. I've installed it some hours ago and it does work, although I use zsh for weeks. I failed both on the normal user and root user. I also tried to reinstall zsh and download it through both github and using the command specified on the oh-my-zsh website.\r\n\r\nThat is what it returns:\r\n```\r\n/root/.oh-my-zsh/tools/check_for_upgrade.sh: line 31: syntax error near unexpected token `)'\r\n/root/.oh-my-zsh/tools/check_for_upgrade.sh: line 31: `() {'\r\n./oh-my-zsh.sh: line 21: autoload: command not found\r\n./oh-my-zsh.sh: line 39: syntax error near unexpected token `('\r\n./oh-my-zsh.sh: line 39: `for plugin ($plugins); do'\r\n```\r\nAt last, I tried to open the codes and see what's wrong but, again, I failed. There are some other mistakes in the upgrade script (according to my system, Arch, I can't read it properly)",
        "labels": "Support",
        "id": 43760
    },
    {
        "title": "How to press Esc+. shortcut in vi-mode?",
        "body": "The problem is that Esc key exits to normal mode so Esc+. doesn't work in my case. How to solve it?",
        "labels": "Support",
        "id": 43761
    },
    {
        "title": "After each command, the executed command is printed before the result",
        "body": "I am not sure if it is an issue of oh-my-zsh/ but I have tested with clean systems\r\nAfter I install oh-my-zsh, all the commands executed afterwards are printed before the result\r\n\r\nFor example the command `ls` in my home folder outputs\r\n> lsDesktop  Documents  Downloads  Music  Pictures  Temporary  Video  Workspace\r\n\r\nas you can see the `ls` is the first what is printed\r\n\r\n`lsblk` - outputs\r\n> lsblkNAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT  \r\n> sda      8:0    0  113G  0 disk  \r\n> ├─sda1   8:1    0  512M  0 part  \r\n> ├─sda2   8:2    0   50G  0 part /  \r\n> └─sda3   8:3    0 62.5G  0 part /home  \r\n> sdb      8:16   1  7.2G  0 disk  \r\n> ├─sdb1   8:17   1  647M  0 part  \r\n> └─sdb2   8:18   1   64M  0 part\r\n\r\nand so with every command which is annoying\r\n\r\nif I disable `oh-my-zsh` then the problem disappears.",
        "labels": "Support",
        "id": 43762
    },
    {
        "title": "Battery plugin not updating symbol/percentage",
        "body": "**Describe the bug**\r\nI have the ``battery`` plugin activated and the battery prompt in my right hand promt.\r\nIf I open my terminal and have a charger connected, I get the infinity symbol, as expected.\r\nHowever, if I disconnect the charger then the symbol does not update.\r\nOpening a new terminal correctly shows the percentage for the time when the terminal was opened, which does not update either.\r\n\r\n**To Reproduce**\r\n1. enable the battery plugin and add ``battery_pct_prompt`` to the righthand prompt\r\n2. connect the charger\r\n3. open a terminal and see the infinity sign\r\n4. disconnect the charger\r\n5. use some battery\r\n6. still see the infinity sign.\r\nWorks with percentage too.\r\n\r\n**Expected behavior**\r\nSign/ percentage should update\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: Arch Linux\r\n - Latest ohmyzsh update?: yes. commit 93c837fec8e9fe61509b9dff9e909e84f7ebe32d\r\n - ZSH Version: zsh 5.8 (x86_64-pc-linux-gnu)\r\n - Terminal emulator: lilyterm\r\n\r\n**Additional context**\r\nPrompt variable I use. the time works fine.\r\n```\r\n # current time in 24hh:mm:ss, battery status\r\nRPROMPT=\"%* $(battery_pct_prompt)\" \r\n```\r\nmy theme: https://github.com/meredrica/system/blob/master/h/.oh-my-zsh/themes/meredrica.zsh-theme\r\nmy zsh.rc: https://github.com/meredrica/system/blob/master/h/.zshrc",
        "labels": "Support",
        "id": 43763
    },
    {
        "title": "How to disable some commands?",
        "body": "For example, I want to disable the Linux command \"CP\" and \"SCP\".",
        "labels": "Support",
        "id": 43764
    },
    {
        "title": "Permission denied for ~/.zshrc",
        "body": "I am always getting permission denied on using the command `~/.zshrc` , in zsh and also in bash. \r\nTo solve this problem I followed the issue post such as https://github.com/ohmyzsh/ohmyzsh/issues/3291 and many more but cant seem to solve my problem. \r\nI am doing this to add a theme powerlevel9k to Oh-my-Zsh on Ubuntu.\r\nI have tried using `vim ~/.zshrc` and quite confused to solve this problem using Vscode.\r\nThe outcome of `ls -l $HOME/.zshrc ` is `-rw-r--r-- 1 rack rack 3535 Sep 20 19:20 /home/rack/.zshrc` if it helps in any way.\r\nThank You\r\nP.S. Total Noob in terminal and linux please help😢😢😢",
        "labels": "Support",
        "id": 43765
    },
    {
        "title": "Terminal shows a red prompt when startup on Mac",
        "body": "Only startup in terminal, it shows red prompt, other operations are showing right color prompt.\r\n**.zshrc** file I don't change anything and no errors show, how should I check the details when startup or how to fix it?  \r\n![image](https://user-images.githubusercontent.com/11239033/93663172-4a7e8500-fa98-11ea-8bd9-e7c2d2b25430.png)\r\n",
        "labels": "Support",
        "id": 43766
    },
    {
        "title": " Insecure completion-dependent directories detected",
        "body": "After installing it on my mac, I'm facing these messages / errors. \r\n\r\n```\r\n[oh-my-zsh] Insecure completion-dependent directories detected:\r\ndrwxr-xr-x  3 502  admin   96 Jul 25 23:13 /usr/local/share/zsh\r\ndrwxr-xr-x  4 502  admin  128 Jul 26 03:38 /usr/local/share/zsh/site-functions\r\nlrwxr-xr-x  1 502  admin   39 Jul 26 03:38 /usr/local/share/zsh/site-functions/_brew -> ../../../Homebrew/completions/zsh/_brew\r\nlrwxr-xr-x  1 502  admin   44 Jul 26 03:38 /usr/local/share/zsh/site-functions/_brew_cask -> ../../../Homebrew/completions/zsh/_brew_cask\r\n\r\n[oh-my-zsh] For safety, we will not load completions from these directories until\r\n[oh-my-zsh] you fix their permissions and ownership and restart zsh.\r\n[oh-my-zsh] See the above list for directories with group or other writability.\r\n\r\n[oh-my-zsh] To fix your permissions you can do so by disabling\r\n[oh-my-zsh] the write permission of \"group\" and \"others\" and making sure that the\r\n[oh-my-zsh] owner of these directories is either root or your current user.\r\n[oh-my-zsh] The following command may help:\r\n[oh-my-zsh]     compaudit | xargs chmod g-w,o-w\r\n\r\n[oh-my-zsh] If the above didn't help or you want to skip the verification of\r\n[oh-my-zsh] insecure directories you can set the variable ZSH_DISABLE_COMPFIX to\r\n[oh-my-zsh] \"true\" before oh-my-zsh is sourced in your zshrc file.\r\n```",
        "labels": "Support",
        "id": 43767
    },
    {
        "title": "How can I start zsh with different environments?",
        "body": "Looking to emulate `/bin/bash -l --init-script '/path'` with zsh.\r\n\r\nSpecifically, I'm starting a number of python virtualenv or nodeenv. These require sourcing environment into the current shell.\r\n\r\nEg `source penv/bin/activate` which sets a bunch of stuff to relocate package search directories and updates PATH.\r\n\r\nI need to start 4 of them with different environments, and am trying to automate iterm to do this and start the apps. \r\n\r\nI found a solution somewhere where I've added this to my ZSHRC\r\n\r\nLet's say there's no direct way to execute zsh with an --init-script like bash does. How can I manually kickoff executing the full login startup?\r\n\r\nSo far, I have this...\r\n\r\nadd the following to .zshrc\r\n```\r\nif [[ $1 == eval ]]\r\nthen\r\n    \"$@\"\r\n    set --\r\nfi\r\n```\r\nThen, I call zsh like this: `/bin/zsh -s eval \"source path/to/bin/activate; python -c 'print(\\'it works\\')`\r\n\r\nI don't know why it runs .zshrc, but doesn't set ALL my normal PATH variables, but it is missing some.\r\n\r\nIf there isn't a way to emulate bash, then is there a way to execute the missing startup scripts?\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "labels": "Support",
        "id": 43768
    },
    {
        "title": "env: node: No such file or directory",
        "body": "I've recently installed oh-my-zsh and I noticed that after installing it I'm unable to use npm commands, it is unable to find node. \r\n\r\nI've also not recently switched from bash to zsh, I've been using zsh from past 7-8 months. \r\n\r\nHere is the screenshot of .zshrc file\r\n![Screenshot 2020-09-13 at 4 17 22 PM](https://user-images.githubusercontent.com/33938128/93016807-76ee5900-f5e1-11ea-8776-804dc13574a0.png)\r\n![Screenshot 2020-09-13 at 4 17 36 PM](https://user-images.githubusercontent.com/33938128/93016808-79e94980-f5e1-11ea-9ffe-839d8d3ade5c.png)\r\n\r\n",
        "labels": "Support",
        "id": 43769
    },
    {
        "title": "git - repo's current master branch displays as \"*1 !1 ?1\"",
        "body": "Hi all, I spent some time researching this issue and looking at the docs, but unfortunately I couldn't find anything helpful out there.\r\n\r\nI have one specific GitHub repository that's current (last commit + push was yesterday), yet still displays as `master *1 !1 ?1`. All other repositories I work with don't display any markers when `master` is clean (see screenshot for a comparison).\r\n\r\n`git status` doesn't help, just says that everything's current and working tree is clean; `git log` doesn't tell me anything else either.\r\n\r\nI'd really appreciate it if someone could either explain what those markers mean or point me to some resource where that's documented so I can find out why they're being displayed for that repo in the first place.\r\n\r\n![Screenshot_20200910_102012](https://user-images.githubusercontent.com/41571384/92700569-43949b80-f34f-11ea-8dc0-5b4f14c918c1.png)",
        "labels": "Support",
        "id": 43770
    },
    {
        "title": "MacOS /usr/local/share/zsh folder permissions",
        "body": "**Describe the bug**\r\nAbstract: Permissions for user is ok but for the group seems not to be right.\r\n\r\nWhen I set users of these folders as chown my-user:admin and their permissions as chmod 755 seem to be ok.\r\nBut when I set users as chown root:admin and chmod 775 gives this error.\r\n\r\nIt doesn't make sense providing security by giving \"write rights\" to a user but not giving to a group, especially if the group is admin.\r\n\r\n`[oh-my-zsh] Insecure completion-dependent directories detected:\r\ndrwxrwxr-x  3 root  admin   96 Nov 21  2018 /usr/local/share/zsh\r\ndrwxrwxr-x  5 root  admin  160 Aug 18 14:27 /usr/local/share/zsh/site-functions\r\n\r\n[oh-my-zsh] For safety, we will not load completions from these directories until\r\n[oh-my-zsh] you fix their permissions and ownership and restart zsh.\r\n[oh-my-zsh] See the above list for directories with group or other writability.\r\n\r\n[oh-my-zsh] To fix your permissions you can do so by disabling\r\n[oh-my-zsh] the write permission of \"group\" and \"others\" and making sure that the\r\n[oh-my-zsh] owner of these directories is either root or your current user.\r\n[oh-my-zsh] The following command may help:\r\n[oh-my-zsh]     compaudit | xargs chmod g-w,o-w\r\n\r\n[oh-my-zsh] If the above didn't help or you want to skip the verification of\r\n[oh-my-zsh] insecure directories you can set the variable ZSH_DISABLE_COMPFIX to\r\n[oh-my-zsh] \"true\" before oh-my-zsh is sourced in your zshrc file.`\r\n\r\n**To Reproduce**\r\n1. Add user to a group\r\n2. Set owner of folders under /usr/local (not /usr/local but /usr/local/*) as root:admin by using chown\r\n3. Set mod of folders under /usr/local (not /usr/local but /usr/local/*) as 775 by using chmod\r\n4. Start a shell\r\n\r\n**Expected behavior**\r\nGiving write permission for /usr/local/share/zsh to the admin group should not be a problem.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: macOS\r\n - If on Windows what version of WSL: Catallina 10.15.6\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: 5.7.1\r\n - Terminal emulator: iTerm2\r\n",
        "labels": "Support",
        "id": 43771
    },
    {
        "title": "Kitty + zsh ",
        "body": "**Describe the bug**\r\nWhen going to zsh as my main shell (either by changing from `/bin/bash` to `/bin/zsh` in `/etc/passwd` or by doing the `chsh` command), Kitty is not in the list of installed software (while being present in ~/.local/bin and ../share/applications/kitty.desktop).\r\nI tested by going to /bin/bash as my shell and kitty is present and I can launch it normally.\r\nOther softwares in share/applications (mupdf, lf file manager, zotero...) are recognized and I can interact with them from my launcher.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Change to /bin/zsh as main shell\r\n2. Kitty cannot be launched normally through launcher, I need to run it from my terminal where it is found\r\n\r\n**Expected behavior**\r\nI would expect that changing the shell to zsh while having the exact same \"$PATH\" would work.\r\n\r\n**Environment details**\r\nKDE Neon 5.19.5\r\nKDE Framework 5.73 \r\nKitty 0.18.3\r\nZsh : 5.8\r\n\r\nThe .zshrc file is standard except my $PATH my list of export and my aliases. If you think any of this might be the culprit, I will paste them.",
        "labels": "Support",
        "id": 43772
    },
    {
        "title": "I want to modify my zsh prompt",
        "body": "I like robbyrussell theme by I don't want it to show my PC username. I'm using WSL2 and terminal(with Ubuntu). And I want it to say `codingonsteroid💉💉💉 ➜ _(yes I want to use emoji)_\r\n\r\nInstead of my `PC_USER_NAME ➜`\r\n\r\n**robbyrussell.zsh-theme file**\r\n```\r\nPROMPT=\"%(?:%{$fg_bold[green]%}➜ :%{$fg_bold[red]%}➜ )\"\r\nPROMPT+=' %{$fg[cyan]%}%c%{$reset_color%} $(git_prompt_info)'\r\n\r\nZSH_THEME_GIT_PROMPT_PREFIX=\"%{$fg_bold[blue]%}git:(%{$fg[red]%}\"\r\nZSH_THEME_GIT_PROMPT_SUFFIX=\"%{$reset_color%} \"\r\nZSH_THEME_GIT_PROMPT_DIRTY=\"%{$fg[blue]%}) %{$fg[yellow]%}✗\"\r\nZSH_THEME_GIT_PROMPT_CLEAN=\"%{$fg[blue]%})\"\r\n```",
        "labels": "Support",
        "id": 43773
    },
    {
        "title": "shrink-path change view using shortcut",
        "body": "Hi!\r\nMy path uses not the full path of my current directory.\r\nFor example: ~/Dow/test/test-124-12424-fsfs-232442-fsf-/forum/something\r\n\r\nLike you can see instead \"Download\" is \"Dow\".\r\nI would like to use keyboard shortcut which will show me the original path and undo this using the same shortcut.\r\n\r\nHow can I achieve that?",
        "labels": "Support",
        "id": 43774
    },
    {
        "title": "Git pull and push ask credentials",
        "body": "Hello there I am using oh my zsh as a terminal shell on windows 10. Before I used git bash. On git bash when I trying to push or pull code it was not prompting to put user name and password of my company. But on oh my zsh it is asking the credentials. Why is that? Is there any solution to that?\r\n",
        "labels": "Support",
        "id": 43775
    },
    {
        "title": "complete:13: command not found: compdef and it cannot be solved by any mehod mentioned before",
        "body": "\r\nHi team, \r\nI met this error from ytd. I saw there was an issue with the same question. but I tried every method mentioned in that issue and it didn't help at all. \r\nmy zsh version : zsh 5.7.1 (x86_64-apple-darwin19.0)\r\nwhen I tired to delete zcompdump files, it's said cannot find that file:\r\n$ rm ~/.zcompdump*\r\nrm: /Users/yangyi/.zcompdump*: No such file or directory\r\n",
        "labels": "Support",
        "id": 43776
    },
    {
        "title": "Function not working properly after oh my zsh update",
        "body": "So after an update in ohmyzsh one of my function stopped working randomly I didn't change the function at all and have been using it for past 2 years on ohmyzsh without any issue but suddenly it started erroring. Though am not good in making functions but this one never had any issue for me. Also it works on bash and zsh without oh my zsh. So maybe something changed in ohmyzsh maybe that am not aware of that started causing this issue. All of my other functions are working without any issues.\r\n Function\r\n```\r\nfunction diff() {\r\n  cd /home/nishith/Projects/Swift/Compare/$1/\r\n  rm -r $2\r\n  rm -r $3\r\n  mkdir $2\r\n  mkdir $3\r\n  cd /home/nishith/Projects/Swift/Decompiled_Apps/$1/$2/res/\r\nfd -td layout ~/Projects/Swift/Themes/swift_installer/app/src/main/assets/overlays/$4/versions/$2/common/ | while read file\r\ndo\r\ncd $file \r\nfor f in $(ls); do\r\ncd ~/Projects/Swift/Decompiled_Apps/$1/$2/res/\r\nfd -tf $f -x cp --parents -r {} ~/Projects/Swift/Compare/$1/$2\r\ncp ./values/attrs.xml ~/Projects/Swift/Compare/$1/$2\r\ndone\r\ndone\r\n\r\ncd ~/Projects/Swift/Decompiled_Apps/$1/$3/res/\r\nfd -td layout ~/Projects/Swift/Themes/swift_installer/app/src/main/assets/overlays/$4/versions/$3/common/ | while read file\r\ndo\r\ncd $file \r\nfor f in $(ls); do\r\ncd ~/Projects/Swift/Decompiled_Apps/$1/$3/res/\r\nfd -tf $f -x cp --parents -r {} ~/Projects/Swift/Compare/$1/$3\r\ncp ./values/attrs.xml ~/Projects/Swift/Compare/$1/$3\r\ndone\r\ndone\r\ncd ~/Projects/Swift/Compare/$1/\r\nmeld $2 $3\r\n}\r\n```\r\nError \r\n```\r\ndiff:cd:1: no such file or directory: /home/nishith/Projects/Swift/Compare/--color/\r\n```\r\n\r\nIt throws errors like this with --color in the end which idk why it is happening. Tried to reinstall zsh and oh my zsh but it didn't fix.\r\n\r\n",
        "labels": "Support",
        "id": 43777
    },
    {
        "title": "terminal issue",
        "body": "Hey I am having this issue I would like help it is showing like this .oh-my-zsh git:(master) but I don't like it I want to it to look like -> only\r\n![Screenshot from 2020-08-28 04-40-10](https://user-images.githubusercontent.com/51192943/91503691-c7c73780-e8e8-11ea-895f-d004313ab0ed.png)\r\n\r\nhow can I solve this issue?\r\n",
        "labels": "Support",
        "id": 43778
    },
    {
        "title": "I recorded a scenario on a website.Is it right.",
        "body": "# About install oh my zsh and use\r\n\r\nGo to the scenario bu this link -> [I'm a link](https://katacoda.com/sysdl132/scenarios/zsh)\r\n\r\nSo is it have any bugs?\r\n\r\n- [ ] intro bugs\r\n- [ ] Command bugs\r\n- [ ] Describe bugs\r\n- [ ] Other bugs(comment what bug in a new reply)\r\n\r\n**Note** : If you want to see source code,view it in [sysdl132/katacoda-scenarios](https://github.com/sysdl132/katacoda-scenarios)  \r\n\r\n**Note 2** : My session is running on ubuntu 18.04, not 20.04",
        "labels": "Support",
        "id": 43779
    },
    {
        "title": "Font error",
        "body": "Hi after installing I got this:\r\n\r\n![image](https://user-images.githubusercontent.com/60715874/90964581-87238480-e4ca-11ea-9264-4704f09de6ce.png)\r\n\r\nWhat wrong?",
        "labels": "Support",
        "id": 43780
    },
    {
        "title": "C-r History copying 2 characters on navigation",
        "body": "When ever I use the C-r history, and use the up/down arrows (or type), the first 2 characters from the line I am interactive with seem to prepend the rest of the line (see images below). I've tried updating my ZSH, which hasn't seem to have changed anything. This did just start happening out of nowhere as well.\r\n\r\n Not sure where to go from here, any help would be super appreciated!\r\n\r\n![image](https://user-images.githubusercontent.com/17806508/90955820-b4325180-e44e-11ea-80a8-fc723a4e11c6.png)\r\n\r\n![image](https://user-images.githubusercontent.com/17806508/90955854-0a9f9000-e44f-11ea-9324-c86e20472f3f.png)\r\n",
        "labels": "Support",
        "id": 43781
    },
    {
        "title": "Branch info is always displayed, even when i am in a Folder that is not under version control.",
        "body": "Hey,\r\n\r\ni am new to ohmyzsh, just installed it. Everything is working fine so far, but as i described in the title, the branch info is always displayed even when i am in a folder that isn't under version control.  Is this the default behavior? How can i change it so that the branch only gets displayed when i am in a folder that is under version control?\r\n\r\nMySystem:\r\n<img width=\"567\" alt=\"Bildschirmfoto 2020-08-22 um 13 26 13\" src=\"https://user-images.githubusercontent.com/40342018/90955123-0ee1a280-e47b-11ea-9586-adfbb9256619.png\">\r\n\r\nHow it should be:\r\n<img width=\"627\" alt=\"Bildschirmfoto 2020-08-22 um 13 26 48\" src=\"https://user-images.githubusercontent.com/40342018/90955133-24ef6300-e47b-11ea-84d4-f2138f47563b.png\">\r\n\r\nThank you for your help!",
        "labels": "Support",
        "id": 43782
    },
    {
        "title": "I have error after the last update: parse error near `<<<'",
        "body": "After the last update of oh-my-zsh I always receive the following error on every terminal start:\r\n\r\n> /home/prolife/.oh-my-zsh/lib/key-bindings.zsh:18: parse error near `<<<'\r\n\r\nAt that line of key-bindings.zsh I have the following code:\r\n```\r\n<<<<<<< Updated upstream\r\n# Use emacs key bindings\r\nbindkey -e\r\n=======\r\n#bindkey -e                                            # Use emacs key bindings\r\n>>>>>>> Stashed changes\r\n```\r\n\r\nHow to repair it?\r\n\r\n - OS / Distro: Linux Mint 19.1\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: zsh 5.4.2 (x86_64-ubuntu-linux-gnu)\r\n - Terminal emulator: urxvt\r\n",
        "labels": "Support",
        "id": 43783
    },
    {
        "title": "docker plugin error",
        "body": "**Describe the bug**\r\nI added the docker plugin to enable autocompletion. However when i pulse double tab only i can autocomplete the commands `daemon and help` the other commands not autocomplete well. \r\n\r\n**Screenshots and/or Recordings**\r\n![Screenshot from 2020-08-20 12-33-27](https://user-images.githubusercontent.com/12794770/90760701-90ea9380-e2e2-11ea-8d66-fd0e807be941.png)\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: [Ubuntu 20.04]\r\n - Latest ohmyzsh update?: [Yes]\r\n - ZSH Version: [5.8]\r\n - Terminal emulator: [Terminator]\r\n",
        "labels": "Support",
        "id": 43784
    },
    {
        "title": "No option to open a bug report on GH",
        "body": "**Describe the bug**\r\n(Kind of oxymoron, because this **is** a bug report. ~~But this one created with a hack, which will be described later...~~)\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Click on [![](https://img.shields.io/badge/-New%20issue-2ea44f)](https://github.com/ohmyzsh/ohmyzsh/issues/new/choose)\r\n2. Click on [![](https://img.shields.io/badge/-Get%20Started-2ea44f)](https://github.com/ohmyzsh/ohmyzsh/issues/new?labels=Type%3support&template=bug_report.md) in the `Bug report` section. \r\n3. Fill out the bug report, and click on ![](https://img.shields.io/badge/-Submit%20new%20issue-2ea44f)\r\n4. Observe the tag of the opened issue: the issue will be tagged as [![](https://img.shields.io/badge/-Type%3A%20support-2ea44f)](../labels/Type:%20support) instead of [![](https://img.shields.io/badge/-Type%3A%20bug-f00)](../labels/Type:%20bug)\r\n\r\n**Expected behavior**\r\nIssue should opened as [![](https://img.shields.io/badge/-Type%3A%20bug-f00)](../labels/Type:%20bug) type.\r\n\r\n**Cause for this misbehave**\r\nThe link of [![](https://img.shields.io/badge/-Get%20Started-2ea44f)](https://github.com/ohmyzsh/ohmyzsh/issues/new?labels=Type%3A+support&template=bug_report.md) in the `Bug report` is broken.\r\nHover on the `Get Started` button will reveal `labels=Type%3A+support` in the link address, whilst it should be `labels=Type%3A+bug`.\r\n\r\n~~**How did this issue opened as 'Type: bug' then?**~~\r\n~~As described above, I just changed the `labels=Type%3A+support` to `labels=Type%3A+bug`, paste the new address in the browser, and that's it... 😄~~\r\n\r\n\r\n",
        "labels": "Support",
        "id": 43785
    },
    {
        "title": "command not found: omz",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nI used to update my ohmyzsh periodically through the `upgrade_oh_my_zsh` with no issues, from a while i begin to get the message that this method will be deprecated and one should use `omz update`. but when i run this command i get the below error message. looking through the documentation, it is still mentioning `upgrade_oh_my_zsh` as the upgrade method.\r\n\r\n\r\n**Screenshots and/or Recordings**\r\n![image](https://user-images.githubusercontent.com/31882844/90403304-11ba4d00-e0a1-11ea-9de2-65aaff5b847a.png)\r\n\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: [macOS]\r\n - Latest ohmyzsh update?: [Yes]\r\n - ZSH Version: [5.8]\r\n - Terminal emulator: [iTerm2]\r\n",
        "labels": "Support",
        "id": 43786
    },
    {
        "title": "Problem with completion and prompt",
        "body": "**Describe the bug**\r\nSee this [little video](https://asciinema.org/a/LU1u2ed3CBpjtP6qfKpxvW0r2) for bug.\r\n\r\nA clear description of what the bug is.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Type something like `cd Pro`\r\n2. Press TAB key for completion\r\n3.  A list of possible matches are showed, and you can navigate over them\r\n4. The prompt seems be changed to contain command being completed (that is, it is an immutable, inaccessible text), and one copy of that incomplete command is placed after \"new\" prompt\r\n5. This \"new\" prompt exists until you press ENTER key or CTRL+L keys, then it returns to default prompt\r\n\r\n**Expected behavior**\r\nBehavior like completion in Bash.\r\n\r\n**Screenshots and/or Recordings**\r\nSee this [little video](https://asciinema.org/a/LU1u2ed3CBpjtP6qfKpxvW0r2) for bug.\r\n\r\n**Additional facts**\r\n- Furthermore, I've disabled some options for ZSH, but it seems to be ignored in Oh My ZSH:\r\n```\r\nunsetopt AUTO_CD\r\nunsetopt AUTO_LIST\r\nunsetopt BASH_AUTO_LIST\r\nunsetopt BEEP\r\n```\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: Manjaro 20.0.3 Lysia\r\n - If on Windows what version of WSL: no Windows/WSL\r\n - Latest ohmyzsh update?: Yes (recently installed)\r\n - ZSH Version: 5.8\r\n - Terminal emulator: Alacritty, Hyper\r\n\r\n**Additional context**\r\nMy wish is it works like Bash's completion, no navigation among list of possible matches. If it is not possible, then I hop you can fix this bug.\r\n",
        "labels": "Support",
        "id": 43787
    },
    {
        "title": "Awful directory listing colors",
        "body": "Hi\r\nI am sorry about asking this lame question. I have looked everywhere and I am bashing my head against the wall.\r\n\r\nI cant understand why so many amazing features are present but I cant make basic changes.\r\n\r\nBasically I hate that cyan color with directory listing, it comes with the Oh my zsh terminal.\r\n\r\nI want to completely change it to a dark red, \r\n\r\nHow can I do this?\r\n\r\nI have tried almost every theme but the directory listing is always a dark blue or that horrible cyan,\r\n\r\nI want to customise the theme completely\r\n",
        "labels": "Support",
        "id": 43788
    },
    {
        "title": "Why doesn't the `omz update` command work?",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nWhen I ran the `upgrade_oh_my_zsh` command on my iMac the other day, I was prompted that this command has been abandoned. Please use `omz update` instead.\r\n\r\nBut today I used the `upgrade_oh_my_zsh` command on MBP and ran it many times without seeing similar prompts again, and directly running `omz update` doesn't work either.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. After running the `upgrade_oh_my_zsh` command\r\n2. You are prompted to use the `omz update` command instead\r\n3. Try to run the `omz update` command\r\n\r\n**Expected behavior**\r\nIf you try to run the `omz update` command, you will upgrade and update normally as usual.\r\nBut in fact, there is no similar prompt, and the `omz` command does not work.\r\n\r\n**Screenshots and/or Recordings**\r\n![image](https://user-images.githubusercontent.com/38807139/90153919-1c809380-ddbc-11ea-9e0c-38b4f69f08dd.png)\r\n\r\n\r\n**Self Check**\r\n\r\n- Have you tried reaching out on the [Discord server](https://discord.gg/ohmyzsh)? \r\n  This can help cut down on filling up issues. We always have a few people\r\n  online that are in a variety of timezones that are willing to help you!\r\n\r\n- Also searching existing [GitHub Issues](https://github.com/ohmyzsh/ohmyzsh/issues?q=) might help you get quicker support\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: [macOS]\r\n - Latest ohmyzsh update?: [Yes]\r\n - ZSH Version: [5.7.1 (x86_64-apple-darwin19.0)]\r\n - Terminal emulator: [iTerm2]\r\n\r\n**Additional context**\r\nAs for the `omz update` command support and the replacement tip, I've found the relevant [commit](https://github.com/ohmyzsh/ohmyzsh/commit/3935ccce647c722bcfdaa771b01613079db20935#diff-395fc7e22b4a6ef8aacc81bee65def01) and [PR](https://github.com/ohmyzsh/ohmyzsh/pull/9094).\r\n",
        "labels": "Support",
        "id": 43789
    },
    {
        "title": "Trouble Updating oh-my-zsh",
        "body": "Running a mac host, iterm2, oh-my-zsh, powerlevel10k setup\r\n\r\n-- console output produced during zsh initialization follows --\r\n\r\nUpdating Oh My Zsh\r\nerror: Pulling is not possible because you have unmerged files.\r\nhint: Fix them up in the work tree, and then use 'git add/rm <file>'\r\nhint: as appropriate to mark resolution and make a commit.\r\nfatal: Exiting because of an unresolved conflict.\r\nThere was an error updating. Try again later?\r\n\r\nUpon running git diff in .oh-my-zsh I get the following output:\r\n\r\n* Unmerged path plugins/git-remote-branch/README.md\r\n* Unmerged path plugins/git-remote-branch/git-remote-branch.plugin.zsh\r\n* Unmerged path plugins/nyan/README.md\r\n* Unmerged path plugins/nyan/nyan.plugin.zsh\r\n\r\nSorry I am new to git and am unsure how to resolve these issues. Are they related to my powerlevel10k installation?\r\n\r\nAny help would be greatly appreciated\r\n",
        "labels": "Support",
        "id": 43790
    },
    {
        "title": "Can't Load or Change Themes in ZSH after Migrating from Bash on Either MacOS Catalina or CentOS Linux",
        "body": "Hello,\r\n\r\nToday I decided to make the switch from Bash to Zsh on my mac and on a Linux server I use, but even after extensive efforts, I haven't been able to load any oh-my-zsh themes in either OS. However, on both systems I am able to load plugins, so my installation isn't completely 100% dysfunctional. \r\n\r\n**System details:**\r\n**Personal Computer:**\r\nmacOS Catalina 10.15.6\r\n**zsh version:**\r\nzsh 5.7.1 (x86_64-apple-darwin19.0)\r\n**$PATH:**\r\n/home/croy/lib/cmake_install/bin:/home/croy/lib/bamtools_install/usr/bin:/home/croy/tools/gatk-4.1.8.1:/home/croy/java/jre1.8.0_231/bin:/home/croy/lib/guppy_install/bin:/home/croy/lib/sra_toolkit_install/bin:/Users/charles/bin:/usr/local/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Library/TeX/texbin:/usr/local/share/dotnet:/opt/X11/bin:~/.dotnet/tools:/Library/Frameworks/Mono.framework/Versions/Current/Commands\r\n\r\n**Server:**\r\nCentOS Linux release 7.6.1810 (Core)\r\n**zsh version:**\r\nzsh 5.0.2 (x86_64-redhat-linux-gnu)\r\n**$PATH:**\r\n/home/croy/tools/anaconda3/condabin:/home/croy/lib/cmake_install/bin:/home/croy/lib/bamtools_install/usr/bin:/home/croy/tools/gatk-4.1.8.1:/home/croy/java/jre1.8.0_231/bin:/home/croy/lib/guppy_install/bin:/home/croy/lib/sra_toolkit_install/bin:/opt/mvapich2/intel/ib/bin:/opt/intel/2018.1.163/compilers_and_libraries_2018.1.163/linux/bin/intel64:/usr/lib64/qt-3.3/bin:/usr/local/bin:/bin:/usr/bin:/usr/bin:/home/croy/bin:/usr/local/sbin:/usr/sbin:/opt/sdsc/bin:/opt/sdsc/sbin:/opt/ibutils/bin:/opt/pdsh/bin:/opt/rocks/bin:/opt/rocks/sbin\r\n\r\n**.zshrc file, same on both systems:**\r\n\\# If you come from bash you might have to change your $PATH.\r\nexport PATH=$HOME/bin:/usr/local/bin:$PATH\r\n\r\n\\# Path to your oh-my-zsh installation.\r\nexport ZSH=\"/Users/charles/.oh-my-zsh\"\r\n\r\n\\# Set name of the theme to load --- if set to \"random\", it will\r\n\\# load a random theme each time oh-my-zsh is loaded, in which case,\r\n\\# to know which specific one was loaded, run: echo $RANDOM_THEME\r\n\\# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes\r\n\r\n\\#ZSH_THEME=\"powerlevel10k/powerlevel10k\"\r\nZSH_THEME=\"robbyrussell\"\r\n\r\n\\# Set list of themes to pick from when loading at random\r\n\\# Setting this variable when ZSH_THEME=random will cause zsh to load\r\n\\# a theme from this variable instead of looking in $ZSH/themes/\r\n\\# If set to an empty array, this variable will have no effect.\r\n\\# ZSH_THEME_RANDOM_CANDIDATES=( \"robbyrussell\" \"agnoster\" )\r\n\r\n\\# Uncomment the following line to use case-sensitive completion.\r\n\\# CASE_SENSITIVE=\"true\"\r\n\r\n\\# Uncomment the following line to use hyphen-insensitive completion.\r\n\\# Case-sensitive completion must be off. _ and - will be interchangeable.\r\n\\# HYPHEN_INSENSITIVE=\"true\"\r\n\r\n\\# Uncomment the following line to disable bi-weekly auto-update checks.\r\n\\# DISABLE_AUTO_UPDATE=\"true\"\r\n\r\n\\# Uncomment the following line to automatically update without prompting.\r\n\\# DISABLE_UPDATE_PROMPT=\"true\"\r\n\r\n\\# Uncomment the following line to change how often to auto-update (in days).\r\n\\# export UPDATE_ZSH_DAYS=13\r\n\r\n\\# Uncomment the following line if pasting URLs and other text is messed up.\r\n\\# DISABLE_MAGIC_FUNCTIONS=\"true\"\r\n\r\n\\# Uncomment the following line to disable colors in ls.\r\n\\# DISABLE_LS_COLORS=\"true\"\r\n\r\n\\# Uncomment the following line to disable auto-setting terminal title.\r\n\\# DISABLE_AUTO_TITLE=\"true\"\r\n\r\n\\# Uncomment the following line to enable command auto-correction.\r\n\\# ENABLE_CORRECTION=\"true\"\r\n\r\n\\# Uncomment the following line to display red dots whilst waiting for completion.\r\n\\# COMPLETION_WAITING_DOTS=\"true\"\r\n\r\n\\# Uncomment the following line if you want to disable marking untracked files\r\n\\# under VCS as dirty. This makes repository status check for large repositories\r\n\\# much, much faster.\r\n\\# DISABLE_UNTRACKED_FILES_DIRTY=\"true\"\r\n\r\n\\# Uncomment the following line if you want to change the command execution time\r\n\\# stamp shown in the history command output.\r\n\\# You can set one of the optional three formats:\r\n\\# \"mm/dd/yyyy\"|\"dd.mm.yyyy\"|\"yyyy-mm-dd\"\r\n\\# or set a custom format using the strftime function format specifications,\r\n\\# see 'man strftime' for details.\r\n\\# HIST_STAMPS=\"mm/dd/yyyy\"\r\n\r\n\\# Would you like to use another custom folder than $ZSH/custom?\r\n\\# ZSH_CUSTOM=/path/to/new-custom-folder\r\n\r\n\\# Which plugins would you like to load?\r\n\\# Standard plugins can be found in $ZSH/plugins/\r\n\\# Custom plugins may be added to $ZSH_CUSTOM/plugins/\r\n\\# Example format: plugins=(rails git textmate ruby lighthouse)\r\n\\# Add wisely, as too many plugins slow down shell startup.\r\nplugins=(colored-man-pages colorize command-not-found extract git)\r\n\r\nsource $ZSH/oh-my-zsh.sh\r\n\r\n\\# User configuration\r\n\r\n\\# export MANPATH=\"/usr/local/man:$MANPATH\"\r\n\r\n\\# You may need to manually set your language environment\r\n\\# export LANG=en_US.UTF-8\r\n\r\n\\# Preferred editor for local and remote sessions\r\n\\# if [[ -n $SSH_CONNECTION ]]; then\r\n\\#   export EDITOR='vim'\r\n\\# else\r\n\\#   export EDITOR='mvim'\r\n\\# fi\r\n\r\n\\# Compilation flags\r\n\\# export ARCHFLAGS=\"-arch x86_64\"\r\n\r\n\\# Set personal aliases, overriding those provided by oh-my-zsh libs,\r\n\\# plugins, and themes. Aliases can be placed here, though oh-my-zsh\r\n\\# users are encouraged to define aliases within the ZSH_CUSTOM folder.\r\n\\# For a full list of active aliases, run `alias`.\r\n\r\n\r\nAny help is greatly appreciated!",
        "labels": "Support",
        "id": 43791
    },
    {
        "title": "Previous git main branch detection logic broke expected behavior",
        "body": "**Describe the bug**\r\n#9091 presented better way of handling main branch. We have neither `main` nor `master` branch as the 'default' branch, but other branch named `integration`. I used the algorithm in `git_main_branch` function, and refer the remote HEAD to `integration` branch. This is how I got expected results. Now it's back to hard-coded, non-configurable values.\r\n\r\n#9114 was handled incorrectly: `git_main_branch` is a function, and was referred to as a variable. This is the reason it didn't worked. I believe that configure the remote HEAD would solve the problem.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable this plugin `git`\r\n2. Set the remote HEAD to a branch other than `master` (e,g, `integration`): `git remote set-head origin integration`\r\n3. Run command `git_main_branch`\r\n4. Result is `master`, although `integration` is the 'default' branch, configured in GitHub.\r\n\r\n**Expected behavior**\r\nAfter 3. above, result should be `integration`\r\n\r\n\r\n**Desktop:**\r\n\r\n - OS / Distro: **Ubuntu 19.04**\r\n - Latest ohmyzsh update?: **Yes**\r\n - ZSH Version: **5.7.11**\r\n - Terminal emulator: **xterm-256color**\r\n",
        "labels": "Support",
        "id": 43792
    },
    {
        "title": "previous git main branch detection logic broke expected behavior",
        "body": "**Describe the bug**\r\n#9091 presented better way of handling main branch. We have neither `main` nor `master` branch as the 'default' branch, but other branch named `integration`. I used the algorithm in `git_main_branch` function, and refer the remote HEAD to `integration` branch. This is how I got expected results. Now it's back to hard-coded, non-configurable values.\r\n\r\n#9114 was handled incorrectly: `git_main_branch` is a function, and was referred to as a variable. This is the reason it didn't worked. I believe that configure the remote HEAD would solve the problem.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable this plugin `git`\r\n2. Set the remote HEAD to a branch other than `master` (e,g, `integration`): `git remote set-head origin integration`\r\n3. Run command `git_main_branch`\r\n4. Result is `master`, although `integration` is the 'default' branch, configured in GitHub.\r\n\r\n**Expected behavior**\r\nAfter 3. above, result should be `integration`\r\n\r\n\r\n**Desktop:**\r\n\r\n - OS / Distro: Ubuntu 19.04\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: 5.7.11\r\n - Terminal emulator: xterm-256color\r\n",
        "labels": "Support",
        "id": 43793
    },
    {
        "title": "Backspace not working properly",
        "body": "After the last update that i did (yesterday), when i press Backspace key (only backspace, without another key), it deletes entire words, one word for each keystroke. Before update, BS delete only a single letter of a word. It a bug or a new funcionality?\r\nAnyone can help me with this?",
        "labels": "Support",
        "id": 43794
    },
    {
        "title": "sublime plugin is not effect and show error like: \" command not found: subl\"",
        "body": "as the error:  \"command not found: subl\", the reason is the computer can not find 'subl' in the gloabl files\r\n\r\nso we need to move the bin file 'subl' to the global bin directory\r\n\r\nfor my example: \r\n\r\n```sh\r\n ln -s /Applications/Sublime\\ Text4.app/Contents/SharedSupport/bin/subl /usr/local/bin   \r\n```\r\n",
        "labels": "Support",
        "id": 43795
    },
    {
        "title": "Tab completion deletes previous lines",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nPressing \"tab\" to show completions moves the cursor up.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Type `ls `\r\n2. Press <kbd>TAB</kbd>\r\n\r\n**Expected behavior**\r\nThe completions should display normally\r\n\r\n**Screenshots and/or Recordings**\r\nOddly, it didn't happen while recording with asciinema https://asciinema.org/a/geLNA4otKpRa31LJuMSNAeAES\r\n\r\n![Kapture 2020-08-04 at 20 17 31](https://user-images.githubusercontent.com/760204/89368158-abd8c900-d68f-11ea-8c8a-8e506d8d4dda.gif)\r\n\r\n**Self Check**\r\n\r\nit happens because of cf347ef\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: macOS\r\n - If on Windows what version of WSL: [e.g. WSL1, WSL2]\r\n - Latest ohmyzsh update?: Yes -- it specifically happens in cf347ef -- checking out `git checkout cf347ef^` works around the issue\r\n - ZSH Version: 5.8\r\n - Terminal emulator: iTerm2\r\n\r\n**Additional context**\r\nmy dotfiles are at https://github.com/forivall/dotfiles\r\n",
        "labels": "Support",
        "id": 43796
    },
    {
        "title": "fastfile_ls outputs nothing although I have several shortcuts in ~/.fastfile",
        "body": "I believe this used to work fine, but I've recently tried to use them again after several months and `ffls` / `fastfile_ls` has no output. ",
        "labels": "Support",
        "id": 43797
    },
    {
        "title": "git status symbols doesn't work",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**git status symbols doesn't work**\r\nThe `git status` symbols(green or yellow color and branches) in `agnoster` theme doesn't work until I change the `agnoster.zsh-theme` into a older version\r\n\r\n**To Reproduce**\r\n1. Change the zsh theme to the latest version of `agnoster`\r\n\r\n**Expected behavior**\r\nIt should display a git symbol\r\n\r\n**Screenshots and/or Recordings**\r\n![image](https://user-images.githubusercontent.com/33098678/89125404-d7817500-d510-11ea-9868-4a2d64f75aff.png)\r\n- After I edited the `agnoster.zsh-theme` and copied a older version into it, the git symbol returned to normal.\r\n\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: [macOS]\r\n - Latest ohmyzsh update?: [e.g. Yes]\r\n - ZSH Version: [5.7.1]\r\n - Terminal emulator: [iTerm2]\r\n\r\n",
        "labels": "Support",
        "id": 43798
    },
    {
        "title": "NixOS package not up to speed with master for fzf",
        "body": "**Describe the bug**\r\nfzf plugin enforces looking in `${fzf_base}/shell` on Nixos - the source code in `fzf.plugin.zsh` correctly has logic to avoid this but the nixos package has an `&& [[ -f etc/arch-release ]]` to only enforce this for Arch. It should not have this in the NixOS repository.\r\n\r\n**To Reproduce**\r\n1. Install the Nix fzf package and correctly point $FZF_BASE to its location (where you should find `completion.zsh`, `key-bindings.zsh`, etc)\r\n2. Enable fzf plugin in `plugins=(... fzf ...)`\r\n2. Open a zsh shell\r\n3. You see it is trying to find a dir called `/shell` inside here, despite being in the correct directory!\r\n\r\n**Expected behavior**\r\nThis shouldn't happen; it looks like we just need to update the NixOS package which is clearly diff to what's in git.\r\n\r\n**Screenshots and/or Recordings**\r\n![image](https://user-images.githubusercontent.com/30197206/88990395-bed94b00-d2d5-11ea-97fe-55b0205d9f6a.png)\r\n\r\n**Desktop**\r\n - OS / Distro: NixOs 20.03.2611 (Markhor)\r\n - Latest ohmyzsh update?: latest from NixOS ;)\r\n - ZSH Version: 5.7.1\r\n - Terminal emulator: xterm\r\n",
        "labels": "Support",
        "id": 43799
    },
    {
        "title": "plugin command not found: lwd",
        "body": "Has anyone come across this issue before.\r\nI am constantly seeing the below when opening the terminal -\r\n\r\n![Screenshot 2020-07-30 at 16 12 27](https://user-images.githubusercontent.com/14114089/88942970-d63b1880-d282-11ea-85c1-130b28a0364c.png)\r\n\r\n\r\nNote: I am using `last-working-dir` in my .zshrc\r\n",
        "labels": "Support",
        "id": 43800
    },
    {
        "title": "Only show git prompts when inside a Github directory",
        "body": "I couldn't find a simialiar question - hopefully this is a pretty simple one. \r\n\r\nI really love having the git prompt, however I don't want to see it when I'm not inside of a Github repo. \r\n\r\n**_How can I configure to only show when in a github repo?_** \r\n\r\nFor example (screenshot attached), I'm in the Applications folder - it's not relevant.\r\n![Screenshot 2020-07-30 at 15 50 58](https://user-images.githubusercontent.com/14114089/88937841-9113e800-d27c-11ea-92ec-4170777f47a8.png)\r\n\r\nTheme used - 'robbyrussel'\r\n\r\nThanks",
        "labels": "Support",
        "id": 43801
    },
    {
        "title": "Cursor resets to the wrong column after terminal error",
        "body": "Here is the problem I am facing\r\n\r\n```\r\n(base) ----------------------------------------------------------------------------------\r\n~  || <---------- cursor here                                               reda@razer15\r\n```\r\nThen if I press Ctrl+C or any command that doesn't return successfully, the cursor will be reset to the wrong column\r\n\r\n```\r\n(base) ----------------------------------------------------------------------------------\r\n|~| <---------- cursor here                                           130 reda@razer15\r\n```\r\nIf the command returned successfully, like for an example ls, the cursor is reset to the right column\r\n\r\n\r\n",
        "labels": "Support",
        "id": 43802
    },
    {
        "title": "[dotnet] Tab Completion don't working",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nTab completion don't work for dotnet, with the dotnet plugin enabled.\r\nThe plugin is suppose to do it but is not working,  tab suggest files/folder, not commands as it should.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable this plugin 'dotnet'\r\n2. Try the autocomplete command 'dotnet  '\r\n3. Will suggest files or folders\r\n\r\n**Expected behavior**\r\nIt should suggest \r\n\r\nadd              -d               --help           --list-runtimes  nuget            restore          test           \r\nbuild            --diagnostics    help             --list-sdks      pack             run              tool           \r\nbuild-server     fsi              --info           msbuild          publish          sln              --version      \r\nclean            -h               list             new              remove           store            vstest  \r\n\r\nI have a suggestion of how to fix it, just replace the code in the plugin of _dotnet_zsh_complete() by the one in the  in [ Microsoft Docs](https://docs.microsoft.com/en-us/dotnet/core/tools/enable-tab-autocomplete) for Zsh.\r\nI did that then it worked fine, but maybe you expect more than that so i hope it can help you in the fixing.\r\n\r\n\r\n**Screenshots and/or Recordings**\r\n\r\n\r\n**Self Check**\r\n\r\nI search there was no issues for this problem open, i don't have discord.\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: [Kubuntu]\r\n - Latest ohmyzsh update?: [Yes]\r\n - ZSH Version: [5.8]\r\n - Terminal emulator: [Konsole]\r\n\r\n**Additional context**\r\nI don't believe that others plugins can be the problem where but i will send my list.\r\n\r\nplugins from oh-my-zsh\r\ndotnet\r\nng\r\nnpm\r\nubuntu\r\nzsh-history-substring-search\r\n\r\nfrom zsh-users\r\nzsh-syntax-highlighting\r\nzsh-autosuggestions\r\n\r\ntheme\r\nromkatv/powerlevel10k\r\n",
        "labels": "Support",
        "id": 43803
    },
    {
        "title": "I am using WSL and installed onmyzsh on windows",
        "body": "Many commands are not working like that of node, npm etc (it says command not found)\r\nWhat should I do?",
        "labels": "Support",
        "id": 43804
    },
    {
        "title": "gpg-agent is not taking the config",
        "body": "I'm using the gpg-agent plugin. It reads a config file, but somehow it doesn't work when I specify a config.\r\n\r\n```bash\r\n$ cat /Users/marco/.gnupg/gpg-agent.conf\r\ndefault-cache-ttl 3600\r\n\r\n$ gpg-agent --gpgconf-list\r\ngpgconf-gpg-agent.conf:16:\"/Users/marco/.gnupg/gpg-agent.conf\r\nverbose:8:\r\nquiet:8:\r\ndebug-level:24:\"none:\r\nlog-file:8:\r\ndefault-cache-ttl:24:600:\r\ndefault-cache-ttl-ssh:24:1800:\r\nmax-cache-ttl:24:7200:\r\nmax-cache-ttl-ssh:24:7200:\r\nenforce-passphrase-constraints:8:\r\nmin-passphrase-len:24:8:\r\nmin-passphrase-nonalpha:24:1:\r\ncheck-passphrase-pattern:24:\r\nmax-passphrase-days:24:0:\r\nenable-passphrase-history:8:\r\nno-grab:8:\r\nignore-cache-for-signing:8:\r\nno-allow-external-cache:8:\r\nno-allow-mark-trusted:8:\r\ndisable-scdaemon:8:\r\nenable-ssh-support:0:\r\nssh-fingerprint-digest:24:\"md5:\r\nno-allow-loopback-pinentry:8:\r\nallow-emacs-pinentry:8:\r\npinentry-timeout:24:0:\r\nenable-extended-key-format:8:\r\ngrab:8:\r\n```\r\n\r\nIn my ~/.zshrc I have following\r\n\r\n```bash\r\nplugins=(git osx dotenv kubectl helm npm npx docker docker-compose terraform golang zsh_reload keychain gpg-agent)\r\nzstyle :omz:plugins:keychain agents ssh,gpg\r\nzstyle :omz:plugins:keychain identities id_rsa 63A1B4B53E26CEDB\r\n```\r\n\r\nPlease note I did modify my identity above.",
        "labels": "Support",
        "id": 43805
    },
    {
        "title": "Pipenv not activated in a new window",
        "body": "**Describe the bug**\r\n\r\nWhen opening a new terminal window in a directory with a Pipfile, a sub shell is not activated in the same way as if I cd into that directory.\r\n\r\n**To Reproduce**\r\n\r\n1. `cd /some/dir/with/pipenv`. Note that pipenv shell is activated.\r\n2. Open a new terminal window in that same directory. Note that pipenv shell is *not* activated.\r\n3. `cd ../pipenv`. Note that the shell is now activated.\r\n\r\n**Expected behavior**\r\n\r\nThe shell should be activated when a new terminal window is opened.\r\n\r\n**Desktop**\r\n\r\n - OS / Distro: macOS 10.15.5 (19F101)\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: zsh 5.7.1 (x86_64-apple-darwin19.0)\r\n - Terminal emulator: Apple Terminal.app\r\n",
        "labels": "Support",
        "id": 43806
    },
    {
        "title": "Theme not working properly (shows `$(git_prompt_info)` and `$(ruby_prompt-info)`)",
        "body": "<!--1. Look for similar issues already posted (including closed ones)\r\n2. Include as much relevant information as possible\r\n3. Try to make sure the issue is due to Oh My Zsh\r\n-->\r\n`` shell=zsh,theme=dallas,os=OSX yosemite,zsh=unknown ``\r\n![135](https://user-images.githubusercontent.com/54708046/88005916-0bd25a00-cb3d-11ea-90af-22b3238b84a0.jpg)\r\ncompare:\r\n![531](https://user-images.githubusercontent.com/54708046/88006267-d1b58800-cb3d-11ea-994e-6c8ed2a1b3d4.png)\r\n",
        "labels": "Support",
        "id": 43807
    },
    {
        "title": "Gerenciador de configurações",
        "body": "1. Look for similar issues already posted (including closed ones)\n2. Include as much relevant information as possible\n3. Try to make sure the issue is due to Oh My Zsh\n",
        "labels": "Support",
        "id": 43808
    },
    {
        "title": "aws_completer path assumes global installation",
        "body": "**Describe the bug**\r\naws completion does not work when installed in non-global location\r\n\r\n**To Reproduce**\r\n* enable aws plugin\r\n* type `aws ` *TAB*\r\n\r\n**Expected behavior**\r\nautocompletion works\r\n\r\n**Additional context**\r\nThis seems to be a repeat of #7811 and #7812 from back when it was a shell script command",
        "labels": "Support",
        "id": 43809
    },
    {
        "title": "I have `using ☁️  default/` showing by default",
        "body": "So not sure why this is showing. I seem to have \"using ☁️  default/\" showing no matter what folder I am at. I have no idea what it is referencing I thought it might have been AWS, but i set a particular profile by exporting it and it creates another cloud profile in front of the using default...\r\n\r\nroot example: \r\n![image](https://user-images.githubusercontent.com/1435321/87844195-54e89b00-c8fe-11ea-8988-2aec99bd0ae5.png)\r\n\r\ngit folder example:\r\n![image](https://user-images.githubusercontent.com/1435321/87844522-2cae6b80-c901-11ea-8e0d-af1c58c7cd73.png)\r\n\r\nHappy to share any configs / logs if needed.",
        "labels": "Support",
        "id": 43810
    },
    {
        "title": "Text is beeing automatically selected after I paste it on Hyper",
        "body": "Whenever I paste some text on Hyper it is selected automatically. I'm using Hyper with Oh My Zsh on Linux right now. I also use them on Windows and the same problem doesn't happen. \r\n\r\nSteps to reproduce the problem:\r\n1. Copy a browser URL, for example: https://github.com/matheusranzani/reactive-native-rocketseat (this is a private repo of mine, just to example the problem)\r\n2. Paste it on Hyper\r\n3. See that the URL text is selected\r\n\r\nI don't want the text I paste be selected automatically, because I'm using the plugin 'fast-syntax-highlighting' and it doesn't work correctly after the text is auto selected.\r\n\r\nScreenshot of the error:\r\n![hyper-issue-1](https://user-images.githubusercontent.com/59764547/87677367-0f866b00-c750-11ea-8773-149a20c64f72.png)\r\n\r\nScreenshot of the normal plugin behavior (writting manually the URL):\r\n![hyper-issue-2](https://user-images.githubusercontent.com/59764547/87677968-bf5bd880-c750-11ea-98ca-4d13257280e6.png)\r\n\r\n\r\n - OS / Distro: Zorin OS\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: zsh 5.4.2 (x86_64-ubuntu-linux-gnu)\r\n - Terminal emulator: Hyper\r\n",
        "labels": "Support",
        "id": 43811
    },
    {
        "title": "git commit -m \"add !empty check\" event not found: empty",
        "body": "<!--\r\nNot sure if this is how git handles commits or a zsh problem\r\n-->\r\n\r\n**Describe the bug**\r\ncommit message should not be parsed\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. git add .\r\n2. git commit -m \"add !empty check\"\r\n3. See error (zsh: event not found: empty)\r\n\r\n**Expected behavior**\r\ngit should commit the message without error\r\n",
        "labels": "Support",
        "id": 43812
    },
    {
        "title": "An error is reported when executing source ~ /. Zshrc",
        "body": "-bash: /Users/oh-my-zsh/tools/check_for_upgrade.sh: line 31: syntax error near unexpected token `)'\r\n-bash: /Users/.oh-my-zsh/tools/check_for_upgrade.sh: line 31: `() {'\r\n-bash: autoload: command not found\r\n-bash: /Users/.oh-my-zsh/oh-my-zsh.sh: line 36: syntax error near unexpected token `('\r\n-bash: /Users/.oh-my-zsh/oh-my-zsh.sh: line 36: `for plugin ($plugins); do'",
        "labels": "Support",
        "id": 43813
    },
    {
        "title": "running `gcm` shows `Already on 'develop`",
        "body": "**Describe the bug**\r\nRunning `gcm` shows \r\n```\r\nAlready on 'develop'\r\nYour branch is up to date with 'origin/develop'.\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable this plugin 'git'\r\n2. Run command 'gcm'\r\n\r\n**Expected behavior**\r\nCurrent branch should switch to `master`\r\n\r\n**Screenshots and/or Recordings**\r\nhttps://ibb.co/RGXyCnb\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: MAC OS Catalina 10.15.4 (19E287)\r\n - Latest ohmyzsh update?: YES\r\n - ZSH Version: 5.7.1 (x86_64-apple-darwin19.0)\r\n - Terminal emulator: iTerm2 Build 3.3.12\r\n",
        "labels": "Support",
        "id": 43814
    },
    {
        "title": "(eval):1: command not found: Chrome",
        "body": "Installed _tmux_. Every time I run a new tmux session, it prints `eval):1: command not found: Chrome` along side with some _echo_ lines from the `.zshrc`.  I already deleted .zcompdump* files, updated zsh, and OMZ.\r\n\r\n\r\n - OS / Distro: macOS X\r\n - Latest ohmyzsh update\r\n - ZSH Version: 5.8\r\n - Terminal emulator: iTerm2\r\n\r\n",
        "labels": "Support",
        "id": 43815
    },
    {
        "title": "After update on WSL(Ubuntu 20.04).My command line displays abnormally",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nafter i update my oh-my-zsh to lastest.. my zsh not like before\r\n\r\n**To Reproduce**\r\n1. auto update oh my zsh\r\n2. my command line abnormal.. like this\r\n```\r\n$fg[magenta]nextkara$reset_color at $fg[yellow]Aurora$reset_color in $fg_bold[green]~$reset_color$(git_prompt_info)\r\n$(virtualenv_info)$(prompt_char)\r\n```\r\n**Expected behavior**\r\nit should be show like theme af-magic picture in your github wiki...\r\n\r\n**Screenshots and/or Recordings**\r\nmy zsh appears like this when I update to latest version in today..\r\n![pic](https://lh3.googleusercontent.com/pw/ACtC-3cNIrwJ6Ql2ut7YFFJoz7uvy4RlK_0_MHM3MawO8Pt15s8MQT3U_gKt29Gfj82G6ELmSXDdjCCiDIEtG1sST3zZA7OZmR3PJqVq2u1A-WkyxJ1Gh7KxHPAoQLi6Fb3Pg5WFE9pu_NqbQDNlCHXcIHiq=w1083-h57-no?authuser=0)\r\n\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: windows\r\n - If on Windows what version of WSL: WSL2\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: 5.8\r\n - Terminal emulator: wsl\r\n - Theme name: af-magic\r\n\r\n**Additional context**\r\ni used theme named zhann, and it work well, but others seems not work good\r\n",
        "labels": "Support",
        "id": 43816
    },
    {
        "title": "Upgrade fails to delete lock file with rm alias",
        "body": "On Mac, I have `alias rm=\"rmtrash\"` in my `.zprofile`. Sometimes when I start a shell and ohmyzsh tries to upgrade it prints an error like this:\r\n\r\n    rmtrash: illegal option -- r\r\n    USAGE: rmtrash [-h] [-v] [-u USERNAME] FILENAME\r\n\r\nThis is because it runs this command:\r\n\r\n    rm -rf ~/.oh-my-zsh/log/update.lock\r\n\r\nIt should do something more robust than using `rm` directly.\r\n\r\n**To Reproduce**\r\n\r\n1. Add `alias rm=\"rmtrash\"` to `.zprofile`\r\n2. Start a sufficient number of shells to have oh my zsh update. Maybe there's a way to force this.\r\n\r\n**Expected behavior**\r\nI believe there is a way to ignore aliases when running a command, something like `\\rm`. Alternatively it should use a proper programming language to do updates.\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: MacOS\r\n - Latest ohmyzsh update?: Yes\r\n - ZSH Version: 5.7.1\r\n - Terminal emulator: iTerm2\r\n",
        "labels": "Support",
        "id": 43817
    },
    {
        "title": "Oh My Zsh lags in terminal when using themes, git license agreement was culprit",
        "body": "**Describe the bug**\r\nAfter updating my OSX (to catalina), oh my zsh started to lag on startup and between completing commands. By working on the .zshrc file, I noticed the problem had to do with using themes.\r\n\r\nWhile inspecting themes, I noticed a few git related lines (other posts here and elsewhere also described issues with git)\r\n\r\nI then just ran the command \"git\" and noticed the license agreement had not been completed (could be from upgrading my OS, as I had done this in the past). \r\n\r\nI had to sudo as directed to complete/accept the git license agreement.\r\n\r\nAfter this, the problem was completely solved. I hope this helps others\r\n",
        "labels": "Support",
        "id": 43818
    },
    {
        "title": "command line jump to next line automatically in  repository folder",
        "body": "**Describe the bug**\r\ncommand line jump to next line automatically\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n①set\r\n```\r\nTMOUT=1\r\nTRAPALRM () { zle reset-prompt }\r\n```\r\nin ~/.zshrc\r\n②anaconda configuration(see the end of this post please)\r\n③open the terminal in any folder contains `.git`\r\n\r\n**Expected behavior**\r\nthe command remain unchange except the clock\r\n\r\n**Screenshots and/or Recordings**\r\n\r\nhttps://asciinema.org/a/DOq78og1q0ZCdZW0c6RlOEDDe\r\n\r\n**Self Check**\r\nCheck |  result|    \r\n-|-\r\nHave you tried reaching out on the [Discord server](discord.gg/ohmyzsh)? <br>This can help cut down on filling up issues. We always have a few people online that are in a variety of timezones that are willing to help you! | page not found | 5 |\r\nAlso searching existing [GitHub Issues](https://github.com/ohmyzsh/ohmyzsh/issues?q=)<br>might help you get quicker support | I did not find relevant issue\r\n\r\n\r\n\r\n\r\n\r\n**Desktop (please complete the following information):**\r\n\r\nCheck |  result|    \r\n-|-\r\nOS / Distro: [e.g. Arch Linux, macOS]|Ubuntu20.04|\r\nLatest ohmyzsh Update?|Yes|\r\nZSH Version|5.8-3ubuntu1\r\nTerminal emulator|xfce4-terminal\r\n\r\n**Additional context**\r\n\r\nconfiguration file | link|    \r\n-|-\r\nbullet-train.zsh-theme|https://paste.ubuntu.com/p/BpYPJtW2wg/\r\n~/.zshrc|https://paste.ubuntu.com/p/nzHtZY2Rd8/\r\n\r\n\r\n",
        "labels": "Support",
        "id": 43819
    },
    {
        "title": "DISABLE_LS_COLORS equivalent for cd command?",
        "body": "Hello, I am new here. I was trying to customize the colors on the amuse theme, and I for the life of me cannot find how to customize the ls and cd + tab colors command, because they look, well, very un-aesthetically pleasing to say the least...\r\n![image](https://user-images.githubusercontent.com/31134106/87238342-a48b0c00-c3be-11ea-93ab-e0d25efc1c3c.png)\r\n![image](https://user-images.githubusercontent.com/31134106/87238347-b5d41880-c3be-11ea-867a-2e8a65ac04d7.png)\r\n\r\nI am unaware if I can customize this colors, at all, and if this is a ZSH issue or a theme issue, so I had opted for the DISABLE_LS_COLORS. However, I'd also like to disable the colors when doing a cd + autocompletion command. Either that, or find a way to change the colors altogether.\r\n\r\nAs a sidenote, I am using Ubuntu's command line on Windows. Although I don't think that's relevant to this issue.",
        "labels": "Support",
        "id": 43820
    },
    {
        "title": "[plugin:git] - \"gcm\" fails when master or main branch don't exist locally",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nPrior to #9049 `gcm` would checkout the `master` branch, now it fails when the `master` / `main` branch don't exist locally\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Enable the 'git' plugin\r\n2. Navigate to a repo without a `master` or `main` branch available locally (but configured on the remote)\r\n3. Run `gcm` (checkout main branch)\r\n4. `error: pathspec 'main' did not match any file(s) known to git` will be presented\r\n\r\n**Expected behavior**\r\nThe primary branch (`master` or `main`) should be checked out\r\n\r\n**Screenshots and/or Recordings**\r\n<img width=\"450\" alt=\"Screenshot 2020-07-11 at 16 30 48\" src=\"https://user-images.githubusercontent.com/21317379/87227854-66c5bd80-c395-11ea-98cb-25d2cb04f916.png\">\r\n\r\n\r\n**Self Check**\r\nChecked existing issues - couldn't find one referencing this issue.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: `macOS`\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: `5.7`\r\n - Terminal emulator `iTerm2`\r\n\r\n**Additional context**\r\nNot a huge deal since I can just alias `gcm` to `git checkout master` myself; but thought it was worth raising since others might have this issue in future.\r\n",
        "labels": "Support",
        "id": 43821
    },
    {
        "title": "Getting Compinit error every time I start an instance of Terminal",
        "body": "Every time I open my Terminal, I see this error - \r\n\r\n`compinit:503: no such file or directory: /usr/local/share/zsh/site-functions/_brew_services`\r\n\r\nI am not sure what this issue is. How do I get rid of it?",
        "labels": "Support",
        "id": 43822
    },
    {
        "title": "Problem with bgnotify",
        "body": "Hey guys, I was trying to customize `bgnotify` and it didn't work. I got this error:\r\n`bgnotify_end:5: condition expected: 0x0`\r\n\r\nSo I tried to restore the file with `git restore` and even to made a `git pull` but nothing works. I'm still getting the same error. Already reboot my computer and got the same result.",
        "labels": "Support",
        "id": 43823
    },
    {
        "title": "parameter autocomplete working in one instance but not the other one",
        "body": "I have two ohmyzsh installs:\r\n\r\n- One of MacOS / iTerm2\r\n- The other on CentOS\r\n\r\nTo take docker as an example, on the CentOS shell, I can do this:\r\n\r\n> docker cont[tab]\r\n\r\nand it autocompletes to 'docker container'\r\n\r\nbut on the MacOS install, it tries to auto complete the local file names and not the parameters.\r\n\r\nhow can I get it to auto complete the parameters in priority?\r\n",
        "labels": "Support",
        "id": 43824
    },
    {
        "title": "parse error: Invalid string: control characters from U+0000 through U+001F must be escaped at line 23, column 1",
        "body": "normal sh file can't run on latest ohmyzsh, error hint:\r\n\r\nparse error: Invalid string: control characters from U+0000 through U+001F must be escaped at line 23, column 1\r\n\r\n",
        "labels": "Support",
        "id": 43825
    },
    {
        "title": "Remap up and down history to home row keys",
        "body": "Just curious - does someone have keys on/near their keyboard home row that they mapped to go up and down the history?\r\nReaching over to the arrow keys which are the default for going up and down history is a lot more annoying. Thanks.\r\n\r\nI wanted to know what the best key mappings are. I wanted to use `<C-I>` and `<C-U>` but unfortunately `<C-I>` is also mapped as the tab key in terminals, so I can't use it for this purpose as well. So I'm looking for alternative, easy to use keys.",
        "labels": "Support",
        "id": 43826
    },
    {
        "title": "z.plugin.zsh not working nicely with `set -x`",
        "body": "I downloaded `z.plugin.zsh` and put it in `.zshrc` like\r\n\r\n\r\n```\r\n. ~/zshfiles/z.plugin.zsh\r\n\r\n```\r\n\r\nNow If I open the terminal and use `set -x` to debug some command it says:\r\n\r\n```\r\n% set -x\r\n+_z_precmd:1> _z --add /home/ismail/zshfiles                                    \r\n+_z:2> local datafile=/home/ismail/.z\r\n+_z:5> [ -h /home/ismail/.z ']'\r\n+_z:8> [ -z '' -a -f /home/ismail/.z -a '!' -O /home/ismail/.z ']'\r\n+_z_precmd:4> : 27070\r\n+_z:20> [ --add '=' --add ']'\r\n+_z:21> shift\r\n+_z:24> [ /home/ismail/zshfiles '=' /home/ismail ']'\r\ni5% +_z:27> local exclude\r\n+_z:28> exclude=\r\n+_z:29> case /home/ismail/zshfiles (\\*)\r\n+_z:33> local tempfile=/home/ismail/.z.27070\r\n+_z_dirs:1> local line\r\n+_z_dirs:2> read line\r\n+_z_dirs:4> [ -d /media/ismail/WDPurple/_DataBackup/_Work/_NotesFilteredADOC/Linux/_LinuxMint ']'\r\n+_z_dirs:4> echo '/media/ismail/WDPurple/_DataBackup/_Work/_NotesFilteredADOC/Linux/_LinuxMint|77|1593693925'\r\n+_z_dirs:2> read line\r\n+_z:34> date +%s\r\n+_z_dirs:4> [ -d /home/ismail/zshfiles ']'\r\n+_z_dirs:4> echo '/home/ismail/zshfiles|49|1593875842'\r\n+_z_dirs:2> read line\r\n+_z_dirs:4> [ -d /home/ismail/Documents/Test ']'\r\n+_z_dirs:4> echo '/home/ismail/Documents/Test|35|1593871935'\r\n+_z_dirs:2> read line\r\n+_z_dirs:4> [ -d /home/ismail/Documents ']'\r\n+_z_dirs:4> echo '/home/ismail/Documents|3|1593682853'\r\n+_z_dirs:2> read line\r\n+_z_dirs:4> [ -d /media/ismail/WDPurple/_DataBackup/_Work/_DailyBackups/dotfilesBackup ']'\r\n+_z_dirs:4> echo '/media/ismail/WDPurple/_DataBackup/_Work/_DailyBackups/dotfilesBackup|13|1593875104'\r\n+_z_dirs:2> read line\r\n+_z_dirs:4> [ -d /media/ismail/WDPurple/_DataBackup/_Work/_DailyBackups ']'\r\n+_z_dirs:4> echo '/media/ismail/WDPurple/_DataBackup/_Work/_DailyBackups|2|1593870407'\r\n+_z_dirs:2> read line\r\n+_z_dirs:4> [ -d /home/ismail/Desktop ']'\r\n+_z_dirs:4> echo '/home/ismail/Desktop|26|1593776114'\r\n+_z_dirs:2> read line\r\n+_z_dirs:4> [ -d /media/ismail/WDPurple/_DataBackup/_Work/_NotesFilteredADOC/Linux/_LinuxMint/_Resources ']'\r\n+_z_dirs:4> echo '/media/ismail/WDPurple/_DataBackup/_Work/_NotesFilteredADOC/Linux/_LinuxMint/_Resources|32|1593772738'\r\n+_z_dirs:2> read line\r\n+_z_dirs:4> [ -d /home/ismail/.config/Code/Dictionaries ']'\r\n+_z_dirs:4> echo '/home/ismail/.config/Code/Dictionaries|2|1593655413'\r\n+_z_dirs:2> read line\r\n+_z_dirs:6> return 0\r\n+_z:34> awk -v 'path=/home/ismail/zshfiles' -v 'now=1593875848' '-F|' $'\\n            BEGIN {\\n                rank[path] = 1\\n                time[path] = now\\n            }\\n            $2 >= 1 {\\n                # drop ranks below 1\\n                if( $1 == path ) {\\n                    rank[$1] = $2 + 1\\n                    time[$1] = now\\n                } else {\\n                    rank[$1] = $2\\n                    time[$1] = $3\\n                }\\n                count += $2\\n            }\\n            END {\\n                if( count > 9000 ) {\\n                    # aging\\n                    for( x in rank ) print x \"|\" 0.99*rank[x] \"|\" time[x]\\n                } else for( x in rank ) print x \"|\" rank[x] \"|\" time[x]\\n            }\\n        '\r\n+_z:58> [ 0 -ne 0 -a -f /home/ismail/.z ']'\r\n+_z:61> [ '' ']'\r\n+_z:62> env mv -f /home/ismail/.z.27070 /home/ismail/.z\r\n\r\n```",
        "labels": "Support",
        "id": 43827
    },
    {
        "title": "iex:12: maximum nested function level reached",
        "body": "getting this error while working on elixir repel \r\n\r\n$ iex -S mix\r\n$ iex:12: maximum nested function level reached",
        "labels": "Support",
        "id": 43828
    },
    {
        "title": "wrong characters displayed in zsh robbyrussell theme",
        "body": "I try to read/write some characters in zsh terminal and they are displayed as something else.\r\n\r\nthe former characters change to the corresponding latter character.\r\n`{{}}||@@[[]]\\\\` -> `ääååööÉÉÄÄÅÅÖÖ`\r\n\r\nThere is no issue with any other editor for the same keys.\r\nAll other keys/characters are working fine.\r\n\r\n```\r\n# If you come from bash you might have to change your $PATH.\r\nexport PATH=$HOME/bin:/usr/local/Homebrew/bin:$PATH\r\n\r\n# Path to your oh-my-zsh installation.\r\nexport ZSH=\"/Users/apple/.oh-my-zsh\"\r\n\r\nexport LC_ALL=en_US.UTF-8\r\nexport LANG=en_US.UTF-8\r\n\r\n# Set name of the theme to load --- if set to \"random\", it will\r\n# load a random theme each time oh-my-zsh is loaded, in which case,\r\n# to know which specific one was loaded, run: echo $RANDOM_THEME\r\n# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes\r\nZSH_THEME=\"robbyrussell\"\r\n\r\n# Set list of themes to pick from when loading at random\r\n# Setting this variable when ZSH_THEME=random will cause zsh to load\r\n# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/\r\n# If set to an empty array, this variable will have no effect.\r\n# ZSH_THEME_RANDOM_CANDIDATES=( \"robbyrussell\" \"agnoster\" )\r\n\r\n# Uncomment the following line to use case-sensitive completion.\r\n# CASE_SENSITIVE=\"true\"\r\n\r\n# Uncomment the following line to use hyphen-insensitive completion.\r\n# Case-sensitive completion must be off. _ and - will be interchangeable.\r\n# HYPHEN_INSENSITIVE=\"true\"\r\n\r\n# Uncomment the following line to disable bi-weekly auto-update checks.\r\n# DISABLE_AUTO_UPDATE=\"true\"\r\n\r\n# Uncomment the following line to automatically update without prompting.\r\n# DISABLE_UPDATE_PROMPT=\"true\"\r\n\r\n# Uncomment the following line to change how often to auto-update (in days).\r\n# export UPDATE_ZSH_DAYS=13\r\n\r\n# Uncomment the following line if pasting URLs and other text is messed up.\r\n# DISABLE_MAGIC_FUNCTIONS=true\r\n\r\n# Uncomment the following line to disable colors in ls.\r\n# DISABLE_LS_COLORS=\"true\"\r\n\r\n# Uncomment the following line to disable auto-setting terminal title.\r\n# DISABLE_AUTO_TITLE=\"true\"\r\n\r\n# Uncomment the following line to enable command auto-correction.\r\n# ENABLE_CORRECTION=\"true\"\r\n\r\n# Uncomment the following line to display red dots whilst waiting for completion.\r\n# COMPLETION_WAITING_DOTS=\"true\"\r\n\r\n# Uncomment the following line if you want to disable marking untracked files\r\n# under VCS as dirty. This makes repository status check for large repositories\r\n# much, much faster.\r\n# DISABLE_UNTRACKED_FILES_DIRTY=\"true\"\r\n\r\n# Uncomment the following line if you want to change the command execution time\r\n# stamp shown in the history command output.\r\n# You can set one of the optional three formats:\r\n# \"mm/dd/yyyy\"|\"dd.mm.yyyy\"|\"yyyy-mm-dd\"\r\n# or set a custom format using the strftime function format specifications,\r\n# see 'man strftime' for details.\r\n# HIST_STAMPS=\"mm/dd/yyyy\"\r\n\r\n# Would you like to use another custom folder than $ZSH/custom?\r\n# ZSH_CUSTOM=/path/to/new-custom-folder\r\n\r\n# Which plugins would you like to load?\r\n# Standard plugins can be found in ~/.oh-my-zsh/plugins/*\r\n# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/\r\n# Example format: plugins=(rails git textmate ruby lighthouse)\r\n# Add wisely, as too many plugins slow down shell startup.\r\nplugins=(git nvm brew yarn)\r\n\r\nsource $ZSH/oh-my-zsh.sh\r\n\r\n# User configuration\r\n\r\n# export MANPATH=\"/usr/local/man:$MANPATH\"\r\n\r\n# You may need to manually set your language environment\r\n# export LANG=en_US.UTF-8\r\n\r\n# Preferred editor for local and remote sessions\r\n# if [[ -n $SSH_CONNECTION ]]; then\r\n#   export EDITOR='vim'\r\n# else\r\n#   export EDITOR='mvim'\r\n# fi\r\n\r\n# Compilation flags\r\n# export ARCHFLAGS=\"-arch x86_64\"\r\n\r\n# Set personal aliases, overriding those provided by oh-my-zsh libs,\r\n# plugins, and themes. Aliases can be placed here, though oh-my-zsh\r\n# users are encouraged to define aliases within the ZSH_CUSTOM folder.\r\n# For a full list of active aliases, run `alias`.\r\n#\r\n# Example aliases\r\n# alias zshconfig=\"mate ~/.zshrc\"\r\n# alias ohmyzsh=\"mate ~/.oh-my-zsh\"\r\n\r\ncode () { VSCODE_CWD=\"$PWD\" open -n -b \"com.microsoft.VSCode\" --args $@ ;}\r\n\r\nexport PATH=/Library/PostgreSQL/11/bin:$PATH\r\n\r\neval \"$(rbenv init -)\"\r\n```",
        "labels": "Support",
        "id": 43829
    },
    {
        "title": "Error when rendering agnoster theme arrows",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nthe regular arrows after the path are not rendering correctlly\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. I just installed the agnoster theme\r\n\r\n![Screenshot from 2020-07-02 18-40-18](https://user-images.githubusercontent.com/33187588/86411561-807b4c80-bc93-11ea-9024-c6eebadeea2b.png)\r\n\r\n**Desktop (please complete the following information):**\r\n - linux/Popos\r\n - Latest ohmyzsh Update?: [e.g. Yes/No]\r\n - ZSH Version: 5.8\r\n - Terminal emulator gnome-terminal\r\n\r\n\r\n",
        "labels": "Support",
        "id": 43830
    },
    {
        "title": "Syntax highlighting for bash/zsh command keywords",
        "body": "Hey,\r\n\r\nI wanted to know that is there any plugin available that lets us highlight the commands like `sudo`, `apt`, `ls`, `grep` etc. I have a reference of themes here that I found while doing some search [here](https://mayccoll.github.io/Gogh/).\r\n\r\nThanks!\r\n",
        "labels": "Support",
        "id": 43831
    },
    {
        "title": "Some notice from /etc/zsh/zshrc",
        "body": "I install kubectx and it's work well, But when run command I Got some notice from /etc/zsh/zshrc\r\n```bash\r\nkubectx\r\n/etc/zsh/zshrc: line 31: key: BackSpace: must use subscript when assigning associative array\r\n/etc/zsh/zshrc: line 31: key: \"${terminfo[kbs]}\": must use subscript when assigning associative array\r\n/etc/zsh/zshrc: line 31: key: Home: must use subscript when assigning associative array\r\n/etc/zsh/zshrc: line 31: key: \"${terminfo[khome]}\": must use subscript when assigning associative array\r\n/etc/zsh/zshrc: line 31: key: End: must use subscript when assigning associative array\r\n/etc/zsh/zshrc: line 31: key: \"${terminfo[kend]}\": must use subscript when assigning associative array\r\n/etc/zsh/zshrc: line 31: key: Insert: must use subscript when assigning associative array\r\n/etc/zsh/zshrc: line 31: key: \"${terminfo[kich1]}\": must use subscript when assigning associative array\r\n/etc/zsh/zshrc: line 31: key: Delete: must use subscript when assigning associative array\r\n/etc/zsh/zshrc: line 31: key: \"${terminfo[kdch1]}\": must use subscript when assigning associative array\r\n/etc/zsh/zshrc: line 31: key: Up: must use subscript when assigning associative array\r\n/etc/zsh/zshrc: line 31: key: \"${terminfo[kcuu1]}\": must use subscript when assigning associative array\r\n/etc/zsh/zshrc: line 31: key: Down: must use subscript when assigning associative array\r\n/etc/zsh/zshrc: line 31: key: \"${terminfo[kcud1]}\": must use subscript when assigning associative array\r\n/etc/zsh/zshrc: line 31: key: Left: must use subscript when assigning associative array\r\n/etc/zsh/zshrc: line 31: key: \"${terminfo[kcub1]}\": must use subscript when assigning associative array\r\n/etc/zsh/zshrc: line 31: key: Right: must use subscript when assigning associative array\r\n/etc/zsh/zshrc: line 31: key: \"${terminfo[kcuf1]}\": must use subscript when assigning associative array\r\n/etc/zsh/zshrc: line 31: key: PageUp: must use subscript when assigning associative array\r\n/etc/zsh/zshrc: line 31: key: \"${terminfo[kpp]}\": must use subscript when assigning associative array\r\n/etc/zsh/zshrc: line 31: key: PageDown: must use subscript when assigning associative array\r\n/etc/zsh/zshrc: line 31: key: \"${terminfo[knp]}\": must use subscript when assigning associative array\r\n/etc/zsh/zshrc: line 73:  ${+terminfo[smkx]} : bad substitution\r\n/etc/zsh/zshrc: line 75: zstyle: command not found\r\n/etc/zsh/zshrc: line 83:  ${+aliases[run-help]} : bad substitution\r\n/etc/zsh/zshrc: line 84: autoload: command not found\r\n/etc/zsh/zshrc: line 90: autoload: command not found\r\n/etc/zsh/zshrc: line 91: compinit: command not found\r\n```\r\n\r\nThis is my /etc/zsh/zshrc file\r\n```zsh\r\n# /etc/zsh/zshrc: system-wide .zshrc file for zsh(1).\r\n#\r\n# This file is sourced only for interactive shells. It\r\n# should contain commands to set up aliases, functions,\r\n# options, key bindings, etc.\r\n#\r\n# Global Order: zshenv, zprofile, zshrc, zlogin\r\n\r\nREADNULLCMD=${PAGER:-/usr/bin/pager}\r\n\r\n# An array to note missing features to ease diagnosis in case of problems.\r\ntypeset -ga debian_missing_features\r\n\r\nif [[ -z \"${DEBIAN_PREVENT_KEYBOARD_CHANGES-}\" ]] &&\r\n   [[ \"$TERM\" != 'emacs' ]]\r\nthen\r\n\r\n    typeset -A key\r\n    key=(\r\n        BackSpace  \"${terminfo[kbs]}\"\r\n        Home       \"${terminfo[khome]}\"\r\n        End        \"${terminfo[kend]}\"\r\n        Insert     \"${terminfo[kich1]}\"\r\n        Delete     \"${terminfo[kdch1]}\"\r\n        Up         \"${terminfo[kcuu1]}\"\r\n        Down       \"${terminfo[kcud1]}\"\r\n        Left       \"${terminfo[kcub1]}\"\r\n        Right      \"${terminfo[kcuf1]}\"\r\n        PageUp     \"${terminfo[kpp]}\"\r\n        PageDown   \"${terminfo[knp]}\"\r\n    )\r\n\r\n    function bind2maps () {\r\n        local i sequence widget\r\n        local -a maps\r\n\r\n        while [[ \"$1\" != \"--\" ]]; do\r\n            maps+=( \"$1\" )\r\n            shift\r\n        done\r\n        shift\r\n\r\n        sequence=\"${key[$1]}\"\r\n        widget=\"$2\"\r\n\r\n        [[ -z \"$sequence\" ]] && return 1\r\n\r\n        for i in \"${maps[@]}\"; do\r\n            bindkey -M \"$i\" \"$sequence\" \"$widget\"\r\n        done\r\n    }\r\n\r\n    bind2maps emacs             -- BackSpace   backward-delete-char\r\n    bind2maps       viins       -- BackSpace   vi-backward-delete-char\r\n    bind2maps             vicmd -- BackSpace   vi-backward-char\r\n    bind2maps emacs             -- Home        beginning-of-line\r\n    bind2maps       viins vicmd -- Home        vi-beginning-of-line\r\n    bind2maps emacs             -- End         end-of-line\r\n    bind2maps       viins vicmd -- End         vi-end-of-line\r\n    bind2maps emacs viins       -- Insert      overwrite-mode\r\n    bind2maps             vicmd -- Insert      vi-insert\r\n    bind2maps emacs             -- Delete      delete-char\r\n    bind2maps       viins vicmd -- Delete      vi-delete-char\r\n    bind2maps emacs viins vicmd -- Up          up-line-or-history\r\n    bind2maps emacs viins vicmd -- Down        down-line-or-history\r\n    bind2maps emacs             -- Left        backward-char\r\n    bind2maps       viins vicmd -- Left        vi-backward-char\r\n    bind2maps emacs             -- Right       forward-char\r\n    bind2maps       viins vicmd -- Right       vi-forward-char\r\n\r\n    # Make sure the terminal is in application mode, when zle is\r\n    # active. Only then are the values from $terminfo valid.\r\n    if (( ${+terminfo[smkx]} )) && (( ${+terminfo[rmkx]} )); then\r\n        function zle-line-init () {\r\n            emulate -L zsh\r\n            printf '%s' ${terminfo[smkx]}\r\n        }\r\n        function zle-line-finish () {\r\n            emulate -L zsh\r\n            printf '%s' ${terminfo[rmkx]}\r\n        }\r\n        zle -N zle-line-init\r\n        zle -N zle-line-finish\r\n    else\r\n        for i in {s,r}mkx; do\r\n            (( ${+terminfo[$i]} )) || debian_missing_features+=($i)\r\n        done\r\n        unset i\r\n    fi\r\n\r\n    unfunction bind2maps\r\n\r\nfi # [[ -z \"$DEBIAN_PREVENT_KEYBOARD_CHANGES\" ]] && [[ \"$TERM\" != 'emacs' ]]\r\n\r\nzstyle ':completion:*:sudo:*' command-path /usr/local/sbin \\\r\n                                           /usr/local/bin  \\\r\n                                           /usr/sbin       \\\r\n                                           /usr/bin        \\\r\n                                           /sbin           \\\r\n                                           /bin            \\\r\n                                           /usr/X11R6/bin\r\n\r\n(( ${+aliases[run-help]} )) && unalias run-help\r\nautoload -Uz run-help\r\n\r\n# If you don't want compinit called here, place the line\r\n# skip_global_compinit=1\r\n# in your $ZDOTDIR/.zshenv\r\nif grep -q '^ID.*=.*ubuntu' /etc/os-release && [[ -z \"$skip_global_compinit\" ]]; then\r\n  autoload -U compinit\r\n  compinit\r\nfi\r\n```\r\n\r\nI run this on WSL2 with Ubuntu 18.04",
        "labels": "Support",
        "id": 43832
    },
    {
        "title": "Conda gone after installing Oh My Zsh",
        "body": "Hi,\r\n\r\nI wanted to make command on my macOS system look more like ubuntu with the colours rather than white on black and I installed Oh My Zsh. But now when I type conda activate X to activate any environment I had it says the command conda doesn't exist. \r\n\r\nI'm very much a novice to command and assume its cause Oh My Zsh runs in a different environment to the mach zsh? Can I merge them or do I have to go through installing conda all over again and all the env and programs I have?\r\n\r\n\r\nCheers,\r\n\r\n\r\nP",
        "labels": "Support",
        "id": 43833
    },
    {
        "title": "Unable to clone the repository",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nUnable to clone the git repository\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. git clone git@github.com:ohmyzsh/ohmyzsh.git or git clone https://github.com/ohmyzsh/ohmyzsh.git\r\n2. See error\r\n\r\nCloning into 'ohmyzsh'...\r\nremote: Enumerating objects: 24497, done.\r\nerror: object 2b7227859263b6aabcc28355b0b994995b7148b6: zeroPaddedFilemode: contains zero-padded file modes\r\nfatal: fsck error in packed object\r\nfatal: index-pack failed\r\n\r\n**Expected behavior**\r\nShould clone the repository.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: Manjaro\r\n - Latest ohmyzsh Update?: Yes\r\n - Terminal emulator: urxvt \r\n",
        "labels": "Support",
        "id": 43834
    },
    {
        "title": "Update defaults to Yes on any input other than N or n",
        "body": "**Describe the bug**\r\nWhen prompted to update Oh-My-Zsh the prompt defaults to Yes for any keypress other than `N` or `n`. \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Start shell when there is an update available.\r\n2. At the update prompt type `b`\r\n3. Oh My Zsh begins to update.\r\n\r\n**Expected behavior**\r\nOh My Zsh should only update when I've explicitly told it to by selecting `Y`, `y` or pressing enter to select the default value of `Y`.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: macOS\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: 5.8\r\n - Terminal emulator iTerm2\r\n",
        "labels": "Support",
        "id": 43835
    },
    {
        "title": "Zsh shell taking abnormally long time during initial startup",
        "body": "As i have already stated in question , zsh shell is taking abnormally long time to start up. I would like to clear it again that delay in zsh only happens when opening terminal at start , not during general usage. I have disabled all plugins and using powerlevel10k theme , although i can definitely say it has nothing to do with theme. I noticed this slowdown immediately after i had changed to zsh shell from bash which got worsened even further after installing oh my zsh .To put things in perspective , raw zsh is almost 6 times slower as compared to raw bash in starting up and zsh + ohmyzsh is almost 14 times slower as comapared to raw bash .Posted timings below for each case. \r\n[Heres's](https://del.dog/cebidexymy.txt) my .zshrc file if that helps\r\n\r\nI also checked what functions are being run during initial startup using zsh profiling\r\nHere's the whole list - https://del.dog/cytahuving.txt\r\nhandle_completion_insecurities , anon and compinit are the ones taking the top 3 most time , I don't know anything about it , just a normal user \r\nHopefully this much info would be enough to debug the cause of problem\r\n\r\nUsing Raw Bash\r\n```\r\nfor i in $(seq 1 10); do /usr/bin/time bash -i -c exit; done\r\nexit\r\n0.02user 0.07system 0:00.19elapsed 45%CPU (0avgtext+0avgdata 1816maxresident)k\r\n136inputs+0outputs (3major+1737minor)pagefaults 0swaps\r\nexit\r\n0.05user 0.04system 0:00.17elapsed 52%CPU (0avgtext+0avgdata 1820maxresident)k\r\n0inputs+0outputs (0major+1737minor)pagefaults 0swaps\r\nexit\r\n0.02user 0.06system 0:00.18elapsed 42%CPU (0avgtext+0avgdata 1824maxresident)k\r\n0inputs+0outputs (0major+1745minor)pagefaults 0swaps\r\nexit\r\n0.08user 0.03system 0:00.21elapsed 51%CPU (0avgtext+0avgdata 1828maxresident)k\r\n0inputs+0outputs (0major+1743minor)pagefaults 0swaps\r\nexit\r\n0.00user 0.06system 0:00.14elapsed 40%CPU (0avgtext+0avgdata 1816maxresident)k\r\n0inputs+0outputs (0major+1736minor)pagefaults 0swaps\r\nexit\r\n0.02user 0.05system 0:00.14elapsed 50%CPU (0avgtext+0avgdata 1820maxresident)k\r\n0inputs+0outputs (0major+1738minor)pagefaults 0swaps\r\nexit\r\n0.00user 0.06system 0:00.13elapsed 46%CPU (0avgtext+0avgdata 1820maxresident)k\r\n0inputs+0outputs (0major+1741minor)pagefaults 0swaps\r\nexit\r\n0.01user 0.05system 0:00.14elapsed 40%CPU (0avgtext+0avgdata 1816maxresident)k\r\n0inputs+0outputs (0major+1738minor)pagefaults 0swaps\r\nexit\r\n0.00user 0.07system 0:00.14elapsed 48%CPU (0avgtext+0avgdata 1816maxresident)k\r\n0inputs+0outputs (0major+1738minor)pagefaults 0swaps\r\nexit\r\n0.01user 0.06system 0:00.13elapsed 50%CPU (0avgtext+0avgdata 1816maxresident)k\r\n0inputs+0outputs (0major+1737minor)pagefaults 0swaps\r\n```\r\n Using raw zsh ( without oh my zsh )\r\n```\r\n0.27user 0.35system 0:01.05elapsed 58%CPU (0avgtext+0avgdata 3256maxresident)k\r\n0inputs+0outputs (0major+1823minor)pagefaults 0swaps\r\n0.25user 0.41system 0:01.17elapsed 56%CPU (0avgtext+0avgdata 3252maxresident)k\r\n0inputs+0outputs (0major+1824minor)pagefaults 0swaps\r\n0.41user 0.27system 0:01.06elapsed 63%CPU (0avgtext+0avgdata 3256maxresident)k\r\n0inputs+0outputs (0major+1824minor)pagefaults 0swaps\r\n0.52user 0.20system 0:01.20elapsed 59%CPU (0avgtext+0avgdata 3252maxresident)k\r\n0inputs+0outputs (0major+1823minor)pagefaults 0swaps\r\n0.32user 0.36system 0:01.19elapsed 57%CPU (0avgtext+0avgdata 3256maxresident)k\r\n0inputs+0outputs (0major+1824minor)pagefaults 0swaps\r\n0.21user 0.48system 0:01.22elapsed 56%CPU (0avgtext+0avgdata 3256maxresident)k\r\n0inputs+0outputs (0major+1825minor)pagefaults 0swaps\r\n0.27user 0.36system 0:01.12elapsed 56%CPU (0avgtext+0avgdata 3256maxresident)k\r\n0inputs+0outputs (0major+1823minor)pagefaults 0swaps\r\n0.24user 0.45system 0:01.18elapsed 58%CPU (0avgtext+0avgdata 3252maxresident)k\r\n0inputs+0outputs (0major+1823minor)pagefaults 0swaps\r\n0.24user 0.47system 0:01.22elapsed 58%CPU (0avgtext+0avgdata 3256maxresident)k\r\n0inputs+0outputs (0major+1825minor)pagefaults 0swaps\r\n0.38user 0.32system 0:01.16elapsed 60%CPU (0avgtext+0avgdata 3256maxresident)k\r\n0inputs+0outputs (0major+1825minor)pagefaults 0swaps\r\n```\r\n\r\nUsing Zsh + Ohmyzsh\r\n```\r\nfor i in $(seq 1 10); do /usr/bin/time zsh -i -c exit; done\r\n0.67user 0.82system 0:02.54elapsed 58%CPU (0avgtext+0avgdata 4676maxresident)k\r\n0inputs+0outputs (0major+8337minor)pagefaults 0swaps\r\n0.66user 1.01system 0:02.88elapsed 57%CPU (0avgtext+0avgdata 4676maxresident)k\r\n0inputs+0outputs (0major+8329minor)pagefaults 0swaps\r\n0.51user 1.11system 0:03.17elapsed 50%CPU (0avgtext+0avgdata 4676maxresident)k\r\n0inputs+0outputs (0major+8345minor)pagefaults 0swaps\r\n0.74user 0.76system 0:02.78elapsed 53%CPU (0avgtext+0avgdata 4676maxresident)k\r\n0inputs+0outputs (0major+8339minor)pagefaults 0swaps\r\n0.59user 0.99system 0:02.74elapsed 57%CPU (0avgtext+0avgdata 4676maxresident)k\r\n0inputs+0outputs (0major+8326minor)pagefaults 0swaps\r\n0.80user 0.86system 0:02.88elapsed 57%CPU (0avgtext+0avgdata 4676maxresident)k\r\n0inputs+0outputs (0major+8339minor)pagefaults 0swaps\r\n0.63user 1.02system 0:02.78elapsed 59%CPU (0avgtext+0avgdata 4676maxresident)k\r\n0inputs+0outputs (0major+8330minor)pagefaults 0swaps\r\n0.87user 0.89system 0:03.08elapsed 57%CPU (0avgtext+0avgdata 4676maxresident)k\r\n0inputs+0outputs (0major+8325minor)pagefaults 0swaps\r\n0.68user 0.98system 0:02.89elapsed 57%CPU (0avgtext+0avgdata 4676maxresident)k\r\n0inputs+0outputs (0major+8323minor)pagefaults 0swaps\r\n0.71user 0.88system 0:02.81elapsed 56%CPU (0avgtext+0avgdata 4676maxresident)k\r\n0inputs+0outputs (0major+8338minor)pagefaults 0swaps\r\n```\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: Ubuntu 20\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: 5.8\r\n\r\n",
        "labels": "Support",
        "id": 43836
    },
    {
        "title": "COMPLETION_WAITING_DOTS don't work when $EDITOR is set in zprofile",
        "body": "The red dots that appear when you press tab for auto completion work fine when the $EDITOR variable is not set in my .zprofile. When I set EDITOR=nvim in .zprofile, the red dots stop working.\r\n\r\n**To Reproduce**\r\n1. Set COMPLETION_WAITING_DOTS=\"true\"\r\n2. Red dots appear\r\n3. Set $EDITOR=nvim (or any other editor) in .zprofile\r\n4. Log out & log in\r\n5. Red dots don't appear\r\n\r\n - OS / Distro:  Arch Linux\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: 5.8-1 (as shown in pacman)\r\n - Terminal emulator: Termite, urxvt\r\n",
        "labels": "Support",
        "id": 43837
    },
    {
        "title": "Oh My Zsh hangs because of slow `git status` calls",
        "body": "**Describe the bug**\r\n\r\nOh My Zsh makes my terminal hang after a command completes in Linux. I also found [this Linux forum post](https://bbs.archlinux.org/viewtopic.php?id=228939) which helped me confirm that Oh My Zsh is the culprit.\r\n\r\nThis happens to me on a Ubuntu VM inside Virtualbox, but it may generalise to non-VM setups. In my VM I have a `project/` folder, in which I have mounted a very large `data/` folder (34GB). This problem only happens when the folder is mounted.\r\n\r\nWhenever I `cd` to the project folder / any of its subfolders (not necessarily the `data` folder), or run a command (eg `ls`), the command completes but my terminal hangs for a very long time *(around the same amount of time it took for the directory to mount...)*. If I hit Ctrl + C then the terminal stops hanging and the command has completed, but the zsh prompt is just `->`.\r\n\r\nWhen I uninstall Oh My Zsh, the issue dissappears. Experimentation shows that I get the issue when I mount my directory with `vboxsf` or via my network with `SMB`, but not when the data exists directly inside my VM. Oh My Zsh must be doing something with those mounts after each command...\r\n\r\n**To Reproduce**\r\n\r\n- Run Ubuntu VM (e.g. Virtualbox)\r\n- `mount` a large volume to the VM (E.g. with `vboxsf` or `SMB` via a network share)\r\n- `cd` to the parent directory of that volume\r\n- Wait a long time for the command to finish\r\n\r\n**Expected behavior**\r\n\r\nShell becomes responsive after commands finish, like in normal zsh.\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS / Distro: Ubuntu VM inside Virtualbox\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: Latest\r\n - Terminal emulator: Any",
        "labels": "Support",
        "id": 43838
    },
    {
        "title": "Check for $DISABLE_AUTO_UPDATE before updating",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nWith `DISABLE_AUTO_UPDATE=\"true\"`, oh-my-zsh still checks for updating by sourcing `$ZSH/tools/check_for_upgrade.sh`\r\n\r\nThis is a new change introduced by https://github.com/ohmyzsh/ohmyzsh/commit/3f6e87df15104484219c04828b2eddd6d09ee065\r\n\r\nThis would be undesirable in many cases, as the DISABLE_AUTO_UPDATE exists for a reason. For example, some people would prefer to use other means (e.g. AUR for archlinux) for versioning. \r\n\r\n**To Reproduce**\r\n\r\n1. Add `DISABLE_AUTO_UPDATE=\"true\"` to your `.zshrc`\r\n2. Run `source ~/.zshrc`\r\n3. oh-my-zsh tries to update itself\r\n\r\nOn my environment (Arch Linux, installed `oh-my-zsh-git` from a third-party repository [archlinuxcn](https://github.com/archlinuxcn/repo)), an error would occur since the `check_for_upgrade.sh` is [not included with the package](https://github.com/archlinuxcn/repo/blob/54ea18e1563e73000b3da9926922593c75d9cbb5/archlinuxcn/oh-my-zsh-git/PKGBUILD#L48).\r\n\r\n```\r\n/usr/share/oh-my-zsh/oh-my-zsh.sh:source:8: no such file or directory: /usr/share/oh-my-zsh/tools/check_for_upgrade.sh\r\n```\r\n\r\n**Expected behavior**\r\n\r\noh-my-zsh checks for the `DISABLE_AUTO_UPDATE` environment variable before upgrading itself.\r\n\r\n**Screenshots and/or Recordings**\r\n\r\n![image](https://user-images.githubusercontent.com/49149993/84973449-9ecc3e80-b110-11ea-830f-d2455dba09ec.png)\r\n\r\n![image](https://user-images.githubusercontent.com/49149993/84973394-79d7cb80-b110-11ea-836e-576b7670a9aa.png)\r\n\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: Arch Linux\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: zsh 5.8 (x86_64-pc-linux-gnu)\r\n - Terminal emulator Konsole\r\n",
        "labels": "Support",
        "id": 43839
    },
    {
        "title": "Can't use Tab to autocomplete directories that start with a symbol like #, $ or &",
        "body": "**Describe the bug**\r\nCan't use Tab to autocomplete directories/folders that start with a symbol like #, $ or &\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create a directory like $projects\r\n2. Run command 'cd $p' then press Tab.\r\n\r\n**Expected behavior**\r\nThe default behavior when disabling OMZ the terminal autocomplete the directory name correctly and adds \\ before the symbol like: \\$projects \r\n",
        "labels": "Support",
        "id": 43840
    },
    {
        "title": "Zsh Themes show duplicate git refs on right side",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nWhile setting themes like `super`, `cloud`, `funky` etc. I am seeing that the git refs/branch_names also appears in right side of terminal along with the default left side.\r\n\r\n**To Reproduce**\r\n\r\n1. Apply any of the themes mentioned above\r\n2.  Restart the shell\r\n\r\n**Expected behavior**\r\nThe git ref should not apprear duplicated.\r\n\r\n**Screenshots and/or Recordings**\r\n![image](https://user-images.githubusercontent.com/1441704/88948134-d4c51c80-d291-11ea-9171-48da216627eb.png)\r\n\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: Ubuntu\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: zsh 5.8 (x86_64-ubuntu-linux-gnu)\r\n - Terminal emulator: Alacritty\r\n",
        "labels": "Support",
        "id": 43841
    },
    {
        "title": "Remove Zsh from Ubuntu 20.04 LTS",
        "body": "Please help! Cannot uninstall zsh.\r\nI installed zsh on my Ubuntu 20.04 LTS but I want to get back to bash.  I tried `` ~ / .oh-my-zsh / tools / uninstall.sh '' but says `` zsh: permission denied ''",
        "labels": "Support",
        "id": 43842
    },
    {
        "title": "pipenv plugin causing terminals to crash for no apparent reason",
        "body": "**Describe the bug**\r\nWhenever I `cd` into certain directories or do certain things with the `pipenv` zsh plugin enabled, it crashes those terminal windows. It seems to do it randomly, but it's always for certain commands and directories. I don't know why.\r\n\r\nSee this issue for some more info on the behaviour: https://github.com/tmuxinator/tmuxinator/issues/777\r\n\r\n**To Reproduce**\r\nI'm not sure how to exactly reproduce this, or what's even causing it.\r\n\r\nIn some cases, certain commands won't run, like in the link to the issue above. In other cases, I can't even `cd` into certain directories (even if those directories don't have a `Pipfile` or `.venv` in them). \r\n\r\n**Expected behavior**\r\nIt shouldn't be causing things to crash. And if it does, it should say why so it can be debugged.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: Ubuntu 20.04 LTS\r\n - Latest ohmyzsh Update?: yes\r\n - ZSH Version: zsh 5.8 (x86_64-ubuntu-linux-gnu)\r\n - Terminal emulator: Gnome Terminal\r\n",
        "labels": "Support",
        "id": 43843
    },
    {
        "title": "Do not use `~{wd alias}` as the path in prompt.",
        "body": "Hi,\r\n\r\nRecently I updated `ohmyzsh` and I found that the behavior of `wd` changed.  The path is changed to the alias of path in prompt. See the screenshot below.\r\n\r\n![image](https://user-images.githubusercontent.com/7406269/84610644-dad38980-aeed-11ea-8753-e05ae568c792.png)\r\n\r\nThis looks weird, and it's better to behave the same as the general path. `wd` is just a useful command to jump to the directory directly, but it shouldn't change the behavior of prompt.\r\n\r\nI believe it has relation to do with [this commit](https://github.com/ohmyzsh/ohmyzsh/commit/82f02e80a669d099d79a531cf8fb6a0e34d4478c).\r\n\r\nps: The theme is robbyrussell.",
        "labels": "Support",
        "id": 43844
    },
    {
        "title": "Bug",
        "body": "/Users/fahis/.oh-my-zsh/oh-my-zsh.sh:60: parse error near `<<<'",
        "labels": "Support",
        "id": 43845
    },
    {
        "title": "Copybuffer not working",
        "body": "Hi all, the Copybuffer plugin is not working i dont know why, I enabled it on the plugin list but ctrl+o not working..\r\nThanks",
        "labels": "Support",
        "id": 43846
    },
    {
        "title": "Reverse \"i\" search is not working on my mac zsh anymore after installing OhMyZsh. ",
        "body": "<!--\r\nReverse \"i\" search is not working on my mac zsh anymore after installing OhMyZsh. \r\n-->\r\n\r\n**Describe the bug**\r\nReverse \"i\" search is not working on my mac zsh anymore after installing OhMyZsh. \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Install Oh My Zsh\r\n2. Try to do \"Cntrl+R\" \r\n3. Prompt does not come. Just nothings happen.\r\n\r\n**Expected behavior**\r\nIt must give me the option to search old commands issued to the shell earlier.\r\n\r\n**Screenshots and/or Recordings**\r\nThis is self-explanatory.\r\n\r\nIf applicable, add screenshots to help explain your problem.\r\nYou can also record an asciinema session: https://asciinema.org/\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: [ macOS]\r\n - Latest ohmyzsh Update?: [e.g. Yes]\r\n - ZSH Version: [e.g. 5.7.1]\r\n - Terminal emulator \r\n**Additional context**\r\nAdd any other context about the problem here. This can be themes, plugins, custom configs.\r\n",
        "labels": "Support",
        "id": 43847
    },
    {
        "title": "How to disable Shift+Tab shortcut?",
        "body": "When I press Shift+Tab shortcut it opens me a list of files in the current directory. What is it and how to disable this feature? Or to change the shortcut to some another one.",
        "labels": "Support",
        "id": 43848
    },
    {
        "title": "fzf plugin not aware of openbsd package",
        "body": "Hello,\r\n\r\nfzf is installed via the openbsd package manager like this :\r\n```\r\n> % pkg_info -L fzf\r\nInformation for inst:fzf-0.21.1\r\n\r\nFiles:\r\n/usr/local/bin/fzf\r\n/usr/local/bin/fzf-tmux\r\n/usr/local/man/man1/fzf-tmux.1\r\n/usr/local/man/man1/fzf.1\r\n/usr/local/share/doc/pkg-readmes/fzf\r\n/usr/local/share/fish/functions/fzf-key-bindings.fish\r\n/usr/local/share/fzf/bash/completion.bash\r\n/usr/local/share/fzf/bash/key-bindings.bash\r\n/usr/local/share/vim/vimfiles/doc/fzf.txt\r\n/usr/local/share/vim/vimfiles/plugin/fzf.vim\r\n/usr/local/share/zsh/site-functions/_fzf_completion\r\n/usr/local/share/zsh/site-functions/_fzf_key_bindings\r\n```\r\nso, the fzf zsh part is : \r\n```\r\n/usr/local/share/zsh/site-functions/_fzf_completion\r\n/usr/local/share/zsh/site-functions/_fzf_key_bindings\r\n```\r\n\r\n**Describe the bug**\r\nI've got this warning each time I open a terminal : \r\n```\r\n[oh-my-zsh] fzf plugin: Cannot find fzf installation directory.\r\n Please add `export FZF_BASE=/path/to/fzf/install/dir` to your .zshrc\r\n```\r\nI have tried adding those below to .zshrc with no luck : \r\n1/\r\n```\r\nautoload _fzf_key_bindings _fzf_completion\r\n_fzf_key_bindings\r\n_fzf_completion\r\n```\r\n2/\r\n```\r\nexport FZF_BASE=/usr/local/share/zsh/site-functions/\r\n```\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: OpenBSD -current\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: 5.8\r\n - Terminal emulator : xterm, sakura\r\n\r\nBest regards.",
        "labels": "Support",
        "id": 43849
    },
    {
        "title": "\"find: paths must precede expression: `1'\" with -depth 1",
        "body": "**Describe the bug**\r\nFind outputs error message when used with -depth 1\r\nSince this is not the first time I have been kicked in the butt by ZSH, I verified whether this is ZSH or oh-my-zsh. Vanilla zsh does not show this behavior.\r\nAlso I suspected the `1` alias for directory browsing history, which I did unalias, but to no avail.\r\n\r\n**To Reproduce**\r\n1. Run `find . -depth 1`\r\n2. See error\r\n\r\n**Expected behavior**\r\nStandard find output.\r\n\r\n**Screenshots and/or Recordings**\r\n![Screenshot 2020-06-11 at 11 36 32](https://user-images.githubusercontent.com/13413601/84370507-a3589a80-abd8-11ea-9e8c-928119625072.png)\r\n\r\n\r\n**Desktop:**\r\n - OS / Distro: macOS, 10.14.6 (18G5033)\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: zsh 5.3 (x86_64-apple-darwin18.0)\r\n - Terminal emulator: iTerm2",
        "labels": "Support",
        "id": 43850
    },
    {
        "title": "some humble installation problems",
        "body": "Dear All,\r\nI am running gentoo stable on an FX 8350 box.\r\non boot up and log in I see the following error as a user at an LXterminal:\r\n\r\nhome/mikef/.zshrc:53: unmatched \"\r\nbucketlist% \r\n\r\nZsh seems to have installed OK and runs well I think.\r\n\r\nMy .zshrc file looks like this:\r\n```\r\n���  mikef more .zshrc\r\nsource \"`/zsh-theme-powerlevel9k/powerlevel9k.zsh-theme\"\r\n\r\nplugins=(\r\n    git\r\n    bundler\r\n    dotenv\r\n    osx\r\n    rake\r\n    rbenv\r\n    ruby\r\n)\r\n\r\n\r\nZSH_THEME=\"robbyrussell\"\r\n\r\n#ZSH_THEME=\"powerlevel10k/powerlevel10k\"\r\n\r\nzstyle ':completion::complete:*' use-cache 1\r\n\r\nsetopt APPEND_HISTORY\r\nsetopt INC_APPEND_HISTORY\r\nsetopt HIST_IGNORE_DUPS\r\nsetopt HIST_IGNORE_SPACE\r\n# dont put commands beginning with space in history\r\nsetopt interactivecomments  # allows end of command line comments\r\n\r\nsetopt extendedglob\r\nsetopt extended_glob\r\nsetopt no_case_glob\r\n# allow ls **.c instead of **/*.c\r\nsetopt GLOBSTARSHORT\r\nsetopt autopushd pushdignoredups autocd\r\n\r\n#!/bin/zsh\r\n\r\n#Completion\r\nautoload -U compinit\r\ncompinit\r\n\r\n# Correction\r\n\r\nsetopt correctall\r\n\r\n\r\n#Prompt\r\n\r\nautoload -U promptinit\r\npromptinit\r\nprompt gentoo\r\n\r\nalias myip=\"curl http://ipecho.net/plain; echo\"\r\n\r\n���  mikef  \r\n```\r\nI can't get either powerlevel 9k or 10k to run in a terminal but both did install correctly from git.\r\npk10 configure is not recognised as a command even after running exec zsh\r\n\r\nI am new to zsh.\r\n\r\nSuggestions on improving things a bit would be appreciated.   I will look through the issue list and see if I can find any relevant posts.\r\n\r\nRegards\r\n\r\nMichael Fothergill",
        "labels": "Support",
        "id": 43851
    },
    {
        "title": "git plugin functions completion not working with gitfast plugin",
        "body": "1. Look for similar issues already posted (including closed ones)\r\nI [posted](https://github.com/ohmyzsh/ohmyzsh/issues/2394#issuecomment-623514184) on a similar issue a few weeks ago, and after updating I got a different issue, which I will describe below.\r\n\r\nGit completions are not working for aliased commands.\r\n\r\n```\r\n❯ which gb\r\ngb: aliased to git branch\r\n❯ gb [TAB]\r\n```\r\n![Screen Shot 2020-06-09 at 2 49 36 PM](https://user-images.githubusercontent.com/1537213/84187861-a892d980-aa60-11ea-87e6-65b1e2213230.png)\r\n\r\n\r\n2. Include as much relevant information as possible\r\nOh My Zsh: 3c777ebf1b24826363bea6bc29afa9ba038b10e8\r\nzsh: zsh 5.8 (x86_64-apple-darwin19.3.0)\r\ngit: git version 2.26.1\r\n```\r\n❯ which _git\r\n_git () {\r\n\t# undefined\r\n\tbuiltin autoload -XUz\r\n}\r\n```\r\n.zshrc (abridged)\r\n```\r\nsetopt complete_aliases\r\nZSH_THEME=\"powerlevel10k/powerlevel10k\"\r\nplugins=(git gitfast nvm pyenv pipenv)\r\nsource $ZSH/oh-my-zsh.sh\r\n```\r\n\r\n3. Try to make sure the issue is due to Oh My Zsh\r\n",
        "labels": "Support",
        "id": 43852
    },
    {
        "title": "Ignore carriage return in ZSH",
        "body": "I'm trying to ignore carriage returns in ZSH in order to use Conda.\r\n\r\nIn bash, we can ignore carriage return (^M) by adding this to .bashrc file:\r\n```bash\r\nexport SHELLOPTS\r\nset -o igncr\r\n```\r\n\r\nIn ZSH adding to .zshrc doesn't work as we get an error: `set: no such option: igncr`\r\n\r\nConda uses windows style endings in windows and is constantly updating file endings when updating or initializing, this is why I can't use dos2unix, as it is only a temporary solution.\r\n\r\nIs there any way we can get ZSH to ignore file endings?\r\n\r\n**Platform:** Cygwin/windows",
        "labels": "Support",
        "id": 43853
    },
    {
        "title": "(eval):35: parse error near `elif' after installing conda on cygwin windows",
        "body": "Platform: Cygwin/windows\r\n\r\nzsh was working just fine until I ran `conda init zsh`.\r\n\r\nI restarted my terminal and it now gives me this error:\r\n`(eval):35: parse error near 'elif'`\r\n\r\nI still can't activate my conda environment, because it thinks I have not initialized the shell.\r\n\r\n*edit*\r\n\r\nUsing `source activate base` works but I feel this is a hacky solution... Furthermore, it does not fix the error message.",
        "labels": "Support",
        "id": 43854
    },
    {
        "title": "compgen gives wrong results",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\ncompgen gives wrong results.\r\n\r\n**To Reproduce**\r\n\r\n`compgen -W \"--help --verbose --version\" -- --h`\r\n\r\n**On bash gives**\r\n\r\n`--help`\r\n\r\n**On zsh gives**\r\n\r\n```\r\n--help\r\n--verbose\r\n--version\r\n```\r\n**Expected behavior**\r\nSimilar to bash zsh should give only `--help` on `compgen -W \"--help --verbose --version\" -- --h`\r\n\r\n**Screenshots**\r\n![zsh-error](https://user-images.githubusercontent.com/28918901/84010797-c98cf900-a992-11ea-8dea-0d6a21676de4.png)\r\n\r\n**Desktop**\r\n - OS / Distro: Linux Ubuntu 18.04\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: zsh 5.4.2 (x86_64-ubuntu-linux-gnu)",
        "labels": "Support",
        "id": 43855
    },
    {
        "title": "per-directory-history plugin incorrectly uses global history in newly created shell",
        "body": "**Describe the bug**\r\nThe per-directory-history plugin does not use the per-directory history immediately after creating a new shell. The per-directory history is only used when changing to global and back to per-directory mode (by pressing Ctrl+G twice) or when changing directories (e.g. `cd .`).\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable the per-directory-history plugin.\r\n2. Create a new directory for the experiments (`/tmp/test` in this example).\r\n3. Change to the test directory (`cd /tmp/test`).\r\n4. Run several commands in the test directory in order to create a history:\r\n  `echo 1`\r\n  `echo 2`\r\n  `echo 3`\r\n5. Close the shell and open a new one in a different directory.\r\n6. In that directory, run a few other commands:\r\n  `echo 4`\r\n  `echo 5`\r\n7. Open a new shell in the test directory.\r\n  **Caution:** The bug will only appear when the new shell is opened while already in that directory. It will not appear when changing to the directory *after* creating the shell.\r\n8. Browse through the history using the Arrow Up key. The commands that were run in the other directory will be visible in the history.\r\n\r\n**Expected behavior**\r\nInstead of using the global history, the newly created shell should use the history of the directory in which it was created.\r\n\r\n**Desktop**\r\n - OS / Distro: macOS 10.15.5\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: zsh 5.7.1 (x86_64-apple-darwin19.0)\r\n - Terminal emulator: iTerm2\r\n\r\n**Additional context**\r\nTheme: powerlevel10k\r\nOther active plugins: bgnotify command-not-found copydir dirhistory git safe-paste z\r\n",
        "labels": "Support",
        "id": 43856
    },
    {
        "title": "\"git clone of oh-my-zsh repo failed\" When installing ",
        "body": "I tried installing Oh My Zsh on a fresh install of WSL 2 running Ubuntu 20.04 LTS\r\n\r\nAfter I installed zsh using apt-get, I tried to install Oh My Zsh using curl and was presented with the below error.\r\n\r\n```\r\nsuraj@WIN-PC-456:~$ sh -c \"$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\r\nCloning Oh My Zsh...\r\nCloning into '/home/suraj/.oh-my-zsh'...\r\nfatal: unable to access 'https://github.com/ohmyzsh/ohmyzsh.git/': gnutls_handshake() failed: Error in the pull function.\r\nError: git clone of oh-my-zsh repo failed\r\n```",
        "labels": "Support",
        "id": 43857
    },
    {
        "title": "tab completion broken after parameter with two dashes in lsd",
        "body": "Ok, this is a weird issue. I'm not even sure if the problem here is ZSH or not.\r\n\r\nFor the sake of example let's say that I want to do something like this (the flag `--width` I'm using is not important, the important thing is that it has two dashes):\r\n```\r\n$ ls --width=1 <TAB>\r\n```\r\nAfter pressing `<TAB>` I get the usual list of files and directories. So far so good.\r\n\r\nI know want to do something similar using `lsd` (from https://github.com/Peltoche/lsd). For example:\r\n```\r\n$ lsd --tree --depth=1 <TAB>\r\n```\r\nWhat happens is that ZSH doesn't present the usual list of files and directories but instead it just add one more dash and nothing else:\r\n```\r\nlsd --tree --depth=1 -\r\n```\r\nEven more weirdly this is not reproducible with all the flags. For example this is working correctly:\r\n```\r\nlsd --tree --size=short <TAB>\r\n```\r\nAny idea what's the problem here?",
        "labels": "Support",
        "id": 43858
    },
    {
        "title": "wd warp showing wd_export_static_named_directories:hash:invalid character in directory name",
        "body": "After updating with https://github.com/ohmyzsh/ohmyzsh/commit/82f02e80a669d099d79a531cf8fb6a0e34d4478c , I get this error on wd list:\r\n\r\n```\r\nwd list\r\nwd_export_static_named_directories:hash:4: invalid character in directory name: ^[[01;31m^[[Kwarp\r\nwd_export_static_named_directories:hash:4: invalid character in directory name: ^[[01;31m^[[Karchivedbackups\r\nwd_export_static_named_directories:hash:4: invalid character in directory name: ^[[01;31m^[[Kaudio\r\nwd_export_static_named_directories:hash:4: invalid character in directory name: ^[[01;31m^[[Kbooks\r\nwd_export_static_named_directories:hash:4: invalid character in directory name: ^[[01;31m^[[Kgitroot\r\nwd_export_static_named_directories:hash:4: invalid character in directory name: ^[[01;31m^[[Kgitcoderepo\r\n[...]\r\n```\r\n\r\nIt then shows my wd list below the error. \r\n\r\nwd clean says `No warp points to clean, carry on!`\r\n\r\n - OS / Distro: debian testing\r\n - Latest ohmyzsh Update?:  yes\r\n - ZSH Version: zsh 5.8 (x86_64-debian-linux-gnu)\r\n - Terminal emulator: iterm2\r\n",
        "labels": "Support",
        "id": 43859
    },
    {
        "title": "Installer does not respect $ZDOTDIR",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n`tools/install.sh` installs into `~` even when `$ZDOTDIR` is set.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. `cd \"$(mktemp -d)\"`\r\n2. `ZDOTDIR=$PWD zsh -d`\r\n3. `sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"`\r\n\r\n**Expected behavior**\r\nOMZ installs into `$ZDOTDIR`.\r\n\r\n**Actual behavior**\r\nOMZ installs into `~`.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: macOS\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: 5.8\r\n - Terminal emulator: Apple Terminal\r\n",
        "labels": "Support",
        "id": 43860
    },
    {
        "title": "Remove extra whitespace after kubectl folder autocompletion",
        "body": "When using autocompletion in kubectl and try to specify a file in a folder, the autocompletion allways adds a whitespace after completing a folder.\r\n\r\nE.g. I want to apply a yml file located at `test/deployment.yml`. After entering `kubectl apply -f tes` and hitting `TAB` the autocompletion gives me `kubectl apply -f test/ ` instead of `kubectl apply -f test/`. Hence in order to continue, I always need to remove the whitespace first. In all other cases I have observed so far, the autocomplete doesn't add the whitespace character. I'm not sure if this is a bug or intentionally built that way. If so, is there a way to configure the extra whitespace-creation for this plugin?\r\n\r\nThx",
        "labels": "Support",
        "id": 43861
    },
    {
        "title": "kubectl autocompletion doesn't apply namespace context",
        "body": "**Describe the bug**\r\nWhen I want to use autocompletion in kubectl, the suggested results are taken from the current context instead of the namespace. E.g. when current namespace is set to `default` and I type `kubectl get pods -n development `, after hitting tab I only get the results of `default` but not `development`.  \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable this plugin 'kubectl'\r\n2. Run command try the autocomplete command 'kubectl get pods -n development'\r\n3. See results from `default` namespace\r\n\r\n**Expected behavior**\r\nSuggested result should be the pods in `development` namespace\r\n\r\n**Screenshots and/or Recordings**\r\nn/a\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: Manjaro Linux\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: zsh 5.8 (x86_64-pc-linux-gnu)\r\n - Terminal emulator Terminator\r\n\r\n**Additional context**\r\nn/a",
        "labels": "Support",
        "id": 43862
    },
    {
        "title": "Path shows \"wd\" points instead of paths",
        "body": "After a recent update my prompt shows the wd \"point\" instead of the \"path\" on macOS Catalina (10.15.4).\r\n\r\nExample:\r\n\r\n```\r\nwd add dl ~/Downloads\r\nwd dl\r\n```\r\n\r\n* Expected path (as a few days ago) in prompt: `~/Downloads`\r\n* Actual path (now) in prompt: `~dl`\r\n\r\nIt does not seem to be a [Powerlevel10k issue](https://github.com/romkatv/powerlevel10k/issues/798) and its author explained me that I now have \"named directories\".\r\n\r\nThe behaviour is still as I expected on my old Mac (also running macOS Catalina 10.15.4, but with older versions of both Oh My Zsh and Powerlevel10k)\r\n\r\nWhat changed? How can I get the old behaviour back?",
        "labels": "Support",
        "id": 43863
    },
    {
        "title": "I have a problem and need help",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nThe git is not what I want:\r\n\r\n![Jun-04-2020 10-22-45](https://user-images.githubusercontent.com/25240164/83707785-69721c00-a64d-11ea-93a4-44e61402156d.gif)\r\n\r\nI hope it looks like the following. What should I do？\r\n\r\n<img width=\"371\" alt=\"871A100EA7343D09310C62FB1A41AEFE\" src=\"https://user-images.githubusercontent.com/25240164/83707797-7131c080-a64d-11ea-91b5-e53aead5b383.png\">\r\n\r\n",
        "labels": "Support",
        "id": 43864
    },
    {
        "title": "Put down prompt",
        "body": "The question may seem silly, but how (if possible) to pin the input prompt at the bottom of the window? Like [here](https://raw.githubusercontent.com/romkatv/powerlevel10k-media/master/transient-prompt.gif).",
        "labels": "Support",
        "id": 43865
    },
    {
        "title": "Unable to install through curl",
        "body": "Hi Team,\r\nWhen I tried to install using the curl approach:\r\n```sh -c \"$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"```\r\nI got the following error:\r\n```curl: (7) Failed to connect to raw.githubusercontent.com port 443: Connection refused```\r\n\r\nI would appreciate it a lot if any one can give me a solution.\r\nThanks!",
        "labels": "Support",
        "id": 43866
    },
    {
        "title": "In Arch Linux you have to uninstall grml-zsh-config for ohmyzsh to load themes after some update",
        "body": "The problem doesn't seem to be ohmyzsh. It took me almost a week to find the solution, so I am sharing here, though I know it might be not the correct place or procedure.\r\n\r\nIt solved after:\r\n\r\n`yay -Rncs grml-zsh-config`\r\n\r\nAnd found it in:\r\n\r\n[StackOverflow](https://stackoverflow.com/a/58831804/13669078)\r\n",
        "labels": "Support",
        "id": 43867
    },
    {
        "title": "How to insert new line (\\n) in PROMPT? Bug?",
        "body": "My attempt is: `PROMPT='$(echo \"\\n\\n\")%i » '` \r\nWhy does it not work?\r\nBut \"works\" following command: `PROMPT='$(echo \"\\r\\n\\r\\n\")%i » '`\r\n\r\nWhy Windows newline works in Linux? Works but not almost work. It doubles a first letter of my input command if I press tab, for example here: `ls <tab>`\r\nYou can try this inserting my PROMPT-line in your terminal and type `ls <tab>`.\r\nI've also tried this with `print \"\\n\\n\"` (doesn't work) and `printf \"\\r\\n\\r\\n\"` - works with the same bug.\r\n\r\nHow to properly insert newline? I've been trying to do it for about 5 hours. It just blows my mind.\r\n\r\nENV:\r\n- \r\n- **Linux Mint 19.1** \r\n- **gnome-terminal, tilix**\r\n- **.oh-my-zsh** is up to date\r\n- **zsh**: 5.4.2 (x86_64-ubuntu-linux-gnu)",
        "labels": "Support",
        "id": 43868
    },
    {
        "title": "Font icon is small powerlevel10k",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nmy font icon are too small\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable this plugin '...'\r\n2. Run command '...' or try the autocomplete command '...'\r\n3. See error\r\n\r\n**Expected behavior**\r\nA brief description of what should happen.\r\n\r\n**Screenshots and/or Recordings**\r\nIf applicable, add screenshots to help explain your problem.\r\nYou can also record an asciinema session: https://asciinema.org/\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: [e.g. Arch Linux, macOS]\r\n - Latest ohmyzsh Update?: [e.g. Yes/No]\r\n - ZSH Version: [e.g. 5.6]\r\n - Terminal emulator [e.g. iTerm2]\r\n\r\n**Additional context**\r\nAdd any other context about the problem here. This can be themes, plugins, custom configs.\r\n",
        "labels": "Support",
        "id": 43869
    },
    {
        "title": "pip plugin does't work for pip3 from Homebrew",
        "body": "**Describe the bug**\r\nLet's suppose that you are using `pip3` and that there is no `pip` command:\r\n\r\n```\r\n$ which pip3\r\n/usr/local/bin/pip3\r\n$ pip\r\nzsh: command not found: pip\r\n```\r\n\r\nIn this case, the `pip` Oh-My-ZSH plugin will:\r\n\r\n- Add a new alias that doesn't make sense here:\r\n    - `alias pip=\"noglob pip\"`\r\n- Add a new PIP autocomplete to `pip3`:\r\n    - `#compdef pip pip2 pip-2.7 pip3 pip-3.2 pip-3.3 pip-3.4`\r\n- But the autocomplete will try to get the package list from `pip` instead of `pip3`:\r\n    - ``installed_pkgs=(`pip freeze | cut -d '=' -f 1`)``\r\n- And will try to get the subcommand list from `pip` instead of `pip3`:\r\n    - `_describe -t commands \"pip subcommand\" _1st_arguments`\r\n\r\nBecause of this, you the autocomplete for `pip3` will not work.\r\n\r\nThere is another edge case which is when the user has both `pip` (symlink to `pip2`) and `pip3` installed, and they share the same cached list of installed packages, which is wrong (both of them have different installed packages).\r\n\r\n**To Reproduce**\r\n\r\nBug 1:\r\n\r\n1. Install python3 from Homebrew: `brew install python`\r\n    - The `pip3` command will be installed at `/usr/local/bin/pip3` at this time\r\n2. Put `/usr/local/bin` in your PATH\r\n3. Enable the `pip` plugin\r\n4. Run `pip3 ins<TAB><TAB>`\r\n5. The autocomplete will work here\r\n6. Run `pip3 uninstall <TAB><TAB>`\r\n7. The autocomplete will not work and show the error: `\"zsh: command not found: pip\"`\r\n\r\nBug 2: (Didn't test, but this will very likely happen) \r\n\r\n1. Install python3 from Homebrew: `brew install python`\r\n    - The `pip3` command will be installed at `/usr/local/bin/pip3` at this time\r\n2. Install python2 and pip (for Python 2) from somewhere else: `/usr/bin/pip` or `/usr/bin/local/pip` will exist now\r\n2. Put `/usr/local/bin` in your PATH\r\n3. Enable the `pip` plugin\r\n4. Run `pip install boto3`\r\n5. Run `pip uninstall <TAB><TAB>`\r\n6. Run `pip3 uninstall <TAB><TAB>`\r\n7. The autocomplete will work, but it will show the packages for `pip` (not for `pip3`), including `boto3`.\r\n8. Run `pip3 uninstall boto<TAB><TAB>` (will expand to `pip3 uninstall boto3`)\r\n9. An error will occur: `WARNING: Skipping boto3 as it is not installed.`\r\n\r\n**Expected behavior**\r\n\r\nThe autocomplete should work and provide the correct list of installed packages.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: macOS\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: zsh 5.3 (x86_64-apple-darwin18.0)\r\n - Terminal emulator: iTerm2\r\n\r\n**Additional context**\r\n\r\nMaybe a possible solution could be:\r\n\r\n- Depending on the called command (`pip` vs `pip2` vs `pip3` vs. `pip2.6` etc), change the lines to `installed_pkgs=(`$PIP_CMD freeze | cut -d '=' -f 1`)` and `_describe -t commands \"$PIP_CMD subcommand\" _1st_arguments`\r\n    - `PIP_CMD` here means, the correct command that I'm trying to autocomplete\r\n    - If I call pip2 or pip and if this is a symlink to pip2.6, the command pip2.6 should be used here\r\n    - `$ZSH_PIP_CACHE_FILE` should change depending on the pip command used (each pip has a different list of installed packages)\r\n\r\nBut I have no idea how to do something like this.\r\n\r\nAnother solution could be: define `ZSH_PIP3_CACHE_FILE`, move as much of code to `pip.plugin.zsh` as possible, and define both `_pip` (autocomplete to pip2 family of commands) and `_pip3` (autocomplete to pip2 family of commands).\r\n\r\nIn both cases, I suspect that there would still be the edge case of the client loading a virtual env and running `pip uninstall <TAB><TAB>` (that would use the wrong cache file). A possible workaround would be ignoring the cache file when running the autocomplete inside a virtualenv.",
        "labels": "Support",
        "id": 43870
    },
    {
        "title": "Not installing on Win10 with cygwin,gitbash or other",
        "body": "Getting, \"Zsh not installed, please install zsh first.\", when trying to install zsh with the curl command: $ sh -c \"$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\r\n\r\nThis happens no matter what terminal i try and use in win10.\r\n\r\n![image](https://user-images.githubusercontent.com/35957164/83240669-05a5aa00-a19a-11ea-8293-b6e698982c78.png)\r\n",
        "labels": "Support",
        "id": 43871
    },
    {
        "title": "nodename nor servname provided, or not known。",
        "body": "```\r\npactepacterara@localhost ~ % wget sh -c \"$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\r\ncurl: (7) Failed to connect to raw.githubusercontent.com port 443: Connection refused\r\n--2020-05-28 16:21:09--  http://sh/\r\n正在解析主机 sh (sh)... 失败：nodename nor servname provided, or not known。\r\nwget: 无法解析主机地址 “sh”\r\nhttp://: 无效的主机名.\r\npactepacterara@localhost ~ % $ sh -c \"$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\r\ncurl: (7) Failed to connect to raw.githubusercontent.com port 443: Connection refused\r\nzsh: command not found: $\r\npactepacterara@localhost ~ %\r\n```",
        "labels": "Support",
        "id": 43872
    },
    {
        "title": "ohmyzsh plugins cloudapp error: unexpected token at 'HTTP Digest: Access denied. (JSON::ParserError)",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Bug description**\r\nI take error `unexpected token at 'HTTP Digest: Access denied. (JSON::ParserError)` while I am trying to upload an image to cloudapp by using cloudapp ohmyzsh plugin \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. `sudo gem install cloudapp_api`\r\n2. Enable this plugin ['cloudapp'](https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/cloudapp)\r\n3. set your CloudApp credentials in ~/.cloudapp as a simple text file like below:\r\n```\r\nemail\r\npassword\r\n```\r\n4. Run command `cloudapp <filename>`\r\n5. See error\r\n\r\n**Expected behavior**\r\nUpload `<filename>` to CloudApp\r\n\r\n**Desktop env**\r\n - OS => macOS\r\n - Latest ohmyzsh\r\n - ZSH version => zsh 5.7.1 (x86_64-apple-darwin19.0) \r\n - Terminal version => 2.10 (433)\r\n",
        "labels": "Support",
        "id": 43873
    },
    {
        "title": "Getting error `env: ‘zsh’: Permission denied` when using Windows 10 WSL2.",
        "body": "I am getting `env: ‘zsh’: Permission denied` when using `oh my zsh` .  The problem occurs when using WSL2 on Ubuntu 20.04 distro, installing `zsh` with `brew` and installing 'oh my zsh`.\r\n\r\n**To Reproduce**\r\nHere is the order of what I'm doing that is causing the issue:\r\n1. install `zsh` using `apt-get`.  \r\n2. install `oh-my-zsh`.\r\n3. Install `zsh` using `brew`.\r\n4. Switch default shell from `apt-get` version of  `zsh`  to `brew` version of `zsh`.  Changing it by editing`/etc/passwd`.\r\n5. Start a new terminal session to make sure everything works, which it does.\r\n6. use `echo $SHELL` to make sure it's using the `brew` version of `zsh`, which it is.\r\n7. Remove `apt-get` version of `zsh`.\r\n8. Start a new terminal session to make sure everything is working.  I get  `env: ‘zsh’: Permission denied`\r\n9. Use  `echo $SHELL` to see what shell is being used, which is still the `brew` version of `zsh`.\r\n10. Install `apt-get` version of `zsh` again. \r\n11.  Start a new terminal session,   `env: ‘zsh’: Permission denied` goes away.\r\n12.  Use  `echo $SHELL` to see what shell is being used, which is still the `brew` version of `zsh`.\r\n\r\n**Expected behavior**\r\nSo if `apt-get` version of `zsh` is installed, everything works.  Even if it's not the shell being used.  The expected behavior is not getting `env: ‘zsh’: Permission denied`.\r\n\r\n**Desktop (please complete the following information):**\r\n - Windows 10 Version 2004 using WSL2.  WS2 is using Distro Ubuntu 20.04\r\n - Latest ohmyzsh Update?:  YES\r\n - ZSH Version:\r\n     `Brew` version of zsh:     zsh 5.8 (x86_64-pc-linux-gnu)\r\n     `apt-get` version of zsh: zsh 5.8 (x86_64-ubuntu-linux-gnu)\r\n - Terminal emulator [e.g. iTerm2]: Windows Terminal v1.0.1401.0\r\n\r\n**Additional context**\r\nSo I start to dig into why I'm getting `env: ‘zsh’: Permission denied`.  It appears line `env ZSH=$ZSH ZSH_CACHE_DIR=$ZSH_CACHE_DIR DISABLE_UPDATE_PROMPT=$DISABLE_UPDATE_PROMPT zsh -f $ZSH/tools/check_for_upgrade.sh` in file  `~/.oh-my-zsh/oh-my-zsh.sh` is cuasing the error.\r\n\r\nSo now I try running  `zsh -f $ZSH/tools/check_for_upgrade.sh` and I get error `_update_zsh_update:1: permission denied: /.zsh-update`\r\n\r\nThanks,\r\n   Michael\r\n",
        "labels": "Support",
        "id": 43874
    },
    {
        "title": "\"jira branch\" does not take into account duplicated JIRA_PREFIX",
        "body": "**Describe the bug**\r\nWhen on branch `ABC-2137__my-feature`, if `$JIRA_PREFIX` is set to `ABC-`, running `jira branch` opens `{my-jira-url}/ABC-ABC-2137` instead of `{my-jira-url}/ABC-2137`.\r\n\r\nThat makes it impossible to make use of `$JIRA_PREFIX=\"ABC-\"` for other commands, if you want to be able to run `jira branch` and have the correct page open.\r\n\r\n(Note that `ABC-2137__my-feature` branch name format is the one recognized by GitHub/Jira integration.)\r\n\r\n**To Reproduce**\r\n1. Enable `jira` plugin\r\n2. Set `$JIRA_PREFIX=\"ABC-\"`\r\n3. Check out to branch starting with `ABC-`, e.g. `ABC-2137__my-feature`\r\n4. Run `jira branch`\r\n5. `{my-jira-url}/ABC-ABC-2137` url is opened\r\n\r\n**Expected behavior**\r\n`{my-jira-url}/ABC-2137` url is opened (duplicated prefix is recognized and removed)\r\n\r\n**Desktop (please complete the following information):**\r\n - ZSH Version: zsh 5.3 (x86_64-apple-darwin18.0)",
        "labels": "Support",
        "id": 43875
    },
    {
        "title": "Git completion breaks zsh after update",
        "body": "**Describe the bug**\r\nAfter auto-update today I get this errors when I try to use git auto-complete feature\r\n\r\n```\r\n/Users/carlos/.zsh/git-completion.bash:378: read-only variable: WIDGETSTYLE\r\n_git:17: _default: function definition file not found\r\n_dispatch:70: bad math expression: operand expected at `/usr/bin/g...'\r\n\r\n[Process completed]\r\n\r\n```\r\n\r\nIn other terminal tabs before the update this is still working\r\n\r\n**To Reproduce**\r\nUpdate to the latest master state\r\n\r\n.zshrc\r\n```\r\nzstyle ':completion:*:*:git:*' script ~/.zsh/git-completion.bash\r\nautoload -Uz compinit && compinit\r\n```\r\n\r\ntry to autocomplete any git command like\r\n\r\n```\r\ngit check<TAB>\r\n```\r\n\r\n**Expected behavior**\r\nAuto complete instead of error \r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: macOS\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: 5.8 (x86_64-apple-darwin19.3.0)\r\n - Terminal emulator: macOS Terminal\r\n\r\n**Additional context**\r\nUsing \r\nZSH_THEME=\"powerlevel10k/powerlevel10k\"\r\n",
        "labels": "Support",
        "id": 43876
    },
    {
        "title": "`git stash drop` completion raises errors on Ubuntu 20.04",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nI'm getting the following errors when trying to autocomplete after `git stash drop`:\r\n```\r\n$ git stash drop\r\n_arguments:comparguments:325: invalid argument: _git-notes\r\n_git-stash:88: command not found: (-q --quiet)-q[suppress all output]\r\n_arguments:comparguments:325: invalid argument: _git-notes\r\n_git-stash:88: command not found: (-q --quiet)-q[suppress all output]\r\n_arguments:comparguments:325: invalid argument: _git-notes\r\n_git-stash:88: command not found: (-q --quiet)-q[suppress all output]\r\n```\r\nOther git commands, including other stash sub-commands seem to work fine.\r\n\r\nTried to remove `~/.zcompdump*` files and restarting the shell - did not help.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable this plugin `git zsh-completions` (I have other plugins enabled as well but I don't think they matter)\r\n2. Try the autocomplete command `git stash drop`\r\n3. See error\r\n\r\n**Expected behavior**\r\nShould show the list of stashed changes\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: Ubuntu 20.04 (kernel version: 5.4.0-31-generic)\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: zsh 5.8 (x86_64-ubuntu-linux-gnu)\r\n - Terminal emulator [e.g. iTerm2]: tmux\r\n\r\n**Additional context**\r\nAdd any other context about the problem here. This can be themes, plugins, custom configs.\r\n",
        "labels": "Support",
        "id": 43877
    },
    {
        "title": "zsh: command not found (despite setting PATH)",
        "body": "I have zsh (installed via Brew) and ohmyzsh (installed from shell as per the website) on my MacBook Pro, which runs macOS Catalina. I also have installed iproute2mac via Brew. In my .zshrc I have\r\n```\r\nexport PATH=\"/usr/local/bin:$PATH\"\r\nexport PATH=\"/usr/local/sbin:$PATH\"\r\n```\r\nwhich matches the entries in my .bash_profile. I also spotted the first commented entry in .zshrc and uncommented it: \r\n\r\n`export PATH=$HOME/bin:/usr/local/bin:$PATH`\r\n\r\nWhen I try to use iproute2mac (for example by issuing `ip a`), in Bash the program runs and I get the output requested by the command. In ZSH I get \r\n\r\n`zsh: command not found: ip.py`\r\n\r\nI've confirmed that /usr/local/bin/ip exists and indeed, as I said, it executes fine in bash. Could anyone please point me in the right direction? Is it perhaps an issue with calling Python (also installed via Brew) rather than (ohmy)zsh directly? Or something else? Sorry if this isn't the right place to ask but since it only happens on zsh where my beloved ohmyzsh lives, it seemed the logical place to start.",
        "labels": "Support",
        "id": 43878
    },
    {
        "title": "How to add custom alias for flutter?",
        "body": "I'm interested to add custom alias for flutter in `flutter.plugin.zsh` for generating files and releasing the apk.\r\n\r\n```\r\nalias flbr = \"flutter pub run build_runner build\"\r\nalias flbar = \"flutter build apk --release\"\r\n```\r\n\r\nHow can I add one?",
        "labels": "Support",
        "id": 43879
    },
    {
        "title": "Avit Tab Completion Color Issues",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nWhen using the avit theme, triggering tab completion options will render the already input characters to be grey (prompt triangle color, color 8) while newer characters are white (normal text color, color 16). This does not happen in other themes like the default robbyrussell theme. \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\nUse a color scheme that has a contrasty different color 8 and color 16. \r\nType \"ec\" and then tab, you should see a list of options, and also your previously typed text changes color. If you type on, you will go back to the original default color (color 16). \r\n\r\n**Expected behavior**\r\nThe colors should be consistent. \r\n\r\n**Screenshots and/or Recordings**\r\n![Screenshot from 2020-05-20 19-26-59](https://user-images.githubusercontent.com/15188392/82507359-01a9c600-9ad0-11ea-9e31-23205262a930.png)\r\n\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: Manjaro\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: 5.8\r\n - Terminal emulator: gnome-terminal\r\n\r\n**Additional context**\r\nThis may be the theme forgetting to add \"\\e[39m\" or \"\\e[0m\" to reset colors in the end. \r\n",
        "labels": "Support",
        "id": 43880
    },
    {
        "title": "Pressing the UP arrows skips every other entry in my history file",
        "body": "System: Ubuntu 20.04\r\nPlugins: git,asdf\r\nTheme: RobbyRussell\r\nTerminal: alacritty with tmux\r\n",
        "labels": "Support",
        "id": 43881
    },
    {
        "title": "\"is not a clone of .../ohmyzsh.git\"",
        "body": "**Problem**:\r\nwhen i try to upgrade zsh this is the message that i receive. I tried to clear yay cache or to wait thinking that was an error with some upgrade, but i'm receiving this problem from a month.\r\nMaybe was changed something and i didn't noticed. Can someone help me? I love too much this shell!\r\n![toGit](https://user-images.githubusercontent.com/46976701/82465627-ca331d80-9abf-11ea-8809-30d3ec96f083.png)\r\n",
        "labels": "Support",
        "id": 43882
    },
    {
        "title": "Broken append to .zsh_history for commands with embedded newlines",
        "body": "**Describe the bug**\r\n\r\nAn update I received today broke adding a command with embedded newlines to `~/.zsh_history`. Specifically, it looks like newline characters are stripped before the command is added to `~/.zsh_history`.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. This reproduces for me without any plugins. The full text of the stripped `~/.zshrc` I'm testing with is:\r\n\r\n\t```sh\r\n\t# Path to your oh-my-zsh installation.\r\n\texport ZSH=/Users/kyle/.oh-my-zsh\r\n\tsource $ZSH/oh-my-zsh.sh\r\n\t```\r\n\r\n2. Run command\r\n\r\n\t```bash\r\n\techo \"one\" \\\r\n\t\"two\"\r\n\t```\r\n\r\n3. See error\r\n\r\n\t```\r\n\tkyle@MacBook-Pro-6 ~ % tail -n 2 ~/.zsh_history\r\n\t: 1589940466:0;echo \"one\" \"two\"\r\n\t: 1589940472:0;tail -n 2 ~/.zsh_history\r\n\t```\r\n\r\n**Expected behavior**\r\n\r\nPreviously, newlines were included when adding to `~/.zsh_history`, e.g.:\r\n\r\n`~/.zsh_history` excerpt (from before the update):\r\n```\r\n...\r\n: 1589871042:0;landsat-cogeo-mosaic search \\\\\r\n    --bounds '5.9559,45.818,10.4921,47.8084' \\\\\r\n    `# Maximum 10% cloud cover` \\\\\r\n    --max-cloud 10 \\\\\r\n    `# Imagery from 2019` \\\\\r\n    --min-date 2019-01-01 \\\\\r\n    --max-date 2020-01-01 \\\\\r\n    --season summer > features.json\r\n: 1589871109:0;wc -l features.json\r\n...\r\n```\r\nThe line starting with `1589871042` is a single command written in a text editor and then pasted into ZSH. This means that when I go back through my history, I can run the same command _as I pasted_.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: macOS 10.15.3\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: \r\n\r\n\t```\r\n\tkyle@MacBook-Pro-6 ~ % zsh --version\r\n\tzsh 5.7.1 (x86_64-apple-darwin19.0)\r\n\t```\r\n - Terminal emulator: iTerm2\r\n\r\n**Additional context**\r\nThis reproduces without any additional themes.",
        "labels": "Support",
        "id": 43883
    },
    {
        "title": "Agnoster issue WSL",
        "body": "Hello\r\n\r\nI have the same issue showed in here :\r\nhttps://github.com/ohmyzsh/ohmyzsh/issues/1906#issuecomment-252443982\r\n\r\nbut I have WSL and my terminal is `Windows Terminal`\r\n\r\nRegards",
        "labels": "Support",
        "id": 43884
    },
    {
        "title": "Uninitialized variable access: DISABLE_AUTO_TITLE & DISABLE_UNTRACKED_FILES_DIRTY",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nUninitialized variable access.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. The user uses `set -u` to report as errors uninitialized variable access.\r\n2. `omz_termsupport_precmd:1: DISABLE_AUTO_TITLE: parameter not set`\r\n3. `parse_git_dirty:5: DISABLE_UNTRACKED_FILES_DIRTY: parameter not set`\r\n\r\n**Expected behavior**\r\nNo errors reported.\r\n\r\n**Screenshots and/or Recordings**\r\nn/a\r\n\r\n**Desktop (please complete the following information):**\r\nn/a\r\n\r\n**Additional context**\r\nAdd any other context about the problem here. This can be themes, plugins, custom configs.\r\n",
        "labels": "Support",
        "id": 43885
    },
    {
        "title": "Parse error after update",
        "body": "Got an update this morning and afterwards I get an error everytime I open my terminal:\r\n``~/.oh-my-zsh/lib/history.zsh:38: parse error near `<<<'``\r\nThis is the content of history.zsh:\r\n```\r\n## History wrapper\r\nfunction omz_history {\r\n  local clear list\r\n  zparseopts -E c=clear l=list\r\n\r\n  if [[ -n \"$clear\" ]]; then\r\n    # if -c provided, clobber the history file\r\n    echo -n >| \"$HISTFILE\"\r\n    echo >&2 History file deleted. Reload the session to see its effects.\r\n  elif [[ -n \"$list\" ]]; then\r\n    # if -l provided, run as if calling `fc' directly\r\n    builtin fc \"$@\"\r\n  else\r\n    # unless a number is provided, show all history events (starting from 1)\r\n    [[ ${@[-1]-} = *[0-9]* ]] && builtin fc -l \"$@\" || builtin fc -l \"$@\" 1\r\n  fi\r\n}\r\n\r\n# Timestamp format\r\ncase ${HIST_STAMPS-} in\r\n  \"mm/dd/yyyy\") alias history='omz_history -f' ;;\r\n  \"dd.mm.yyyy\") alias history='omz_history -E' ;;\r\n  \"yyyy-mm-dd\") alias history='omz_history -i' ;;\r\n  \"\") alias history='omz_history' ;;\r\n  *) alias history=\"omz_history -t '$HIST_STAMPS'\" ;;\r\nesac\r\n\r\n## History file configuration\r\n[ -z \"$HISTFILE\" ] && HISTFILE=\"$HOME/.zsh_history\"\r\nHISTSIZE=50000\r\nSAVEHIST=10000\r\n\r\n## History command configuration\r\nsetopt extended_history       # record timestamp of command in HISTFILE\r\nsetopt hist_expire_dups_first # delete duplicates first when HISTFILE size exceeds HISTSIZE\r\nsetopt hist_ignore_dups       # ignore duplicated commands history list\r\nsetopt hist_ignore_space      # ignore commands that start with space\r\n<<<<<<< Updated upstream\r\nsetopt hist_reduce_blanks     # remove superfluous blanks from commands added to history\r\n#setopt hist_verify            # show command with history expansion to user before running it\r\n=======\r\nsetopt no_hist_verify         # show command with history expansion to user before running it\r\n>>>>>>> Stashed changes\r\nsetopt inc_append_history     # add commands to HISTFILE in order of execution\r\nsetopt share_history          # share command history data\r\n```\r\n\r\n",
        "labels": "Support",
        "id": 43886
    },
    {
        "title": "custom $ZSH_COMPDUMP causing error message on init",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nOn starting a new shell I get \r\n`rm: cannot remove '/home/<user>/.oh-my-zsh/cache': Is a directory`\r\n\r\n**To Reproduce**\r\nIt seems to have something to do with my custom $ZSH_COMPDUMP\r\nfrom my .zshrc :\r\n`export ZSH_COMPDUMP=\"$ZSH/cache\"`\r\ncommenting out that line causes the error message to disappear \r\n\r\n**Expected behavior**\r\nno error message\r\n\r\n**Desktop (please complete the following information):**\r\nLatest Oh My Zsh updates . Multiple Debian based systems. \r\n",
        "labels": "Support",
        "id": 43887
    },
    {
        "title": "robbyrussel: Possible clash of git and git-prompt plugin",
        "body": "The current version of the git-prompt plugin defines these - amongst many other - environment variables:\r\n\r\n```zsh\r\nZSH_THEME_GIT_PROMPT_PREFIX=\"(\"\r\nZSH_THEME_GIT_PROMPT_SUFFIX=\")\"\r\nZSH_THEME_GIT_PROMPT_CLEAN=\"%{$fg_bold[green]%}%{✔%G%}\"\r\n...\r\n```\r\n\r\nwhile in the `robbyrussel` default theme (and many others) define these\r\n\r\n```zsh\r\nZSH_THEME_GIT_PROMPT_PREFIX=\"%{$fg_bold[blue]%}git:(%{$fg[red]%}\"\r\nZSH_THEME_GIT_PROMPT_SUFFIX=\"%{$reset_color%} \"\r\nZSH_THEME_GIT_PROMPT_DIRTY=\"%{$fg[blue]%}) %{$fg[yellow]%}✗\"\r\nZSH_THEME_GIT_PROMPT_CLEAN=\"%{$fg[blue]%})\"\r\n```\r\n\r\nI suspect the environment variables from the theme stem from the default `git` plugin and sadly conflict with the namespace of the `git-prompt` plugin, insofar that the closing bracket is removed from the suffix if there are local changes in the workspace and also in case the workspace is clean, a single blue `)` is printed out, instead of the green checkmark as defined by the plugin.",
        "labels": "Support",
        "id": 43888
    },
    {
        "title": "Oh My Zsh aliases override .profile aliases",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n\r\nOh My Zsh defines a bunch of aliases that I don't want, when I already define these in .profile for use with zsh, bash, sh, and ksh.\r\n\r\n**To Reproduce**\r\n\r\n1. Define `ll` in `$HOME/.profile`\r\n2. Source `$HOME/.profile` from `$HOME/.zshenv`\r\n3. Install Oh My Zsh.\r\n\r\n**Expected behavior**\r\n\r\nMy aliases aren't messed with.\r\n\r\n**Observed behavior**\r\n\r\nOh My Zsh aggressively overwrites many aliases, without bothering to check if these are already defined.\r\n\r\nPlease offer an opt-out environment variable to disable Oh My Zsh from defining these aliases. Really annoying.",
        "labels": "Support",
        "id": 43889
    },
    {
        "title": "Do I need to add autojump source lines to zshrc?",
        "body": "I followed the instructions to install the `autojump` plugin, and after I did `brew install`, it outputted\r\n```\r\nAdd the following line to your ~/.bash_profile or ~/.zshrc file (and remember\r\nto source the file to update your current session):\r\n  [ -f /usr/local/etc/profile.d/autojump.sh ] && . /usr/local/etc/profile.d/autojump.sh\r\n\r\nIf you use the Fish shell then add the following line to your ~/.config/fish/config.fish:\r\n  [ -f /usr/local/share/autojump/autojump.fish ]; and source /usr/local/share/autojump/autojump.fish\r\n\r\nzsh completions have been installed to:\r\n  /usr/local/share/zsh/site-functions\r\n```\r\n\r\nDo I need to actually add that line when using ohmyzsh before adding the autojump plugin inside `plugins=(..)` or no?",
        "labels": "Support",
        "id": 43890
    },
    {
        "title": "Upgrade error \"insufficient permission\"",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n\r\nWhen I try to update OhMyZsh, the same error occurs all the time:\r\n```\r\nerror: insufficient permission for adding an object to repository database .git/objects\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Open your term using ohmyzsh\r\n2. Run command 'upgrade_oh_my_zsh'\r\n3. See error:\r\n```\r\n~\r\n▶ upgrade_oh_my_zsh\r\nUpdating Oh My Zsh\r\nremote: Enumerating objects: 86, done.\r\nremote: Counting objects: 100% (86/86), done.\r\nremote: Compressing objects: 100% (39/39), done.\r\nremote: Total 66 (delta 38), reused 53 (delta 26), pack-reused 0\r\nerror: insufficient permission for adding an object to repository database .git/objects\r\nfatal: failed to write object\r\nfatal: unpack-objects failed\r\nThere was an error updating. Try again later?\r\n```\r\n\r\n**Expected behavior**\r\nUpgrade ohmyzsh flawlessly.\r\n\r\n**Screenshots and/or Recordings**\r\n![Screen Shot 2020-05-11 at 5 55 36 PM](https://user-images.githubusercontent.com/6686490/81610934-a598c080-93b0-11ea-99d7-45f921ad4707.png)\r\n\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: macOS\r\n - Latest ohmyzsh Update?: No 😢\r\n - ZSH Version: zsh 5.7.1 (x86_64-apple-darwin19.0)\r\n - Terminal emulator iTerm2\r\n\r\n**Additional context**\r\nMy .oh-my-zsh folder does not have uncommited or unstaged changes, its a clean repo.\r\n![Screen Shot 2020-05-11 at 5 57 46 PM](https://user-images.githubusercontent.com/6686490/81611147-ee507980-93b0-11ea-9bae-63ce451beff3.png)\r\n\r\n",
        "labels": "Support",
        "id": 43891
    },
    {
        "title": "gcloud and zsh: correct 'ssh' to '.ssh' [nyae]?",
        "body": "**Describe the bug**\r\nRecently moved to zsh from bash.\r\nUsing gcloud SDK to access remote systems on Google Cloud and you will always get:\r\n\r\ngcloud compute ssh $username@$instance_name --zone us-central1-c --project $project\r\nzsh: correct 'ssh' to '.ssh' [nyae]? n\r\n\r\nDoesn't happen when aliased.\r\n\r\n\r\n**To Reproduce**\r\n\r\nProvision a GCP instance without OS Login and try to ssh with this:\r\n\r\ngcloud compute ssh $username@$instance_name --zone us-central1-c --project $project\r\n\r\n**Expected behavior**\r\nNormal login without the prompt.\r\n\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: MacOS Catalina 10.15.4\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: 5.7.1\r\n\r\n\r\n**Additional context**\r\nDefault .zshrc. Added a couple of aliases and nothing more.",
        "labels": "Support",
        "id": 43892
    },
    {
        "title": "Plugins not working as expected (docker, docker-compose, command-not-found)",
        "body": "Docker and docker-compose autocompletion not works. And command-not-found plugin doesn't work.\r\nI added them to plugins:\r\n`plugins=(git docker docker-compose command-not-found history-substring-search)`\r\nbut here only `git` and `history-substring-search`plugins work as expected. Docker-compose only added its aliases which I dont need really, but I need autocompletion. Also `command-not-found` seems not working as shell not started to give me any suggestions.",
        "labels": "Support",
        "id": 43893
    },
    {
        "title": "zsh is showing the arrows weird",
        "body": "first of all I am new to using terminal and shell. i installed zsh and Oh My Zsh with power-line fonts,removed the user details shown at the start of commands and changed my default theme to agnoster which i liked the appearance. but after installation the arrows are shown weird like in the given picture \r\n![Screenshot from 2020-05-09 21 10 19](https://user-images.githubusercontent.com/52039218/81478237-a0653580-9239-11ea-9c70-340bdddfded7.png)\r\n",
        "labels": "Support",
        "id": 43894
    },
    {
        "title": "permission denied in popOS(debian)",
        "body": "\r\nAs explained in title when trying to install using curl statement provided, getting permission denied to create folder under /Users/XXXXX.oh-my-zsh.\r\nInstallation succeeds for root user with elevated root privileges.\r\nchecked and followed already provided suggestions.\r\n- assign $ZSH variable to user/oh-my-zsh.\r\n-  tried updating /root folder with read permission.\r\n- checked $SHELL --version command to ensure using zsh as shell.\r\n\r\n2. Include as much relevant information as possible\r\nlinux - popOS 20.0.4 (debian based).\r\n```console\r\necho $SHELL\r\n/usr/bin/zsh\r\necho $ZSH\r\n/Users/karthick/oh-my-zsh\r\nsudo -l\r\nUser karthick may run following commands\r\n(ALL:ALL)ALL\r\n```\r\n3. Try to make sure the issue is due to Oh My Zsh\r\ninstallation support required.Please let me know if you require more details.\r\n",
        "labels": "Support",
        "id": 43895
    },
    {
        "title": "Problem after Arch Linux update",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nA clear description of what the bug is.\r\nAfter a yesterday zsh update in arch linux nothing works (completion, history-search, anything)\r\n\r\n**To Reproduce**\r\n1. I just copied the default config to assert the problem was not in my config.\r\n\r\n2. When starting there are these errors showed.\r\n\r\n3. See error\r\n```\r\n~/oh-my-zsh/oh-my-zsh.sh:81: compinit: function definition file not found\r\n~/oh-my-zsh/lib/cli.zsh:41: command not found: compdef\r\n~/oh-my-zsh/lib/completion.zsh:76: bashcompinit: function definition file not found\r\n~/oh-my-zsh/lib/directories.zsh:32: command not found: compdef\r\n~/oh-my-zsh/lib/termsupport.zsh:109: add-zsh-hook: function definition file not found\r\n~/oh-my-zsh/lib/termsupport.zsh:110: add-zsh-hook: function definition file not found\r\n~/oh-my-zsh/lib/theme-and-appearance.zsh:2: colors: function definition file not found\r\n~/oh-my-zsh/plugins/git/git.plugin.zsh:19: command not found: compdef\r\n~/oh-my-zsh/plugins/git/git.plugin.zsh:89: command not found: compdef\r\n~/oh-my-zsh/plugins/git/git.plugin.zsh:104: command not found: compdef\r\n~/oh-my-zsh/plugins/git/git.plugin.zsh:109: command not found: compdef\r\n~/oh-my-zsh/plugins/git/git.plugin.zsh:119: command not found: compdef\r\n~/oh-my-zsh/plugins/git/git.plugin.zsh:129: command not found: compdef\r\n~/oh-my-zsh/plugins/git/git.plugin.zsh:138: command not found: compdef\r\n~/oh-my-zsh/plugins/git/git.plugin.zsh:144: command not found: compdef\r\n~/oh-my-zsh/plugins/git/git.plugin.zsh:229: is-at-least: function definition file not found\r\n```\r\n\r\n**Expected behavior**\r\nA brief description of what should happen.\r\n\r\n**Screenshots and/or Recordings**\r\nIf applicable, add screenshots to help explain your problem.\r\nYou can also record an asciinema session: https://asciinema.org/\r\n\r\n![image](https://user-images.githubusercontent.com/6975176/81426575-ad125c80-9159-11ea-875e-5885fd19d575.png)\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: Arch Linux\r\n - Latest ohmyzsh Update?:  Yes\r\n - ZSH Version: 5.8\r\n - Terminal emulator: Xterm + Tmux\r\n\r\n**Additional context**\r\nAdd any other context about the problem here. This can be themes, plugins, custom configs.\r\n",
        "labels": "Support",
        "id": 43896
    },
    {
        "title": "Disable git prompt on a path in the gitfast plugin",
        "body": "Hi, I have the following problem. \r\nI want to disable the zsh vcs_info for a path, which I mount via ssh. I found a current workaround in https://github.com/sindresorhus/pure/issues/189#issuecomment-173844254\r\n\r\nI added the following line to my .zshrc (at the top or bottom, same behavior)\r\n```\r\nzstyle ':vcs_info:*' disable-patterns \"${(b)HOME}/foo(|/*)\"\r\n```\r\nIf I look at the output of `zstyle` I get also \r\n```\r\ndisable-patterns\r\n        :vcs_info:* '/home/till/foo(|/*)'\r\n```\r\n\r\nthis works fine for `plugins=(git)`, however I like to use the plugin `gitfast`. Here it seems to ignore the disable-patterns and still outputs the git information.\r\n\r\nDo you have any suggestions?\r\n\r\nMany thanks,\r\nTill",
        "labels": "Support",
        "id": 43897
    },
    {
        "title": "command-not-found plugin issue after typing random string",
        "body": "<!--\r\ncommand-not-found issue after typing random string hiyiuygy\r\n-->\r\n\r\n**Describe the bug**\r\nCould not find the database of available applications, run update-command-not-found as root to fix this\r\nSorry, command-not-found has crashed! Please file a bug report at:\r\nhttp://www.debian.org/Bugs/Reporting\r\nPlease include the following information with the report:\r\n\r\ncommand-not-found version: 0.3\r\nPython version: 3.7.3 final 0\r\nDistributor ID:\tDebian\r\nDescription:\tDebian GNU/Linux 10 (buster)\r\nRelease:\t10\r\nCodename:\tbuster\r\nException information:\r\n\r\nlocal variable 'cnf' referenced before assignment\r\nTraceback (most recent call last):\r\n  File \"/usr/share/command-not-found/CommandNotFound/util.py\", line 23, in crash_guard\r\n    callback()\r\n  File \"/usr/lib/command-not-found\", line 93, in main\r\n    if not cnf.advise(args[0], options.ignore_installed) and not options.no_failure_msg:\r\nUnboundLocalError: local variable 'cnf' referenced before assignment\r\n\r\n\r\n",
        "labels": "Support",
        "id": 43898
    },
    {
        "title": "Oh-my-zsh + zsh-autosuggestions include spaces on command line",
        "body": "I have a strange problem using oh-my-zsh where there are spaces when accepting autocomplete sometimes. How to resolve this?\r\n\r\nSome .zshrc information\r\n\r\n```\r\nplugins=(git zsh-autosuggestions)\r\nZSH_THEME=\"agnoster\"\r\n\r\n```\r\n\r\n![Screenshot from 2020-05-06 19-46-11](https://user-images.githubusercontent.com/6552560/81334475-1881fe80-9074-11ea-9a7f-ef8dead4dd09.png)\r\n",
        "labels": "Support",
        "id": 43899
    },
    {
        "title": "git switch and git restore completions removed from gitfast",
        "body": "**Describe the bug**\r\nPR #8550 removed `git switch` and `git restore` completions (maybe others as well)\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable this plugin 'gitfast'\r\n2. Run `git switch ...`\r\n3. File completions\r\n\r\n**Expected behavior**\r\nI should complete branches.\r\n\r\nThanks!\r\n",
        "labels": "Support",
        "id": 43900
    },
    {
        "title": "After updated to OSX macOS Catalina, the terminal reported some wrong like failed to load module `zsh/terminfo'",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nAfter updated the system, when I press ↑ it should show the last command instead of `^[[A`.Also press the key \"tab\" after '/et' will show a real \"tab\", instead of `/etc/` .Even if I have uninstalled OMZ, it will show the same wrong.Besides, after I run the script 'uninstall.sh', the `zsh  --version` got `zsh 5.3 (x86_64-apple-darwin18.0)` .Is it right?Do I uninstall completely?\r\n<img width=\"1060\" alt=\"78501DBB-10F6-4ADC-BB69-7306C527FB8E\" src=\"https://user-images.githubusercontent.com/14232061/81314201-6a01ac00-90bb-11ea-81e8-cc60c1f1230f.png\">\r\n\r\n\r\n**To Reproduce**\r\nAfter I updated my system to macOS Catalina(version 10.15.4), every time I start my iTerm2, i got the error:\r\n\r\n**Screenshots and/or Recordings**\r\n<img width=\"1060\" alt=\"8AFB5C53-090B-4C44-8547-03AB5DDC287D\" src=\"https://user-images.githubusercontent.com/14232061/81311708-4f7a0380-90b8-11ea-98a6-b01e0bbe4c84.png\">\r\n<img width=\"1060\" alt=\"CF60B899-4CF1-4B5E-A4B9-24B63C118BA1\" src=\"https://user-images.githubusercontent.com/14232061/81311743-5d2f8900-90b8-11ea-89d1-cbdd1074d3ed.png\">\r\n<img width=\"611\" alt=\"2FA7983B-B79A-4B91-A2F2-B22236C38697\" src=\"https://user-images.githubusercontent.com/14232061/81313760-ddef8480-90ba-11ea-830b-16d1b0f6bc79.png\">\r\n\r\n\r\n\r\n\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: [macOS Catalina(version 10.15.4)]\r\n - Latest ohmyzsh Update?: [No]\r\n - ZSH Version: [5.3]\r\n - Terminal emulator [iTerm2]\r\n\r\n**Additional context**\r\nWhat should I do to fix my OMZ?",
        "labels": "Support",
        "id": 43901
    },
    {
        "title": "safe-paste breaks vi bindings",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n\r\nWhen using a terminal with `vi` bindings the mode will be set back to `emacs` unexpectedly. [The code mentions the issue](https://github.com/ohmyzsh/ohmyzsh/blob/dd1a72696f162fd5285a104b5f63970deb66e8b0/plugins/safe-paste/safe-paste.plugin.zsh#L35), but when using a lot of plugins and other config files it's not obvious why this is happening.\r\n\r\n**To Reproduce**\r\n1. Enable safe-paste\r\n2. Run `bindkey -v`\r\n3. Paste some things\r\n4. Notice that you're no longer in vi mode.",
        "labels": "Support",
        "id": 43902
    },
    {
        "title": "Slow Close of zsh on Ubuntu 20.04",
        "body": "When I close ZSH with ctrl+d I see a newline, until the shell closes after 4-5 seconds.\r\nWhat kind of information do you need, so I can provide that?\r\n\r\nThanks :)",
        "labels": "Support",
        "id": 43903
    },
    {
        "title": "Gentoo ohmyzsh error",
        "body": "I have oh-my-zsh installed and i am trying to add the gentoo zsh completions as well. When i add at the bottom of my zshrc the following as described by the gentoo wiki i get an error:\r\n```\r\nautoload -U compinit promptinit\r\ncompinit\r\npromptinit; prompt gentoo\r\n```\r\n\r\nThe error is:\r\n`(eval):zle:1: not enough arguments for -C`\r\n\r\n\r\n**Source:**\r\nhttps://wiki.gentoo.org/wiki/Zsh#app-shells.2Fgentoo-zsh-completions",
        "labels": "Support",
        "id": 43904
    },
    {
        "title": "Shell prompt is broken after activating asciinema ",
        "body": "\r\n**Describe the bug**\r\nAfter executing `asciinema rec` prompt cursor shifts few characters left. \r\n\r\n**To Reproduce**\r\n1. Start recording shell using \r\n```\r\n$ asciinema rec\r\n```\r\n2. Cursor is misplaced after starting recording\r\n\r\n**Expected behavior**\r\nCommand line cursor does not shift.\r\n\r\n**Screenshots and/or Recordings**\r\n[![asciicast](https://asciinema.org/a/xK05XQll1FLKLPJp3T9PQ9kIm.svg)](https://asciinema.org/a/xK05XQll1FLKLPJp3T9PQ9kIm)\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: macOS Catalina 10.15.4\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: zsh 5.7.1 (x86_64-apple-darwin19.0)\r\n - Terminal emulator iTerm2 3.3.9\r\n\r\n**Additional context**\r\nI tried to reproduce this bug turning off different antigen plugins and changing themes. Bug was still reproducible. Same bug occurs when using Poetry's `poetry shell`",
        "labels": "Support",
        "id": 43905
    },
    {
        "title": "Lost existing .zshrc file after oh my zsh install",
        "body": "Hi there, after installing oh my zsh my existing `.zshrc` file seems to be deleted. I had a `.zshrc` file before installation (with no backups, unfortunately). I'm running OSX, are there any other innate directories that my previous `.zshrc` file may be stored in/found?\r\n\r\nThank you!",
        "labels": "Support",
        "id": 43906
    },
    {
        "title": "gradlew autocomplete stopped working",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\ngradlew autocomplete stopped working\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable this plugin 'gradle'\r\n1. git clone https://github.com/jitpack/gradle-simple.git\r\n1. cd gradle-simple \r\n1. Try the autocomplete command './gradlew [tab]'\r\n1. Nothing happened\r\n\r\n**Expected behavior**\r\nShould see all the gradle tasks\r\n\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: macOS\r\n - Latest ohmyzsh Update?: Yes\r\n\r\n**Additional context**\r\ni can see all my gradle tasks in `.gradletasknamecache`\r\n\r\nPlease let me know if more information is needed.\r\n",
        "labels": "Support",
        "id": 43907
    },
    {
        "title": "File completion not active when running a python command",
        "body": "I can not get file completion to work when running python scripts such as `./manage.py`.\r\n\r\n### Expected behaviour\r\n\r\n`./manage.py loaddata fixt<TAB>` and it would complete the folder name `fixtures`\r\n\r\n### Actual behaviour\r\n\r\n`./manage.py loaddata fixt<TAB>` and it does nothing\r\n\r\n### More information\r\n\r\nThis is no Mac OS Catalina. If I run `zsh -f` and then try it, it works. Configured plugins:\r\n\r\n```\r\n❯ echo $plugins\r\ngit\r\n```\r\n\r\n(but I guess python plugins get loaded as well, as it completes the `./manage.py` commands as well.)",
        "labels": "Support",
        "id": 43908
    },
    {
        "title": "command completioin for docker",
        "body": "hello, how do i use the command completion for docker? i actually enabled it in the plugins section of my .zshrc.. sourced .zshrc but when i actually type docker and press tab it will just print out the current directory content\r\n\r\nhttp://ix.io/2kfz\r\n",
        "labels": "Support",
        "id": 43909
    },
    {
        "title": "Oh-my-Zsh is trying to access other users' home directory",
        "body": "Hi, I am trying to get Oh-my-Zsh on an HPC of my university. The problem is it is trying to access other users' home, which I don't know which line in the .zsh is doing. I am seeing output like\r\n```\r\n../../*****: Permission denied                                                                                                                                                                \r\n../../********: Permission denied\r\n../../*******: Permission denied\r\n../../*******: Permission denied\r\n../../*****: Permission denied\r\n../../*****: Permission denied\r\n../../****: Permission denied\r\n```\r\nI remember this used to work. I tried reinstalling it but it doesn't help. I also tried to comment out some line in the .zsh file and set ZSH manually but I failed to figure out the problem. JFYI, with no Oh-my-Zsh, zsh runs without a problem.",
        "labels": "Support",
        "id": 43910
    },
    {
        "title": "on macOS Catalina when typing history -c the result is ➜ history: bad option: -c",
        "body": "**Describe the bug**\r\non macOS Catalina when typing history -c the result is ➜ history: bad option: -c\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Open Terminal\r\n2. Run command 'history -c'\r\n3. See error\r\n\r\n**Expected behavior**\r\nThe history should clear.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: macOS Catalina\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: zsh 5.7.1 (x86_64-apple-darwin19.0)\r\n - Terminal emulator: 2.1",
        "labels": "Support",
        "id": 43911
    },
    {
        "title": "on macOS Catalina when typing history -c the result is ➜ history: bad option: -c",
        "body": "**Describe the bug**\r\non macOS Catalina when typing history -c the result is ➜ history: bad option: -c\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Open Terminal\r\n2. Run command 'history -c'\r\n3. See error\r\n\r\n**Expected behavior**\r\nThe history should clear.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: macOS Catalina\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: zsh 5.7.1 (x86_64-apple-darwin19.0)\r\n - Terminal emulator: 2.1\r\n",
        "labels": "Support",
        "id": 43912
    },
    {
        "title": "chsh command unsuccessful. Change your default shell manually.",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nThe authentication failed, but the changes were made! I guess the process shouldn't pass without making sure of the credentials, I mean the shell shouldn't change to zsh if user's password is incorrect!\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Installation\r\n\r\n**Expected behavior**\r\nAsk for the correct password.\r\n\r\n**Screenshots and/or Recordings**\r\n<a href=\"https://ibb.co/kSBbT4X\"><img src=\"https://i.ibb.co/kSBbT4X/Screenshot-from-2020-04-28-16-51-29.png\" alt=\"Screenshot-from-2020-04-28-16-51-29\" border=\"0\"></a>\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: Kali Linux\r\n - Latest ohmyzsh Update?:  Yes\r\n - ZSH Version: zsh 5.7.1 (x86_64-debian-linux-gnu)\r\n - Terminal emulator: bash\r\n",
        "labels": "Support",
        "id": 43913
    },
    {
        "title": "It is very difficult to see.",
        "body": "![Annotation 2020-04-28 005028](https://user-images.githubusercontent.com/64082226/80404488-76cc1600-88eb-11ea-849f-7f98549a0fdf.png)\r\nHow do I turn it off? It is very difficult to see.",
        "labels": "Support",
        "id": 43914
    },
    {
        "title": "Stops colorizing at asterisk symbol *",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nStops colorizing at asterisk symbol *\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. `ccat ~/.zshrc`\r\n2. Color stops after line `# Standard plugins can be found in ~/.oh-my-zsh/plugins/*`\r\n\r\n**Expected behavior**\r\nColorize whole file\r\n\r\n**Screenshots and/or Recordings**\r\n![image](https://user-images.githubusercontent.com/8129583/80356785-e2719d00-8871-11ea-8f3a-ae814feb9e78.png)\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: unRAID\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: 5.6.2\r\n - Terminal emulator: webterminal\r\n\r\nedit actually it seems to stop at the ```/*``` which could just be escaping something.",
        "labels": "Support",
        "id": 43915
    },
    {
        "title": "jsontools README shows incorrect description of is_json",
        "body": "**Describe the bug**\r\n\r\nThe section in README that describes is_json usage is as follows:\r\n```\r\n• is_json:\r\n# pretty print the contents of an existing json file\r\nless data.json | is_json\r\n```\r\n\r\nClearly, there's a documentation bug as is_json is not for pretty print, but for validation.\r\n\r\n\r\n**To Reproduce**\r\n1. Check [README for jsontools](https://github.com/ohmyzsh/ohmyzsh/blob/master/plugins/jsontools/README.md)\r\n\r\n**Expected behavior**\r\nThe description about is_json shall mention that it can be used to check if data conforms to a JSON schema or not\r\n\r\n\r\n**Screenshots and/or Recordings**\r\nPreview Fix:\r\n![Screenshot 2020-04-26 at 3 35 19 AM](https://user-images.githubusercontent.com/38013895/80291865-f7193c80-876e-11ea-8b53-cb489aee80bc.png)\r\n\r\n\r\n**Desktop (please complete the following information):**\r\nNot applicable, it's a documentation bug",
        "labels": "Support",
        "id": 43916
    },
    {
        "title": "No reset color in fino-time theme",
        "body": "I noticed that if you not loading rvm and `ruby_prompt_info` fails colors then are broken.\r\n\r\n```diff\r\ndiff --git a/themes/fino-time.zsh-theme b/themes/fino-time.zsh-theme\r\nindex 5679e9f3..e579da08 100644\r\n--- a/themes/fino-time.zsh-theme\r\n+++ b/themes/fino-time.zsh-theme\r\n@@ -29,7 +29,7 @@ local rvm_ruby='using%{$FG[243]%}$(ruby_prompt_info)'\r\n local git_info='$(git_prompt_info)'\r\n \r\n \r\n-PROMPT=\"╭─%{$FG[040]%}%n%{$reset_color%} %{$FG[239]%}at%{$reset_color%} %{$FG[033]%}$(box_name)%{$reset_color%} %{$FG[239]%}in%{$reset_color%} %{$terminfo[bold]$FG[226]%}%~%{$reset_color%}${git_info} %{$FG[239]%}${rvm_ruby} %D - %*\r\n+PROMPT=\"╭─%{$FG[040]%}%n%{$reset_color%} %{$FG[239]%}at%{$reset_color%} %{$FG[033]%}$(box_name)%{$reset_color%} %{$FG[239]%}in%{$reset_color%} %{$terminfo[bold]$FG[226]%}%~%{$reset_color%}${git_info} %{$FG[239]%}${rvm_ruby}%{$reset_color%} %D - %*\r\n ╰─$(virtualenv_info)$(prompt_char) \"\r\n \r\n ZSH_THEME_GIT_PROMPT_PREFIX=\" %{$FG[239]%}on%{$reset_color%} %{$fg[255]%}\"\r\n```\r\n\r\nProbably this patch should fix it.",
        "labels": "Support",
        "id": 43917
    },
    {
        "title": "Fedora 31 /bin/usr/zsh already exists and it's a not empty directory",
        "body": "Hi,\r\nthis is what i done on a new fresh fedora 31 installation:\r\n- sudo dnf install zsh\r\n- which zsh: /usr/bin/zsh\r\n- configured zsh with minimal option\r\n- chsh -s $(which zsh)\r\n- $shell --version: zsh 5.7.1 (x86_64-redhat-linux-gnu)\r\n- /etc/shells:                                                    \r\n/bin/sh\r\n/bin/bash\r\n/usr/bin/sh\r\n/usr/bin/bash\r\n/usr/bin/tmux\r\n/bin/tmux\r\n/usr/bin/zsh\r\n/bin/zsh\r\n\r\nNow, using \r\nsh -c \"$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\r\ngive me fatal error: /bin/usr/zsh already exists and it's a not empty directory.\r\n\r\nAm i missing something?\r\n\r\n\r\n",
        "labels": "Support",
        "id": 43918
    },
    {
        "title": "React Native  gradlew clean command",
        "body": "Hi,\r\n\r\ni usualy using win for coding but today i got a ubuntu OS, and just installed zsh with some tutorials on the web. So how can i manage to run basic react native commands like `gradlew clean` in android folder ? \r\n\r\nThank you",
        "labels": "Support",
        "id": 43919
    },
    {
        "title": "Color prompt based on exit code of command",
        "body": "I started using zsh and oh-my-zsh this week and am trying to modify the muse theme to indicate whether the last command failed or not. I've been trying find if this issue has already been answered somewhere but couldn't find it. Feel free to point me to an answer if it exists somewhere else.\r\n\r\nI've managed to color the first part of the prompt based on the exit code of the last command as follows:\r\n```sh\r\nprompt_color() {\r\n    [[ $? -eq 0 ]] && echo $PROMPT_SUCCESS_COLOR || echo $PROMPT_FAILURE_COLOR\r\n}\r\n\r\nPROMPT='%{$(prompt_color)%}%~%{$reset_color%}%{$GIT_PROMPT_INFO%}$(git_prompt_info)$(virtualenv_prompt_info)%{$GIT_DIRTY_COLOR%}$(git_prompt_status) %{$reset_color%}\r\n%{$PROMPT_PROMPT%}ᐅ%{$reset_color%} '\r\n```\r\nwhich does work. But what I actually want is to color the last `ᐅ` symbol. However, if I replace the `$PROMPT_PROMPT` with `${prompt_color}` at the end of the prompt it does not work (note the newline before `%{$PROMPT_PROMPT%}`). I've also tried to put `$?` at the start of the prompt and by the end. The first one shows a `1` if the command fails but the latter one shows a `0`. I've also tried to save the exit code in a variable before setting `PROMPT` as for example\r\n```sh\r\nRET_VAL=$?\r\n```\r\nbut that doesn't seem to be updated for each command but only once.\r\n\r\nAny help is highly appreciated, thanks in advance!\r\n\r\n(ps, really liking zsh so far :) )\r\n",
        "labels": "Support",
        "id": 43920
    },
    {
        "title": "Strange completion suggestion (mismatched upper and lowercase)",
        "body": "I have a strange phenomenon regarding completion.\r\n\r\nThe system is Fedora 32, zsh is 5.8 and oh-my-zsh is newest.\r\n\r\nI have a directory with the following content\r\n\r\n```\r\ndrwxr-xr-x. 1 root root     4884 Apr 17 16:29 backups\r\ndrwxr-xr-x. 1 root root      128 Apr 10 11:25 gpg\r\ndrwxr-xr-x. 1 root root      340 Apr 17 16:29 installer\r\n-rw-r--r--. 1 root root     1201 Apr 17  2014 README\r\ndrwxr-xr-x. 1 root root      274 Apr 10 11:25 TeXLive\r\n-rw-r--r--. 1 root root      945 Apr 10 11:37 texlive.profile\r\n-rw-r--r--. 1 root root 15603801 Apr 17 16:29 texlive.tlpdb\r\n-rw-r--r--. 1 root root 16308930 Apr 17 16:28 texlive.tlpdb.3fa7fda404e9c1926412f4d43d381cc7\r\n-rw-r--r--. 1 root root 16286175 Apr 13 08:38 texlive.tlpdb.e3a260d598eed31bbd62f419747d9e4a\r\n-rw-r--r--. 1 root root 16260012 Apr 11 10:05 texlive.tlpdb.e838e10992a52b715be9e99422af8a05\r\ndrwxr-xr-x. 1 root root   145106 Apr 17 16:29 tlpobj\r\ndrwxr-xr-x. 1 root root      112 Apr 10 11:36 tlpostcode\r\ndrwxr-xr-x. 1 root root       36 Apr 10 11:34 tltcl\r\ndrwxr-xr-x. 1 root root      246 Apr 10 11:34 translations\r\n```\r\nWhen I now type `ls -l te` and TAB I get the following suggestion:\r\n\r\n`ls -l teXLive`  \r\n\r\nThis is totally confusing. Watch the mixture of lower and upper case. \r\n\r\nAny idea?\r\n",
        "labels": "Support",
        "id": 43921
    },
    {
        "title": "zsh hook runs git command to delay the command execution",
        "body": "**Describe the bug**\r\nI'm using oh-my-zsh with built-in themes(such as `robbyrussell`, `agnoster` or `ys`). I find that the git command is executed for every command I typed in zsh.\r\n\r\nThe problem still exists though disabled all plug-ins. Also the problem always happens when using above three themes(I didn't try more built-in themes). \r\n\r\nThe problem is gone after disabling the built-in theme or using third party theme `pure`.\r\n\r\n**To Reproduce**\r\n\r\nSee below screen records,\r\n\r\n**Expected behavior**\r\n\r\nDisable the zsh hook to run git command. Or the command can exit quickly after it exits.\r\n\r\n**Screenshots and/or Recordings**\r\n\r\nhttps://asciinema.org/a/H9oBLracs5pm6YhDRLMG1TlXU\r\n\r\nhttps://streamable.com/kem8kb with the process name changes in iTerm2 tab bar\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro:  macOS\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version:  zsh 5.8 (x86_64-apple-darwin18.7.0)\r\n - Terminal emulator : iTerm2\r\n\r\n**Additional context**\r\n\r\nMy zshrc config,\r\n```.zshrc\r\n#zmodload zsh/zprof\r\n# Path to your oh-my-zsh configuration.\r\nZSH=$HOME/.oh-my-zsh\r\n\r\n# Set name of the theme to load.\r\n# Look in ~/.oh-my-zsh/themes/\r\n# Optionally, if you set this to \"random\", it'll load a random theme each\r\n# time that oh-my-zsh is loaded.\r\nZSH_THEME=\"robbyrussell\"\r\n\r\n# runs an npm script via lerna for a the current module\r\nalias lr='lerna run --stream --scope $(node -p \"require(\\\"./package.json\\\").name\")'\r\n\r\n# runs \"npm run build\" (build + test) for the current module\r\nalias lb='lr build'\r\nalias lt='lr test'\r\n\r\n# runs \"npm run watch\" for the current module (recommended to run in a separate terminal session):\r\nalias lw='lr watch'\r\n\r\n# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)\r\n# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/\r\n# Example format: plugins=(rails git textmate ruby lighthouse)\r\nplugins=(\r\n\tgit \r\n\tosx \r\n##\tgradle \r\n\tbrew \r\n##\tcommand-not-found \r\n\tgithub \r\n#\tgnu-utils \r\n##\tmvn \r\n\tpython \r\n\tpip \r\n#\tscreen \r\n\tvi-mode \r\n\tdocker \r\n##\tdocker-compose \r\n\tnode \r\n##\tspring \r\n\tmosh \r\n#\thttpie \r\n##\tsudo \r\n\ttmux \r\n##\tkubectl \r\n##\thelm \r\n\tgolang\r\n\thistory\r\n\thistory-substring-search\r\n\tzsh-autosuggestions\r\n\tzsh-syntax-highlighting\r\n)\r\n\r\nsource $ZSH/oh-my-zsh.sh\r\n\r\n# Customize to your needs...\r\nexport PATH=\"$HOME/.toolbox/bin:${KREW_ROOT:-$HOME/.krew}/bin:/Users/kane/bin:/usr/local/sbin:$PATH\"\r\nexport GOPATH=\"/Users/kane/git/go-projects/\"\r\n\r\ntest -e \"${HOME}/.iterm2_shell_integration.zsh\" && source \"${HOME}/.iterm2_shell_integration.zsh\"\r\nDISABLE_AUTO_TITLE=\"true\"\r\n\r\n#zmodload zsh/terminfo\r\nbindkey \"$terminfo[cuu1]\" history-substring-search-up\r\nbindkey \"$terminfo[cud1]\" history-substring-search-down\r\n\r\nexport LANG=en_US.UTF-8\r\n\r\nexport PATH=\"/usr/local/opt/ruby/bin:$PATH\"\r\n```",
        "labels": "Support",
        "id": 43922
    },
    {
        "title": "pressing tab for auto complete add extra spaces and duplicate command",
        "body": "**Describe the bug**\r\npressing tab for auto complete add extra spaces and duplicate command, really annoying, and cannot be deleted this characters\r\n\r\nI assume is ohmyzsh because when not loaded the issue not happens\r\n\r\n**To Reproduce**\r\n1. I have clean installation\r\n2. write some command\r\n3. write and intent autocomplete with tab\r\n\r\n**Expected behavior**\r\nno add extra characters\r\n\r\n**Screenshots and/or Recordings**\r\n![Peek 2020-04-14 10-57](https://user-images.githubusercontent.com/395707/79246610-07601c00-7e3f-11ea-8b67-383afffdb562.gif)\r\n\r\n\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: Arch Linux\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: 5.8\r\n - Terminal emulator Konsole, Yakuake\r\n\r\n**Additional context**\r\n.zshrc\r\n```\r\n# If you come from bash you might have to change your $PATH.\r\n# export PATH=$HOME/bin:/usr/local/bin:$PATH\r\n\r\n# Path to your oh-my-zsh installation.\r\nexport ZSH=\"/home/rkmax/.oh-my-zsh\"\r\n\r\n# Set name of the theme to load --- if set to \"random\", it will\r\n# load a random theme each time oh-my-zsh is loaded, in which case,\r\n# to know which specific one was loaded, run: echo $RANDOM_THEME\r\n# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes\r\nZSH_THEME=\"robbyrussell\"\r\n\r\n# Set list of themes to pick from when loading at random\r\n# Setting this variable when ZSH_THEME=random will cause zsh to load\r\n# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/\r\n# If set to an empty array, this variable will have no effect.\r\n# ZSH_THEME_RANDOM_CANDIDATES=( \"robbyrussell\" \"agnoster\" )\r\n\r\n# Uncomment the following line to use case-sensitive completion.\r\n# CASE_SENSITIVE=\"true\"\r\n\r\n# Uncomment the following line to use hyphen-insensitive completion.\r\n# Case-sensitive completion must be off. _ and - will be interchangeable.\r\n# HYPHEN_INSENSITIVE=\"true\"\r\n\r\n# Uncomment the following line to disable bi-weekly auto-update checks.\r\n# DISABLE_AUTO_UPDATE=\"true\"\r\n\r\n# Uncomment the following line to automatically update without prompting.\r\n# DISABLE_UPDATE_PROMPT=\"true\"\r\n\r\n# Uncomment the following line to change how often to auto-update (in days).\r\n# export UPDATE_ZSH_DAYS=13\r\n\r\n# Uncomment the following line if pasting URLs and other text is messed up.\r\n# DISABLE_MAGIC_FUNCTIONS=true\r\n\r\n# Uncomment the following line to disable colors in ls.\r\n# DISABLE_LS_COLORS=\"true\"\r\n\r\n# Uncomment the following line to disable auto-setting terminal title.\r\n# DISABLE_AUTO_TITLE=\"true\"\r\n\r\n# Uncomment the following line to enable command auto-correction.\r\n# ENABLE_CORRECTION=\"true\"\r\n\r\n# Uncomment the following line to display red dots whilst waiting for completion.\r\n# COMPLETION_WAITING_DOTS=\"true\"\r\n\r\n# Uncomment the following line if you want to disable marking untracked files\r\n# under VCS as dirty. This makes repository status check for large repositories\r\n# much, much faster.\r\n# DISABLE_UNTRACKED_FILES_DIRTY=\"true\"\r\n\r\n# Uncomment the following line if you want to change the command execution time\r\n# stamp shown in the history command output.\r\n# You can set one of the optional three formats:\r\n# \"mm/dd/yyyy\"|\"dd.mm.yyyy\"|\"yyyy-mm-dd\"\r\n# or set a custom format using the strftime function format specifications,\r\n# see 'man strftime' for details.\r\n# HIST_STAMPS=\"mm/dd/yyyy\"\r\n\r\n# Would you like to use another custom folder than $ZSH/custom?\r\n# ZSH_CUSTOM=/path/to/new-custom-folder\r\n\r\n# Which plugins would you like to load?\r\n# Standard plugins can be found in ~/.oh-my-zsh/plugins/*\r\n# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/\r\n# Example format: plugins=(rails git textmate ruby lighthouse)\r\n# Add wisely, as too many plugins slow down shell startup.\r\nplugins=(git)\r\n\r\nsource $ZSH/oh-my-zsh.sh\r\n\r\n# User configuration\r\n\r\n# export MANPATH=\"/usr/local/man:$MANPATH\"\r\n\r\n# You may need to manually set your language environment\r\n# export LANG=en_US.UTF-8\r\n\r\n# Preferred editor for local and remote sessions\r\n# if [[ -n $SSH_CONNECTION ]]; then\r\n#   export EDITOR='vim'\r\n# else\r\n#   export EDITOR='mvim'\r\n# fi\r\n\r\n# Compilation flags\r\n# export ARCHFLAGS=\"-arch x86_64\"\r\n\r\n# Set personal aliases, overriding those provided by oh-my-zsh libs,\r\n# plugins, and themes. Aliases can be placed here, though oh-my-zsh\r\n# users are encouraged to define aliases within the ZSH_CUSTOM folder.\r\n# For a full list of active aliases, run `alias`.\r\n#\r\n# Example aliases\r\n# alias zshconfig=\"mate ~/.zshrc\"\r\n# alias ohmyzsh=\"mate ~/.oh-my-zsh\"\r\n\r\n```\r\n\r\n",
        "labels": "Support",
        "id": 43923
    },
    {
        "title": "Paste of URL inserts escape character",
        "body": "\r\n**Describe the bug**\r\n\r\nIf I copy an URL like this `https://www.youtube.com/watch?v=-g6vcGt-4Ic` into the terminal\r\nit then looks like follows: `https://www.youtube.com/watch\\?v\\=-g6vcGt-4Ic`.\r\n\r\nAs can be seen the `?` and `=` are escaped by `\\`.\r\n\r\n\r\nA clear description of what the bug is.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Just install oh-my-zsh and take the resulting `/.zshrc` as is.\r\n2. Proceed as described above.\r\n\r\n**Desktop (please complete the following information):**\r\n - Fedora 31\r\n - Latest ohmyzsh Update?:  Yes\r\n - ZSH Version: 5.7.1\r\n - Terminal emulator: xfce4-terminal or gnome-terminal\r\n",
        "labels": "Support",
        "id": 43924
    },
    {
        "title": "Prepend letters on tab completion",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nOn tab completion always the origin command prepended by 2 letters\r\nIf COMPLETION_WAITING_DOTS=\"true\" uncommented  then it's working as expected. I wasted a lot of time to find it how to fix it so by design it should uncommented or fix in another way\r\n\r\n**To Reproduce**\r\n1. Type less .zsh and press Tab\r\nThen  'leless .zsh' is displayed which is confusing and is still visible after the command is executed\r\n**Expected behavior**\r\nDo not modify the command there'd been already typed\r\n\r\n**Screenshots and/or Recordings**\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: Arch\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: 5.8\r\n - Terminal emulator kitty, termite\r\n\r\n**Additional context**\r\n\r\n",
        "labels": "Support",
        "id": 43925
    },
    {
        "title": "Gentoo new install error bash: autoload: command not found",
        "body": "Just installed oh my zsh with the cur command on my new gentoo install... trying to source .zshrc i get this error before even touching any config file\r\n\r\nbash: autoload: command not found\r\nbash: /home/user/.oh-my-zsh/oh-my-zsh.sh: line 41: syntax error near unexpected token `('\r\nbash: /home/user/.oh-my-zsh/oh-my-zsh.sh: line 41: `for plugin ($plugins); do'",
        "labels": "Support",
        "id": 43926
    },
    {
        "title": "zsh: command not found: adb",
        "body": "**Describe the bug**\r\n\r\nWhen i call for adb command, I get the following error :\r\n```\r\nzsh: command not found: adb\r\n```\r\n\r\n**Desktop (please complete the following information):**\r\n\r\nOS / Distro: Windows 10 w/ [Ubuntu 18.04 LTS](https://www.microsoft.com/en-us/p/ubuntu-1804-lts/9n9tngvndl3q?activetab=pivot:overviewtab)\r\nLatest ohmyzsh Update?: Yes\r\nZSH Version: zsh 5.4.2 (x86_64-ubuntu-linux-gnu)\r\nTerminal emulator: [Hyper.js](https://hyper.is/) running on bash\r\n\r\n**Situation**\r\n\r\nI installed Android Studio today along with the SDK tools. The library are saved in `/mnt/c/Users/fritz/AppData/Local/Android/Sdk`. I tried adding it the path using ~/.zshrc config file and then doing a source ~/.zshrc to apply changes right away but I get the error anyways. \r\n\r\nWhen I manually added the the folders on my system environment, I was able to call adb on my command prompt but not not in my Hyper.js which uses the bash terminal where I installed  oh my zsh.\r\n\r\n~/.zshrc config file : \r\n```\r\n# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.\r\n# Initialization code that may require console input (password prompts, [y/n]\r\n# confirmations, etc.) must go above this block; everything else may go below.\r\n#if [[ -r \"${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh\" ]]; then\r\n#  source \"${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh\"\r\n#fi\r\n\r\n# If you come from bash you might have to change your $PATH.\r\n# export PATH=$HOME/bin:/usr/local/bin:$PATH\r\n\r\nexport PATH=/usr/local/share/npm/bin:$PATH\r\n\r\nexport ANDROID_SDK_ROOT=/mnt/c/Users/fritz/AppData/Local/Android/Sdk\r\nexport PATH=$ANDROID_SDK_ROOT/build-tools:$PATH\r\nexport PATH=$ANDROID_SDK_ROOT/emulator:$PATH\r\nexport PATH=$ANDROID_SDK_ROOT/platform-tools:$PATH\r\n\r\n# export NVM_DIR=~/.nvm\r\n#  [ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"\r\n\r\nZSH_DISABLE_COMPFIX=true\r\n\r\n# Path to your oh-my-zsh installation.\r\nexport ZSH=\"/home/fritzyx/.oh-my-zsh\"\r\n\r\n# Set name of the theme to load --- if set to \"random\", it will\r\n# load a random theme each time oh-my-zsh is loaded, in which case,\r\n# to know which specific one was loaded, run: echo $RANDOM_THEME\r\n# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes\r\n# ZSH_THEME=\"robbyrussell\"\r\n# ZSH_THEME=\"powerlevel9k/powerlevel9k\"\r\nZSH_THEME=\"powerlevel10k/powerlevel10k\"\r\n#SH_THEME=\"random\"\r\nPOWERLEVEL9K_MODE=\"nerdfont-complete\"\r\n\r\nPOWERLEVEL9K_DISABLE_RPROMPT=true\r\nPOWERLEVEL9K_PROMPT_ON_NEWLINE=true\r\nPOWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX=\"⯈ \"\r\nPOWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX=\"\"\r\n\r\neval `dircolors /home/fritzyx/.oh-my-zsh/custom/bash_themes/dircolors-solarized/dircolors.256dark`\r\n\r\n# Set list of themes to pick from when loading at random\r\n# Setting this variable when ZSH_THEME=random will cause zsh to load\r\n# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/\r\n# If set to an empty array, this variable will have no effect.\r\n# ZSH_THEME_RANDOM_CANDIDATES=( \"robbyrussell\" \"agnoster\" )\r\n\r\n# Uncomment the following line to use case-sensitive completion.\r\n# CASE_SENSITIVE=\"true\"\r\n\r\n# Uncomment the following line to use hyphen-insensitive completion.\r\n# Case-sensitive completion must be off. _ and - will be interchangeable.\r\n# HYPHEN_INSENSITIVE=\"true\"\r\n\r\n# Uncomment the following line to disable bi-weekly auto-update checks.\r\n# DISABLE_AUTO_UPDATE=\"true\"\r\n\r\n# Uncomment the following line to automatically update without prompting.\r\n# DISABLE_UPDATE_PROMPT=\"true\"\r\n\r\n# Uncomment the following line to change how often to auto-update (in days).\r\n# export UPDATE_ZSH_DAYS=13\r\n\r\n# Uncomment the following line if pasting URLs and other text is messed up.\r\n# DISABLE_MAGIC_FUNCTIONS=true\r\n\r\n# Uncomment the following line to disable colors in ls.\r\n# DISABLE_LS_COLORS=\"true\"\r\n\r\n# Uncomment the following line to disable auto-setting terminal title.\r\n# DISABLE_AUTO_TITLE=\"true\"\r\n\r\n# Uncomment the following line to enable command auto-correction.\r\n# ENABLE_CORRECTION=\"true\"\r\n\r\n# Uncomment the following line to display red dots whilst waiting for completion.\r\n# COMPLETION_WAITING_DOTS=\"true\"\r\n\r\n# Uncomment the following line if you want to disable marking untracked files\r\n# under VCS as dirty. This makes repository status check for large repositories\r\n# much, much faster.\r\n# DISABLE_UNTRACKED_FILES_DIRTY=\"true\"\r\n\r\n# Uncomment the following line if you want to change the command execution time\r\n# stamp shown in the history command output.\r\n# You can set one of the optional three formats:\r\n# \"mm/dd/yyyy\"|\"dd.mm.yyyy\"|\"yyyy-mm-dd\"\r\n# or set a custom format using the strftime function format specifications,\r\n# see 'man strftime' for details.\r\n# HIST_STAMPS=\"mm/dd/yyyy\"\r\n\r\n# Would you like to use another custom folder than $ZSH/custom?\r\n# ZSH_CUSTOM=/path/to/new-custom-folder\r\n\r\n# Which plugins would you like to load?\r\n# Standard plugins can be found in ~/.oh-my-zsh/plugins/*\r\n# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/\r\n# Example format: plugins=(rails git textmate ruby lighthouse)\r\n# Add wisely, as too many plugins slow down shell startup.\r\nplugins=(git zsh-nvm adb)\r\n\r\nsource $ZSH/oh-my-zsh.sh\r\n\r\n# User configuration\r\n\r\n# export MANPATH=\"/usr/local/man:$MANPATH\"\r\n\r\n# You may need to manually set your language environment\r\n# export LANG=en_US.UTF-8\r\n\r\n# Preferred editor for local and remote sessions\r\n# if [[ -n $SSH_CONNECTION ]]; then\r\n#   export EDITOR='vim'\r\n# else\r\n#   export EDITOR='mvim'\r\n# fi\r\n\r\n# Compilation flags\r\n# export ARCHFLAGS=\"-arch x86_64\"\r\n\r\n# Set personal aliases, overriding those provided by oh-my-zsh libs,\r\n# plugins, and themes. Aliases can be placed here, though oh-my-zsh\r\n# users are encouraged to define aliases within the ZSH_CUSTOM folder.\r\n# For a full list of active aliases, run `alias`.\r\n#\r\n# Example aliases\r\n# alias zshconfig=\"mate ~/.zshrc\"\r\n# alias ohmyzsh=\"mate ~/.oh-my-zsh\"\r\n\r\n# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.\r\n[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh\r\n```\r\n\r\nWhen doing an `echo $PATH` : \r\n```\r\n/home/fritzyx/.nvm/versions/node/v14.0.0-rc.2/bin:/mnt/c/Users/fritz/AppData/Local/Android/Sdk/platform-tools:/mnt/c/Users/fritz/AppData/Local/Android/Sdk/emulator:/mnt/c/Users/fritz/AppData/Local/Android/Sdk/build-tools:/usr/local/share/npm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Intel/iCLS Client/:/mnt/c/Program Files/Intel/iCLS Client/:/mnt/c/Windows/system32:/mnt/c/Windows:/mnt/c/Windows/System32/Wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Program Files (x86)/Intel/Intel(R) Management Engine Components/DAL:/mnt/c/Program Files/Intel/Intel(R) Management Engine Components/DAL:/mnt/c/Program Files (x86)/Intel/Intel(R) Management Engine Components/IPT:/mnt/c/Program Files/Intel/Intel(R) Management Engine Components/IPT:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Program Files/Calibre2/:/mnt/c/Program Files/Git/cmd:/mnt/c/Gradle/gradle-4.8/bin:/mnt/c/Program Files/Java/jdk-10.0.1/bin:/mnt/c/Program Files/Intel/WiFi/bin/:/mnt/c/Program Files/Common Files/Intel/WirelessCommon/:/mnt/c/Users/fritz/AppData/Local/Programs/Python/Python37/Scripts/:/mnt/c/Users/fritz/AppData/Local/Programs/Python/Python37/:/mnt/c/Program Files/Java/jdk-10.0.1/bin:/mnt/c/Users/fritz/AppData/Local/Microsoft/WindowsApps:/mnt/c/cygwin64/bin:/mnt/c/Users/fritz/AppData/Local/JetBrains/Toolbox/apps/WebStorm/ch-0/181.4892.44/bin:/mnt/c/Program Files/Git/bin:/mnt/c/Users/fritz/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Users/fritz/AppData/Local/hyper/app-3.0.2/resources/bin:/mnt/c/Users/fritz/AppData/Roaming/Python/Python37/Scripts:/mnt/c/Users/fritz/AppData/Local/Android/Sdk/platform-tools:/mnt/c/Users/fritz/AppData/Local/Android/Sdk/emulator:/mnt/c/Users/fritz/AppData/Local/Android/Sdk/build-tools/29.0.3:/snap/bin\r\n```\r\n\r\nI really hope someone can help, I just configured oh-my-zsh a few days ago and I'm really loving it, I hope to be able to use it for everything that I need. \r\n\r\nStay safe and thank you in advanve for the help ! ",
        "labels": "Support",
        "id": 43927
    },
    {
        "title": "Starting command w/ space and pasting preserves old completion",
        "body": "**Describe the bug**\r\nIf execute a command that begins with space and pasting text thereafter, previous command is appended to that text.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable plugin `zsh-autosuggestions`\r\n2. Start command with space, e.g. `_echo '1'` where `_` means space\r\n3. paste text, starting with space, e.g. `_CMD+V`\r\n4. move cursor to the right(right arrow)\r\n\r\n**Expected behavior**\r\nTo have pasted text only, without previous command being appended\r\n\r\n**Screenshots and/or Recordings**\r\n<details><summary> screens</summary>\r\n\r\n![image](https://user-images.githubusercontent.com/7850039/79028492-d363cd00-7b98-11ea-927f-e12473f8e739.png)\r\n\r\n![image](https://user-images.githubusercontent.com/7850039/79028500-d8c11780-7b98-11ea-8078-c790b1446539.png)\r\n\r\n</details>\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: macOS Catalina 10.15.4 (19E287)\r\n - Latest ohmyzsh Update?: yes\r\n - ZSH Version: 5.7.1\r\n - Terminal emulator iTerm2 3.3.9\r\n\r\n**Additional context**\r\nThe problems seems to be in `MAGIC_FUNCTIONS`, but I couldn't get in what exactly. Also, seems to run just fine on High Sierra (though zsh version is 5.3)\r\n\r\nRelated https://github.com/zsh-users/zsh-autosuggestions/issues/521\r\n",
        "labels": "Support",
        "id": 43928
    },
    {
        "title": "Since v2 of AWS CLI the default pager may prevent AWS plugin from working",
        "body": "**Describe the bug**\r\nSince the update to version 2 of the AWS CLI all requests are formatted with a pager (e.g. `less`).\r\nThis is useful to prevent long responses to clutter the terminal history but makes much more difficult to use some features of the aws plugin.\r\n\r\n**To Reproduce**\r\n1. Update your AWS CLI version to 2.*\r\n2. The default pager might already be `less` (check running `aws sts get-caller-identity`), otherwise set it through your `~/.aws/config` file or through `export AWS_PAGER=\"less\"`\r\n3. Install the _aws_ plugin\r\n4. Try running `aws_change_access_key`\r\n\r\n**Expected behavior**\r\nAll calls should be done without blocking the scripts, some of them have to print the result on screen.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: macOS\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: [e.g. 5.6]\r\n\r\n**Proposed solution**\r\nI will submit shortly a PR to unset any pager for all aws requests in the scripts.",
        "labels": "Support",
        "id": 43929
    },
    {
        "title": "A theme placed in $ZSH_CUSTOM is not recognised",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nI'm installing a powerlevel10k plugin https://github.com/romkatv/powerlevel10k#oh-my-zsh. Its theme, placed in $ZSH_CUSTOM, is not recognised.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Install this plugin 'https://github.com/romkatv/powerlevel10k'\r\n2. Set ZSH_THEME=\"powerlevel10k/powerlevel10k\"\r\n3. The following error is displayed when the zsh is started:\r\n/home/al/.oh-my-zsh/oh-my-zsh.sh:source:106: no such file or directory: /home/al/.oh-my-zsh/themes/powerlevel10K/powerle\r\nvel10K.zsh-theme\r\n\r\n**Expected behavior**\r\nNo error is displayed.\r\n\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: Win10/WSL 1/Ubuntu 18.04\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: 5.4.2\r\n - Terminal emulator Windows\r\n",
        "labels": "Support",
        "id": 43930
    },
    {
        "title": "Custom Background",
        "body": "Hey guys. I just found out about wsl and immediately found out about ohmyzsh since I like customizing my terminal. In windows terminal setting the backgroundImage field in the profiles.json file will let you set an image of your choice as your background instead of a solid color. This doesn't work for wsl however. I didn't know what theme to use so I set my theme to random then started opening loads of tabs until I started seeing some themes like rixius had my background image I tried setting in the profiles.json. However I decided on using xiong-chiamiov theme and I was wondering if there was some code I could add to the ~/.zshrc for the theme that would give me the background image.\r\n",
        "labels": "Support",
        "id": 43931
    },
    {
        "title": "(WSL2) Enabling autojump plugin via plugins=(autojump) gives [oh-my-zsh] autojump script not found",
        "body": "**Describe the bug**\r\nEnabling autojump plugin via plugins=(autojump) gives [oh-my-zsh] autojump script not found\r\n\r\n**To Reproduce**\r\nEnable autojump plugin in .zshrc plugins=(autojump) \r\n\r\n**Desktop (please complete the following information):**\r\nWSL2 - Ubuntu 18.04\r\nLatest ohmyzsh (as of today)\r\nzsh 5.4.2 (x86_64-ubuntu-linux-gnu)\r\nExtraTerm 0.49.2\r\n\r\nI was originally using antibody plugin manager and kept trying to get autojump to work, but it kept doing the above-mentioned thing, so then I tried it the default way of adding a plugin and saw it did the same thing, so I figured it was a good idea to come here. I tried first in antibody with robbyrussell/ohmyzsh, but then also tried ohmyzsh/ohmyzsh with same results.",
        "labels": "Support",
        "id": 43932
    },
    {
        "title": "how the heck do i debug on this site",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nA clear description of what the bug is.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable this plugin '...'\r\n2. Run command '...' or try the autocomplete command '...'\r\n3. See error\r\n\r\n**Expected behavior**\r\nA brief description of what should happen.\r\n\r\n**Screenshots and/or Recordings**\r\nIf applicable, add screenshots to help explain your problem.\r\nYou can also record an asciinema session: https://asciinema.org/\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: [e.g. Arch Linux, macOS]\r\n - Latest ohmyzsh Update?: [e.g. Yes/No]\r\n - ZSH Version: [e.g. 5.6]\r\n - Terminal emulator [e.g. iTerm2]\r\n\r\n**Additional context**\r\nAdd any other context about the problem here. This can be themes, plugins, custom configs.\r\n",
        "labels": "Support",
        "id": 43933
    },
    {
        "title": "how the heck do i make a terminal for this github site",
        "body": "1. Look for similar issues already posted (including closed ones)\r\n2. Include as much relevant information as possible\r\n3. Try to make sure the issue is due to Oh My Zsh\r\n",
        "labels": "Support",
        "id": 43934
    },
    {
        "title": "alias \"glp\" in git plugin isn't actually an alias",
        "body": "**Describe the bug**\r\nIn the \"git\" plugin, there's an alias defined called \"glp\". I expected it to be an alias for \"git log -p\", a rather commonly used git command. Instead, it contains the string \"_git_log_prettily\", so this alias does not do anything.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable this plugin \"git\"\r\n2. Go into a git repository\r\n3. Type \"glp\"\r\n4. Nothing happens\r\n\r\n**Expected behavior**\r\nI expected zsh to run \"git log -p\" and show me a git log with diffs.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: MacOS Catalina 10.15.4\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: 5.7.1\r\n - Terminal emulator iTerm2",
        "labels": "Support",
        "id": 43935
    },
    {
        "title": "upgrade_oh_my_zsh fails: error: unknown option `autostash'",
        "body": "As the title says when I try to upgrade oh my zsh, the upgrade fails with the error\r\n```\r\nerror: unknown option `autostash'\r\n```",
        "labels": "Support",
        "id": 43936
    },
    {
        "title": "zsh:1: command not found: tmux",
        "body": "Trying to run a tmux session over ssh which works for bash but not zsh\r\n\r\nI am simply trying to do:\r\n`ssh userx@hostx -t \"tmux attach\"`\r\n\r\nBut I get this error:\r\nzsh:1: command not found: tmux\r\n\r\nHowever, if I ssh into the machine and run that command it runs fine.",
        "labels": "Support",
        "id": 43937
    },
    {
        "title": "yolo in lol plugin is inserting Microsoft copyright messages into commit messages",
        "body": "<!--\r\nI have included the lol plugin.  It has an alias called yolo that grabs a random message from \r\nwhatthecommit.com  Just now it inserted copyright MicroSoft 1988\r\n-->\r\n\r\nI don't know if this means anything.  I don't know if MS can make any ownership claims \r\nbecause of this copyright message.  \r\n\r\n - OS / Distro: Ubuntu 18,04\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: zsh 5.4.2 (x86_64-ubuntu-linux-gnu)\r\n - Terminal emulator Terminator\r\n",
        "labels": "Support",
        "id": 43938
    },
    {
        "title": "zsh: command not found: next, zsh: command not found: now",
        "body": "Hey there, this worked before, however, at one point some commands stopped working.\r\n\r\nFor example `now` and `next` is installed, but when I try to run them, it shows `zsh: command not found: next (or now)`\r\n\r\nI tried re-installing the packages, this didn't help. \r\nRunning on macOS Catalina 10.15.3, with iTerm2 (Build 3.3.9), Now @17.1.1 (works via bash).\r\n\r\nI did mess around with $PATH, so maybe I need to reset this or?",
        "labels": "Support",
        "id": 43939
    },
    {
        "title": "No such file or directory: zsh-history-substring-search.zsh",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nAfter updating oh-my-zsh to the the newest version whenever the terminal is opened following message appears:\r\n\r\n```\r\n/home/-/.oh-my-zsh/plugins/history-substring-search/history-substring-search.plugin.zsh:source:2: no such file or directory: /home/-/.oh-my-zsh/plugins/history-substring-search/zsh-history-substring-search.zsh\r\n```\r\n\r\nThen when the up or down arrow is pressed following messages appear:\r\n\r\n```\r\nNo such widget `history-substring-search-up'\r\n```\r\n\r\nand\r\n\r\n```\r\nNo such widget `history-substring-search-down\r\n```\r\n\r\nEverything works fine when the commit `fd534eb979aa296dd94a78040e77559a4c4dcdde` (current master) is reversed to `2a3a940a4553a271d45722538697a667f9b55293`.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Checkout `fd534eb979aa296dd94a78040e77559a4c4dcdde` (current master)\r\n2. Restart terminal\r\n3. Press up/down arrow\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: Fedora\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: zsh 5.7.1 (x86_64-redhat-linux-gnu)\r\n - Terminal emulator GNOME Terminal\r\n",
        "labels": "Support",
        "id": 43940
    },
    {
        "title": "Message on startup `rm: remove fifo?` when common-aliases is enabled",
        "body": "**Describe the bug**\r\nI'm getting this message on zsh startup when common-aliases plugin is enabled.\r\n```\r\nrm: remove fifo '/tmp/tmp.PdjRP3xhFC'? \r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable this plugin 'common-aliases'\r\n2. start zsh\r\n3. See error\r\n\r\n**Expected behavior**\r\nNo message\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: Arch Linux\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: 5.8\r\n - Terminal emulator: termite\r\n",
        "labels": "Support",
        "id": 43941
    },
    {
        "title": "Documentation for writing a plugin",
        "body": "Hi!\r\nI was planning to write a plugin that would provide autocomplete for Google's App Script CLI, but there is no documentation on how the plugins are written. Even Google is speechless!",
        "labels": "Support",
        "id": 43942
    },
    {
        "title": "Problems with git pushing from git gui",
        "body": "I have a problem pushing commits from git gui util:\r\n```\r\ncan't read \"all_remotes\": no such variable\r\ncan't read \"all_remotes\": no such variable\r\n    while executing\r\n\"if {$all_remotes ne {}} {\r\n\t\t${NS}::radiobutton $w.dest.remote_r  -text [mc \"Remote:\"]  -value remote  -variable push_urltype\r\n\t\tif {$use_ttk} {\r\n\t\t\tttk:...\"\r\n    (procedure \"do_push_anywhere\" line 36)\r\n    invoked from within\r\n\"do_push_anywhere\"\r\n    invoked from within\r\n\".vpane.lower.commarea.buttons.push invoke \"\r\n    invoked from within\r\n\".vpane.lower.commarea.buttons.push instate !disabled { .vpane.lower.commarea.buttons.push invoke } \"\r\n    invoked from within\r\n\".vpane.lower.commarea.buttons.push instate pressed { .vpane.lower.commarea.buttons.push state !pressed; .vpane.lower.commarea.buttons.push instate !di...\"\r\n    (command bound to event)\r\n```\r\n![screenshot](https://user-images.githubusercontent.com/2270584/77248989-9f0a8a00-6c46-11ea-8bb6-ac5a612c1b17.png)\r\nThe problem reproduces only with zsh, with bash it works as expected. Tested on Ubuntu 18.04 and Manjaro Linux 19.0.2.",
        "labels": "Support",
        "id": 43943
    },
    {
        "title": "ZSH composer plugin stuck",
        "body": "**Describe the bug**\r\nWhen running zsh via PHPStorm's built-in terminal, ZSH freezes whilst running `composer global config bin-dir --absolute`\r\n\r\nThis doesn't happen when running zsh outside of PHPStorm.\r\n\r\n**To Reproduce**\r\nNot sure\r\n\r\n**Expected behavior**\r\nZsh should load as normal\r\n\r\n**Screenshots and/or Recordings**\r\nN/A\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: Ubuntu 18.04.4\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: 5.4.2\r\n - Terminal emulator PHPStorm terminal\r\n\r\n**Additional context**\r\nN/A\r\n",
        "labels": "Support",
        "id": 43944
    },
    {
        "title": "Custom theme not listed using lstheme",
        "body": "Hello,\r\n\r\nI have installed the powerlevel10k theme and am able to use it by setting it in zshrc file.\r\nI then added \"themes\" as a plugin and then tried `lstheme`\r\nUpon doing that, the custom theme was not listed in the list of themes, eventhough i was able to navigate into zsh custom theme folder and locate the theme.\r\n\r\nHow do i see my custom theme in the list of themes ?",
        "labels": "Support",
        "id": 43945
    },
    {
        "title": "ZSH Complaints \"bad set of key/value pairs for associative array\" for Completion of Service Name for systemctl",
        "body": "**Describe the bug**\r\n\r\nThe zsh complaints \"_systemctl_unit_state: bad set of key/value pairs for associative array\" when I typed in \"systemctl enable blu\" and then press TAB for completion. \r\n\r\n**To Reproduce**\r\n\r\nFrom a clean install of ohmyzsh:\r\n1. Type \"systemctl enable blu\" (where I supposed to type \"systemctl enable bluetooth.service\" as completion)\r\n2. Press TAB\r\n3. See error\r\n\r\n**Expected behavior**\r\n\r\nI think the complaints \"_systemctl_unit_state: bad set of key/value pairs for associative array\" should not be occurred here and the command (service name) should be completed.\r\n\r\n**Screenshots and/or Recordings**\r\n\r\n``` bash\r\n$ systemctl enable blue\r\n_systemctl_unit_state: bad set of key/value pairs for associative array\r\n_systemctl_unit_state: bad set of key/value pairs for associative array\r\n_systemctl_unit_state: bad set of key/value pairs for associative array\r\n```\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: Arch Linux\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: zsh 5.8 (x86_64-pc-linux-gnu)\r\n - Terminal emulator: gnome-terminal\r\n\r\n**Additional context**\r\n\r\nI've also tried to remove the `.zcompdump*` files but it still does not work.",
        "labels": "Support",
        "id": 43946
    },
    {
        "title": "cccc",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nA clear description of what the bug is.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable this plugin '...'\r\n2. Run command '...' or try the autocomplete command '...'\r\n3. See error\r\n\r\n**Expected behavior**\r\nA brief description of what should happen.\r\n\r\n**Screenshots and/or Recordings**\r\nIf applicable, add screenshots to help explain your problem.\r\nYou can also record an asciinema session: https://asciinema.org/\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: [e.g. Arch Linux, macOS]\r\n - Latest ohmyzsh Update?: [e.g. Yes/No]\r\n - ZSH Version: [e.g. 5.6]\r\n - Terminal emulator [e.g. iTerm2]\r\n\r\n**Additional context**\r\nAdd any other context about the problem here. This can be themes, plugins, custom configs.\r\n",
        "labels": "Support",
        "id": 43947
    },
    {
        "title": "'safe-paste' plugin breaks 'history-substring-search' plugin",
        "body": "**Bug**\r\nEvery time the 'safe-paste' plugin is activated it breaks 'history-substring-search' plugin\r\n\r\n**To Reproduce**\r\n1. Enable this plugin 'safe-paste' along with 'history-substring-search'\r\n2. Try to use the normal keybindings of history-substring-search to autocomplete any given command in the zsh-history (up key)\r\n3. Always get latest command in history (which is the previous one which is 'source ~/.zshrc' even if there is no equivalent character/string in the current line that would match that previous one) \r\n\r\n**Expected behavior**\r\nTo fetch the latest command with matching character/string.\r\n\r\n**Desktop**\r\n - Operating System: Manjaro-ARM \r\n - KDE Plasma Version: 5.18.3\r\n - KDE Frameworks Version: 5.67.0\r\n - Qt Version: 5.14.1\r\n - Kernel Version: 4.19.97-1-MANJARO-ARM\r\n - OS Type: 64-bit\r\n - Processors: 4 × \r\n - Memory: 3.7 GiB of RAM\r\n - Latest ohmyzsh from distro.\r\n - ZSH 5.8\r\n - Terminal emulator: konsole",
        "labels": "Support",
        "id": 43948
    },
    {
        "title": "Git not working in oh my zsh",
        "body": "**Describe the bug**\r\nI used the upgrade_oh_my_zsh command and my git stopped working suddenly. whenever I type a git command, it doesn't do anything it's as if I just pressed enter without any command.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable this plugin 'git', it is space separated in the .zshrc file\r\n2. Run command upgrade_oh_my_zsh \r\n3. Nothing happens\r\n\r\n**Expected behavior**\r\ngit should have work normally\r\n\r\n**Screenshots and/or Recordings**\r\n![image](https://user-images.githubusercontent.com/3201267/76583316-451ffc80-64af-11ea-9153-3c0555b96dab.png)\r\n\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: Ubuntu 18.04\r\n - Latest ohmyzsh Update?: Yes\r\n - zsh 5.4.2 (x86_64-ubuntu-linux-gnu)\r\n - Terminator\r\n\r\n**Additional context**\r\nI usually only use these plugins and it has always worked\r\n```\r\nplugins=(git zsh-syntax-highlighting zsh-autosuggestions)\r\nsource $ZSH/oh-my-zsh.sh\r\n```",
        "labels": "Support",
        "id": 43949
    },
    {
        "title": "kill word (werase) with `ctrl-w` considers `-` as separator instead of space",
        "body": "\r\n**Describe the bug**\r\nWhen using ctrl w to kill the word it  consides `-` as separator instead of space.  \r\n\r\n**To Reproduce**\r\n* lets say we have this in the zsh terminal\r\n  ➜  ~ this is a word-with-hyphen\r\n   pressing `ctrl + w` deletes the word `hyphen` first and then `with`. i.e considering the `-` as the delimiter. However i'd like to use space as the delimiter instead. so that pressing ctrl-W \r\ndeletes the whole word `word-with-hyphen`. If i dont use `Oh My Zsh` settings it deletes the whole word ignoring `-`, which is expected.\r\n\r\n**Expected behavior**\r\nctrl-W should delete the whole word ignoring `-`\r\n\r\n**Screenshots and/or Recordings**\r\nN/A\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro:  macOS\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: 5.7.1\r\n -  iTerm2\r\n",
        "labels": "Support",
        "id": 43950
    },
    {
        "title": "detect-clipboard:33: command not found: uname ",
        "body": "After the March 2020 update to Oh-My-Zsh, the following message is displayed before the initial shell prompt (every time a new zsh is launched):\r\n\r\n```\r\ndetect-clipboard:33: command not found: uname\r\n[12:09:33] username:~ $\r\n```\r\n\r\nIt seems to be generated by [ohmyzsh/lib/clipboard.zsh](https://github.com/ohmyzsh/ohmyzsh/blob/master/lib/clipboard.zsh) line 84 (without the 50 lines of comments this would be line 33):\r\n\r\n```\r\n  84 elif [[ $(uname -r) = *icrosoft* ]]; then\r\n  85   function clipcopy() { clip.exe < \"${1:-/dev/stdin}\"; }\r\n  86   function clippaste() { powershell.exe -noprofile -command Get-Clipboard; }\r\n```\r\n\r\n`uname` seems fine, I can't spot an error, and monthly updates to Oh-My-Zsh have never caused an issue until now. \r\n\r\n```\r\n$ uname -r\r\n4.19.84-microsoft-standard\r\n```\r\n\r\nI tried updating oh-my-zsh manually to very latest, and still the same message. Clipboard copy and paste functionality remains working correctly to/from from Windows. So is this just an annoyance? \r\n\r\n\r\n",
        "labels": "Support",
        "id": 43951
    },
    {
        "title": "git clone: error:1400410B:SSL routines:CONNECT_CR_SRVR_HELLO:wrong version number",
        "body": "```\r\nhoutin@ZhoudeMacBook-Pro ~ % sh -c \"$(curl -fsSL raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\r\nCloning Oh My Zsh...\r\nCloning into '/Users/zhoutin/.oh-my-zsh'...\r\nfatal: unable to access 'ohmyzsh/ohmyzsh.git': error:1400410B:SSL routines:CONNECT_CR_SRVR_HELLO:wrong version number\r\nError: git clone of oh-my-zsh repo failed\r\n```",
        "labels": "Support",
        "id": 43952
    },
    {
        "title": "Setting zsh options in plugin zsh script",
        "body": "I need to have the extendedglob zsh option active in a plugin zsh script.\r\n\r\nCurrently, extendedglob is already active when my zsh script runs, even though extendedglob isn't set in my zsh terminal (command line).\r\n\r\nDoes ohmyzsh set it?\r\n\r\nIs ohmyzsh guaranteed to set it in all future versions, or should I run `setopt extendedglob` in my script to future-proof it?\r\n\r\nIf my script runs `setopt extendedglob`, should I do something to scope the setting to my script (like setting the option back to the value it had before my script ran), or does zsh / ohmyzsh ensure that my setting won't leak out to other contexts?\r\n\r\nThanks.",
        "labels": "Support",
        "id": 43953
    },
    {
        "title": "Dreaded complete:13: command not found: compdef",
        "body": "I've read through the other issues on here with this error and have tried all of the solutions that I've Googled through and the solutions presented here to no avail.  I'll attach my zsh debug log shortly.  \r\n\r\nI install OMZ yesterday and this message appeared after installation when it ran through its setup.\r\n\r\ncomplete:13: command not found: compdef\r\n\r\nNot sure what is causing it.  I've checked for references to anything I used to have in my old BASH stuff for autocomplete for kubectl, etc. but I've basically archived/removed all of it.\r\n[omz-debug.log](https://github.com/ohmyzsh/ohmyzsh/files/4318626/omz-debug.log)\r\n\r\n\r\n",
        "labels": "Support",
        "id": 43954
    },
    {
        "title": "Unknown option: -c with git 1.7.1",
        "body": "I just manually updated `tools/upgade.sh` to the latest version in master (see https://github.com/ohmyzsh/ohmyzsh/commit/14b4f62e65b3d94c275ea8892f252deae9ce619a), but now I am getting:\r\n\r\n```\r\nsh upgrade.sh\r\nUpdating Oh My Zsh\r\nUnknown option: -c\r\nusage: git [--version] [--exec-path[=GIT_EXEC_PATH]] [--html-path]\r\n           [-p|--paginate|--no-pager] [--no-replace-objects]\r\n           [--bare] [--git-dir=GIT_DIR] [--work-tree=GIT_WORK_TREE]\r\n           [--help] COMMAND [ARGS]\r\nThere was an error updating. Try again later?\r\n```\r\n\r\nRunning CentOS with Git 1.7.1. Is there really no way to upgrade when running git 1.7.1?",
        "labels": "Support",
        "id": 43955
    },
    {
        "title": "Gradle tasks autocompletion fails if org.gradle.console isn't plain or auto",
        "body": "**Describe the bug**\r\n`__gradle-generate-tasks-cache` fails to generate task list if `org.gradle.console` is set to `rich` or `verbose` in `gradle.properties` because lines in `gradle_tasks_output` starts with `^[[32` or something similar.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable this plugin gradle\r\n2. Set `org.gradle.console=verbose` in `gradle.properties` (local or in `GRADLE_HOME`)\r\n2. Try the autocomplete command `gradle cle`\r\n3. Autocompletion doesn't work for `clean` task\r\n\r\n**Expected behavior**\r\nCommand completes to `gradle clean`\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: Arch Linux\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: 5.8-1\r\n - Terminal emulator: konsole/yakuake\r\n\r\n**Additional context**\r\nAutocompletion for options works fine, issue is with parsing colored output from `gradle_tasks_output=\"$($gradle_cmd --daemon --build-file $gradle_build_file -q tasks --all 2>/dev/null)\"`\r\n\r\nI'll create PR to fix it soon. ",
        "labels": "Support",
        "id": 43956
    },
    {
        "title": "ZSH consumes much cpu when use 'open -a xx' command",
        "body": "when I type `open ./ -a visual` then press tab key try to select the 'Visual \\Studio \\Code ' \r\nzsh consumes 94% CPU resources... So I have to kill the thread...\r\n\r\nI  uninstall ohmyzsh, then use the Terminal app do such thing, it won't block.\r\n\r\nIt happen without `zsh -f`  in the latest stable zsh version, I just download from the `https://ohmyz.sh/`.\r\n\r\nSystem: macOs Catalina 10.15.3\r\n\r\n![Screen Shot 2020-03-10 at 9 19 21 PM](https://user-images.githubusercontent.com/37919656/76316156-0fdfa700-6315-11ea-8303-3fb503916404.png)\r\n\r\n![Screen Shot 2020-03-10 at 9 25 13 PM](https://user-images.githubusercontent.com/37919656/76316489-a90ebd80-6315-11ea-885d-3abe0c9752cf.png)\r\n\r\n",
        "labels": "Support",
        "id": 43957
    },
    {
        "title": "django plugin: _values:compvalues:11: not enough arguments",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nAutocompletion for certain commands in django plugin doesn't work\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable this plugin 'django'\r\n2. Install django and generate simple project with `django-admin startproject`\r\n3. From the folder contains manage.py file try the autocomplete commands like `manage.py dumpdata` or `manage.py test`\r\n4. See error\r\n\r\n**Expected behavior**\r\nIt must display list of applications specified in INSTALLED_APPS section in settings.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: Ubuntu 19.10\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: 5.7.1\r\n - Terminal emulator GNOME Terminal\r\n\r\n**Additional context**\r\n- The autocompletion for 'celery' plugin that also evaluates `_values` command works just fine.\r\n- I already removed ~/.zcompdump* files\r\n",
        "labels": "Support",
        "id": 43958
    },
    {
        "title": "sdk flush completion includes invalid value: candidates",
        "body": "sdk flush completion includes invalid value: candidates\r\n\r\ncandidates should be removed from the completion list.",
        "labels": "Support",
        "id": 43959
    },
    {
        "title": "zsh consumes 30% CPU resources in WSL when my laptop is in sleep mode",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nMy XPS's lid is closed and the  computer is in sleep mode. The power is plug in and I heard the fan's noise quite loud. I open the computer and see the task manager. It shows that the zsh is taking 30% CPU resources constantly. After I end this the fan noise gone.\r\nMy WSL windows is shut down and only open 2 Edge tabs.\r\n\r\nI am using oh my zsh.\r\nplugins are git, zsh autohighting, auto suggestions and jump.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: Win 10 WSL\r\n - Latest ohmyzsh Update? Yes\r\n\r\n",
        "labels": "Support",
        "id": 43960
    },
    {
        "title": "bira theme prompt is not assigning proper hostname",
        "body": "Hello, I had strange issue with some other softwares which took hostname from my prompt and it appeared to be faulty and I spent a lot of hours debugging wrong stuff.\r\n\r\nLong story short: my hostname is firstname.secondname-mbp. Everywhere I check this is it.\r\nMy prompt looked like this: firstname.secondname@firstname.\r\n\r\nAfter hardcodded another prompt everything went back to normal and my proper hostname was displayed in the terminal as it follows from above.\r\n\r\nI used the following prompt to verify the issue:\r\n`PROMPT='%(!.%{%F{yellow}%}.)$USER @ %{$fg[white]%}%M %{$fg_bold[red]%}➜ %{$fg_bold[green]%}%p %{$fg[cyan]%}%c %{$fg_bold[blue]%}$(git_prompt_info)%{$fg_bold[blue]%} % %{$reset_color%}'`\r\n\r\nCan you please help me to modify bira prompt so that it can take my whole hostname? The final target is bira visual appearance + whole length hostname.  ",
        "labels": "Support",
        "id": 43961
    },
    {
        "title": "Gradle plugin: autocompletion suggests \"Pattern:\"",
        "body": "**Describe the bug**\r\nThe regex to extract the task names out of the `gradle tasks --all` output matches the rules pattern help lines.\r\n\r\n**To Reproduce**\r\n1. Enable this plugin 'gradle'\r\n2. Try the autocomplete command './gradlew ...'\r\n3. The suggestions list includes \"Pattern:\"\r\n\r\n**Expected behavior**\r\nThe autocompletion should suggest tasks only.\r\nThe section\r\n```\r\nRules\r\n-----\r\nPattern: clean<TaskName>: Cleans the output files of a task.\r\nPattern: build<ConfigurationName>: Assembles the artifacts of a configuration.\r\nPattern: upload<ConfigurationName>: Assembles and uploads the artifacts belonging to a configuration.\r\n```\r\nshould be ignored. `Pattern:` isn't a task.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: Arch Linux\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: 5.8\r\n - Terminal emulator Alacritty\r\n",
        "labels": "Support",
        "id": 43962
    },
    {
        "title": "Colorize tool not discovered by colorize plugin",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nWith pygments installed, and `which pygmentize` showing the tool available in the user's `$path`, the plugin still produces the message\r\n\r\n```Neither 'pygments' nor 'chroma' is installed!```\r\n\r\nwhen using `ccat` or `cless`.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable this plugin: `colorize`;\r\n2. Run command `ccat <filename>` or `cless <filename>`\r\n3. See error:  ```Neither 'pygments' nor 'chroma' is installed!```\r\n\r\n**Expected behavior**\r\nThe `README.md` file implies that that `pygmentize` works by default.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: OS X Catalina & Manjaro 19\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: zsh 5.7.1 (x86_64-apple-darwin19.0) & zsh 5.7.1 (x86_64-apple-darwin19.0)\r\n - Terminal emulator: iTerm2 & Guake",
        "labels": "Support",
        "id": 43963
    },
    {
        "title": "Using a theme not in the theme directory?",
        "body": "I'm trying to enable a theme (powerlevel10k) that isn't in my theme directory. The way that zsh is installed on the system means that I can't just copy the theme into the zsh themes directory.\r\n\r\nI've tried setting ZSH_THEME to an absolute path, but I get the error\r\n\r\n```\r\nno such file or directory: <zsh_directory>/oh-my-zsh/themes/<absolute_path_to_theme_I_want_to_use>\r\n```\r\n\r\nIs there a way to enable a theme which isn't in the themes directory?",
        "labels": "Support",
        "id": 43964
    },
    {
        "title": "Can't install oh-my-zsh if not root",
        "body": "as the title suggest im not able to install oh-my-zsh if im not root\r\nit says `could not create work tree dir '/usr/share/oh-my-zsh': permission denied` \r\nwhen i execute it with sudo it only installs it for the root user",
        "labels": "Support",
        "id": 43965
    },
    {
        "title": "PLUGIN/terraform I'm using tfenv and nothing seems to work, expected?",
        "body": "**Describe the bug**\r\nterraform <tab> will only show files in current dir\r\n\r\n**To Reproduce**\r\nterraform <tab> \r\n\r\n**Desktop (please complete the following information):**\r\n week old Mint\r\n\r\n",
        "labels": "Support",
        "id": 43966
    },
    {
        "title": "upgrade_oh_my_zsh tries to delete nonexistent fie",
        "body": "**Describe the bug**\r\nRunning `upgrade_oh_my_zsh` tries to delete the non-existent file `$HOME/.oh-my-zsh/log/update.lock`. If `rm` is aliased to e. g. `trash-put`, this can fail.\r\n\r\nLooking at the code, the line that does this is \r\nhttps://github.com/ohmyzsh/ohmyzsh/blob/4009668500342d20224c77c7586b4546223c1a77/lib/functions.zsh#L11\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. `alias rm='trash'`\r\n2. Run command `upgrade_oh_my_zsh`\r\n3. See error\r\n\r\n**Expected behavior**\r\nNo error\r\n\r\n - OS / Distro: Debian testing\r\n - Latest ohmyzsh Update?: yes\r\n - ZSH Version: 5.8\r\n - Terminal emulator: alacritty\r\n",
        "labels": "Support",
        "id": 43967
    },
    {
        "title": "After the grep.zsh refactor update (roughly 6 hrs ago), ohmyzsh now reports error if installed with sudo",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nClean installation of ohmyzsh, then restart the shell...\r\n\r\n> ~/.oh-my-zsh/lib/grep.zsh:22: permission denied: ~/.oh-my-zsh/cache/grep-alias\r\n~/.oh-my-zsh/lib/grep.zsh:source:36: no such file or directory: ~/.oh-my-zsh/cache/grep-alias\r\n\r\n**To Reproduce**\r\nInstall ohmyzsh with\r\n`sudo sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\" \"\" --unattended`\r\n\r\n**Expected behavior**\r\nThere should be no error reported (Before the update, installing ohmyzsh with sudo works).\r\n\r\n**Desktop (please complete the following information):**\r\nUbuntu 18.04LTS",
        "labels": "Support",
        "id": 43968
    },
    {
        "title": "Load themes/plugins installed by Homebrew",
        "body": "Hey folks,\r\n\r\nI just formatted my macOS and fresh installed oh-my-zsh. \r\n\r\nI installed a couple of themes though homebrew and some plugins too But zsh cant recognize then. \r\n\r\nIf I manually source the theme file I got an error from init script that it can't find the theme on the zsh theme folder.\r\n\r\nAny way to make zsh load everything I install through homebrew?\r\n",
        "labels": "Support",
        "id": 43969
    },
    {
        "title": "kube-ps1 not displaying",
        "body": "My #cat ~/.zshrc\r\n\r\n<pre># If you come from bash you might have to change your $PATH.\r\n# export PATH=$HOME/bin:/usr/local/bin:$PATH\r\n\r\n# Path to your oh-my-zsh installation.\r\nexport ZSH=\"/Users/jklein049/.oh-my-zsh\"\r\n\r\n# Set name of the theme to load --- if set to \"random\", it will\r\n# load a random theme each time oh-my-zsh is loaded, in which case,\r\n# to know which specific one was loaded, run: echo $RANDOM_THEME\r\n# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes\r\n#ZSH_THEME=\"robbyrussell\"\r\nZSH_THEME=\"powerlevel9k/powerlevel9k\"\r\n\r\n# Set list of themes to pick from when loading at random\r\n# Setting this variable when ZSH_THEME=random will cause zsh to load\r\n# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/\r\n# If set to an empty array, this variable will have no effect.\r\n# ZSH_THEME_RANDOM_CANDIDATES=( \"robbyrussell\" \"agnoster\" )\r\n\r\n# Uncomment the following line to use case-sensitive completion.\r\n# CASE_SENSITIVE=\"true\"\r\n\r\n# Uncomment the following line to use hyphen-insensitive completion.\r\n# Case-sensitive completion must be off. _ and - will be interchangeable.\r\n# HYPHEN_INSENSITIVE=\"true\"\r\n\r\n# Uncomment the following line to disable bi-weekly auto-update checks.\r\n# DISABLE_AUTO_UPDATE=\"true\"\r\n\r\n# Uncomment the following line to automatically update without prompting.\r\n# DISABLE_UPDATE_PROMPT=\"true\"\r\n\r\n# Uncomment the following line to change how often to auto-update (in days).\r\n# export UPDATE_ZSH_DAYS=13\r\n\r\n# Uncomment the following line if pasting URLs and other text is messed up.\r\n# DISABLE_MAGIC_FUNCTIONS=true\r\n\r\n# Uncomment the following line to disable colors in ls.\r\n# DISABLE_LS_COLORS=\"true\"\r\n\r\n# Uncomment the following line to disable auto-setting terminal title.\r\n# DISABLE_AUTO_TITLE=\"true\"\r\n\r\n# Uncomment the following line to enable command auto-correction.\r\n# ENABLE_CORRECTION=\"true\"\r\n\r\n# Uncomment the following line to display red dots whilst waiting for completion.\r\n# COMPLETION_WAITING_DOTS=\"true\"\r\n\r\n# Uncomment the following line if you want to disable marking untracked files\r\n# under VCS as dirty. This makes repository status check for large repositories\r\n# much, much faster.\r\n# DISABLE_UNTRACKED_FILES_DIRTY=\"true\"\r\n\r\n# Uncomment the following line if you want to change the command execution time\r\n# stamp shown in the history command output.\r\n# You can set one of the optional three formats:\r\n# \"mm/dd/yyyy\"|\"dd.mm.yyyy\"|\"yyyy-mm-dd\"\r\n# or set a custom format using the strftime function format specifications,\r\n# see 'man strftime' for details.\r\n# HIST_STAMPS=\"mm/dd/yyyy\"\r\n\r\n# Would you like to use another custom folder than $ZSH/custom?\r\n# ZSH_CUSTOM=/path/to/new-custom-folder\r\n\r\n# Which plugins would you like to load?\r\n# Standard plugins can be found in ~/.oh-my-zsh/plugins/*\r\n# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/\r\n# Example format: plugins=(rails git textmate ruby lighthouse)\r\n# Add wisely, as too many plugins slow down shell startup.\r\nplugins=(\r\n  git\r\n  kubectl\r\n  kube-ps1\r\n)\r\n\r\nsource $ZSH/oh-my-zsh.sh\r\n\r\nPROMPT=$PROMPT'$(kube_ps1) '\r\n\r\n# User configuration\r\n\r\n# export MANPATH=\"/usr/local/man:$MANPATH\"\r\n\r\n# You may need to manually set your language environment\r\n# export LANG=en_US.UTF-8\r\n\r\n# Preferred editor for local and remote sessions\r\n# if [[ -n $SSH_CONNECTION ]]; then\r\n#   export EDITOR='vim'\r\n# else\r\n#   export EDITOR='mvim'\r\n# fi\r\n\r\n# Compilation flags\r\n# export ARCHFLAGS=\"-arch x86_64\"\r\n\r\n# Set personal aliases, overriding those provided by oh-my-zsh libs,\r\n# plugins, and themes. Aliases can be placed here, though oh-my-zsh\r\n# users are encouraged to define aliases within the ZSH_CUSTOM folder.\r\n# For a full list of active aliases, run `alias`.\r\n#\r\n# Example aliases\r\n#alias zshconfig=\"mate ~/.zshrc\"\r\n#alias ohmyzsh=\"mate ~/.oh-my-zsh\"\r\n\r\n#ZSH_THEME=\"powerlevel9k/powerlevel9k\"\r\nfpath=(/usr/local/share/zsh-completions $fpath)\r\n\r\nalias pg_start=\"launchctl load ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist\"\r\nalias pg_stop=\"launchctl unload ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist\"\r\n</pre>\r\n\r\nAfter sourcing my terminal does not display the kube environment. Thank you in advance for any assistance.\r\n",
        "labels": "Support",
        "id": 43970
    },
    {
        "title": "Strange characters in prompt in Emacs multi-term",
        "body": "hi,\r\n\r\nI am really happy with oh-my-zsh! :-)\r\n\r\nNow I also want to use it from within Emacs.\r\nSadly I get 2 strange characters just after the prompt.\r\nI have looked into color codes, terminal settings, utf8 support but I have not found a solution yet.\r\n\r\nFinding the nature or cause of these characters might help me resolve this.\r\n\r\nI am running Emacs 26, now 27 with Spacemacs config.\r\nThe terminal I use is multi-term, but term and ansi-term behave the same way.\r\nThe font I use is MesloLGS NF, which is suggested by powerlevel10k.\r\nThe theme I use has no influence on the issue (robbyrussell, jnrowe, agnoster, powerlevelXk)\r\n\r\nThis is how it looks:\r\n<img width=\"388\" alt=\"Screenshot 2020-02-26 at 15 47 00\" src=\"https://user-images.githubusercontent.com/4224518/75355746-41855680-58af-11ea-8837-8ea15f8b3dcf.png\">\r\n\r\n\r\nThis is a minimum .zshrc which still has the problem:\r\nexport TERM=\"xterm-256color\"\r\nexport ZSH=\"/Users/steven/.oh-my-zsh\"\r\nZSH_THEME=\"jnrowe\"\r\nplugins=()\r\nsource $ZSH/oh-my-zsh.sh\r\nexport LANG=en_US.UTF-8\r\n\r\n<img width=\"191\" alt=\"Screenshot 2020-02-26 at 15 55 48\" src=\"https://user-images.githubusercontent.com/4224518/75356620-7d6ceb80-58b0-11ea-9485-67753ca91469.png\">\r\n\r\n",
        "labels": "Support",
        "id": 43971
    },
    {
        "title": "Prompt issue on avit theme",
        "body": "**Describe the bug**\r\nPrompt issue since last commits on `avit` theme. The prompt was ok a week ago. According to what I saw, the issue is linked with that [commit](https://github.com/ohmyzsh/ohmyzsh/commit/77813a330bbc716503dcc4d8d98b6d8ae6f74d03#diff-312232e5a738e51aa9eee453a017fc89) but I might be wrong.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. update oh-my-zsh: `upgrade_oh_my_zsh` \r\n2. use avit theme: `sed -i '/^ZSH_THEME=/s/.*/ZSH_THEME=\"avit\"/' ~/.zshrc`\r\n3. refresh your env: `source ~/.zshrc` \r\n\r\n**Expected behavior**\r\nThe prompt should be the same as described in the oh-my-zsh theme list:\r\n![image](https://user-images.githubusercontent.com/2537582/75223740-67273880-57a7-11ea-8317-af38f5a4aca7.png)\r\n\r\n\r\n**Screenshots and/or Recordings**\r\nInstead the prompt is weird, instead of `▶` is is printed `hite}▶` or some numbers and the git flags are in the second line of the prompt:\r\n![image](https://user-images.githubusercontent.com/2537582/75225226-807db400-57aa-11ea-9949-9369faf5a204.png)\r\n\r\nMoreover, the second line of the print is erased by the written command:\r\n![2020-02-25_08h45_26](https://user-images.githubusercontent.com/2537582/75225674-698b9180-57ab-11ea-8965-c25f3d7dad73.gif)\r\n\r\nAnd finally, the autocompletion tools has some color issue that might be caused by the same issue as they came at the same time:\r\n![2020-02-25_08h38_00](https://user-images.githubusercontent.com/2537582/75225125-46141700-57aa-11ea-87a7-c547c519dc14.gif)\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: RedHat 7.7\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: 5.0.2\r\n - Terminal emulator mobaXterm\r\n\r\n**Additional context**\r\nTheme: Avit\r\n",
        "labels": "Support",
        "id": 43972
    },
    {
        "title": "Battery percentage is showing with 15 point precision float",
        "body": "**Describe the bug**\r\nThe battery plugin is showing as a percentage with 15 point precision (15 digits after the decimal). This happened after the most recent update. \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Enable `battery` plugin\r\n2. Enable `robbyrussell` theme (not sure if this is the cause)\r\n3. Set `RPROMPT='$(battery_pct_prompt)'`\r\n4. See 15 point precision on the right hand side\r\n\r\n**Expected behavior**\r\nThe battery percentage should only be an integer and not a float\r\n\r\n**Screenshots and/or Recordings**\r\n![image](https://user-images.githubusercontent.com/8962537/75204355-a1102480-573e-11ea-89ec-0c5d68d8ee30.png)\r\n\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: macOS\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: 5.7.1\r\n - Terminal emulator N/A\r\n",
        "labels": "Support",
        "id": 43973
    },
    {
        "title": "After recent Update getting Command not found line printed after running every command.",
        "body": "**Describe the bug**\r\nAfter updating zsh to `5.7.1 (x86_64-apple-darwin19.0)` after running every command I'm getting \r\n`zsh: command not found: _ruby_version ` printed in the terminal.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Update to latest version\r\n2. Run any command .\r\n3. See the line printed in the terminal.\r\n\r\n**Expected behavior**\r\nIt should not be printed.\r\n\r\n**Screenshots and/or Recordings**\r\n<img width=\"350\" alt=\"Screenshot 2020-02-24 at 8 34 54 PM\" src=\"https://user-images.githubusercontent.com/16102594/75163388-23034c00-5745-11ea-9b52-028b0f1e5aab.png\">\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro:  macOS\r\n - Latest ohmyzsh Update?: yes\r\n - ZSH Version: 5.7.1\r\n - Terminal emulator : terminal.app\r\n",
        "labels": "Support",
        "id": 43974
    },
    {
        "title": "Recent update has extra stuff in git prompt, and is tediously slow",
        "body": "I'm running omz on archlinux. It's been working fine. I just updated the packages, and I see a new part in my prompt that wasn't previously there, and it seems very very slow after each operation. \r\n\r\n```\r\n ~/project >> master >> bzr@44 ✚  >>\r\n```\r\n\r\nPreviously, my prompt ended at master, but now it includes bzr@44+. I don't know what that bit is. It it's a branch or a tag. The working directory is clean and up to date with master. \r\n\r\nI do use powerlevel9k. \r\n\r\nSome of my relevant settings:\r\n\r\n```\r\nexport POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(context dir vcs anaconda todo)\r\n\r\nplugins=(git scala sbt aws mvn pip python ssh-agent kubetail kubectl)\r\n\r\n```\r\nAny ideas? ",
        "labels": "Support",
        "id": 43975
    },
    {
        "title": "Init script enabling completion loaded only once",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n\r\nI installed opam and it added a line in my .zshrc for terminal completion. As long as I don't have this theme enabled the completion works at each terminal start up. As soon as I enable this them, the init script it is executed only at the first startup and if I close and start my terminal the completion doesn't work unless I source my .zshrc.\r\n\r\nIf I comment the line:\r\n`# ZSH_THEME=powerlevel10k/powerlevel10k`\r\nand uncomment the line:\r\n`ZSH_THEME=\"robbyrussell\"`\r\n\r\nMy script will be loaded at each startup and the completion will always work. I posted this issue on powerlevel10k issue but the maintainer answered telling me it's just a theme and it has nothing to do with completion even though the bug happens with this theme. \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior, for example:\r\n1. Install opam by running the following command: `sh <(curl -sL https://raw.githubusercontent.com/ocaml/opam/master/shell/install.sh)`\r\n2. `opam init` (may take some time but it's easy to delete it afterwards, just `rm -rf .opam`)\r\n3. The following line should be present in your .zshrc:\r\n`test -r ~/.opam/opam-init/init.zsh && . ~/.opam/opam-init/init.zsh > /dev/null 2> /dev/null || true`\r\nIf not, add it manually at the end of the file\r\n4. Close terminal, start it. When writing `opam` then hitting tab you should have this:\r\n\r\n![image](https://user-images.githubusercontent.com/5543639/74952916-3dfe5500-5401-11ea-9a2d-eca49bcfc0b1.png)\r\n\r\n5. Everytime you close and open the terminal the completion will work\r\n6. Install powerlevel10k (https://github.com/romkatv/powerlevel10k#oh-my-zsh) and change your theme to it\r\n7. Close and open terminal multiple times trying to complete with tab after `opam` it will give you the files in your directory instead of the possible commands\r\n8. If you run `source .zshrc` the completion will work again\r\n\r\n**Expected behavior**\r\nCompleting should show the possible subcommands. Enabling theme\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: Ubuntu 19.10\r\n - Latest ohmyzsh Update?: Yes/No\r\n - ZSH Version: 5.7.1\r\n",
        "labels": "Support",
        "id": 43976
    },
    {
        "title": "OSX plugin throws \"compdef\" error",
        "body": "\r\nUsing the `osx` plugin I get this on startup:\r\n\r\n```\r\n(HOME).zgen/robbyrussell/oh-my-zsh-master/plugins/osx/osx.plugin.zsh:215: command not found: compdef\r\n```\r\nRace condition maybe?  I'm using `zgen` with the powerlevel10K plugin.  \r\n\r\n**Desktop:**\r\n - OS MacOS Catalina\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: 5.8\r\n - Terminal emulator iTerm2\r\n",
        "labels": "Support",
        "id": 43977
    },
    {
        "title": "autocompletion not working for some commands",
        "body": "This is Fedora 31 and zsh 5.7.1\r\n\r\nI have the same zsh config on 3 different systems.\r\n\r\nOn one system completion works as well for `/usr/share/zsh/site-functions`. On other two it doesn't. \r\n\r\nI observed that on the system where it works env var `FPATH` is defined. The others don't have `FPATH` defined.  Env var `fpath` is defined on each system.  Interestingly, `/usr/share/Modules/init/zsh-functions` is in `fpath` on the system where it works but not defined on the other systems. \r\n\r\nAny idea how I can debug this?\r\n",
        "labels": "Support",
        "id": 43978
    },
    {
        "title": "Repeated characters in front of command robbyrussell",
        "body": "**Describe the bug**\r\nWhen using the robbyrussell theme and using tab complete extra characters are added to the beginning of the command. Specifically the first two characters. This does not seem to effect the command itself (i.e. it still runs).\r\n\r\n**To Reproduce**\r\n1. Enable robbyrussell theme. \r\n2. Write ls and the beginning of a folder name.\r\n3. Press the tab key twice.\r\n4. See two extra characters at the beginning\r\n\r\n**Expected behavior**\r\nNo extra characters at the beginning of the command.\r\n\r\n**Screenshots and/or Recordings**\r\nHere is a gif:\r\n![Screen Recording 2020-02-18 at 09 15 50](https://user-images.githubusercontent.com/6550688/74717267-68e57f00-5230-11ea-967a-551cf1da41c9.gif)\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: macOS\r\n - Latest ohmyzsh Update: Yes\r\n - ZSH Version: 5.7.1\r\n - Terminal emulator Alacritty, Tmux + Iterm\r\n\r\n**Additional context**\r\nThis seems to happen with the robbyrussell theme but not the simple theme. As well as it didn't happen with Iterm but I could get it happening in Tmux with Iterm. Let me know if you need anymore information.",
        "labels": "Support",
        "id": 43979
    },
    {
        "title": "Formatting problems for auto-completions or long commands",
        "body": "If I input commands which are longer than one line or if there is an auto-completion available, the formatting of the command line is destroyed (sometimes some huge whitespaces are added). This is shown in the following GIF:\r\n\r\n![screen2](https://user-images.githubusercontent.com/19676199/74642826-f8792800-5173-11ea-9bd9-f35ea55a67e7.gif)\r\n\r\nI use the \"Windows Terminal\" (the same effect happens in the vscode terminal) and the following plugins:\r\ngit, wd, zsh-autosuggestions, alias-tips, forgit, zsh-syntax-highlighting\r\n\r\nMaybe someone has an idea why this happens? It is sometimes really annoying, especially in combination with tmux.\r\n\r\nThank you very much :) !",
        "labels": "Support",
        "id": 43980
    },
    {
        "title": "ZSH_THEME to continue when connecting to a gcloud instance",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nI'm using oh my zsh and I have the default theme set to powerlevel10k and it works fine. When I connect to SSH servers I also enabled the SSH_CONNECTION to have the ZSH_THEME to be powerlevel10k and it works fine when I connect to my own ssh servers.\r\n\r\nHowever, whenever I connect to a gcloud instance using SSH, the same way, the theme doesn't follow in the ssh connection.\r\n\r\n**To Reproduce**\r\n1. set the ZSH_THEME=\"powerlevel10k/powerlevel10k\" in .zshrc\r\n2. also set add the following:\r\n`\r\nif [[ -n $SSH_CONNECTION ]]; then\r\n  export ZSH_THEME='powerlevel10k/powerlevel10k'\r\nelse\r\n  export ZSH_THEME='powerlevel10k/powerlevel10k'\r\nfi\r\n`\r\n3. ssh -i /path/to/privatekey user@instanceip\r\n4. the theme is gone\r\n\r\n**Expected behavior**\r\nI expected the theme to carry over during the connection.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS / Distro: [Manjaro]\r\n - Latest ohmyzsh Update?: [Yes]\r\n - ZSH Version: [e.g. 5.7.1]\r\n - Terminal emulator [XFCE terminal emulator]\r\n",
        "labels": "Support",
        "id": 43981
    },
    {
        "title": "Can't disable the dotenv confirmation prompt",
        "body": "After the latest ohmyzsh upgrade, I get prompted `dotenv: source '.env' file in the directory? (Y/n) y` which breaks my scripts.\r\n\r\nI added `ZSH_DOTENV_PROMPT=false` to `~/.zshrc` but it has no effect.\r\n\r\nI expect to assume Y by default without prompt\r\n\r\n - OS / Distro: Arch\r\n - Latest ohmyzsh Update?: Yes\r\n - ZSH Version: zsh 5.7.1 (x86_64-pc-linux-gnu)\r\n - Terminal emulator: Termite\r\n\r\n\r\n",
        "labels": "Support",
        "id": 43982
    },
    {
        "title": "autoload: command not found",
        "body": " \r\nHi all,\r\n\r\nI execut this command : `~/.zshrc` and I get this response : `/Users/nizar/.oh-my-zsh/oh-my-zsh.sh: line 23: autoload: command not found\r\n/Users/nizar/.oh-my-zsh/oh-my-zsh.sh: line 41: syntax error near unexpected token `('\r\n/Users/nizar/.oh-my-zsh/oh-my-zsh.sh: line 41: `for plugin ($plugins); do'`\r\n\r\ncould you help me, please ?",
        "labels": "Support",
        "id": 43983
    },
    {
        "title": "Keep agnoster prompt but change zsh themes?",
        "body": "Using: \r\n`zsh 5.4.2 (x86_64-ubuntu-linux-gnu)`\r\n`antigen (latest)`\r\n`hyperterm 3.0.2 on WSL`\r\n\r\nhttps://github.com/ohmyzsh/ohmyzsh/wiki/Themes\r\n![image](https://user-images.githubusercontent.com/1103336/74253580-19d5a200-4ca4-11ea-9d7e-00b9ea8aa3c3.png)\r\n(credit: https://github.com/agnoster/agnoster-zsh-theme)\r\n\r\nAs seen above the agnoster theme features a CLI prompt similar to powerlevel9k which disappears when the theme is changed to anything else. Is there a way to preserve the prompt rendering as a separate plugin while reloading different themes/color schemes?",
        "labels": "Support",
        "id": 43984
    },
    {
        "title": "All 256 colors are outputted on initialization",
        "body": "Whenever `source $ZSH/oh-my-zsh.sh` is run, a long list of all available 256 colors is output to the terminal, see screenshot below.\r\n\r\nAny idea what would cause this?\r\n\r\n![image](https://user-images.githubusercontent.com/406937/74236308-363c0380-4cd1-11ea-8175-b260ced77d2c.png)\r\n",
        "labels": "Support",
        "id": 43985
    },
    {
        "title": "Korean language is broken on ZSH.",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Type korean\r\n2. See broken text\r\n\r\n**Expected behavior**\r\nwell formatted korean\r\n\r\n**Screenshots or recordings**\r\n<img width=\"1310\" alt=\"Screen Shot 2020-02-10 at 17 35 11\" src=\"https://user-images.githubusercontent.com/26853553/74133335-b60f9280-4c2b-11ea-9efa-aa4bf189cc16.png\">\r\n![Feb-10-2020 17-34-30](https://user-images.githubusercontent.com/26853553/74133357-c162be00-4c2b-11ea-9618-9da1186b0893.gif)\r\n\r\n\r\n<!--\r\nIf applicable, add screenshots or record an asciinema session (https://asciinema.org/)\r\nto help explain your problem.\r\n-->\r\n\r\n**System:**\r\n - OS: macOS Catalina version 10.15.3 (19D76)\r\n - Zsh version: zsh 5.7.1 (x86_64-apple-darwin19.0)\r\n - Terminal emulator:  Terminal Version 2.10 (433)\r\n- Termial font :  Maslo LG S for Powerline\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n",
        "labels": "Support",
        "id": 43986
    },
    {
        "title": "Changing the color of directories when pressing tab (suggestion)",
        "body": "When I type `cd` or `ls` and then I press *tab* directories are listed in red.\r\nIs there a way to change this color to, let's say, blue?\r\n\r\nI'm using robbyrussell theme (even if I think this color is not strictly related to the theme)",
        "labels": "Support",
        "id": 43987
    },
    {
        "title": "some commands are duplicated after typing tab!",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nWhen the shell shows lists for suggestions, characters before cursor duplicate.\r\n\r\n*Before Tab*\r\n![image](https://user-images.githubusercontent.com/25769408/73935567-28c6f800-4924-11ea-8402-be313bdae096.png)\r\n\r\n*After Tab*\r\n![image](https://user-images.githubusercontent.com/25769408/73935592-38464100-4924-11ea-9d3f-094dc2a45301.png)\r\n\r\n\r\n\r\n\r\n**System:**\r\n - OS: Ubuntu 18.04.2 LTS, \r\n - zsh 5.4.2 (x86_64-ubuntu-linux-gnu)\r\n - Terminal emulator: WSL(v1) on Windows 10\r\n - Plugins I use: zsh-autosuggestions, fast-syntax-highlighting\r\n\r\n\r\n**Additional context**\r\nplugins seem to have no effect on this issue.\r\nThis bug doesn't appear when I use bash shell.\r\n\r\nYou can see my zshrc file here\r\n(https://github.com/nijkah/my_settings)\r\n",
        "labels": "Support",
        "id": 43988
    },
    {
        "title": "Using '~' in the ZSH env variable breaks things",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n<!-- A clear and concise description of what the bug is. -->\r\nI wanted to make my `.zshrc` file more portable (between users) so I did \r\n```\r\nexport ZSH=\"~/.oh-my-zsh\"\r\nsource $ZSH/oh-my-zsh.sh\r\n```\r\nbut somewhere along the line the folder `~` was created in my `$HOME`\r\n\r\n**Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\nUse `$HOME` instead of creating one.\r\n\r\n**System:**\r\n - OS: macOS 10.15.2 & Ubuntu 18.04.1\r\n - Zsh version: 5.7.1\r\n - Terminal emulator: iTerm2 (and iterm2 over ssh)\r\n",
        "labels": "Support",
        "id": 43989
    },
    {
        "title": "Problem with archlinux plugin 'pacupd' alias when aurutils is installed",
        "body": "I'm having some trouble with the `pacupd` alias now that I'm using aurutils. The usual output is followed by aurutil's usage text.\r\n\r\n```\r\njeff@pythos ~\r\n➜ % pacupd                                                                                            130 ↵ 16:01:11\r\n:: Synchronizing package databases...\r\n testing                                   25.7 KiB  1116 KiB/s 00:00 [#######################################] 100%\r\n core                                     133.5 KiB  3.03 MiB/s 00:00 [#######################################] 100%\r\n extra                                   1640.3 KiB  17.8 MiB/s 00:00 [#######################################] 100%\r\n community-testing                        596.5 KiB  12.7 MiB/s 00:00 [#######################################] 100%\r\n community                                  4.8 MiB  17.5 MiB/s 00:00 [#######################################] 100%\r\n aur-builds is up to date\r\nusage: aur [command]\r\n\r\navailable commands:\r\nbuild\t\tfetch\t\tpkglist\t\trepo\t\tsearch\t\tsync\r\ndepends\t\tgraph\t\tquery\t\trepo-filter\tsrcver\t\tvercmp\r\n\r\navailable user commands:\r\njeff@pythos ~\r\n➜ %                                                                                                     1 ↵ 16:06:16\r\n```\r\n\r\nI've looked at the plugin, and found pacman and the AUR helpers all seem to have a similiar \"update\" alias, calling `sudo aur` and `sudo abs` if those commands are available.\r\n```sh\r\nif (( $+commands[abs] && $+commands[aur] )); then\r\n  alias pacupd='sudo pacman -Sy && sudo abs && sudo aur'\r\nelif (( $+commands[abs] )); then\r\n  alias pacupd='sudo pacman -Sy && sudo abs'\r\nelif (( $+commands[aur] )); then\r\n  alias pacupd='sudo pacman -Sy && sudo aur'\r\nelse\r\n  alias pacupd='sudo pacman -Sy'\r\nfi\r\n```\r\n\r\nI think these checks for `aur` and `abs` may be dated and broken. Aurutils is the only package I can find providing `aur` and Arch Build System (`abs`?) was deprecated in 2017. This is only a problem after installing aurutils because it provides the `aur` command, but `sudo aur` is not the correct way to use it. I think `alias pacupd='sudo pacman -Sy'` is the only valid bit of that if statement left.",
        "labels": "Support",
        "id": 43990
    },
    {
        "title": "New error: /Users/redacted/.oh-my-zsh/plugins/vscode/vscode.plugin.zsh:type:8: bad option: -l",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n<!-- A clear and concise description of what the bug is. -->\r\nFor the past week or so, I'm suddenly getting this error when I start a new shell, or execute `source ~/.zshrc` (yes, I've already done `upgrade_oh_my_zsh`):\r\n\r\n```\r\n/Users/redacted/.oh-my-zsh/plugins/vscode/vscode.plugin.zsh:type:8: bad option: -l\r\n/Users/redacted/.oh-my-zsh/plugins/vscode/vscode.plugin.zsh:type:8: bad option: -l\r\n```\r\n\r\n**To Reproduce**\r\n<!--\r\nSteps to reproduce the behavior:\r\n1. Enable plugin '...'\r\n2. Run command '...', _or_ try to complete command '...', _etc._\r\n3. See error\r\n-->\r\nStart a new shell, or execute `source ~/.zshrc` \r\n\r\n**Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\nI expect no errors, as had been the case for months when I first installed the `vscode` plugin until a week or so ago.\r\n\r\n**Screenshots or recordings**\r\n<!--\r\nIf applicable, add screenshots or record an asciinema session (https://asciinema.org/)\r\nto help explain your problem.\r\n-->\r\n\r\n**System:**\r\n - OS: v10.15.3\r\n - Zsh version v5.7.1\r\n - Terminal emulator: Build in terminal under VSCode\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n",
        "labels": "Support",
        "id": 43991
    },
    {
        "title": "extended_glob cannot be disabled in zshrc",
        "body": "**Describe the bug**\r\nIt should be possible to permanently disable `extendedglob` opt, it interrupts work with programs such as `git` (e.g. `git show HEAD^`) or even grep , e.g. `ps -ef | grep [r]uby` (shows `zsh: no matches found: [r]uby`)\r\n\r\n**To Reproduce**\r\nadd `unsetopt extended_glob` to `~/.zshrc` , run `ps -ef | grep [b]ash` or `git show HEAD^` in any GIt repository\r\n\r\n**Expected behavior**\r\nIt should be possible to disable `extended_glob` with a simple `unsetopt` setting in `~/.zshrc` or via ENV var.\r\n\r\n**System:**\r\n - OS: macOS 10.15\r\n - Zsh version 5.7.1\r\n - Terminal emulator  iTerm2\r\n\r\n**Additional context**\r\nThere's a bunch of files in `~/.oh-my-zsh` in `lib`, `plugins` and `themes` directories which do `setopt extended_glob` or `setopt extendedglob`",
        "labels": "Support",
        "id": 43992
    },
    {
        "title": "Help with vi-mode in zsh",
        "body": "https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/vi-mode Tried using this plugin for zsh. vi-mode apparently works but the indicator does not. I am not using oh-my-zsh I just downloaded the plugin and sourced it manually in my .zshrc. Instead of the '<<<' symbol indicating normal mode I just get this: $(vi_mode_prompt_info) on the right side of the terminal. I usually read the manual and fix shit myself but in this case I just gave up. No matter what I do it just wont work. My .zshrc> https://pastebin.com/gBfiBcCh (I have commented vi-mode atm). Thanks for reading, any help would be appreciated.",
        "labels": "Support",
        "id": 43993
    },
    {
        "title": "username@hostname Same background and foreground color",
        "body": "After copying and pasting, can't see username@hostname.\r\n![图片](https://user-images.githubusercontent.com/1232444/73417176-2a0b8a00-4352-11ea-83c4-80ccdf4a3965.png)\r\n\r\n\r\n- debian_version lsb_release -a\r\n```\r\nDistributor ID:\tDebian\r\nDescription:\tDebian GNU/Linux bullseye/sid\r\nRelease:\ttesting\r\nCodename:\tbullseye\r\n```\r\n- oh my zsh\r\n```\r\norigin/master\r\n```\r\n- zsh  version\r\n```\r\n5.7.1 (x86_64-debian-linux-gnu)\r\n```\r\n- .zshrc\r\n```\r\nZSH_THEME=\"agnoster\"\r\n```\r\n- echo $prompt     \r\n``` \r\n%{%f%b%k%}$(build_prompt) \r\n\r\n```\r\n\r\nhttps://github.com/agnoster/agnoster-zsh-theme/issues/131#issue-556928752\r\n",
        "labels": "Support",
        "id": 43994
    },
    {
        "title": "Identified \"~\" directory as git repo",
        "body": "<!--\r\n1. Look for similar issues already posted (including closed ones)\r\n2. Include as much relevant information as possible\r\n3. Try to make sure the issue is due to Oh My Zsh\r\n-->\r\n\r\nhello, when I installed ohmyzsh, it identified \"~\" directory as git repos.\r\nCan anyone tell me how to fix it? Thanks!\r\n![image](https://user-images.githubusercontent.com/55221020/73370266-f3663e80-4281-11ea-9257-f23ec9510cf4.png)\r\n",
        "labels": "Support",
        "id": 43995
    },
    {
        "title": "Clear screen command(cmd+K) not displaying directory/repository details.",
        "body": "**Describe the bug**\r\nClear screen command `cmd+K` not displaying current directory details in `avit` theme.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Enable `avit` theme.\r\n2. `cd` into a directory.\r\n3. Clear screen using `cmd+K`\r\n\r\n**Expected behavior**\r\nThe directory details must be displayed above the terminal cursor.\r\n<img width=\"2560\" alt=\"Screenshot 2020-01-29 at 10 34 51 AM\" src=\"https://user-images.githubusercontent.com/22419483/73329289-1d6c3080-4283-11ea-983a-0b0d2550d251.png\">\r\n\r\n**Screenshots or recordings**\r\nBefore clearing screen\r\n<img width=\"2560\" alt=\"Screenshot 2020-01-29 at 10 34 51 AM\" src=\"https://user-images.githubusercontent.com/22419483/73329289-1d6c3080-4283-11ea-983a-0b0d2550d251.png\">\r\nAfter clearing screen\r\n<img width=\"2560\" alt=\"Screenshot 2020-01-29 at 10 34 56 AM\" src=\"https://user-images.githubusercontent.com/22419483/73329297-25c46b80-4283-11ea-8635-48a18e733d92.png\">\r\n\r\n**System:**\r\n - OS - macOS\r\n - Zsh - zsh 5.6.2 (x86_64-apple-darwin18.2.0)\r\n - Terminal\r\n",
        "labels": "Support",
        "id": 43996
    },
    {
        "title": "Pass plugin doesn't work on MacOS Catalina",
        "body": "**Describe the bug**\r\npass plugin: https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/pass\r\nDoesn't provide autocompletion for the pass commands, like `pass in` should autocomplete by tab to `pass insert` and so on.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Enable plugin in ~/.zshrc:\r\n```\r\nplugins=(git pass)\r\n```\r\n\r\n2. Run `pass in` or `pass l` no autocompletion.\r\n\r\n**Expected behavior**\r\nShould autocomplete every commands, stores, etc.\r\n\r\n**System:**\r\n - OS: MacOS Catalina\r\n - zsh 5.7.1 (x86_64-apple-darwin19.0)\r\n - iTerm2\r\n\r\n",
        "labels": "Support",
        "id": 43997
    },
    {
        "title": "Modifying a command and adding pipe character clears the rest of the line",
        "body": "**Describe the bug**\r\n\r\nDuring modifying an existing command, when I add pipe character (`|`) the characters following the pipe disappear!\r\n\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. type something similar to the following:\r\n`$( jabija ) ujaboiuabf oauboa v oabova`\r\n2. move your cursor to the end of the word inside paranthesis\r\n3. type one space, then a pipe, then space\r\n4. everything after the parenthesis is gone!\r\n\r\nYou can use this more meaningful command if you wish (put the space pipe space after the \"date\"):\r\n```\r\necho $(date) | cat\r\n```\r\n\r\n**Expected behavior**\r\nModifying the command should not remove the rest of the command\r\n\r\n**Screenshots or recordings**\r\n![Peek 2020-01-28 14-40](https://user-images.githubusercontent.com/390889/73264774-379f0380-41dc-11ea-8ff8-d4e7772a9f7b.gif)\r\n\r\n\r\n**System:**\r\n - OS: CentOS Linux release 7.7.1908 (Core)\r\n - Zsh version: 5.0.2\r\n - Terminal emulator: Konsole Version 19.12.1\r\n\r\nI have a very basic ohmyzsh setup on my machine where only the following lines are not commented in the `.zshrc` file:\r\n\r\n```\r\nexport ZSH=/home/user/.oh-my-zsh\r\nplugins=(git tmux)\r\nsource $ZSH/oh-my-zsh.sh\r\n```\r\n",
        "labels": "Support",
        "id": 43998
    },
    {
        "title": ".zshrc deleted itself",
        "body": "I was trying to get rbenv to install ruby, but I couldn't get into rbenv init, so I started debugging with Sublime. Couldn't get the info I wanted, so I moved it to VSCodium. \r\n\r\nJust added \r\necho \"\"\r\necho \"Terminal is: $TERM_PROGRAM\"\r\n\r\nfrom the advice [here](https://www.reddit.com/r/vscode/comments/dweoid/tip_use_the_term_program_env_variable_in_zshrc_to/).\r\n\r\nOpen with > VSCodium, crash/delete.\r\n\r\nOS 10.13.6\r\nITerm 3.3.7\r\nVSCodium 1.41.1\r\nXcode 10.1\r\nCurrent oh my zsh\r\n\r\n```\r\n#!/bin/bash\r\n# Usage: rbenv doctor\r\n# Summary: Detects common problems in rbenv installation\r\n\r\nset -e\r\n[ -n \"$RBENV_DEBUG\" ] && set -x\r\n\r\nindent() {\r\n  sed 's/^/  /'\r\n}\r\n\r\nprintc() {\r\n  local color_name=\"color_$1\"\r\n  local fmt=\"$2\"\r\n  shift 2\r\n\r\n  if [[ $fmt == *\"\\n\" ]]; then\r\n    fmt=\"${!color_name}${fmt%\\\\n}${color_reset}\\n\"\r\n  else\r\n    fmt=\"${!color_name}${fmt}${color_reset}\"\r\n  fi\r\n\r\n  printf \"$fmt\" \"$@\"\r\n}\r\n\r\nif [ -t 1 ]; then\r\n  color_red=$'\\e[31m'\r\n  color_green=$'\\e[32m'\r\n  color_yellow=$'\\e[1;33m'\r\n  color_bright=$'\\e[1;37m'\r\n  color_reset=$'\\e[0m'\r\nelse\r\n  color_red=\"\"\r\n  color_green=\"\"\r\n  color_yellow=\"\"\r\n  color_bright=\"\"\r\n  color_reset=\"\"\r\nfi\r\n\r\nwarnings=0\r\n\r\nif [ $(uname -s) = \"Darwin\" ]; then\r\n  bashrc=\".bash_profile\"\r\nelse\r\n  bashrc=\".bashrc\"\r\nfi\r\n\r\necho -n \"Checking for \\`rbenv' in PATH: \"\r\nnum_locations=\"$(which -a rbenv | uniq | wc -l)\"\r\nif [ $num_locations -eq 0 ]; then\r\n  printc red \"not found\\n\"\r\n  { if [ -x ~/.rbenv/bin/rbenv ]; then\r\n      echo \"You seem to have rbenv installed in \\`$HOME/.rbenv/bin', but that\"\r\n      echo \"directory is not present in PATH. Please add it to PATH by configuring\"\r\n      echo \"your \\`~/${bashrc}', \\`~/.zshrc', or \\`~/.config/fish/config.fish'.\"\r\n    else\r\n      echo \"Please refer to https://github.com/rbenv/rbenv#installation\"\r\n    fi\r\n  } | indent\r\n  exit 1\r\nelif [ $num_locations -eq 1 ]; then\r\n  printc green \"%s\\n\" \"$(which rbenv)\"\r\nelse\r\n  printc yellow \"multiple\\n\"\r\n  { echo \"You seem to have multiple rbenv installs in the following locations.\"\r\n    echo \"Please pick just one installation and remove the others.\"\r\n    echo\r\n    which -a rbenv\r\n  } | indent\r\n  echo\r\n  : $((warnings++))\r\nfi\r\n\r\nRBENV_ROOT=\"${RBENV_ROOT:-$(rbenv root)}\"\r\n\r\nOLDIFS=\"$IFS\"\r\nIFS=:\r\npath=($PATH)\r\nIFS=\"$OLDIFS\"\r\n\r\necho -n \"Checking for rbenv shims in PATH: \"\r\nshims_dir=\"${RBENV_ROOT}/shims\"\r\nfound=\"\"\r\nfor dir in \"${path[@]}\"; do [ \"$dir\" != \"$shims_dir\" ] || found=true; done\r\nif [ -n \"$found\" ]; then\r\n  printc green \"OK\\n\"\r\nelse\r\n  printc red \"not found\\n\"\r\n  { echo \"The directory \\`$shims_dir' must be present in PATH for rbenv to work.\"\r\n    echo \"Please run \\`rbenv init' and follow the instructions.\"\r\n  } | indent\r\n  echo\r\n  : $((warnings++))\r\nfi\r\n\r\necho -n \"Checking \\`rbenv install' support: \"\r\nrbenv_installs=\"$({ ls \"$RBENV_ROOT\"/plugins/*/bin/rbenv-install 2>/dev/null || true\r\n                    which -a rbenv-install 2>/dev/null || true\r\n                  } | uniq)\"\r\nnum_installs=\"$(wc -l <<<\"$rbenv_installs\")\"\r\nif [ -z \"$rbenv_installs\" ]; then\r\n  printc red \"not found\\n\"\r\n  { echo \"Unless you plan to add Ruby versions manually, you should install ruby-build.\"\r\n    echo \"Please refer to https://github.com/rbenv/ruby-build#installation\"\r\n  }\r\n  echo\r\n  : $((warnings++))\r\nelif [ $num_installs -eq 1 ]; then\r\n  printc green \"$rbenv_installs\"\r\n  if [[ $rbenv_installs == \"$RBENV_ROOT\"/plugins/* ]]; then\r\n    rbenv_install_cmd=\"${rbenv_installs##*/}\"\r\n    rbenv_install_version=\"$(rbenv \"${rbenv_install_cmd#rbenv-}\" --version || true)\"\r\n  else\r\n    rbenv_install_version=\"$(\"$rbenv_installs\" --version || true)\"\r\n  fi\r\n  printf \" (%s)\\n\" \"$rbenv_install_version\"\r\nelse\r\n  printc yellow \"multiple\\n\"\r\n  { echo \"You seem to have multiple \\`rbenv-install' in the following locations.\"\r\n    echo \"Please pick just one installation and remove the others.\"\r\n    echo\r\n    echo \"$rbenv_installs\"\r\n  } | indent\r\n  echo\r\n  : $((warnings++))\r\nfi\r\n\r\necho -n \"Counting installed Ruby versions: \"\r\nnum_rubies=\"$(rbenv versions --bare | wc -l)\"\r\nif [ $num_rubies -eq 0 ]; then\r\n  printc yellow \"none\\n\"\r\n  echo \"There aren't any Ruby versions installed under \\`$RBENV_ROOT/versions'.\" | indent\r\n  [ $num_installs -eq 0 ] || {\r\n    echo -n \"You can install Ruby versions like so: \"\r\n    printc bright \"rbenv install 2.2.4\\n\"\r\n  } | indent\r\nelse\r\n  printc green \"%d versions\\n\" $num_rubies\r\nfi\r\n\r\necho -n \"Checking RubyGems settings: \"\r\ngem_broken=0\r\nfor gemrc in ~/.gemrc /etc/gemrc; do\r\n  if grep -v '^#' \"$gemrc\" 2>/dev/null | grep -q -e --user-install; then\r\n    [ \"$((gem_broken++))\" -gt 0 ] || printc yellow \"warning\\n\"\r\n    echo \"Please remove \\`--user-install' flag from \\`$gemrc'.\" | indent\r\n    : $((warnings++))\r\n  fi\r\ndone\r\n[ \"$gem_broken\" -gt 0 ] || printc green \"OK\\n\"\r\n\r\necho -n \"Auditing installed plugins: \"\r\nOLDIFS=\"$IFS\"\r\nIFS=$'\\n'\r\nhooks=(`rbenv hooks exec`)\r\nIFS=\"$OLDIFS\"\r\nplugin_broken=0\r\nfor hook in \"${hooks[@]}\"; do\r\n  plugin_name=\r\n  message=\r\n  case \"$hook\" in\r\n  */\"~gem-rehash.bash\" )\r\n    plugin_name=rbenv-gem-rehash\r\n    message=\"functionality is now included in rbenv core. Please remove the plugin.\"\r\n    ;;\r\n  */\"bundler.bash\" )\r\n    plugin_name=rbenv-bundler\r\n    message=\"is considered harmful. Please remove the plugin and \\`rm -rf \\$(rbenv root)/shims && rbenv rehash'.\"\r\n    ;;\r\n  esac\r\n\r\n  if [ -n \"$plugin_name\" ]; then\r\n    [ \"$((plugin_broken++))\" -gt 0 ] || printc yellow \"warning\\n\"\r\n    { printc bright \"$plugin_name\"\r\n      echo \" $message\"\r\n      echo \"  (found in \\`${hook}')\"\r\n    } | indent\r\n    : $((warnings++))\r\n  fi\r\ndone\r\n[ \"$plugin_broken\" -gt 0 ] || printc green \"OK\\n\"\r\n\r\n[ $warnings -eq 0 ]\r\n```",
        "labels": "Support",
        "id": 43999
    },
    {
        "title": "Using prezto theme with Oh My Zsh",
        "body": "Specifically the Paradox theme - how do I port this over?\r\n",
        "labels": "Support",
        "id": 44000
    },
    {
        "title": "Disabling history-substring-search",
        "body": "How do I disable up/down arrow search behavior when something is already being typed in shell?\r\nI **didn't install** history-substring-search plugin\r\nAlready tried:\r\n```bash\r\n$ bindkey '^[[A' up-line-or-history\r\n$ bindkey '^[[B' down-line-or-history\r\n```\r\nBut that's not working",
        "labels": "Support",
        "id": 44001
    },
    {
        "title": "Imajes theme problem",
        "body": "The imajes theme shows \\[\\e[1;37m\\]joan:\\w \\[\\]$ \\[\\e[0m\\]",
        "labels": "Support",
        "id": 44002
    },
    {
        "title": "Docker plugin not workin",
        "body": "**Describe the bug**\r\nDocker autocomplete plugin not working.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Enable plugin 'docker'.\r\n2. Start typing on your terminal emulator, hit the autocomplete button (Tab).\r\n3. Nothing happens.\r\n\r\n**Expected behavior**\r\nAutocomplete suggests the relevant options.\r\n\r\n**System:**\r\n - OS: arch 5.4.10\r\n - Zsh version: 5.7.1\r\n - Terminal emulator: Termite",
        "labels": "Support",
        "id": 44003
    },
    {
        "title": "Command not found yarn when using yvm",
        "body": "**Describe the bug**\r\nWhen I try to source my config I get the following error:\r\n```\r\nsource ~/.zshrc                         \r\nis_plugin:3: command not found: yarn\r\nis_plugin:4: command not found: yarn\r\nis_plugin:3: command not found: yarn\r\nis_plugin:4: command not found: yarn\r\n[oh-my-zsh] plugin 'z' not found\r\n```\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\n1. Enable plugin 'z'\r\n2. Download yvm with brew\r\n3. add yvm export to zshrc\r\n```\r\nexport YVM_DIR=/usr/local/Cellar/yvm/3.6.1\r\n[ -r $YVM_DIR/yvm.sh ] && . $YVM_DIR/yvm.sh\r\n```\r\n3. See error\r\n-->\r\n\r\n**Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\nI should be able to source my zshrc with no errors and the z plugin should work as expected.\r\n\r\n**System:**\r\n - OS: macOS 10.14.6\r\n - Zsh version: zsh 5.7.1 (x86_64-apple-darwin18.2.0)\r\n - Terminal emulator\"  iTerm2\r\n\r\n",
        "labels": "Support",
        "id": 44004
    },
    {
        "title": "MobaXterm cannot start Windows Subsystem for Linux (WSL) with zsh",
        "body": "<!--\r\n1. Look for similar issues already posted (including closed ones)\r\n2. Include as much relevant information as possible\r\n3. Try to make sure the issue is due to Oh My Zsh\r\n-->\r\nSorry for this not related issue which I had during using oh-my-zsh.\r\n\r\nHere is my environment:\r\n1. OS: Windows 10 Enterprise, 1809\r\n2. WSL: Ubuntu 18.04 LTS\r\n3. MobaXterm: Personal Edition v12.4 Build 4248\r\n\r\nProblem:\r\n`zsh` and `oh-my-zsh` are installed successfully without errors. Default shell has been changed to `zsh` by `chsh -s $(which zsh)` (also tried `chsh -s /bin/zsh` which did not work also). When I start WSL from MobaXterm, it starts with `sh` instead of  `zsh`. But I can manually change to `zsh` by execute `zsh` command where `oh-my-zsh` is working really well. How do I know I am not using `zsh`? I have changed the theme to `agnoster` which is very obvious to tell. Also I have double checked that the default shell is set to `zsh` by `echo $SHELL`.\r\n\r\nHas anybody come to similar problems?\r\n",
        "labels": "Support",
        "id": 44005
    },
    {
        "title": "Agnoster Theme with AWS Prompt How To Remove Trailing Prompt",
        "body": "<!--\r\n1. Look for similar issues already posted (including closed ones)\r\n2. Include as much relevant information as possible\r\n3. Try to make sure the issue is due to Oh My Zsh\r\n-->\r\n\r\n![image](https://user-images.githubusercontent.com/8405384/72468013-d457af00-37a1-11ea-8b32-334df7596cf5.png)\r\n\r\nIs there a way to remove the trailing AWS prompt? I'm not sure if that is supposed to be there at all.",
        "labels": "Support",
        "id": 44006
    },
    {
        "title": "Oh my zsh update broke sshfs folder",
        "body": "I am using macOS Catalina.\r\n\r\nEverything worked fine until the latest update.\r\nzsh version: zsh 5.7.1 (x86_64-apple-darwin19.0.0)\r\n\r\nEverything looks okay for normal folder. However, for remote file systems, it is stuck, until I press Ctrl +C and then type`cd ..`\r\n\r\nI am attaching the screenshot below:\r\n\r\n<img width=\"1440\" alt=\"Screen Shot 2020-01-15 at 10 40 01 AM\" src=\"https://user-images.githubusercontent.com/14984329/72447577-977cbf80-3783-11ea-81d4-c2855f0a88fd.png\">\r\n\r\n\r\n",
        "labels": "Support",
        "id": 44007
    },
    {
        "title": "kubectl plugin error",
        "body": "### When I use the kubectl plugin alone, the command line is correct, but after I use autosuggestion, I get this kind of error. I ca n’t delete it\r\n- os type :mac 10.13\r\n![image](https://user-images.githubusercontent.com/59188420/72435753-d0e01a00-37d9-11ea-9355-69dac18090b5.png)\r\n\r\n",
        "labels": "Support",
        "id": 44008
    },
    {
        "title": "Why my Oh My Zsh startup is slow. It take mostly 4-5s",
        "body": "",
        "labels": "Support",
        "id": 44009
    },
    {
        "title": "Move .oh-my-zsh out from $HOME directory",
        "body": "How to move ~/.oh-my-zsh out to a different directory",
        "labels": "Support",
        "id": 44010
    },
    {
        "title": "Weird behaviour with auto_complete plugin",
        "body": "**Version**: zsh 5.7.1 (x86_64-ubuntu-linux-gnu)\r\n\r\n\r\nFor some reason, this started to happen after a recent update.\r\n![Screenshot_20200110_214628](https://user-images.githubusercontent.com/41864755/72168260-c812d100-33f2-11ea-9bd6-c3a3448df413.png)\r\n\r\n",
        "labels": "Support",
        "id": 44011
    },
    {
        "title": "agnoster not working on ssh",
        "body": "I have zsh setup on a bunch of raspberry pis i connect to via ssh, on both my dualboot desktop using windows and my windows laptop with wsl it works fine, but on my dualboot desktop in ubuntu i get the error `(anon):12: character not in range` when starting an ssh connection to one of the raspberry pis, the locales are set correctly, zsh works in the normal ubuntu terminal correctly:\r\n```\r\n omegarogue@omegarogue-DESKTOP-GUUD6NH  ~  \r\n```\r\nbut in ssh it looks like this:\r\n```\r\nLast login: Mon Jan  6 21:18:33 2020 from 192.168.0.49\r\n(anon):12: character not in range\r\nomegapi% \r\n```",
        "labels": "Support",
        "id": 44012
    },
    {
        "title": "Agnoster theme icon issue",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n<!-- A clear and concise description of what the bug is. -->\r\nThere is an issue with the +- (PLUSMINUS) icon when using the agnoster theme. In cases where the +- icon should be shown, a dot (or bullet point) is instead displayed in its place.\r\n\r\n**To Reproduce**\r\n1. Enable theme 'agnoster' by setting `ZSH_THEME=\"agnoster\"` in your `~/.zshrc`\r\n2. Download/select/enable an available [powerline font](https://github.com/powerline/fonts/tree/2015-12-04) for your terminal\r\n3. Using your terminal, step into a directory that is tracked via git which has uncommitted changes\r\n4. Observe that a dot instead of the +- icon is displayed to the right of the git branch name\r\n\r\n**Expected behavior**\r\nThe +- icon should be displayed next the git branch name when there are uncommitted changes.\r\n\r\n**Screenshots or recordings**\r\nScreenshot of unexpected behavior:\r\n<img width=\"619\" alt=\"Screen Shot 2020-01-05 at 10 33 59 AM\" src=\"https://user-images.githubusercontent.com/2282499/71782348-00578100-2fa7-11ea-98f2-32ee5eb9e612.png\">\r\n\r\nScreenshot of expected behavior:\r\n<img width=\"619\" alt=\"Screen Shot 2020-01-05 at 10 34 12 AM\" src=\"https://user-images.githubusercontent.com/2282499/71782352-051c3500-2fa7-11ea-9d8b-83d72174b112.png\">\r\n\r\n**System:**\r\n - OS: MacOS 10.15.2 (Catalina)\r\n - Zsh version: 5.7.1\r\n - Terminal emulator: iTerm2\r\n\r\n**Additional context**\r\nThere has been ongoing discussion about the issue in the comments of an [open issue in the agnoster-zsh-theme repo](https://github.com/agnoster/agnoster-zsh-theme/issues/103).\r\n\r\nThe cause of the issue appears to be due to the fact that [ohmyzsh's fork of the theme](https://github.com/ohmyzsh/ohmyzsh/blob/master/themes/agnoster.zsh-theme) has diverged from the [original agnoster theme](https://github.com/agnoster/agnoster-zsh-theme/blob/master/agnoster.zsh-theme). Specifically, the ohmyzsh version does not include the [PLUSMINUS shell variable](https://github.com/agnoster/agnoster-zsh-theme/blob/master/agnoster.zsh-theme#L46), which holds the value for the +- icon.\r\n\r\nAfter some troubleshooting, I was able to verify what the cause was by adding the [agnoster theme](https://github.com/agnoster/agnoster-zsh-theme/blob/master/agnoster.zsh-theme) to the `~/.oh-my-zsh/custom/themes` folder to override the ohmyzsh's version of the theme. Doing so resulted in the +- icon being displayed (see expected behavior screenshot above).\r\n",
        "labels": "Support",
        "id": 44013
    },
    {
        "title": "wget Unable to establish SSL connection",
        "body": "In my mac vagrant environment\r\n\r\n```\r\nsh -c \"$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\r\n\r\nreturn \r\n--2020-01-02 02:06:07--  https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh\r\nResolving raw.githubusercontent.com (raw.githubusercontent.com)... 151.101.228.133\r\nConnecting to raw.githubusercontent.com (raw.githubusercontent.com)|151.101.228.133|:443... connected.\r\nUnable to establish SSL connection.\r\n```\r\n\r\nmy openssl\r\n```\r\n$ openssl version\r\nOpenSSL 1.0.2g  1 Mar 2016\r\n```\r\n\r\nand i can wget other https url but ohmyzsh can't not",
        "labels": "Support",
        "id": 44014
    },
    {
        "title": "Tmux.conf no longer functions",
        "body": "I've tried over and over again to get Tmux to cooperate with ZSH but unfortunately I can't find the tmux.conf folder since switching from BASH.\r\n\r\nWhen I switch back to bash, I'm able to edit the file with no issues at all whatsoever. However, when I switch back to ZSH the ~/.tmux.conf file is empty. \r\n\r\nHas anyone else experienced this issue? I've looked for solutions for the past 2 days and have hit a wall.\r\n\r\nHere's what I come across: https://thumbs.gfycat.com/ShockingCalmLice-mobile.mp4\r\n",
        "labels": "Support",
        "id": 44015
    },
    {
        "title": "Virtualenv name not appearing on prompt",
        "body": "I have made a fresh installation of zsh and oh my zsh and when I installed virtualenvwrapper and create a fresh virtualenv, the name of virtualenv is not appearing on the prompt as is used to on other machines. \r\n\r\nAdded the plugin (virtualenv and virtualenvwrapper) to the zsh, no fix. \r\nHere is my profile: https://invent.kde.org/snippets/630\r\n\r\n```\r\n➜  ~ workon\r\naws\r\n➜  ~ workon aws\r\n➜  ~ deactivate\r\n➜  ~ \r\n```\r\n\r\nAny tips on how to fix this?",
        "labels": "Support",
        "id": 44016
    },
    {
        "title": "Won't install for my user, only for root...",
        "body": "I need to run the installation as root, but ofcourse i dont want to...\r\n\r\n**Describe the bug**\r\nI want to install oh-my-zsh, but it cant be installed because i dont have the permissions of the folder `/usr/share/oh-my-zsh` (indeed, root can only access and write `/usr/share`).\r\n\r\nDoes `/usr/share` need to be writable by my user?\r\n\r\n**To Reproduce**\r\n\r\nRun\r\n```\r\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\r\n```\r\n\r\n**Expected behavior**\r\nTo install oh-my-zsh\r\n\r\n**Screenshots or recordings**\r\nRun the command without root:\r\n```\r\ndreamworld% sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"  \r\nCloning Oh My Zsh...\r\nfatal: could not create work tree dir '/usr/share/oh-my-zsh': Permission denied\r\nError: git clone of oh-my-zsh repo failed\r\n```\r\n\r\nWith root:\r\n```\r\ndreamworld% sudo sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\r\nCloning Oh My Zsh...\r\nCloning into '/root/.oh-my-zsh'...\r\nremote: Enumerating objects: 1102, done.\r\nremote: Counting objects: 100% (1102/1102), done.\r\nremote: Compressing objects: 100% (1055/1055), done.\r\nremote: Total 1102 (delta 23), reused 859 (delta 18), pack-reused 0\r\nReceiving objects: 100% (1102/1102), 720.99 KiB | 1.37 MiB/s, done.\r\nResolving deltas: 100% (23/23), done.\r\n\r\nLooking for an existing zsh config...\r\nFound ~/.zshrc. Backing up to /root/.zshrc.pre-oh-my-zsh\r\nUsing the Oh My Zsh template file and adding it to ~/.zshrc.\r\n\r\n         __                                     __\r\n  ____  / /_     ____ ___  __  __   ____  _____/ /_\r\n / __ \\/ __ \\   / __ `__ \\/ / / /  /_  / / ___/ __ \\\r\n/ /_/ / / / /  / / / / / / /_/ /    / /_(__  ) / / /\r\n\\____/_/ /_/  /_/ /_/ /_/\\__, /    /___/____/_/ /_/\r\n                        /____/                       ....is now installed!\r\n\r\n\r\nPlease look over the ~/.zshrc file to select plugins, themes, and options.\r\n\r\np.s. Follow us on https://twitter.com/ohmyzsh\r\n\r\np.p.s. Get stickers, shirts, and coffee mugs at https://shop.planetargon.com/collections/oh-my-zsh\r\n\r\n➜  share whoami\r\nroot\r\n```\r\n\r\n(it is already isnstalled for my root, not my user...\r\n\r\n```\r\ndreamworld% sudo sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\r\nYou already have Oh My Zsh installed.\r\nYou'll need to remove '/root/.oh-my-zsh' if you want to reinstall.\r\n```\r\n\r\n**System:**\r\n - OS: Arch Linux x86_64\r\n - Zsh version: zsh 5.7.1 (x86_64-pc-linux-gnu)\r\n - Terminal emulator: konsole (KDE)\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n",
        "labels": "Support",
        "id": 44017
    },
    {
        "title": "iTerm2 terminal output colors do not seem to be displaying properly",
        "body": "\r\n**Describe the bug**\r\niTerm2 terminal output colors do not seem to be displaying properly\r\n\r\n**Screenshots or recordings**\r\nHere are some screenshots of running in a zsh terminal:\r\n<img width=\"823\" alt=\"Screen Shot 2019-12-14 at 1 11 33 AM\" src=\"https://user-images.githubusercontent.com/10415101/70846572-6705d680-1e0f-11ea-947d-f6cb9e5f225e.png\">\r\n<img width=\"822\" alt=\"Screen Shot 2019-12-14 at 1 10 07 AM\" src=\"https://user-images.githubusercontent.com/10415101/70846573-679e6d00-1e0f-11ea-8e20-0801a6a2a450.png\">\r\n\r\n\r\nAnd here are the same places while running in bash:\r\n<img width=\"844\" alt=\"Screen Shot 2019-12-14 at 1 12 52 AM\" src=\"https://user-images.githubusercontent.com/10415101/70846576-6f5e1180-1e0f-11ea-9a6f-23a56453ebec.png\">\r\n<img width=\"836\" alt=\"Screen Shot 2019-12-14 at 1 12 30 AM\" src=\"https://user-images.githubusercontent.com/10415101/70846577-6f5e1180-1e0f-11ea-9012-c052bff4fb7d.png\">\r\n\r\n**System:**\r\n - OS: MacOS 10.14.6 \r\n - Zsh version 5.3\r\n - Terminal emulator: iTerm2\r\n\r\n**Additional context**\r\nThis used to not be an issue but I am not sure what has changed.\r\n",
        "labels": "Support",
        "id": 44018
    },
    {
        "title": "Global CLI Utilities Not Visible After Install of Oh My Zsh",
        "body": "Hi,\r\n\r\nI am new to Oh My Zsh and definitely like what I see. Unfortunately, the moment I installed the framework, all global commands ceased working. Most notably, I had nvm installed and two different versions of node.js. I also had at least one version of Angular installed.\r\n\r\nMy system is a late 2018 Mac Book Pro with Touchbar and 32GB RAM, an i9 processor and 1TB SSD (nearly top of the line at the time).\r\n\r\nI am running Mac OS Catalina, which automatically switched over to using the zsh shell. The problems actually began then. I was able to get nvm back up and running using another set of instructions in a Github Gist&mdash;[install-nvm-zsh](https://gist.github.com/mike-casas/6d489bebf48d89f5109cd1395aabe150).\r\n\r\nOnce I installed Oh My Zsh, everything fiixed by the above gist ceased to work.\r\n\r\nI've been reading around the net, and there seems to be much conflicting information, and my development studies are now at a standstill.\r\n\r\nAny insights you can provide are greatly appreciated.\r\n\r\nThanks,\r\n\r\nRobert Hieger\r\n",
        "labels": "Support",
        "id": 44019
    },
    {
        "title": "`pyenv-virtualenv-init` not available on PATH",
        "body": "In my version of pyenv (1.2.14), there is no executable named `pyenv-virtualenv-init` on the search `$PATH`, and hence there is no entry in `$commands`. It follows that the virtualenv machinery is not initialised here: https://github.com/ohmyzsh/ohmyzsh/blob/664664f6cd8a1c02a38063c8f2104f0515a19399/plugins/pyenv/pyenv.plugin.zsh#L28\r\n\r\nI don't know about the best way to solve this. Several approaches include\r\n- Running `pyenv virtualenv --version` and catching an error code\r\n- Running `pyenv commands` and grepping for virtualenv.\r\n",
        "labels": "Support",
        "id": 44020
    },
    {
        "title": "z plugin: z command stops working after running zsh as root",
        "body": "**Describe the bug**\r\nAfter starting a shell with root and run some `cd` commands, `z` stops working when switching back to normal user.\r\n\r\n**To Reproduce**\r\n```\r\n$ sudo -s\r\n$ cd /tmp\r\n$ cd /usr\r\n$ exit\r\n$ z tmp\r\n```\r\n**Expected behavior**\r\n`z` should continue to work and current dir should be changed to `/usr`.\r\n\r\n**Screenshots or recordings**\r\n<!--\r\nIf applicable, add screenshots or record an asciinema session (https://asciinema.org/)\r\nto help explain your problem.\r\n-->\r\n\r\n**System:**\r\n - OS: macOS 10.14.6\r\n - Zsh version 5.3 (x86_64-apple-darwin18.0)\r\n - Terminal emulator [e.g. iTerm2]\r\n\r\n**Additional context**\r\nLooks like the owner of `$HOME/.z` got changed to `root` during the process. `_z()` would fail the owner check subsequently and bail.\r\n",
        "labels": "Support",
        "id": 44021
    },
    {
        "title": "What does: \"master *1\" mean? ",
        "body": "I'm not seeing in the docs what the star means? ",
        "labels": "Support",
        "id": 44022
    },
    {
        "title": "cd command sometimes hangs",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n**Describe the bug**\r\nwhen I input cd command , the cursor stays at the start of line  , then type any key can  make it continue working. it happens sometimes.\r\nwhen I  set  ZSH_THEME to \"\",  cd command works well .\r\n\r\n**To Reproduce**\r\nhard to reproduce, it happens randomly\r\n\r\n**Screenshots or recordings**\r\nthe cursor stays at the start of line\r\n![image](https://user-images.githubusercontent.com/4841386/70144096-281da580-16d8-11ea-8f48-7e6cddacbb8d.png)\r\n\r\n\r\n\r\n**System:**\r\n - OS: macOS\r\n - Zsh version:  5.7.1\r\n - Terminal emulator: Term2\r\n\r\n\r\n\r\n\r\n",
        "labels": "Support",
        "id": 44023
    },
    {
        "title": "Stop oh-my-zsh from resetting screen window titles",
        "body": "<!--\r\n1. Look for similar issues already posted (including closed ones)\r\n2. Include as much relevant information as possible\r\n3. Try to make sure the issue is due to Oh My Zsh\r\n-->\r\nHi,\r\n\r\nHow can I stop oh-my-zsh from resetting screen window titles? I set a title of my screen window. Whenever I run a command, it reset the title to the current directory name. How can I turn off this feature?",
        "labels": "Support",
        "id": 44024
    },
    {
        "title": "~d (tilde d) expands to a path. Why and what feature of zsh or omz is it?",
        "body": "<!--\r\n1. Look for similar issues already posted (including closed ones)\r\n2. Include as much relevant information as possible\r\n3. Try to make sure the issue is due to Oh My Zsh\r\n-->\r\n```\r\n% echo ~d                    \r\n/usr/share/zsh/functions/Zle \r\n```\r\n\r\nI found this by accident, it seems like there are many expansions that start with tilde, and have something to do with users' home directories (e.g. `~root` is `/root`), but there exists no user `d` on this system...",
        "labels": "Support",
        "id": 44025
    },
    {
        "title": "ls display both directories and files with the same color",
        "body": "as the title said, when i installed zsh for my terminal on ubuntu i found that the ls command displays the results using the same color for both files and folders.\r\ni'm using zsh with powerline and powerlevel9k theme but didn't find any mention to a similar problem with the issues section for their git repos.\r\n\r\ni saw an already posted issue with the same problem but was in chinese so i couldn't fully follow what was being said but i saw that some information was requested so i'll post this image bellow.\r\n\r\n![Screenshot from 2019-11-25 11-00-28](https://user-images.githubusercontent.com/39971257/69531059-7d88e280-0f73-11ea-8103-6c33f3002f3a.png)\r\n\r\n\r\nenvironment:\r\n\r\n- OS: ubuntu (18.04 LTS) \r\n- zsh: zsh 5.4.2 (x86_64-ubuntu-linux-gnu)",
        "labels": "Support",
        "id": 44026
    },
    {
        "title": "Theme choose does not display exit code",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nI would like to choose a theme that displays the exit code of the previous command when it was not zero. Most themes do not display the exit code when it's zero. Thus when using the theme chooser I don't know wether a theme displays non-zero exit codes.\r\n\r\n**To Reproduce**\r\nUse the theme chooser\r\n\r\n**Expected behavior**\r\nexit code is displayed as 1 or 255 or whatever\r\n\r\n**System:**\r\n - OS: Archlinux\r\n - Zsh version: 5.7.1\r\n - Terminal emulator: Terminator",
        "labels": "Support",
        "id": 44027
    },
    {
        "title": "history command times bug",
        "body": "When the number of commands reaches 10001, it will return to this number every time it is reconnected\r\n\r\n![image](https://user-images.githubusercontent.com/48517501/69481107-2555c180-0e49-11ea-8b63-9b3a63908c85.png)\r\n",
        "labels": "Support",
        "id": 44028
    },
    {
        "title": "Vscode integrated terminal locale command not found",
        "body": "I'm getting `/etc/zshrc:7: command not found: locale` at the beginning of every debug session when I try to debug in Vscode using the \"integratedTerminal\" console option.\r\n\r\nI made sure to include all of my PATHs and checked that `locale` does exist.\r\n\r\n```sh\r\n> $ which locale\r\n/usr/bin/locale\r\n> $ echo $PATH\r\n..:/usr/bin:/usr/local/bin:..\r\n```\r\nI checked out `/etc/zshrc` and indeed it calls `locale`\r\n```zsh\r\n# System-wide profile for interactive zsh(1) shells.\r\n\r\n# Setup user specific overrides for this in ~/.zhsrc. See zshbuiltins(1)\r\n# and zshoptions(1) for more details.\r\n\r\n# Correctly display UTF-8 with combining characters.\r\nif [[ \"$(locale LC_CTYPE)\" == \"UTF-8\" ]]; then\r\n    setopt COMBINING_CHARS\r\nfi\r\n```\r\n\r\nI wonder if this is because `/etc/zshrc` is run before `~/.zshrc` since i am exporting PATH in `~/.zshrc`. If so how would I go about fixing this? This only happens within Vscode when I try to debug using \"integratedTerminal\".\r\n\r\nHere's my settings in Vscode\r\n```json\r\n...\r\n\"terminal.integrated.shell.osx\": \"/bin/zsh\",\r\n\"terminal.integrated.shellArgs.osx\": []\r\n```\r\n\r\nAny help is appreciated, thank you!",
        "labels": "Support",
        "id": 44029
    },
    {
        "title": "Always show symbol \"~%\" after command when logging in remote PC with my local PC",
        "body": "I use ohmyzsh in my local PC and remote server PC, and when logging in remote PC with my local PC in Terminal, every command inputted always follows a symbol \"~%\".  Curiously，Each time you execute this command, there is one more symbol in the terminal。\r\n\r\neg. \r\n  In my local PC, log in remote PC: ssh work@11.22.33.44\r\n \r\n![image](https://user-images.githubusercontent.com/19757545/69472156-82b62800-0de1-11ea-840c-9b38d3ab2d68.png)\r\n\r\nBut, there is not the situation in Iterm2. It works well like this:\r\n![image](https://user-images.githubusercontent.com/19757545/69472226-3c14fd80-0de2-11ea-8344-8a3db64d2d58.png)\r\n\r\nHow to fix it? Please give me some advice, thanks.\r\n\r\n\r\n",
        "labels": "Support",
        "id": 44030
    },
    {
        "title": "Errors while executing /.zshrc",
        "body": "I have the same problem with this issue https://github.com/robbyrussell/oh-my-zsh/issues/6092\r\nI have follow all the step in it, but still\r\n/Users/xx/.oh-my-zsh/oh-my-zsh.sh: line 23: autoload: command not found\r\n/Users/xx/.oh-my-zsh/oh-my-zsh.sh: line 41: syntax error near unexpected token `('\r\n/Users/xx/.oh-my-zsh/oh-my-zsh.sh: line 41: `for plugin ($plugins); do'",
        "labels": "Support",
        "id": 44031
    },
    {
        "title": "Possible to not expand wild card matches?",
        "body": "OMZ expands wild card matches like so:\r\n\r\n```\r\n➜  /tmp touch a aa aaa\r\n➜  /tmp ls a* [TAB]\r\n➜  /tmp ls a aa aaa\r\n```\r\n\r\n**Question**\r\n\r\nIs it possible to disable this expansion, so it acts like Bash, where tabbing would list the files that match?\r\n\r\n",
        "labels": "Support",
        "id": 44032
    },
    {
        "title": "How to change order options of auto correction prompt?",
        "body": "Currently zsh prompt as follows when typo in  command\r\n\r\n```\r\nzsh: correct 'sl' to 'ls' [nyae]?\r\n```\r\n\r\nis that possible to change the order to `[ynae]` so when I press enter it will be executed.",
        "labels": "Support",
        "id": 44033
    },
    {
        "title": "After update message \"tput: unknown terminal \"true\" and tmux not work",
        "body": "Received the update and immediately installed it. I use xterm\r\nFedora 31, tmux. Tmux is no longer able to create splits and windows.\r\n\r\nWhen launching terminals, this message \"tput: unknown terminal \"true\"\r\n\r\n**System:**\r\n - OS: Fedora 31 x64\r\n - Zsh version 5.7.1 (x86_64-redhat-linux-gnu)\r\n - Terminal emulator xterm",
        "labels": "Support",
        "id": 44034
    },
    {
        "title": "Not able to install ohmyzsh as urls return 404 Not Found",
        "body": "No matter if I execute \r\n\r\n```sh -c \"$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"```\r\n\r\nor \r\n\r\n```sh -c \"$(wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)\"``` \r\n\r\nI will receive a certification error. If I bypass certificates using:\r\n\r\n```sh -c \"$(curl -k -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"```\r\n\r\nI receive a `404 NOT FOUND\r\n\r\nUsing this other url:\r\n\r\n```sh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"```\r\n\r\ngives the same result.",
        "labels": "Support",
        "id": 44035
    },
    {
        "title": "Cannot login after install ZSH and OH My ZSH",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n<!-- A clear and concise description of what the bug is. -->\r\nafter installing zsh and oh my zsh on a remote server, I exit the server to see if I have already set zsh as default ( because when installing oh-my-zsh, I made the following choice: Do you want to change your default shell to zsh? [Y/n] Y ). However, I cannot login agin.\r\n\r\nI'm the root user of the server, and there's no other user.\r\nI'm 100% sure that the user name and the password is right, but after type in the password, it says \"permission denied\"\r\nI set the ssh-key for both my Windows system and a Ubuntu sub system, but none of them can be recongnized. \r\n\r\nIt's kinda annoying and I don't know what to do. I've read the issue saying that add command after the ssh login line, but without the permission to login, I can do barely nothing.\r\n\r\n\r\n**To Reproduce**\r\n<!--\r\nSteps to reproduce the behavior:\r\n1. Enable plugin '...'\r\n2. Run command '...', _or_ try to complete command '...', _etc._\r\n3. See error\r\n-->\r\nInstall OH-my-zsh and exit\r\n\r\n**Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\ni think i should be able to login again\r\n\r\n**Screenshots or recordings**\r\n<!--\r\nIf applicable, add screenshots or record an asciinema session (https://asciinema.org/)\r\nto help explain your problem.\r\n-->\r\nit's what i received for ssh -v login:\r\n```\r\nOpenSSH_7.5p1, OpenSSL 1.0.2o  27 Mar 2018\r\ndebug1: Reading configuration data /etc/ssh_config\r\ndebug1: /etc/ssh_config line 13: Deprecated option \"useroaming\"\r\ndebug1: Connecting to xxxx port 22.\r\ndebug1: Connection established.\r\ndebug1: key_load_public: No such file or directory\r\ndebug1: identity file /home/mobaxterm/.ssh/id_rsa type -1\r\ndebug1: key_load_public: No such file or directory\r\ndebug1: identity file /home/mobaxterm/.ssh/id_rsa-cert type -1\r\ndebug1: key_load_public: No such file or directory\r\ndebug1: identity file /home/mobaxterm/.ssh/id_dsa type -1\r\ndebug1: key_load_public: No such file or directory\r\ndebug1: identity file /home/mobaxterm/.ssh/id_dsa-cert type -1\r\ndebug1: key_load_public: No such file or directory\r\ndebug1: identity file /home/mobaxterm/.ssh/id_ecdsa type -1\r\ndebug1: key_load_public: No such file or directory\r\ndebug1: identity file /home/mobaxterm/.ssh/id_ecdsa-cert type -1\r\ndebug1: key_load_public: No such file or directory\r\ndebug1: identity file /home/mobaxterm/.ssh/id_ed25519 type -1\r\ndebug1: key_load_public: No such file or directory\r\ndebug1: identity file /home/mobaxterm/.ssh/id_ed25519-cert type -1\r\ndebug1: Enabling compatibility mode for protocol 2.0\r\ndebug1: Local version string SSH-2.0-OpenSSH_7.5\r\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_7.2p2 Ubuntu-4ubuntu2.8\r\ndebug1: match: OpenSSH_7.2p2 Ubuntu-4ubuntu2.8 pat OpenSSH* compat 0x04000000\r\ndebug1: Authenticating to xxx as 'root'\r\ndebug1: SSH2_MSG_KEXINIT sent\r\ndebug1: SSH2_MSG_KEXINIT received\r\ndebug1: kex: algorithm: curve25519-sha256@libssh.org\r\ndebug1: kex: host key algorithm: ssh-rsa\r\ndebug1: kex: server->client cipher: aes128-ctr MAC: hmac-sha1 compression: zlib@openssh.com\r\ndebug1: kex: client->server cipher: aes128-ctr MAC: hmac-sha1 compression: zlib@openssh.com\r\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\r\ndebug1: Server host key: xxx\r\ndebug1: Host xxx is known and matches the RSA host key.\r\ndebug1: Found key in /home/mobaxterm/.ssh/known_hosts:5\r\ndebug1: rekey after 4294967296 blocks\r\ndebug1: SSH2_MSG_NEWKEYS sent\r\ndebug1: expecting SSH2_MSG_NEWKEYS\r\ndebug1: SSH2_MSG_NEWKEYS received\r\ndebug1: rekey after 4294967296 blocks\r\ndebug1: SSH2_MSG_EXT_INFO received\r\ndebug1: kex_input_ext_info: server-sig-algs=<rsa-sha2-256,rsa-sha2-512>\r\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\r\ndebug1: Authentications that can continue: publickey,password\r\ndebug1: Next authentication method: publickey\r\ndebug1: Trying private key: /home/mobaxterm/.ssh/id_rsa\r\ndebug1: Trying private key: /home/mobaxterm/.ssh/id_dsa\r\ndebug1: Trying private key: /home/mobaxterm/.ssh/id_ecdsa\r\ndebug1: Trying private key: /home/mobaxterm/.ssh/id_ed25519\r\ndebug1: Next authentication method: password\r\ndebug1: Authentications that can continue: publickey,password\r\n```\r\n\r\n**System:**\r\n - OS: [e.g. Ubuntu16.04]\r\n - Zsh version [e.g. 5.6]\r\n - Terminal emulator [e.g. iTerm2]\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n",
        "labels": "Support",
        "id": 44036
    },
    {
        "title": "What's wrong with my zsh script?",
        "body": "Sorry, this is not a oh-my-zsh issue, but zsh question. while I haven't find a good place to ask about zsh.\r\nI believe all of you are experts here.\r\n\r\nI am migrating from bash to zsh. One of the difficulty I met is this script, could anyone help me with this script?\r\n````\r\nTARGET=files.proj.bak\r\nPRUNE_FILE=prunefile.conf\r\n\r\ncomm -23 <(sort files.proj.bak) <(sort prunefile.conf)\r\n\r\n````\r\nin bash it runs well, but in zsh, I got following error in zsh:\r\n````\r\n/Users/admin/Dropbox/loadrc.home/bashrc/cscope.sh: line 4: syntax error near unexpected token `('\r\n/Users/admin/Dropbox/loadrc.home/bashrc/cscope.sh: line 4: `comm -23 <(sort files.proj.bak) <(sort prunefile.conf)'\r\n````\r\n",
        "labels": "Support",
        "id": 44037
    },
    {
        "title": "nearly no theme working",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nAfter installing oh-my-zsh and selecting pretty much any theme I can not see any changes to the prompt.\r\nWhat perplexes me is that I've installed oh-my-zsh after switching to zsh from fish on 3 different machines, 2 of those worked as expected. The only relevant (I think) difference is, that the machine where it's not working is running endeavourOS, the other two are running manjaro,\r\n\r\nWhat's even funnier to me is that after some digging I found the theme selector in the tools folder and decided to try it out... the themes are displayed correctly in the preview (it's not simply showing some sort of picture, is it?)\r\n\r\nSo yeah, kinda helpless here, any ideas?\r\n\r\n**Expected behavior**\r\nThe themes should be applied\r\n\r\n**Screenshots or recordings**\r\n![image](https://user-images.githubusercontent.com/10255566/68518541-a54a2c00-028c-11ea-96af-39aaa445c03c.png)\r\nAs you can see my font supports the necessary glyphs but the prompt never changes except for when I select the \"linuxonly\" theme which also looks nothing like the screenshot on the wiki page.\r\n(this should show the agnoster theme)\r\n\r\n**System:**\r\n - OS: endeavourOs\r\n - Zsh version: zsh 5.7.1 (x86_64-pc-linux-gnu\r\n - Terminal emulator: termite\r\n",
        "labels": "Support",
        "id": 44038
    },
    {
        "title": "ls Alias issues ",
        "body": "I set an alias function in my .zshrc. It was set at the end of the file after `source $ZSH/oh-my-zsh.sh` in the custom configuration section. When I open a new terminal it gives me the error:\r\n\r\n```\r\nUsers/brandon/.zshrc:212: defining function based on alias `ls'\r\n/Users/brandon/.zshrc:212: parse error near `()'\r\n```\r\nThe alias function I added. \r\n```\r\nls() {\r\n  colorls --report --gs --sd $1 $2\r\n}\r\n```\r\nI have tried to follow the directions in [ls alias conflict ? #5783](https://github.com/robbyrussell/oh-my-zsh/issues/5783#issuecomment-275614664). However, I am either following it incorrectly, or it doesn't work. Additionally I have tried creating `~/.oh-my-zsh/custom/aliases.zsh` and adding it there, but unfortnutately I can't get it to work with out commenting out `ls -G . &>/dev/null && alias ls='ls -G' ` in `/Users/brandon/.oh-my-zsh/lib/theme-and-appearance.zsh`. It's not the end of the world or anything, just looking to use the preferred method. \r\n\r\nmacOS 10.15.1 (19B88)\r\niTerm Build 3.3.6\r\n\r\n",
        "labels": "Support",
        "id": 44039
    },
    {
        "title": "git-flow autocompletions question",
        "body": "Hi. I've found the git-flow autocompletions plugin (https://github.com/bobthecow/git-flow-completion) for oh-my-zsh. \r\nAs to my understanding, it just adds a couple of aliases to my shell. \r\n\r\nWhat I actually have been looking for is some kind of plugin which would autocomplete words for me while I type, so: `git flow fe` + TAB would be completed into `git flow feature`. Is there anything like that available?",
        "labels": "Support",
        "id": 44040
    },
    {
        "title": "Uninstall oh-my-zsh",
        "body": "When I open the terminal when I delete it, I see this article.\r\n\"/Users/furkanyorulmaz/.zshrc:source:73: no such file or directory: /Users/furkanyorulmaz/.oh-my-zsh/oh-my-zsh.sh\" \r\nhow do I make this post disappear? Thank you!",
        "labels": "Support",
        "id": 44041
    },
    {
        "title": "Uninstall zsh/Oh My Zsh",
        "body": "<!--\r\n1. Look for similar issues already posted (including closed ones)\r\n2. Include as much relevant information as possible\r\n3. Try to make sure the issue is due to Oh My Zsh\r\n-->\r\nI tried to uninstall zsh for delay reason. But when I open my ubuntu terminal (installed using WSL [windows 10]), it closes immediately right after I open it. What is happening? I guess I messed up on changing the default shell? Please help.",
        "labels": "Support",
        "id": 44042
    },
    {
        "title": "I get this error: omz_history:fc:13: no such event: 1",
        "body": "This is a new install on a brand new AWS CentOS.\r\n\r\nUpon logging in to the system, I get this error.\r\n\r\nI have done a search and there are a few posts and some old bugs dating a few years back but I can't find anything 'modern' about it. There were some discussions about fc being an alias, but again, these are old discussions, so I would assume whatever the problem was, it must have been sorted out.\r\n\r\nI have no clue where this comes from.\r\n\r\nHow can I troubleshoot this?\r\n",
        "labels": "Support",
        "id": 44043
    },
    {
        "title": "Agnoster not properly displaying on tmux",
        "body": "While I switch to tmux , my agnoster looks like this\r\n![image](https://user-images.githubusercontent.com/38097025/68267851-d43c8400-0079-11ea-9fe6-17a6b9668653.png)\r\n\r\nbut all this is perfect in normal terminal like shown below\r\n\r\n![image](https://user-images.githubusercontent.com/38097025/68267872-e9191780-0079-11ea-8f1f-668e2b7eb07a.png)\r\n\r\nIs there any way to make it look proper in tmux session too , I have added the tmux plugin too , but still this problem occurs",
        "labels": "Support",
        "id": 44044
    },
    {
        "title": "How to disable fuzzy tab completion?",
        "body": "If I do this\r\n\r\n    mkdir /tmp/test\r\n    cd /tmp/test\r\n    touch config\r\n    ls on[tab]\r\n\r\nthen Oh My ZSH will replace `on` with `config` which I don't want.\r\n\r\nI have tried to `rm $ZSH/plugins/fzf` which didn't work, and it seams wrong to edit the source for OhMyZSH, which also would result in I having to redo it when updating OhMyZSH.\r\n\r\n**Question**\r\n\r\nHow can I disable this fuzzy file completion?\r\n",
        "labels": "Support",
        "id": 44045
    },
    {
        "title": "odd characters after prompt with iterm2 + powerlevel10k theme",
        "body": "i've setup powerline fonts with powerline10k theme. \r\n\r\ni seem these chars on dirty git branches: \r\n\r\n```\r\n~/dev/my_folder  my_branch_name ⇡23 *1 \r\n```\r\n\r\nnot sure if this is an issue with config, wrong font version, wrong theme or something else. \r\n\r\n`.zshrc`:\r\n```\r\nZSH_THEME=\"powerlevel10k/powerlevel10k\"\r\nPOWERLEVEL9K_MODE=\"awesome-patched\"\r\n[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh\r\n```\r\n\r\ni tried a few powerline fonts.. including MesloGS NF, and SourcePro for PowerLine but no luck \r\n\r\n![image](https://user-images.githubusercontent.com/843437/68088489-cb577280-fe2d-11e9-9a4d-ac8f8b373c27.png)\r\n\r\n![image](https://user-images.githubusercontent.com/843437/68088527-1a050c80-fe2e-11e9-82ff-9e9c0423636e.png)\r\n\r\n",
        "labels": "Support",
        "id": 44046
    },
    {
        "title": "oh-my-zsh not being displayed properly on UXterm",
        "body": "I'm currently using a brand new Arch Linux installation with i3 as window manager and UXterm as my default terminal. As you can see, oh-my-zsh is not being displayed as should it:\r\n\r\n![image](https://user-images.githubusercontent.com/15036437/68074493-4fe8b900-fd7a-11e9-8163-b6875781da1a.png)\r\n\r\nThis is the content of my `.zshrc` file:\r\n\r\n```\r\n# Created by newuser for 5.7.1\r\nautoload -Uz compinit prompinit\r\n\r\n# startx on boot\r\nif systemctl -q is-active graphical.target && [[ ! $DISPLAY && $XDG_VTNR -eq 1 ]]; then\r\n\texec startx\r\nfi\r\n\r\n# If not running interactively, don't do anything\r\n[[ $- != *i* ]] && return\r\n\r\nalias ls='ls --color=auto'\r\nPS1='[\\u@\\h \\W]\\$ '\r\n\r\npowerline-daemon -q\r\n. /usr/lib/python3.7/site-packages/powerline/bindings/zsh/powerline.zsh\r\n\r\n# Load UXTerm\r\nxrdb -merge ~/.UXresources\r\n\r\n# Set opacity\r\n[ -n \"$XTERM_VERSION\" ] && transset-df --id \"$WINDOWID\" 0.9 >/dev/null\r\n\r\n# Path to your oh-my-zsh installation.\r\nZSH=/usr/share/oh-my-zsh/\r\n\r\nexport DEFAULT_USER=\"olegario\"\r\nexport TERM=\"xterm-256color\"\r\nexport ZSH=/usr/share/oh-my-zsh\r\n\r\nPOWERLEVEL9K_MODE=\"nerdfont-complete\"\r\nsource $ZSH/themes/powerlevel9k/powerlevel9k.zsh-theme\r\n\r\nPOWERLEVEL9K_FOLDER_ICON=\"\"\r\nPOWERLEVEL9K_HOME_SUB_ICON=\"$(print_icon \"HOME_ICON\")\"\r\nPOWERLEVEL9K_DIR_PATH_SEPARATOR=\" $(print_icon \"LEFT_SUBSEGMENT_SEPARATOR\") \"\r\n\r\nPOWERLEVEL9K_COMMAND_EXECUTION_TIME_THRESHOLD=0\r\n\r\nPOWERLEVEL9K_DIR_OMIT_FIRST_CHARACTER=true\r\n\r\nPOWERLEVEL9K_BACKGROUND_JOBS_FOREGROUND='black'\r\nPOWERLEVEL9K_BACKGROUND_JOBS_BACKGROUND='178'\r\nPOWERLEVEL9K_NVM_BACKGROUND=\"238\"\r\nPOWERLEVEL9K_NVM_FOREGROUND=\"green\"\r\nPOWERLEVEL9K_CONTEXT_DEFAULT_FOREGROUND=\"blue\"\r\nPOWERLEVEL9K_DIR_WRITABLE_FORBIDDEN_FOREGROUND=\"015\"\r\n\r\nPOWERLEVEL9K_TIME_BACKGROUND='255'\r\n#POWERLEVEL9K_COMMAND_TIME_FOREGROUND='gray'\r\nPOWERLEVEL9K_COMMAND_EXECUTION_TIME_BACKGROUND='245'\r\nPOWERLEVEL9K_COMMAND_EXECUTION_TIME_FOREGROUND='black'\r\n\r\nPOWERLEVEL9K_TIME_FORMAT=\"%D{%H:%M}\"\r\nPOWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(root_indicator context dir dir_writable vcs)\r\nPOWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status background_jobs command_execution_time time)\r\nPOWERLEVEL9K_SHOW_CHANGESET=true\r\n\r\nHYPHEN_INSENSITIVE=\"true\"\r\nCOMPLETION_WAITING_DOTS=\"true\"\r\n# /!\\ do not use with zsh-autosuggestions\r\n\r\nplugins=(\r\n archlinux\r\n asdf\r\n autojump\r\n bundler\r\n colored-man-pages\r\n colorize\r\n command-not-found\r\n cp\r\n dirhistory\r\n docker\r\n git\r\n gitfast\r\n jsontools\r\n k\r\n pip\r\n python\r\n sudo\r\n tig\r\n vscode\r\n web-search\r\n yarn\r\n zsh-autosuggestions\r\n zsh-syntax-highlighting\r\n)\r\n# /!\\ zsh-syntax-highlighting and then zsh-autosuggestions must be at the end\r\n\r\nsource $ZSH/oh-my-zsh.sh\r\n\r\nZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern cursor)\r\ntypeset -gA ZSH_HIGHLIGHT_STYLES\r\nZSH_HIGHLIGHT_STYLES[cursor]='bold'\r\n\r\nZSH_HIGHLIGHT_STYLES[alias]='fg=green,bold'\r\nZSH_HIGHLIGHT_STYLES[suffix-alias]='fg=green,bold'\r\nZSH_HIGHLIGHT_STYLES[builtin]='fg=green,bold'\r\nZSH_HIGHLIGHT_STYLES[function]='fg=green,bold'\r\nZSH_HIGHLIGHT_STYLES[command]='fg=green,bold'\r\nZSH_HIGHLIGHT_STYLES[precommand]='fg=green,bold'\r\nZSH_HIGHLIGHT_STYLES[hashed-command]='fg=green,bold'\r\n\r\nrule () {\r\n print -Pn '%F{blue}'\r\n local columns=$(tput cols)\r\n for ((i=1; i<=columns; i++)); do\r\n    printf \"\\u2588\"\r\n done\r\n print -P '%f'\r\n}\r\n\r\nfunction _my_clear() {\r\n echo\r\n rule\r\n zle clear-screen\r\n}\r\nzle -N _my_clear\r\nbindkey '^l' _my_clear\r\n\r\n# Ctrl-O opens zsh at the current location, and on exit, cd into ranger's last location.\r\nranger-cd() {\r\n tempfile=$(mktemp)\r\n ranger --choosedir=\"$tempfile\" \"${@:-$(pwd)}\" < $TTY\r\n test -f \"$tempfile\" &&\r\n if [ \"$(cat -- \"$tempfile\")\" != \"$(echo -n `pwd`)\" ]; then\r\n cd -- \"$(cat \"$tempfile\")\"\r\n fi\r\n rm -f -- \"$tempfile\"\r\n # hacky way of transferring over previous command and updating the screen\r\n VISUAL=true zle edit-command-line\r\n}\r\nzle -N ranger-cd\r\nbindkey '^o' ranger-cd\r\n\r\n# Uncomment the following line to disable bi-weekly auto-update checks.\r\nDISABLE_AUTO_UPDATE=\"true\"\r\n\r\nZSH_CACHE_DIR=$HOME/.cache/oh-my-zsh\r\nif [[ ! -d $ZSH_CACHE_DIR ]]; then\r\n  mkdir $ZSH_CACHE_DIR\r\nfi\r\n\r\n# Load aliases\r\nsource ~/.aliases\r\n\r\nexport NVM_DIR=\"$HOME/.nvm\"\r\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm\r\n[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\r\n```\r\nHow can I get a installation that looks like this? \r\n![image](https://cdn-media-1.freecodecamp.org/images/1*REqZX2_JqQjbH9Ly3QsgLg.png)\r\n",
        "labels": "Support",
        "id": 44047
    },
    {
        "title": "dpkg was interrupted, you must manually run 'sudo dpkg --configure -a' to correct the problem",
        "body": "<!--\r\n1. Look for similar issues already posted (including closed ones)\r\n2. Include as much relevant information as possible\r\n3. Try to make sure the issue is due to Oh My Zsh\r\n-->\r\n",
        "labels": "Support",
        "id": 44048
    },
    {
        "title": "Permission Denied",
        "body": "I keep getting the error:\r\nzsh: permission denied: /Users/**myname**/.zshrc\r\n\r\nwhen i try to use ~/.zshrc",
        "labels": "Support",
        "id": 44049
    },
    {
        "title": "Error connecting to agent: Connection refused",
        "body": "Hello, I started to get `Error connecting to agent: Connection refused` when I launch my terminal.\r\n\r\n![image](https://user-images.githubusercontent.com/400362/67861528-0d7c6d80-fb29-11e9-8312-27a3d806fef6.png)\r\n\r\nIf I remove the line `zstyle :omz:plugins:ssh-agent agent-forwarding on` I stop getting the error but I'm getting prompted to enter the passphrase of the identities.\r\n\r\n```\r\n$ ssh-agent -l\r\nlaunch_activate_socket(): No such process\r\n\r\n$ ssh-add -L\r\nError connecting to agent: Connection refused\r\n\r\n$ env | fgrep SSH_AUTH_SOCK\r\nSSH_AUTH_SOCK=/Users/panosru/.gnupg/S.gpg-agent.ssh\r\n```\r\n\r\nI have to manually run `eval \"$(ssh-agent)\"` in order to get ssh commands to work even though I have `ssh-agent` in my zsh plugins...\r\n\r\nAny idea why this happening?\r\n\r\nThanks!",
        "labels": "Support",
        "id": 44050
    },
    {
        "title": "error occure while using command read -p:read: -p: no coprocess",
        "body": "\r\n**Describe the bug**\r\nerror occure while input shell commands below:\r\n➜ read -p \"test \"\r\n![截屏2019-10-29上午10 40 05](https://user-images.githubusercontent.com/12193140/67733162-7a640a80-fa38-11e9-9b44-52185601be14.png)\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. zsh\r\n2. Run command read -p \"test\"\r\n3. See error\r\n\r\n\r\n**Expected behavior**\r\nno error\r\n\r\n**Screenshots or recordings**\r\n\r\n\r\n![Jietu20191029-105028](https://user-images.githubusercontent.com/12193140/67733993-db8cdd80-fa3a-11e9-9229-aa029d8be72f.gif)\r\n\r\n**System:**\r\n - OS: macOS\r\n - Zsh version :zsh 5.7.1 (x86_64-apple-darwin19.0)\r\n - Terminal emulator [e.g. iTerm2]\r\n\r\n**Additional context**\r\n",
        "labels": "Support",
        "id": 44051
    },
    {
        "title": "Autocompletion Error from Seemingly Non-existant File",
        "body": "<!--\r\n1. Look for similar issues already posted (including closed ones)\r\n2. Include as much relevant information as possible\r\n3. Try to make sure the issue is due to Oh My Zsh\r\n-->\r\n\r\nI've been trying to set up [this](https://github.com/CuberL/tb-zsh-completion/blob/master/_tb.sh) autocompletion for taskbook and I'm running into a weird issue. I ran `wget https://raw.githubusercontent.com/CuberL/tb-zsh-completion/master/_tb.sh -O /usr/local/share/zsh-completions/_tb` to install it, restarted my shell and thought I'd be good.\r\n\r\nWhenever I type `tb` and hit `<TAB>`, I get this:\r\n\r\n```bash\r\n$ tb (eval):1: command not found: _tb.sh\r\n(eval):1: command not found: _tb.sh\r\n(eval):1: command not found: _tb.sh\r\n```\r\n\r\nSo, I removed the script I put in `/usr/local/share/zsh-completions` but the issue still persists. I removed all the zcompdump files with `rm ~/.zcompdump*`, restarted my shell, and still have the problem.\r\n\r\nI wrote this quick shell script to make sure I didn't have a stray copy of some tb completion script in `fpath`, and I do not.\r\n\r\n```bash\r\n$ for entry in `echo $fpath`\r\ndo\r\n        (echo \"-> $entry\" && cd $entry && fd tb)\r\ndone\r\n-> /Users/alichtman/.oh-my-zsh/custom/plugins/zsh-completions\r\n-> /Users/alichtman/.oh-my-zsh/custom/plugins/zsh-autosuggestions\r\nRequired ruby-2.3.1 is not installed.\r\nTo install do: 'rvm install \"ruby-2.3.1\"'\r\n-> /Users/alichtman/.oh-my-zsh/plugins/ssh-agent\r\n-> /Users/alichtman/.oh-my-zsh/plugins/tmux\r\n-> /Users/alichtman/.oh-my-zsh/plugins/git\r\n-> /Users/alichtman/.oh-my-zsh/plugins/fzf\r\n-> /Users/alichtman/.oh-my-zsh/functions\r\n-> /Users/alichtman/.oh-my-zsh/completions\r\n-> /usr/local/share/zsh-completions\r\n-> /usr/local/share/zsh/site-functions\r\n-> /Users/alichtman/.zplug/misc/completions\r\n-> /Users/alichtman/.zplug/base/sources\r\nbitbucket.zsh\r\n-> /Users/alichtman/.zplug/autoload\r\n-> /Users/alichtman/.zplug/base/utils\r\n-> /Users/alichtman/.zplug/base/job\r\n-> /Users/alichtman/.zplug/base/log\r\n-> /Users/alichtman/.zplug/base/io\r\n-> /Users/alichtman/.zplug/base/core\r\n-> /Users/alichtman/.zplug/base/base\r\n-> /Users/alichtman/.zplug/autoload/commands\r\n-> /Users/alichtman/.zplug/autoload/options\r\n-> /Users/alichtman/.zplug/autoload/tags\r\n-> /usr/local/Cellar/zsh/5.7.1/share/zsh/functions\r\n-> /Users/alichtman/.oh-my-zsh/custom/plugins/zsh-completions/src\r\n```\r\n\r\nI'm out of ideas at this point. Any help would be appreciated.\r\n\r\nHere's the [output of `omz_diagnostic_dump`](https://gist.github.com/alichtman/a2b53c2adb9e56b8b1673652c2f818de).\r\n",
        "labels": "Support",
        "id": 44052
    },
    {
        "title": "Character not in range in ssh session",
        "body": "Ive installed oh-my-zsh into /usr/share on my server(ubuntu 18.04 fresh) and set zsh as my default shell from my user alf. But when i log into my server i get an character out of range on my ssh client (android-termux). If i type issue sudo su , everything is fine and works.\n\n I noticed it may have some connections to the theme im using... \nI changed from default to agnoster. Then the issues was shown. ive changed back to default and everything is fine.\n\nAs the theme is working in root shell why wont this work in a unprivileged shell?\n\n",
        "labels": "Support",
        "id": 44053
    },
    {
        "title": "Permission denied when accessing .zshrc",
        "body": "I saw a similar [issue](https://github.com/robbyrussell/oh-my-zsh/issues/3291) closed but he complainant got a different result from mine when he entered the `ls -l $HOME/.zshrc` command.\r\n\r\nThis is the message I got when I entered that command:\r\n`-rw-r--r--@ 1 ekanemeno  staff  3571 Oct 26 09:50 /Users/ekanemeno/.zshrc`\r\n\r\nWhat is `staff`? and can that be the issue why I'm getting my permission denied?\r\n\r\nMy specs:\r\nLaptop: Macbook Pro\r\nTerminal: Hyper.is\r\n\r\n",
        "labels": "Support",
        "id": 44054
    },
    {
        "title": "cd + tab doesn't work",
        "body": "I am using zsh under ubuntu 18.04 ( zsh 5.4.2 (x86_64-ubuntu-linux-gnu)\r\nAfter updating to the latest version, whenever using \"cd + tab\" i.e. cd Docu + tabl, \r\nI got this error\r\n\r\n```\r\n_tags:comptags:36: nesting level too deep\r\n_tags:comptry:51: no tags registered\r\n_tags:comptry:51: no tags registered\r\n_tags:comptry:51: no tags registered\r\n_tags:comptry:55: no tags registered\r\n_tags:comptags:60: nesting level too deep\r\n_tags:comptags:67: nesting level too deep\r\n_tags:comptags:36: nesting level too deep\r\n_tags:comptry:51: no tags registered\r\n_tags:comptry:51: no tags registered\r\n_tags:comptry:51: no tags registered\r\n_tags:comptry:55: no tags registered\r\n_tags:comptags:60: nesting level too deep\r\n_tags:comptags:67: nesting level too deep\r\n_tags:comptags:36: nesting level too deep\r\n_tags:comptry:51: no tags registered\r\n_tags:comptry:51: no tags registered\r\n_tags:comptry:51: no tags registered\r\n_tags:comptry:55: no tags registered\r\n_tags:comptags:60: nesting level too deep\r\n_tags:comptags:67: nesting level too deep\r\n```\r\n\r\nChecked that bash is okay. So I wonder whether the error comes from zsh.\r\nThanks!\r\n",
        "labels": "Support",
        "id": 44055
    },
    {
        "title": "SSL Certificate Problem",
        "body": "I am trying to install oh-my-zsh to my new NetBSD system after install git, zsh, curl and wget.\r\nWhen I put `sh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"` then error is: `curl: (60) SSL certificate problem: unable to get local issuer certificate More details here: https://curl.haxx.se/docs/sslcerts.html`\r\nThen I put -k parameter to suppress ssl problem for curl but then the new error while cloning is: `fatal: unable to access 'https://github.com/robbyrussell/oh-my-zsh.git/' : SSL certificate problem: unable to get local issuer certificate `",
        "labels": "Support",
        "id": 44056
    },
    {
        "title": "Autocomplete doesn't update when new apt is installed or removed",
        "body": "**Describe the bug**\r\nWhen an apt is added, the terminal doesn't update the autocomplete to check for the new command (it's ZSH only, because i tried bash and it works fine)\r\n\r\n**To Reproduce**\r\nI will use the package `colortest` as an example:\r\n\r\n1. Install the package (`sudo apt install colortest`)\r\n2. type `colorte` and Hit `TAB`. It should show `colortest-16, colortest-256`, etc, but it doesn't show nothing.\r\n3. Close the terminal and open an new one and repeat STEP 2. Now it will work\r\n4. Remove the package (`sudo apt purge colortest`)\r\n5. Repeat the STEP 2. It will autocomplete the command, even with the package removed.\r\n6. Repeat STEP 3, now it won't autocomplete the removed package. \r\n\r\n**Expected behavior**\r\nIt should update the autocomplete when packages are added and removed\r\n\r\n**System:**\r\n - OS: Deepin 15.11 (Debian based)\r\n - zsh Version 5.3.1 (x86_64-debian-linux-gnu)\r\n - Terminal emulator Deepin Terminal V3.2.7.1",
        "labels": "Support",
        "id": 44057
    },
    {
        "title": "How to start showing git branch only while in repository's root",
        "body": "As far as I understand, it's core of `oh-my-zsh` (not `git` plugin) which showing current git branch as part of terminal prompt? \r\n\r\nI want to change this behavior and see branch in prompt only while current directory is repository's root (has `.git` folder). When I'll go deeper in folder structrure I want more shorter prompt.\r\n\r\nHow can I achieve this? Can I override something and not break oh-my-zsh update mechanism?",
        "labels": "Support",
        "id": 44058
    },
    {
        "title": "Custom path for a theme?",
        "body": "Is there any way to do it?\r\n\r\nfor example:\r\n`ZSH_THEME=\"~/dotfiles/zsh/themes/themenamehere\"`\r\n",
        "labels": "Support",
        "id": 44059
    },
    {
        "title": "macOs Catalina",
        "body": "Before updating to macOS Catalina, oh-my-zsh was working fine.\r\n\r\nafter that, when a user opens terminal is asking zsh password and receiving an error because is su command and not sudo.\r\n\r\nuser receives this msg all the time on the terminal.\r\nhow could we fix that?\r\n\r\n#7956",
        "labels": "Support",
        "id": 44060
    },
    {
        "title": "cannot move '10-powerline-symbols.conf' How i can FIX it!!!",
        "body": "I use on Termux in android i type a patch install and i stuck  at 10-powerline-symbols.conf file Help me plss!\r\n![Screenshot_20191019_113155](https://user-images.githubusercontent.com/43487032/67137771-a4f9da80-f264-11e9-86c4-979404309d3e.png)\r\n",
        "labels": "Support",
        "id": 44061
    },
    {
        "title": "zsh: /etc/profile:35: no matches found: tty[1-6]",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n![image](https://user-images.githubusercontent.com/10652829/67057388-e1eda080-f182-11e9-9514-9d52c8153e72.png)\r\n\r\n**To Reproduce**\r\n<!--\r\nSteps to reproduce the behavior:\r\n1. Enable plugin '...'\r\n2. Run command '...', _or_ try to complete command '...', _etc._\r\n3. See error\r\n-->\r\n\r\n**Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n**Screenshots or recordings**\r\n<!--\r\nIf applicable, add screenshots or record an asciinema session (https://asciinema.org/)\r\nto help explain your problem.\r\n-->\r\n\r\n**System:**\r\n - OS: [e.g. deepin 15.11]\r\n - Zsh version [e.g. zsh 5.5.1 (x86_64-debian-linux-gnu)]\r\n - Terminal emulator [e.g. deepin terminal]\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n",
        "labels": "Support",
        "id": 44062
    },
    {
        "title": "Themes not working properly in iTerm2 on MacOS Catalina (10.15)",
        "body": "I tried to switch theme to agnoster and it looks far from what I see on the wiki page:\r\n\r\n![image](https://user-images.githubusercontent.com/30633152/66998574-c75cee00-f0d4-11e9-8d2b-814af9599120.png)\r\n\r\nTo remedy this, I tried reinstalling oh-my-zsh, installing powerline fonts (even manually adding the fontconfig, as per https://github.com/powerline/fonts#fontconfig) but these things have not done the trick.\r\n\r\nWhat might be the problem here?\r\n\r\nBonus question: Is there any plugin for oh-my-zsh that supports changing themes on-the-fly when starting an ssh connection and again, when that session is exited?\r\n\r\nEdit: Forgot to include my zsh version,so here it is: zsh 5.7.1 (x86_64-apple-darwin19.0)",
        "labels": "Support",
        "id": 44063
    },
    {
        "title": "Get 'main \"$@\": Invalid host name.' when I install oh-my-zsh",
        "body": "environment:\r\n    centos7\r\n\r\nI try install oh-my-zsh by:\r\n\r\n`wget sh -c \"$(wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)\"`\r\n\r\nbut got an error: \"$@\": Invalid host name.' .\r\n\r\nAnd I couldn't jump to first letter by `ctrl+a` after it.\r\n\r\nI have changed my hostname by `hostnamectl set-hostname new_host_name` command.  Is that what caused this incident? But I forgot the host name before.\r\n\r\nNeed you help, thank you first.",
        "labels": "Support",
        "id": 44064
    },
    {
        "title": "Terminal appends instead of updating individual lines",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\nSome commands that update a single line of output in bash (like a progress indicator, for example) end up appending new lines for every update in oh-my-zsh. This happen for *some*, but not all scripts.\r\n\r\n`yarn install` is an example of a script that updates a line as expected.\r\n\r\n`docker-compose up` is an example of a script that updates lines, but only the bottom line updates in the terminal. The output behaves like this:\r\n\r\n```bash\r\nStarting app-api ... \r\nStarting app-report ... \r\nStarting app-search ... \r\nStarting app-api # this line is duplicated?\r\nStarting app-search api # this line is duplicated?\r\nStarting app-elasticsearch ... \r\nStarting app-redis ... \r\nStarting app-report api # this line is duplicated?\r\nStarting app-elasticsearch api # this line is duplicated?\r\nStarting app-elasticsearch2 ... \r\nStarting app-elasticsearch2 api # this line is duplicated?\r\nStarting app-search ... done api # this is the only line that actually changes in the terminal output\r\n```\r\n\r\n**To Reproduce**\r\n<!--\r\nSteps to reproduce the behavior:\r\n1. Run a command that updates one or more lines in-place in the terminal. `docker-compose up` on a project with multiple containers is a good example, but I've also seen it happen for webpack builds, etc.\r\n2. Observe that the output lines aren't updated the same way as they are in a bash terminal\r\n-->\r\n\r\n**Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\nIn the docker-compose example above, there should only be 5 lines:\r\n\r\n```bash\r\nStarting app-api ... \r\nStarting app-report ... \r\nStarting app-search ... \r\nStarting app-elasticsearch ... \r\nStarting app-redis ... \r\nStarting app-elasticsearch2 ... \r\n```\r\n...and each line should be updated in place with \"...\" and \"done\"\r\n\r\n**Screenshots or recordings**\r\n<!--\r\nIf applicable, add screenshots or record an asciinema session (https://asciinema.org/)\r\nto help explain your problem.\r\n-->\r\n\r\nHere's a snippet of output from a vue-cli webpack build, where every update printed a new line:\r\n\r\n```bash\r\n10% building 6/9 modules 3 active ...mmi/node_modules/webpack/hot/emitter.j\r\n10% building 6/10 modules 4 active ...les/webpack-dev-server/client/socket.\r\n10% building 6/11 modules 5 active ...es/webpack-dev-server/client/overlay.\r\n10% building 6/12 modules 6 active .../webpack-dev-server/client/utils/log.\r\n10% building 6/13 modules 7 active ...-dev-server/client/utils/sendMessage.\r\n10% building 6/14 modules 8 active ...ck-dev-server/client/utils/reloadApp.\r\n10% building 6/15 modules 9 active ...-server/client/utils/createSocketUrl.\r\n10% building 7/15 modules 8 active ...-server/client/utils/createSocketUrl.\r\n10% building 8/15 modules 7 active ...-server/client/utils/createSocketUrl. \r\n11% building 9/15 modules 6 active ...-server/client/utils/createSocketUrl.\r\n11% building 10/15 modules 5 active ...-server/client/utils/createSocketUrl\r\n11% building 11/15 modules 4 active ...-server/client/utils/createSocketUrl\r\n11% building 12/15 modules 3 active ...-server/client/utils/createSocketUrl\r\n11% building 13/15 modules 2 active ...-server/client/utils/createSocketUrl\r\n11% building 14/15 modules 1 active ...-server/client/utils/createSocketUrl \r\n11% building 15/16 modules 1 active ...v-server/client/clients/SockJSClient\r\n```\r\n\r\nI've seen this work as expected in oh-my-zsh, but it usually looks like the example above. I don't know what makes it work or not work.\r\n\r\n**System:**\r\n - OS: Ubuntu 18.04\r\n - Zsh version 5.4.2\r\n - Terminal emulator Tilix 1.1.7 - I've also seen this behavior in hyper.is, and on iterm2 on MacOS\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n\r\nThere's a pretty good chance this is a problem with zsh itself, and not specific to oh-my-zsh, but ",
        "labels": "Support",
        "id": 44065
    },
    {
        "title": "kubectl plugin does not start at boot terminal",
        "body": "kubectl plugin does not start when booting the terminal, I must run `source ~/.zshrc` to detect the plugin",
        "labels": "Support",
        "id": 44066
    },
    {
        "title": "Folders and files all display the same color",
        "body": "# 文件夹和文件都显示同一种颜色\r\n之前文件和文件夹可以是通过不同的颜色来区分，更新之后就不行了，文件夹和文件都是同一种颜色\r\n\r\n\r\n\r\n**System:**\r\n - OS: [macOS10.15]\r\n - Zsh version [最新]\r\n - Terminal emulator [iTerm2]\r\n\r\n",
        "labels": "Support",
        "id": 44067
    },
    {
        "title": "ssh-agent plugin - issue loading identities",
        "body": "Seems like the plugin is adding an extra `/` for some reason, as I'm getting the following each time I open a new terminal:\r\n\r\n`ssh-keygen: /Users/bschmidt/.ssh//Users/bschmidt/.ssh/id_rsa_work: No such file or directory\r\nssh-keygen: /Users/bschmidt/.ssh//Users/bschmidt/.ssh/id_rsa_work_github: No such file or directory\r\n/Users/bschmidt/.ssh//Users/bschmidt/.ssh/id_rsa_work: No such file or directory\r\n/Users/bschmidt/.ssh//Users/bschmidt/.ssh/id_rsa_work_github: No such file or directory`\r\n\r\nMy `.zshrc` contains the following:\r\n\r\n`plugins=(\r\n  zsh-completions\r\n  git\r\n  colored-man-pages\r\n  colorize\r\n  history\r\n  sbt\r\n  bundler\r\n  rake\r\n  rbenv\r\n  ssh-agent\r\n)\r\n\r\nzstyle :omz:plugins:ssh-agent agent-forwarding on\r\nzstyle :omz:plugins:ssh-agent identities ~/.ssh/id_rsa_work ~/.ssh/id_rsa_work_github\r\n\r\nsource $ZSH/oh-my-zsh.sh`\r\n\r\nRelevant part of debug logs:\r\n\r\n`_add_identities\r\n+/Users/bschmidt/.oh-my-zsh/plugins/ssh-agent/ssh-agent.plugin.zsh:78> _add_identities\r\n+_add_identities:1> local id line sig lines\r\n+_add_identities:2> local -a identities loaded_sigs loaded_ids not_loaded\r\n+_add_identities:3> zstyle -a :omz:plugins:ssh-agent identities identities\r\n+_add_identities:6> [[ ! -d /Users/bschmidt/.ssh ]]\r\n+_add_identities:12> [[ 2 -eq 0 ]]\r\n+_add_identities:21> lines=+_add_identities:21> ssh-add -l\r\n+_add_identities:21> lines=$'4096 SHA256:ppIhNeqcn7s8dTFQ6uqILwbje/duuuKLcPHBYilVFUo /Users/bschmidt/.ssh/id_rsa_work (RSA)\\n4096 SHA256:TdTOo+x7KWJ8ciahJLZ99GoAc5TgNWmyP/OpbDoaEV4 /Users/bschmidt/.ssh/id_rsa_work_github (RSA)'\r\n+_add_identities:22> line=4096 SHA256:ppIhNeqcn7s8dTFQ6uqILwbje/duuuKLcPHBYilVFUo /Users/bschmidt/.ssh/id_rsa_work (RSA)\r\n+_add_identities:23> loaded_sigs+=SHA256:ppIhNeqcn7s8dTFQ6uqILwbje/duuuKLcPHBYilVFUo\r\n+_add_identities:24> loaded_ids+=/Users/bschmidt/.ssh/id_rsa_work\r\n+_add_identities:22> line=4096 SHA256:TdTOo+x7KWJ8ciahJLZ99GoAc5TgNWmyP/OpbDoaEV4 /Users/bschmidt/.ssh/id_rsa_work_github (RSA)\r\n+_add_identities:23> loaded_sigs+=SHA256:TdTOo+x7KWJ8ciahJLZ99GoAc5TgNWmyP/OpbDoaEV4\r\n+_add_identities:24> loaded_ids+=/Users/bschmidt/.ssh/id_rsa_work_github\r\n+_add_identities:29> id=/Users/bschmidt/.ssh/id_rsa_work\r\n+_add_identities:31> [[ 0 -le 0 ]]\r\n+_add_identities:32> sig=+_add_identities:32> ssh-keygen -lf /Users/bschmidt/.ssh//Users/bschmidt/.ssh/id_rsa_work\r\n+_add_identities:32> sig=+_add_identities:32> awk '{print $2}'\r\nssh-keygen: /Users/bschmidt/.ssh//Users/bschmidt/.ssh/id_rsa_work: No such file or directory\r\n+_add_identities:32> sig=''\r\n+_add_identities:33> [[ 0 -le 0 ]]\r\n+_add_identities:33> not_loaded+=/Users/bschmidt/.ssh//Users/bschmidt/.ssh/id_rsa_work\r\n+_add_identities:29> id=/Users/bschmidt/.ssh/id_rsa_work_github\r\n+_add_identities:31> [[ 0 -le 0 ]]\r\n+_add_identities:32> sig=+_add_identities:32> ssh-keygen -lf /Users/bschmidt/.ssh//Users/bschmidt/.ssh/id_rsa_work_github\r\n+_add_identities:32> sig=+_add_identities:32> awk '{print $2}'\r\nssh-keygen: /Users/bschmidt/.ssh//Users/bschmidt/.ssh/id_rsa_work_github: No such file or directory\r\n+_add_identities:32> sig=''\r\n+_add_identities:33> [[ 0 -le 0 ]]\r\n+_add_identities:33> not_loaded+=/Users/bschmidt/.ssh//Users/bschmidt/.ssh/id_rsa_work_github\r\n+_add_identities:37> [[ -n '/Users/bschmidt/.ssh//Users/bschmidt/.ssh/id_rsa_work /Users/bschmidt/.ssh//Users/bschmidt/.ssh/id_rsa_work_github' ]]\r\n+_add_identities:37> ssh-add /Users/bschmidt/.ssh//Users/bschmidt/.ssh/id_rsa_work /Users/bschmidt/.ssh//Users/bschmidt/.ssh/id_rsa_work_github\r\n/Users/bschmidt/.ssh//Users/bschmidt/.ssh/id_rsa_work: No such file or directory\r\n/Users/bschmidt/.ssh//Users/bschmidt/.ssh/id_rsa_work_github: No such file or directory\r\n",
        "labels": "Support",
        "id": 44068
    },
    {
        "title": "how to remove % character after install oh-my-zsh",
        "body": "I'm an Hyper user, after install zsh / oh-my.zsh i see a strange character in hyper, could you please help me to remove it?\r\n\r\n![Captura de Pantalla 2019-10-14 a la(s) 6 37 57 p  m](https://user-images.githubusercontent.com/5133753/66789645-21319e00-eeb2-11e9-81d4-c3b6fb186453.png)\r\n \r\n",
        "labels": "Support",
        "id": 44069
    },
    {
        "title": "It's extremely slow",
        "body": "Hi,\r\n\r\nI am using iterm2 and installed this using:\r\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\r\n\r\nEvery time I enter a command the loading time is very very slow, i could be anything from ls in a small directory it really takes long time till I can see the files.\r\n\r\nThank you",
        "labels": "Support",
        "id": 44070
    },
    {
        "title": "Cask Plugin: Command Not Found",
        "body": "**Describe the bug**\r\n<!-- A clear and concise description of what the bug is. -->\r\nWhen using the CASK plugin I get command not found. I have the /usr/local/Cellar and usr/local/bin in my path. Not really sure what the cask plugin is looking for as cask is now baked into brew isn't it?\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Enable plugin 'oh-my-zsh/cask'\r\n2. Start iTerm2\r\n3. See error\r\n\r\n**Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\nNot to see an error, more detail as to the cause?\r\n\r\n**System:**\r\n - OS: macOS Catalina\r\n - Zsh version: 5.7.1\r\n - Terminal emulator: iTerm2",
        "labels": "Support",
        "id": 44071
    },
    {
        "title": "zsh doesn't show username and hostname",
        "body": "I installed zsh and oh-my-zsh on Ubuntu on WSL 2. When I try to start the zsh, however, it doesn't show the username and hostname like it does with bash.\r\n\r\n![image](https://user-images.githubusercontent.com/4646697/66624354-69507800-ebb5-11e9-9708-0e443ca1333a.png)\r\n\r\n``` \r\nuname -a\r\nLinux Summit 4.19.57-microsoft-standard #1 SMP Wed Jul 3 20:47:25 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux\r\n```",
        "labels": "Support",
        "id": 44072
    },
    {
        "title": "A list of everything that oh-my-zsh modifies in the computer",
        "body": "My computer is a Mac Mini with MacOS Catalina, Version 10.15. I installed oh-my-zsh, because I thought it would accelerate zsh, which was very slow. Immediately everything stopped working. Not even the ls command produced the message **zsh: command not found: ls**. The lem text editor, roswell, nvim, ghc, everything produced the message of command not found. Then, I tried to remove oh-my-zsh immediately. Fortunately, only the terminal was not working. Then I found that I just needed to run uninstall_oh_my_zsh, but again I got the message: command not found. I read the section about hiccups that suggest checking the .zshrc configuration file. I used the gui version of emacs to verify that .zshrc was setting the PATH correctly. I tried to find someone with the same problem. Finally, I found a woman who  guided me in removing oh-my-zsh by hand, without entering the terminal. I removed everything she told me that I should remove, and the terminal started working again, except roswell and lem. I reinstalled these tools again.\r\n\r\nHowever, the woman who helped me confessed that she fixed her computer blindly, after examining the uninstall.sh file. Then she told me no rename ~/.zshrc.pre-oh-my-zsh to .zshrc, or something like that.  I am not sure whether I removed everything, and renamed what should be renamed. The terminal looks normal. When I installed oh-my-zsh, I saw the path in one line, and the Greek lambda letter playing the role of prompt in the other line. I suggest that you publish a list of steps for removing completely oh-my-zsh by hand, without entering the terminal.  ",
        "labels": "Support",
        "id": 44073
    },
    {
        "title": "How to highlighting stderr after entry command?",
        "body": "I Know some themes which provide stderr highlighting, \r\nas red circle shown of following picture:\r\n\r\nhttps://imgur.com/rubXSGJ\r\n\r\n(Retrieved from: https://github.com/viasite-ansible/ansible-role-zsh)\r\n\r\nIs there a zsh-plugin support like this?\r\n\r\nI use bureau theme now, but it does not support this function,\r\nhttps://imgur.com/n44g8uN\r\n\r\nI want to use(extend) this function with zsh-plugin.\r\n\r\nHow do I do?",
        "labels": "Support",
        "id": 44074
    },
    {
        "title": "iTerm printing setopt aliases & saved aliases every startup",
        "body": "Hi folks,\r\n\r\nI'm not really sure this is the best place for posting but I'm really struggling to find a resource to help. It's also, more than likely, a really simple fix.\r\n\r\nSince installing oh my zsh my terminal keeps printing the following on startup;\r\nsaved aliases\r\nsetopt aliases\r\n\r\n![iTerm Print](https://i.imgur.com/FMQOrmr.jpg)\r\n\r\nIt is driving me insane! How do I stop this? ",
        "labels": "Support",
        "id": 44075
    },
    {
        "title": "Key Fn Problem",
        "body": "Hi,\r\n\r\nI installed oh-my-zsh on Linux Mint 19.1 and one key isn't working correctly only on zsh. FN + 0 ... is the combination to / on my Notebook and it's not working...\r\n\r\nWhat should I do? I really want to use oh-my-zsh on Linux too.",
        "labels": "Support",
        "id": 44076
    },
    {
        "title": "Insecure completion-dependent directories detected on macOS Catalina",
        "body": "**Describe the bug**\r\nJust completed a clean install of macOS Catalina Beta 10 - it looks like a new insecure directory is now created in the process - `/usr/local/share`.\r\nThis causes a `Insecure completion-dependent directories detected` error from oh-my-zsh when sourcing my `~.zshrc`\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Install macOS Catalina\r\n2. Install oh-my-zsh\r\n3. Edit and `source` your .zshrc\r\n\r\n**System:**\r\n - OS: macOS Catalina Beta 10 (19A578c)\r\n - Zsh v5.7.1\r\n - Terminal: Hyper",
        "labels": "Support",
        "id": 44077
    },
    {
        "title": "Messed up last few lines when using oh-my-zsh + tmux in centos with multi-line prompt",
        "body": "**Describe the bug**\r\n\r\nI am not able to blame this bug as caused by oh-my-zsh, but it's more likely to be a locale issue from incompatibly between multiple packages that I was using.\r\n\r\nMessed up last few lines when using oh-my-zsh + tmux in centos with multi-line prompt\r\n\r\n\r\n**To Reproduce**\r\nin any directory with longer items than the screen height, list files \r\n```\r\nls -al\r\n```\r\nand the final few lines format is messed\r\n\r\n**Expected behavior**\r\n\r\nThe multi-line prompt are output after the command `ls -al` fully output\r\n\r\n**Screenshots or recordings**\r\n\r\n![image](https://user-images.githubusercontent.com/15812510/66074623-7793f980-e50e-11e9-97c5-3352157f8cf4.png)\r\n\r\nNote the last file for listing is .zshrc, but the prompt has started at the same line, with overlapping to the end output to the `ls -al` cmd;\r\n\r\n\r\nThe problem does not produce when in mac OS with same tmux/zsh/oh-my-zsh/iterm2; In addition, in the ys template, if I change the first character from `#` to `➜` (or any other uncommon symbols), the problem will not produce:\r\n\r\n```\r\n49 PROMPT=\"\r\n50 %{$terminfo[bold]$fg[blue]%}➜ %{$reset_color%} \\\r\n51 %(#,%{$bg[yellow]%}%{$fg[black]%}%n%{$reset_color%},%{$fg[cyan]%}%n) \\\r\n52 %{$fg[white]%}@ \\\r\n53 %{$fg[green]%}%m \\\r\n54 %{$fg[white]%}in \\\r\n55 %{$terminfo[bold]$fg[yellow]%}%~%{$reset_color%}\\\r\n56 ${hg_info}\\\r\n57 ${git_info}\\\r\n58  \\\r\n59 %{$fg[white]%}[%*] $exit_code\r\n60 %{$terminfo[bold]$fg[red]%}$ %{$reset_color%}\"\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/15812510/66074970-597ac900-e50f-11e9-9c8f-f5e722ec2650.png)\r\n\r\nIn above, the expected output is \r\n```\r\noutput from last command line\r\nprompt1: empty line\r\nprompt2: info defined in prompt, starting with ➜, and ending in time\r\nprompt3: $ followed by user input\r\n```\r\n\r\nIn addition, the problem does not show if any themes with only 1-line prompt is used:\r\n```\r\n11 ZSH_THEME=\"robbyrussell\"\r\n```\r\n![image](https://user-images.githubusercontent.com/15812510/66075166-d9a12e80-e50f-11e9-8f8c-f8091e98ed42.png)\r\n\r\n\r\n**System:**\r\n\r\n* oh-my-zsh: 4b8f4d529ef1965a9f6a233579ea432374f817dd (10/02 master)\r\n* ZSH_THEME=\"ys\"\r\n* zsh 5.2 (x86_64-redhat-linux-gnu)\r\n* CentOS Linux release 7.6.1810 (Core)\r\n* tmux 2.8\r\n* iTerm2 Build 3.3.5beta3\r\n\r\nall the packages are used with default configs, only oh-my-zsh changed the ZSH_THEME to `ys`",
        "labels": "Support",
        "id": 44078
    },
    {
        "title": "issue with getting git statuses",
        "body": "```ZSH_THEME_GIT_PROMPT_PREFIX=\"%{$reset_color%} | %{$fg[green]%}\"\r\nZSH_THEME_GIT_PROMPT_SUFFIX=\"%{$reset_color%}\"\r\nZSH_THEME_GIT_PROMPT_DIRTY=\"\"\r\nZSH_THEME_GIT_PROMPT_ADDED=\"%{$fg[red]%}*%{$reset_color%}\"\r\nZSH_THEME_GIT_PROMPT_MODIFIED=\"%{$fg[red]%}!%{$reset_color%}\"\r\nZSH_THEME_GIT_PROMPT_CLEAN=\"\"\r\n\r\nPROMPT='[%{$fg[cyan]%}%1~%{$reset_color%}%{$fg[red]%}%{$reset_color%}$(git_prompt_info)%{$reset_color%}] ⇒ '\r\n```\r\nWhenever i have a modified file it doesnt change the git status to master! and same for the added it doesnt change to master*\r\n",
        "labels": "Support",
        "id": 44079
    },
    {
        "title": "Git Command Print",
        "body": "<!--\r\n1. Look for similar issues already posted (including closed ones)\r\n2. Include as much relevant information as possible\r\n3. Try to make sure the issue is due to Oh My Zsh\r\n-->\r\n\r\nI switched from `zsh` to `oh-my-zsh` this morning (using the `agnoster` theme with a slight modification to the `PROMPT`).\r\n\r\nI noticed that when I use a git command like `git branch`, instead of printing the results like my shell does for `ls -a` (see below)...\r\n![image (2)](https://user-images.githubusercontent.com/39878535/66011307-33f6ac80-e488-11e9-9c86-2a47ffa2185f.png)\r\n\r\nIt opens a new view:\r\n![image (3)](https://user-images.githubusercontent.com/39878535/66011308-33f6ac80-e488-11e9-8b7b-92ee6a845594.png)\r\n\r\nThe concern I have is that this makes it more difficult to _use_ the `git` command because I now have to remember the results instead of being able to reference them. This is because in order to write another command, I have to exit the view:\r\n![image (4)](https://user-images.githubusercontent.com/39878535/66011309-33f6ac80-e488-11e9-843a-1f2e571e26bb.png)\r\n\r\nIs there a setting somewhere that controls this behavior? I did try to comment out the `git` plugin within `.zshrc`, but that did not seem to fix it.\r\n\r\nThanks!\r\n\r\n\r\n",
        "labels": "Support",
        "id": 44080
    },
    {
        "title": "Can not create new tmux session or source .zshrc if aws plugin is enabled",
        "body": "Hi,\r\nthanks for taking the time to read this issue!\r\n\r\n**Describe the bug**\r\nLast week I started noticing two behaviours:\r\n\r\n 1. If I try to open a new tmux session, tmux exits directly again without having created a new session (not just detaches). \r\n 2. If I make changes to my `.zshrc` file, and source it afterwards, the terminal is closed.\r\n\r\nInitially I thought I had an issue with my tmux.conf or had added some problematic code to my `.zshrc`, but after searching for a bit and not finding anything in the tmux configuration or .zshrc, I checked other things I had changed recently among them installing the `awscli` via `pip install awscli`. While debugging, I removed the `aws` plugin from my `.zshrc` file and both behaviours mentioned above worked again as expected.\r\n\r\nI tried to figure out what part of the aws plugin is causing this, but my knowlege of zsh and oh-my-zsh is too limited.\r\n\r\n**To Reproduce**\r\n1. Install awscli via `pip install awscli`\r\n2. Enable plugin `aws`\r\n3. Run command `tmux new-session -t test` or `source .zshrc`\r\n\r\n**System:**\r\n - macOS Version 10.13.6\r\n - zsh 5.7.1 (x86_64-apple-darwin17.7.0)\r\n - iTerm2 (Build 3.3.4)\r\n - aws-cli/1.16.245 Python/3.7.4 Darwin/17.7.0 botocore/1.12.235\r\n - Python 3.7.4 (default, Aug  4 2019, 21:15:30) [Clang 10.0.0 (clang-1000.10.44.4)]\r\n - tmux 2.9a\r\n - pyenv 1.2.13 (python versions installed via pyenv)\r\n - Homebrew 2.1.11\r\n\r\n**Additional context**\r\nMy guess is that it has to do with the python version but that is only a guess.\r\nBefore I installed awscli, I had the plugin in my `.zshrc` but did not use it. \r\n\r\n**`.aws/config`**\r\n```\r\n[default]\r\nregion = eu-west-1\r\noutput = json\r\n\r\n[profile <some-name>-staging]\r\nrole_arn = arn:<some-arn>\r\nsource_profile = default\r\nrole_session_name = <some-name>\r\nregion = eu-west-1\r\noutput = json\r\n\r\n[profile <some-name>-production]\r\nrole_arn = arn:<some-arn>\r\nsource_profile = default\r\nrole_session_name = <some-name>\r\nregion = eu-west-1\r\noutput = json\r\n```\r\n\r\n**`.zshrc`**\r\n```\r\n# If you come from bash you might have to change your $PATH.\r\nexport PATH=$HOME/Code/bin:/usr/local/bin:$PATH\r\nexport KUBECONFIG=\"$HOME/.kube/config:$HOME/.kube/<some-str>-cluster-production:$HOME/.kube/<some-str>-cluster-staging\"\r\n\r\n# Path to your oh-my-zsh installation.\r\nexport ZSH=\"/Users/<username>/.oh-my-zsh\"\r\n\r\n# Set name of the theme to load --- if set to \"random\", it will\r\n# load a random theme each time oh-my-zsh is loaded, in which case,\r\n# to know which specific one was loaded, run: echo $RANDOM_THEME\r\n# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes\r\nZSH_THEME=\"robbyrussell\"\r\n# ZSH_THEME=\"spaceship\"\r\n\r\n# Set list of themes to pick from when loading at random\r\n# Setting this variable when ZSH_THEME=random will cause zsh to load\r\n# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/\r\n# If set to an empty array, this variable will have no effect.\r\n# ZSH_THEME_RANDOM_CANDIDATES=( \"robbyrussell\" \"agnoster\" )\r\n\r\n# Uncomment the following line to use case-sensitive completion.\r\n# CASE_SENSITIVE=\"true\"\r\n\r\n# Uncomment the following line to use hyphen-insensitive completion.\r\n# Case-sensitive completion must be off. _ and - will be interchangeable.\r\n# HYPHEN_INSENSITIVE=\"true\"\r\n\r\n# Uncomment the following line to disable bi-weekly auto-update checks.\r\n# DISABLE_AUTO_UPDATE=\"true\"\r\n\r\n# Uncomment the following line to automatically update without prompting.\r\n# DISABLE_UPDATE_PROMPT=\"true\"\r\n\r\n# Uncomment the following line to change how often to auto-update (in days).\r\n# export UPDATE_ZSH_DAYS=13\r\n\r\n# Uncomment the following line if pasting URLs and other text is messed up.\r\n# DISABLE_MAGIC_FUNCTIONS=true\r\n\r\n# Uncomment the following line to disable colors in ls.\r\n# DISABLE_LS_COLORS=\"true\"\r\n\r\n# Uncomment the following line to disable auto-setting terminal title.\r\n# DISABLE_AUTO_TITLE=\"true\"\r\n\r\n# Uncomment the following line to enable command auto-correction.\r\n# ENABLE_CORRECTION=\"true\"\r\n\r\n# Uncomment the following line to display red dots whilst waiting for completion.\r\n# COMPLETION_WAITING_DOTS=\"true\"\r\n\r\n# Uncomment the following line if you want to disable marking untracked files\r\n# under VCS as dirty. This makes repository status check for large repositories\r\n# much, much faster.\r\n# DISABLE_UNTRACKED_FILES_DIRTY=\"true\"\r\n\r\n# Uncomment the following line if you want to change the command execution time\r\n# stamp shown in the history command output.\r\n# You can set one of the optional three formats:\r\n# \"mm/dd/yyyy\"|\"dd.mm.yyyy\"|\"yyyy-mm-dd\"\r\n# or set a custom format using the strftime function format specifications,\r\n# see 'man strftime' for details.\r\n# HIST_STAMPS=\"mm/dd/yyyy\"\r\n\r\n# Would you like to use another custom folder than $ZSH/custom?\r\n# ZSH_CUSTOM=/path/to/new-custom-folder\r\n\r\n# Which plugins would you like to load?\r\n# Standard plugins can be found in ~/.oh-my-zsh/plugins/*\r\n# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/\r\n# Example format: plugins=(rails git textmate ruby lighthouse)\r\n# Add wisely, as too many plugins slow down shell startup.\r\nplugins=(\r\n  git\r\n  aws\r\n  docker-compose\r\n  docker\r\n  pyenv\r\n  tmux\r\n  vi-mode\r\n  z\r\n)\r\n\r\nsource $ZSH/oh-my-zsh.sh\r\n\r\n# User configuration\r\n\r\n# export MANPATH=\"/usr/local/man:$MANPATH\"\r\n\r\n# You may need to manually set your language environment\r\nexport LANG=en_US.UTF-8\r\n\r\n# Preferred editor for local and remote sessions\r\nif [[ -n $SSH_CONNECTION ]]; then\r\n  export EDITOR='vim'\r\nelse\r\n  export EDITOR='nvim'\r\nfi\r\n\r\n# Compilation flags\r\n# export ARCHFLAGS=\"-arch x86_64\"\r\n\r\n# Set personal aliases, overriding those provided by oh-my-zsh libs,\r\n# plugins, and themes. Aliases can be placed here, though oh-my-zsh\r\n# users are encouraged to define aliases within the ZSH_CUSTOM folder.\r\n# For a full list of active aliases, run `alias`.\r\nsource $HOME/.aliases\r\n\r\n# Set the Path variable\r\n# The .paths is sourced in .zshenv\r\n#\r\n# Example aliases\r\n# alias zshconfig=\"mate ~/.zshrc\"\r\n# alias ohmyzsh=\"mate ~/.oh-my-zsh\"\r\n\r\n# Additional Config\r\n#\r\n# PYENV\r\n# export PYENV_ROOT=\"$HOME/.pyenv\"\r\n# export PATH=\"$PYENV_ROOT/bin:$PATH\"\r\neval \"$(pyenv init -)\"\r\neval \"$(pyenv virtualenv-init -)\"\r\n```\r\n",
        "labels": "Support",
        "id": 44081
    },
    {
        "title": "Catalina: Plugins Not Loading",
        "body": "Plugins are not loading during ZSH initialization. I can tell because my prompt changes when they're loaded (e.g. to show git branch). The oh-my-zsh.sh script is definitely being run. The plugins shell variable is set. Notably, manually running `source $ZSH/oh-my-zsh.sh` as the first command in a new console loads all the plugins (i.e. the prompt changes). I've added an echo to the plugins loop oh-my-zsh.sh and it lists all plugins both at zsh load and on the manual run.\r\n\r\nI'm happy to dive in and debug further, but I've hit the limit of what I can do without getting up to speed on OMZ internals. Can I please get some advice on what to check out?\r\n\r\nI'm on the latest Catalina beta, but notably I wasn't using ZSH much in the preceding months so this issue may be related to something else. I haven't changed my ZSH/OMZ configuration since it was known-working. OMZ is up to date.\r\n\r\nMy .zshrc has most of my configuration, and .zshenv has only OMZ configuration (included below). I've checked and both zshenv and zshrc are being loading. My zshenv is below, and my zshrc is at https://gist.github.com/bmulholland/8ea14f28af960fb24dc4f5963b883a8e.\r\n\r\n.zshenv\r\n```\r\n# Path to your oh-my-zsh configuration.\r\nZSH=$HOME/.oh-my-zsh\r\n\r\n# Set name of the theme to load.\r\n# Look in ~/.oh-my-zsh/themes/\r\n# Optionally, if you set this to \"random\", it'll load a random theme each\r\n# time that oh-my-zsh is loaded.\r\nZSH_THEME=\"wezm\"\r\n\r\n# Uncomment following line if you want red dots to be displayed while waiting for completion\r\nCOMPLETION_WAITING_DOTS=\"true\"\r\n\r\n# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)\r\n# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/\r\n# Example format: plugins=(rails git textmate ruby lighthouse)\r\nplugins=(brew capistrano knife osx rails rake ruby rvm git git-extras vagrant)\r\n\r\nsource $ZSH/oh-my-zsh.sh\r\n```",
        "labels": "Support",
        "id": 44082
    },
    {
        "title": "Error while I want to apply the configuration by running the source command \"source ~/.zshrc\"",
        "body": "**Error while I want to apply the configuration by running the source command \"source ~/.zshrc\"**\r\n```\r\n$ source ~/.zshrc\r\nautoload: command not found\r\n-bash: /home/sprio/.oh-my-zsh/oh-my-zsh.sh: line 41: syntax error near unexpected token `('\r\n-bash: /home/sprio/.oh-my-zsh/oh-my-zsh.sh: line 41: `for plugin ($plugins); do'\r\n```",
        "labels": "Support",
        "id": 44083
    },
    {
        "title": "print -z \"foo\" doesn't work from script or via command",
        "body": "**Describe the bug**\r\n\r\nI am not sure if this is a bug or I am missing something, but I would like to use the `print` function with `-z` flag from a script and it is not working.\r\n\r\n**To Reproduce**\r\n\r\n1. Run the command `print -z \"foo\"` and observe the result\r\n2. The command above will inject \"foo\" on a new line, leaving the cursor at the end, which is the expected behavior\r\n3. Try to run the same command like `/bin/zsh -c 'print -z \"foo\"' ` -> nothing happens (it is the equivalent of pressing enter on an empty line)\r\n4. Try to run the same command `print -z \"foo\"` from within a script file like:\r\n\r\n```\r\n#!/bin/zsh\r\n\r\nprint -z \"foo\"\r\n```\r\n\r\nSame as nr 3... nothing happens\r\n\r\n\r\n**Expected behavior**\r\nI would like the `print -z $COMMAND` to behave exactly the same from a script as it does when doing it directly in the command line\r\n\r\n**System:**\r\n - OS: macOS Mojave\r\n - Zsh version: zsh 5.3 (x86_64-apple-darwin18.0)\r\n - terminal.app\r\n\r\n**Additional context**\r\nThis used to work fine at some point (lower OS version and zsh different version)\r\n",
        "labels": "Support",
        "id": 44084
    },
    {
        "title": "Abnormal auto-reply to ssh information",
        "body": " When I use zsh and disabled oh-my-zsh, everything is right, the screenshot as follows:\r\n\r\n![The right information](https://user-images.githubusercontent.com/1441704/66499881-f239b780-eac0-11e9-9922-6fbe296a527e.png)\r\n and waiting for my response.\r\n\r\nHowever, when enabled oh-my-zsh, the abnormal occurs  it seems some settings are auto-reply to ssh information and can't display the information properly from the server, and when I press ctrl+d to exit, the zsh keep repeating this command, always exit again and again, can't stop unless I close zsh.\r\n\r\n![The abnormal screenshot](https://user-images.githubusercontent.com/1441704/66499916-fe257980-eac0-11e9-8ddd-0b2e3f460e2b.png)\r\n\r\n\r\nIt will be great appreciated if someone can help. Thanks\r\n",
        "labels": "Support",
        "id": 44085
    },
    {
        "title": "curl with json data from stdin makes ssh connection closed",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n<!-- A clear and concise description of what the bug is. -->\r\nI use cURL to lean elasticsearch:\r\n\r\n```bash\r\ncurl -XPUT 'localhost:9200/get-together/group/1?pretty' -d'{\r\n\"name\": \"Elasticsearch Denver\",\r\n\"organizer\": \"Lee\"\r\n}'\r\n```\r\n\r\nWhen I finish typing `\"name\": \"Elasticsearch Denver\",` and Enter to continue, it always close the ssh connection。\r\n\r\n\r\n\r\n\r\n\r\n**To Reproduce**\r\n<!--\r\nSteps to reproduce the behavior:\r\n1. Enable plugin '...'\r\n2. Run command '...', _or_ try to complete command '...', _etc._\r\n3. See error\r\n-->\r\n\r\nInput the above curl command manually.\r\n\r\n**Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\nSucceed to input the full curl command.\r\n\r\n**Screenshots or recordings**\r\n<!--\r\nIf applicable, add screenshots or record an asciinema session (https://asciinema.org/)\r\nto help explain your problem.\r\n-->\r\n\r\nuse oh-my-zsh (failed):\r\n\r\n![image](https://user-images.githubusercontent.com/44150955/65561934-e5707c00-df76-11e9-8c76-94dbde96ac81.png)\r\n![image](https://user-images.githubusercontent.com/44150955/65561946-ef927a80-df76-11e9-8042-81bfeec1b105.png)\r\n\r\nuse zsh without oh-my-zsh (succeed):\r\n\r\n![image](https://user-images.githubusercontent.com/44150955/65562176-eeae1880-df77-11e9-9572-a8b35544400f.png)\r\n\r\n\r\n\r\n\r\n\r\n\r\n**System:**\r\n - OS: Centos 7\r\n - Zsh version: zsh 5.0.2 (x86_64-redhat-linux-gnu)\r\n - Terminal emulator: Terminus\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n",
        "labels": "Support",
        "id": 44086
    },
    {
        "title": " parse_git_dirty error",
        "body": "Hi everyone,\r\n\r\nSince yesterday I have this error message \"  parse_git_dirty:4: command not found: git   \" after removing git for a new installation.\r\nNow it is totally impossible to update, upgrade my system. I am using Ubuntu 18.04.3 LTS.\r\n\r\nSomeone can at least explainme what does it means ?\r\n\r\nThank you for your support.",
        "labels": "Support",
        "id": 44087
    },
    {
        "title": "when typing history -w backup.txt the result is ➜ ~ omz_history:fc:13: bad option: -w",
        "body": "when typing history -w backup.txt the result is\r\n➜ ~ omz_history:fc:13: bad option: -w\r\nI don't understand the result . Is my oh-my-zsh setting wrong?\r\n",
        "labels": "Support",
        "id": 44088
    },
    {
        "title": "when typing history -w",
        "body": "<!--\r\n1. Look for similar issues already posted (including closed ones)\r\n2. Include as much relevant information as possible\r\n3. Try to make sure the issue is due to Oh My Zsh\r\n-->\r\n",
        "labels": "Support",
        "id": 44089
    },
    {
        "title": "ls command is not working in Visual Studio Code, different aliases are loading...",
        "body": "What is weird is that when I run a terminal in iTerm2, everything is running fine.  I execute the ls command (according to alias it is assigned to ls-G -G) and it runs fine.\r\n\r\nWhen I open a shell in the VS Code Terminal for some reason, it still loads OMZ, but now ls is aliased to gls --color=tty -G.  It won't let me do an ls for anything not in a .git repository and the color is expected to be something other than tty.  \r\n\r\nI have no idea why some slightly different profile is loading.",
        "labels": "Support",
        "id": 44090
    },
    {
        "title": "Using oh-my-zsh in remote server without affecting others?",
        "body": "<!--\r\n1. Look for similar issues already posted (including closed ones)\r\n2. Include as much relevant information as possible\r\n3. Try to make sure the issue is due to Oh My Zsh\r\n-->\r\nI have installed oh-my-zsh in a remote machine and powerline fonts in local PC. This mean if I use zsh, the special characters will not display correctly in other people's terminal.\r\n\r\nHow to make zsh serve only for me and others use the default one?\r\n",
        "labels": "Support",
        "id": 44091
    },
    {
        "title": "Can I use the oh-my-zsh when I ssh to a remote server?",
        "body": "When I ssh to a remote server, I found that terminal can't use oh-my-zsh, is there a mapping?",
        "labels": "Support",
        "id": 44092
    },
    {
        "title": "How to modify this mul-lines status?",
        "body": "<!--\r\n1. Look for similar issues already posted (including closed ones)\r\n2. Include as much relevant information as possible\r\n3. Try to make sure the issue is due to Oh My Zsh\r\n-->\r\nI use \"ys-themes\", when I activate a envs by \"conda activate base\",  the string \"(base)\" monopolize a line. As follows:\r\n(base)\r\n lyd @ P100-VM in ~/.oh-my-zsh/themes git:master x [10:06:59]\r\n\r\nHow to modify these to display in a line:\r\n (base) lyd @ P100-VM in ~/.oh-my-zsh/themes git:master x [10:06:59]\r\n\r\n",
        "labels": "Support",
        "id": 44093
    },
    {
        "title": "[dnote] Command not found.",
        "body": "Hi.\r\n\r\nI have been trying to use dnote inside zsh, but it raises a `command not found`.\r\n\r\nMy steps was:\r\n\r\n```bash\r\n$ vi ~/.zshrc`\r\n```\r\n\r\nand enabled the plugin:\r\n\r\n```bash\r\n...\r\nplugins=(git dnote)\r\n...\r\n```\r\n\r\nAfter restarting the zsh/terminal, I've tried:\r\n\r\n```bash\r\n➜ ~ dnote\r\nzsh: command not found: dnote\r\n```\r\n\r\nI have the oh-my-zsh installed on Linux (openSUSE Tumbleweed) and Windows (MinGW-w64).\r\n\r\nAre there any additional steps I'm forgetting to do?\r\n\r\nThank you!",
        "labels": "Support",
        "id": 44094
    },
    {
        "title": "Error while executing curl command",
        "body": "Hi, there is an error when executing the following command:\r\n```\r\ncurl -Lo kops https://github.com/kubernetes/kops/releases/download/$(curl -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d '\"' -f 4)/kops-linux-amd64\r\n```\r\ntry it out and will see the error.\r\n\r\nThanks and congrats for such an awesome command interpreter.",
        "labels": "Support",
        "id": 44095
    },
    {
        "title": "emacs ansi-term having issues with rendering output of a command",
        "body": "<!--\r\n1. Look for similar issues already posted (including closed ones)\r\n2. Include as much relevant information as possible\r\n3. Try to make sure the issue is due to Oh My Zsh\r\n-->\r\n\r\nI am trying to use oh-my-zsh in emacs with M-x term or M-x ansi-term.\r\nI am having same issue with both modes.\r\nEliminator return the output of the command but the out disappears.\r\n\r\nUsing Emacs 26.2\r\nZSH version is 5.3\r\n\r\n![2019-09-06_23-33-07 (1)](https://user-images.githubusercontent.com/23665525/64470047-1d1b9f00-d102-11e9-9c2e-f696a72776a6.gif)\r\n",
        "labels": "Support",
        "id": 44096
    },
    {
        "title": "(eval):1: bad pattern: *(-/):directories  .... error whenever I press [tab] to autocomplete on OpenBSD octeon zsh 5.7.1 (mips64-unknown-openbsd6.5)",
        "body": "**Describe the bug**\r\n\r\nI get this \"(eval):1: bad pattern: *(-/):directories\"  error message whenever I press [tab] to autocomplete. To be fair it also happens when I uninstall oh-my-zsh but vanishes if I delete compinit from my .zshrc. So it's probably something in compinit and I don't know where to file the issue there. Feel free to delete the Issue if I'm in the complete wrong context here.\r\n\r\n**To Reproduce**\r\n\r\nSteps to reproduce the behavior:\r\nInstall zsh and oh-my-zsh on openbsd 6.5 on octeon hardware via \r\n1. pkg_add zsh\r\n2. sh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\r\n3. Try and hit tab to autocomplete files like ls test[tab]\r\n\r\n**Expected behavior**\r\n\r\nin any other installation of oh-my-zsh autocomplete works without this error message\r\n\r\n**Screenshots or recordings**\r\n\r\nmchack@mcfire ~ $ ls test               \r\n(eval):1: bad pattern: *(-/):directories\r\nmchack@mcfire ~ $ ls test/              \r\ntest/  test1  test2                     \r\n\r\n**System:**\r\n - OS: Openbsd 6.5 octeon\r\n - Zsh version: zsh 5.7.1 (mips64-unknown-openbsd6.5)\r\n - Terminal emulator: Tilda\r\n\r\n**Additional context**\r\nhere's the trace when pressing ctrl-x ? instead of pressing [tab]\r\n\r\n[zsh14617ls1.txt](https://github.com/robbyrussell/oh-my-zsh/files/3585410/zsh14617ls1.txt)\r\n",
        "labels": "Support",
        "id": 44097
    },
    {
        "title": "After using the latest OhMyZsh, the terminal username is lost.",
        "body": "![image](https://user-images.githubusercontent.com/29455550/64420380-c0a08b80-d0d1-11e9-84c8-45cf70bf83ca.png)\r\nWhat should i do?\r\nThanks",
        "labels": "Support",
        "id": 44098
    },
    {
        "title": "How to change the background of \"pasted text\"?",
        "body": "![nkAVuF.png](https://s2.ax1x.com/2019/09/03/nkAVuF.png)\r\n\r\nWhen copy and paste some text to the terminal, it has background.\r\nI change to `bash` and there is no background, where can I change or disable the background of \"pasted text\"?",
        "labels": "Support",
        "id": 44099
    },
    {
        "title": "I just wanna know what's `ret_status` mean in robbyrussell.zsh-theme",
        "body": "```\r\nlocal ret_status=\"%(?:%{$fg_bold[green]%}➜ :%{$fg_bold[red]%}➜ )\"\r\n```\r\nCan anyone tell me what's `%(?` mean in shell? just curious.",
        "labels": "Support",
        "id": 44100
    },
    {
        "title": "oh-my-zsh error source:118 no such file or directory",
        "body": "I have installed oh-my-zsh along with spaceship theme in the past but recently I change the username folder in mac users which affected the theme.\r\n\r\nWhen I open iterm, the theme is not there and I get this error:\r\n\r\n`/Users/someuser/.oh-my-zsh/oh-my-zsh.sh:source:118: no such file or directory: /Users/someuser/.oh-my-zsh/themes/spaceship.zsh-theme`\r\nI went into .zshrc, to change the the `export ZSH=..`, but it's still not fixing the problem.\r\n\r\nIt's complaining it can find the spaceship theme but it looks like theme is in another folder, `/Users/someuser/.oh-my-zsh/custom/theme`.\r\n\r\nNot sure, how to let `oh-my-zsh` know to look in the custom folder. Has anyone encountered this issue? your help will be appreciated\r\n",
        "labels": "Support",
        "id": 44101
    },
    {
        "title": "Tmux, TTYx return: complete:13: command not found: compdef",
        "body": "Hello,\r\n\r\nI know that this issue was here many times reported. I read everything about this problem on OMZ issues, tried UTFG, but everything what I found didn't help me.\r\n\r\nWhen I use TMUX or switch to TTYx (CTRL+ALT+Fx) I see this error `complete:13: command not found: compdef`.\r\n\r\nWhat I tried:\r\n  - Tried to remove everything beginning with `rm ~/.zcomp*`\r\n  - Run these commands from  #[3356](https://github.com/robbyrussell/oh-my-zsh/issues/3356#issuecomment-272265700) :\r\n  ```\r\ncompaudit | xargs -I '%' chmod g-w,o-w '%'\r\nrm ~/.zcompdump*\r\nexec zsh\r\n  ```\r\n  - Tried procedure from [unix.stackexcnage.com](https://unix.stackexchange.com/questions/339954/zsh-command-not-found-compinstall-compinit-compdef). Didn't help.\r\n  - Found NVM [reported problem](https://github.com/robbyrussell/oh-my-zsh/issues/6163#issuecomment-315836297), but I don't use NMV.\r\n  - ASDF has the [same problem](https://github.com/asdf-vm/asdf/issues/266).\r\n\r\nSo I would like to ask you if you can help me. In #[3356](https://github.com/robbyrussell/oh-my-zsh/issues/3356#issuecomment-272265700) is written that if steps mentioned here don't help create new issue. So I'm here. :]\r\n\r\n* OS type: Arch linux\r\n* ZSH version: Installed from repository, `zsh 5.7.1 (x86_64-pc-linux-gnu)`\r\n* Powerlevel9k: Installed from repository, `0.6.7-1`\r\n\r\n\r\n<details><summary>My `.zshrc`:</summary>\r\n<p>\r\n\r\n```\r\n# If you come from bash you might have to change your $PATH.\r\n# export PATH=$HOME/bin:/usr/local/bin:$PATH\r\n#export PATH=$PATH:/usr/bin\r\n\r\n\r\n### TERMINAL COLORS\r\nif [ \"$TERM\" != \"xterm-256color\" ]; then\r\n  export TERM=xterm-256color\r\nfi\r\n\r\n\r\nexport LANG=\"en_US.UTF-8\"\r\nexport LANGUAGE=\"en_US.UTF-8\"\r\nexport LC_TIME=\"en_US.UTF-8\"\r\n\r\n# Path to your oh-my-zsh installation.\r\nZSH=/usr/share/oh-my-zsh/\r\n\r\nZSH_THEME=\"powerlevel9k/powerlevel9k\"\r\n\r\n\r\n## POWERLEVEL9K SETTING\r\nPOWERLEVEL9K_PROMPT_ON_NEWLINE=true\r\nPOWERLEVEL9K_COMMAND_EXECUTION_TIME_THRESHOLD=3\r\nPOWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(root_indicator dir vcs)\r\nPOWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status background_jobs command_execution_time time battery)\r\nPOWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX=\"\"\r\nPOWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX=\"\"\r\n\r\n# Battery show\r\nPOWERLEVEL9K_BATTERY_STAGES=\" \"\r\nPOWERLEVEL9K_BATTERY_LEVEL_BACKGROUND=(grey)\r\n\r\n# Truncate dir path\r\nPOWERLEVEL9K_SHORTEN_DIR_LENGTH=2\r\nPOWERLEVEL9K_SHORTEN_DELIMITER=\"\"\r\nPOWERLEVEL9K_SHORTEN_STRATEGY=\"truncate_to_first_and_last\"\r\n\r\n# Show if you are in dir without write permission\r\nPOWERLEVEL9K_DIR_SHOW_WRITABLE=\"true\"\r\n\r\n# Show warning and alert if disk_usage is over limits\r\nPOWERLEVEL9K_DISK_USAGE_ONLY_WARNING=\"true\"\r\nPOWERLEVEL9K_DISK_USAGE_WARNING_LEVEL=90\r\nPOWERLEVEL9K_DISK_USAGE_CRITICAL=95\r\n# Uncomment the following line to disable bi-weekly auto-update checks.\r\nDISABLE_AUTO_UPDATE=\"true\"\r\n\r\n\r\n# Uncomment the following line to display red dots whilst waiting for completion.\r\nCOMPLETION_WAITING_DOTS=\"true\"\r\n\r\n# Would you like to use another custom folder than $ZSH/custom?\r\nZSH_CUSTOM=${HOME}/.zsh/plugins\r\n\r\n# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)\r\n# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/\r\n# Example format: plugins=(rails git textmate ruby lighthouse)\r\n# Add wisely, as too many plugins slow down shell startup.\r\nplugins=( \\\r\n    ## Custom plugins: $ZSH_CUSTOM\r\n    \r\n    ## Package plugins:  /usr/share/oh-my-zsh/plugins\r\n  # https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/archlinux\r\n    archlinux \\\r\n    colored-man-pages \\\r\n    command-not-found \\\r\n    copydir \\\r\n    copyfile \\\r\n    cp \\\r\n    docker \\\r\n    docker-compose \\\r\n    fd \\\r\n    git \\\r\n  # https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/github\r\n    github \\\r\n    go \\\r\n  # https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/golang\r\n    golang \\\r\n    # history \\\r\n    jira \\\r\n    kubectl \\\r\n    man \\\r\n  # https://github.com/robbyrussell/oh-my-zsh/blob/master/plugins/minikube/minikube.plugin.zsh\r\n    minikube \\\r\n    nmap \\\r\n  # https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/python\r\n    python \\\r\n  # https://github.com/robbyrussell/oh-my-zsh/blob/master/plugins/pip/pip.plugin.zsh\r\n    pip \\\r\n    ripgrep \\\r\n  # https://github.com/robbyrussell/oh-my-zsh/blob/master/plugins/screen/screen.plugin.zsh\r\n    screen \\\r\n    ssh-agent \\\r\n    sublime \\\r\n    sudo  \\\r\n    svn \\\r\n  # https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/systemd\r\n    systemd \\\r\n  # https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/urltools\r\n    url-tools \\\r\n  # https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/terraform\r\n    terraform\r\n  # https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/thefuck\r\n    thefuck \\\r\n  # https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/transfer\r\n    transfer \\\r\n  # https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/vagrant\r\n    vagrant \\\r\n  # https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/vagrant-prompt\r\n    vagrant-prompt \\\r\n  # vault\r\n    vault \\\r\n  # https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/vi-mode\r\n  # vi-mode \\\r\n    vim-interaction \\\r\n    vscode \\\r\n  # https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/vundle\r\n    vundle \\\r\n  # https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/web-search\r\n    web-search \\ \r\n    yaourt \\\r\n    # zsh-autosuggestions \\\r\n    # zsh-completions \\\r\n    z \\\r\n    zsh-history-substring-search \\ \r\n    zsh-navigation-tools \\\r\n  )\r\n\r\n## Source: https://github.com/zsh-users/zsh-completions\r\nautoload -Uz compinit && compinit\r\n#source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh\r\n\r\n# User configuration\r\n\r\n# Don't remember command with space in the beginning\r\nsetopt histignorespace\r\n\r\n# When a partial line is preserved, by default you will see an inverse+bold character at the end of the partial line: a \"%\" for a normal user or a \"#\" for root. If set, the shell parameter \r\nexport PROMPT_EOL_MARK=\"\"\r\n\r\nZSH_CACHE_DIR=$HOME/.cache/oh-my-zsh\r\nif [[ ! -d $ZSH_CACHE_DIR ]]; then\r\n  mkdir $ZSH_CACHE_DIR\r\nfi\r\n\r\n\r\n### SOURCE FILEs\r\nsource $ZSH/oh-my-zsh.sh\r\nsource $HOME/.zprofile\r\n\r\n### VAULT\r\nautoload -U +X bashcompinit && bashcompinit\r\ncomplete -o nospace -C /usr/bin/vault vault\r\n\r\n# VIM\r\n[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n\r\n",
        "labels": "Support",
        "id": 44102
    },
    {
        "title": "source command does not work",
        "body": "**Describe the bug**\r\nthe command `. [something here]` does not working when I'm using oh-my-zsh, if i try `. [tab]` i will receive:\r\n` zsh: do you wish to see all 2222 possibilities (1111 lines)?`\r\n\r\n**To Reproduce**\r\nusing ubuntu 19\r\n\r\n> ➜  bin git:(master) ✗ . activate\r\n> .: no such file or directory: activate\r\n> ➜  bin git:(master) ✗ ls\r\n> activate       chardetect    easy_install-3.7  f2py3.7  pip3.7  python3\r\n> activate.csh   decorate      f2py              pip      pyjwt\r\n> activate.fish  easy_install  f2py3             pip3     python\r\n> ➜  bin git:(master) ✗ \r\n\r\n\r\n**Expected behavior**\r\n`. activate` should activate my virtual environment.\r\n\r\n\r\n**Screenshots or recordings**\r\n<!--\r\nIf applicable, add screenshots or record an asciinema session (https://asciinema.org/)\r\nto help explain your problem.\r\n-->\r\n\r\n**System:**\r\n - OS: ubuntu 19.04 disco dingo\r\n - Zsh version: zsh 5.5.1 (x86_64-ubuntu-linux-gnu)\r\n - Terminal emulator: bash, on hyper i receive the same error\r\n\r\n**Additional context**\r\nI formatted the computer and just installed zsh and oh-my-zsh, and the problem persists. I don't use any autocomplete tools\r\n![error](https://i.ibb.co/Lr7GDHN/Screenshot-from-2019-08-22-20-25-36.png)\r\n",
        "labels": "Support",
        "id": 44103
    },
    {
        "title": "Pls help",
        "body": "I have tried to solve this problem,but it make no sense.....i'm losing.....\r\n![image](https://user-images.githubusercontent.com/35868545/63431711-0adb0900-c452-11e9-9ef7-d4ab8620afca.png)\r\n\r\n![image](https://user-images.githubusercontent.com/35868545/63431593-c485aa00-c451-11e9-84e3-c508f0aaab4a.png)\r\n\r\n",
        "labels": "Support",
        "id": 44104
    },
    {
        "title": "SCP command not found",
        "body": "Hi! When I use scp on a server with oh-my-zsh it returns `zsh:1: command not found: scp`. But the server indeed installs scp and is accessible on the local zsh shell. Coz the zsh shell has deeply configured so solutions without reinstallation would be better. Any help is thankful! ",
        "labels": "Support",
        "id": 44105
    },
    {
        "title": "mark with number",
        "body": "<img width=\"436\" alt=\"Screen Shot 2019-08-20 at 4 47 23 PM\" src=\"https://user-images.githubusercontent.com/40007806/63387169-616d1800-c36a-11e9-83f5-9acfc3740dec.png\">\r\n\r\nHi, I am having this issue with the tail having these mark with numbers follow them. May I ask how to fix that so that it displays the correct symbol?\r\n",
        "labels": "Support",
        "id": 44106
    },
    {
        "title": "How to log custom message on the terminal",
        "body": "Hi,\r\n\r\nI've created an alias in the .zshrc file to launch mailhog, but I would like to print a custom message with the localhost address after it, therefore I used the following code.\r\n\r\n`\r\nalias start-mailhog=\"sudo brew services start mailhog && echo 'visit http://127.0.0.1:8025 to check emails\"\r\n`\r\n\r\nThen I source the file, but it doesn't work as it only prompts the following: `cmdand quote>`\r\n\r\nHow can I get it to execute the command and then print the message on the terminal?",
        "labels": "Support",
        "id": 44107
    },
    {
        "title": "SSL certificate problem when installing",
        "body": "<!--\r\n1. Look for similar issues already posted (including closed ones)\r\n2. Include as much relevant information as possible\r\n3. Try to make sure the issue is due to Oh My Zsh\r\n-->\r\nsh -c \"$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"         \r\ncurl: (60) SSL certificate problem: unable to get local issuer certificate\r\nMore details here: https://curl.haxx.se/docs/sslcerts.html\r\n\r\ncurl failed to verify the legitimacy of the server and therefore could not\r\nestablish a secure connection to it. To learn more about this situation and\r\nhow to fix it, please visit the web page mentioned above.",
        "labels": "Support",
        "id": 44108
    },
    {
        "title": "My .zshrc file was deleter out of nowhere",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nMy .zshrc was deleted out of nowhere.\r\n\r\n**To Reproduce**\r\n<!--\r\nSteps to reproduce the behavior:\r\n1. Enable plugin '...'\r\n2. Run command '...', _or_ try to complete command '...', _etc._\r\n3. See error\r\n-->\r\nI have been using oh-my-zsh and I think it is amazing, I have never had problems with it until today, where I was working normally, then I opened a new tab and all my configuration was gone. I tried to reinstall ohmyzsh but before doing so I was going to Back up my .zshrc so I did not lose my configuration but it was not in my home directory where it has always been. I just created a new one and it is now working but without my normal configuration obviously.\r\n\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n\r\n<!--\r\nIf applicable, add screenshots or record an asciinema session (https://asciinema.org/)\r\nto help explain your problem.\r\n-->\r\n\r\n**System:**\r\n - OS: macOS Mojave v.10.14.6\r\n - Terminal emulator: iTerm2\r\n\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
        "labels": "Support",
        "id": 44109
    },
    {
        "title": "No ./zshrc or ./.oh-my-zsh file",
        "body": "I installed zsh and oh-my-zsh using yay in Arch.\r\nBut I didn't see any profile of setting about it.\r\nEven I manually nano ~/.zshrc and write something like this\r\n```\r\nplugins=(vim\r\n         git \r\n        sudo \r\n        extract \r\n        z \r\n        wd \r\n        archlinux \r\n        zsh-autosuggestions \r\n        zsh-syntax-highlighting)\r\n```\r\nand use `source ~/.zshrc` it still didn't work",
        "labels": "Support",
        "id": 44110
    },
    {
        "title": "git add has no tab completion",
        "body": "I've recently done a new install of Linux Mint (19.2) running zsh 5.4.2 with oh-my-zsh running over the top.\r\n\r\nI've noticed that there's no completion at all specifically on the \"git add\" command.\r\n\r\nI'd usually expect tab complete to bring up a list of files I can add to a commit and I can use normal zsh style completion to select one.\r\n\r\nBut I get nothing at all; it displays nothing on tab at all, not even a complete listing of the directory let alone the new/changed files available for adding. \r\n\r\nWhat I have to do is type the first letter of the file name and then I can get a completion of that single file.\r\n\r\nHow can I correct this?",
        "labels": "Support",
        "id": 44111
    },
    {
        "title": "iterm2 with Oh-My-zsh agnoster but can't display any git branch",
        "body": "1.  macbook pro 13\r\n2. iterm2 version:Build 3.3.0\r\n3. use oh-my-zsh and agnoster theme.\r\n4. it can display very well an month ago  but sudden can show git branch\r\n\r\n求救各位大神啊!!!\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/48853137/62437043-27015980-b774-11e9-8608-113e74ad074e.png)\r\n\r\n",
        "labels": "Support",
        "id": 44112
    },
    {
        "title": "curl completion doesn't offer dash options in macOS",
        "body": "**Is your feature request related to a particular plugin or theme? If so, specify it.**\r\ncurl\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\ncurl command completion plugin has not yet implemented.\r\n\r\n**Describe the solution you'd like**\r\n`curl tab tab` or `curl - tab` show options of curl command.\r\nFor now we only have the following options, after issued `curl tab tab`\r\n```\r\ncurl file:\r\nfile:      ftp://     gopher://  http://    https://\r\n```\r\nExpected\r\n```\r\ncurl\r\n     --anyauth       Pick \"any\" authentication method (H)\r\n -a, --append        Append to target file when uploading (F/SFTP)\r\n     --basic         Use HTTP Basic Authentication (H)\r\n     --cacert FILE   CA certificate to verify peer against (SSL)\r\n     --capath DIR    CA directory to verify peer against (SSL)\r\n -E, --cert CERT[:PASSWD]  Client certificate file and password (SSL)\r\n     --cert-status   Verify the status of the server certificate (SSL)\r\n     --cert-type TYPE  Certificate file type (DER/PEM/ENG) (SSL)\r\n...\r\n```\r\n\r\n**Describe alternatives you've considered**\r\n`curl -h` would show the options.\r\n\r\n**Additional context**\r\nJust wanna send my encouragements, respects and supports.\r\nThank you.",
        "labels": "Support",
        "id": 44113
    },
    {
        "title": "Can not show all chinese of input. ",
        "body": "when I input chinese like this: '测试测试'\r\nit only show '测'.\r\n![image](https://user-images.githubusercontent.com/16915802/62025871-ee113400-b20b-11e9-8cce-eb25fed414d9.png)\r\n",
        "labels": "Support",
        "id": 44114
    },
    {
        "title": "Initial loading taking too much time - Ubuntu 18.04.2",
        "body": "when i installed zsh and theme it was working fine on 1st day and now its taking too much time in initial loading. i found files which are taking time in initial loading but what to do with these files update delete or what is possibility to fix this. \r\n\r\nscreen shot \r\n![sINfM](https://user-images.githubusercontent.com/11717600/61927292-b432fa00-af8d-11e9-8228-2762d54d8202.png)\r\n",
        "labels": "Support",
        "id": 44115
    },
    {
        "title": "source ~/.zshrc  error",
        "body": "```\r\nhank@AT9474-DLP:~$ --> source ~/.zshrc\r\n-bash: autoload: command not found\r\n-bash: /Users/hank/.oh-my-zsh/oh-my-zsh.sh: line 41: syntax error near unexpected token `('\r\n-bash: /Users/hank/.oh-my-zsh/oh-my-zsh.sh: line 41: `for plugin($plugins); do'\r\n```",
        "labels": "Support",
        "id": 44116
    },
    {
        "title": "Autocompletion fails to retrieve all matching parameters",
        "body": "**Describe the bug**\r\nMissing code completion for git aliases\r\n\r\n**To Reproduce**\r\n1. Add an alias to `~/.gitconfig` file\r\n```\r\n[alias]\r\n   clean-local-branches = \"!git branch | egrep -v '(master|\\\\*)' | xargs git branch -D\"\r\n```\r\n\r\n2. Open terminal and type `git cl`\r\n3. Press Tab key\r\n\r\n**behavior**\r\n`git clone` is autocompleted\r\n\r\n**Expected behavior**\r\nDisplay all matching parameters starting with `cl`\r\n\r\n**System:**\r\n - OS: macOS 10.14.5\r\n - Zsh version 5.7.1\r\n - Terminal emulator iTerm2 3.2.9\r\n\r\n**Additional context**\r\nThis seems to fail partially as here is a similar path but working fine when typing more characters:\r\n1. Open terminal and type `git cle` \r\n2. press Tab key -> autocompletes to `git clean` (OK) \r\n3. press Tab key -> displays all matches (OK)\r\n![image](https://user-images.githubusercontent.com/530122/61864695-c9deeb80-aec9-11e9-976c-9d23286dab02.png)\r\n^ These are the matches that should be also displayed previously\r\n",
        "labels": "Support",
        "id": 44117
    },
    {
        "title": "Aliases not working",
        "body": "I need some help debugging an issue I am having. So, I have several aliases defined in my zshrc. An example of that is \"c\" for clear. The aliases are recognized:\r\n\r\n```\r\n ~ which c   \r\nc: aliased to clear\r\n```\r\n\r\nHowever, doing \"c\" gives me:\r\n```\r\n ~ c\r\nzsh: command not found: c\r\n```\r\n\r\nThis is true for all other aliases. Functions are working correctly though. Any idea what might be causing this?\r\n\r\nI am using antergos and oh-my-zsh-git from the AUR. I should mention that the aliases worked absolutely fine until 2 or so days ago.",
        "labels": "Support",
        "id": 44118
    },
    {
        "title": "PS1 PS2 Merged with ZSH Autocomplete Menu",
        "body": "**Describe the bug**\r\nAutocomplete (TAB TAB) with new-line enabled causes PS1 and PS2 to merge, resulting in PS2 being on PS1 and becoming unresponsive to the exit key. Can press enter to clear the current command\r\n\r\n**To Reproduce**\r\n1. Enable plugin \"powerlevel10k/powerlevel10k\"\r\n2. Set POWERLEVEL9K_PROMPT_ON_NEWLINE=true\r\n3. Type a command, \r\n4. Press TAB TAB to autocomplete command/ autocompletion menu\r\n5. See error\r\n\r\n**Expected behavior**\r\nAutocomplete (TAB TAB) then exit should result going back to the current command line without UI bug.\r\n\r\n**Screenshots or recordings**\r\n<img width=\"493\" alt=\"image\" src=\"https://user-images.githubusercontent.com/19418225/61701474-23aeac80-ad36-11e9-8e70-e56db8cd974f.png\">\r\n\r\n<img width=\"413\" alt=\"image\" src=\"https://user-images.githubusercontent.com/19418225/61701521-34f7b900-ad36-11e9-8742-ed3d09717ed4.png\">\r\n\r\n<img width=\"425\" alt=\"image\" src=\"https://user-images.githubusercontent.com/19418225/61701986-f31b4280-ad36-11e9-8451-e519ac5538c4.png\">\r\n\r\n**System:**\r\nOS: macOS\r\nZsh version - 5.7.1\r\nTerminal emulator - iTerm2",
        "labels": "Support",
        "id": 44119
    },
    {
        "title": "[vi-mode] start as normal mode instead of insert mode",
        "body": "Hello everybody,\r\n\r\nThere is a way to start as normal mode instead of insert mode with `vi-mode` ?",
        "labels": "Support",
        "id": 44120
    },
    {
        "title": "complete:13: command not found: compdef",
        "body": "Fairly new to Ubuntu, zsh, and OMZ but seem to be having an issue where whenever I launch a terminal I'm struck with:\r\n\r\n$ exec zsh\r\ncomplete:13: command not found: compdef\r\n$\r\n\r\nI have tried just about every suggestion on previous issue threads and have had no luck. I am running terminal on WSL using WSLtty and connecting to an SSH. Any help would be appreciated!\r\n\r\nHere is my .zshrc file:\r\n\r\n```zsh\r\n# If you come from bash you might have to change your $PATH.\r\n# export PATH=$HOME/bin:/usr/local/bin:$PATH\r\n\r\n# Path to your oh-my-zsh installation.\r\nexport ZSH=\"/home/jgresock/.oh-my-zsh\"\r\n\r\n# Set name of the theme to load --- if set to \"random\", it will\r\n# load a random theme each time oh-my-zsh is loaded, in which case,\r\n# to know which specific one was loaded, run: echo $RANDOM_THEME\r\n# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes\r\nZSH_THEME=\"agnoster\"\r\n\r\n# Which plugins would you like to load?\r\n# Standard plugins can be found in ~/.oh-my-zsh/plugins/*\r\n# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/\r\n# Example format: plugins=(rails git textmate ruby lighthouse)\r\n# Add wisely, as too many plugins slow down shell startup.\r\nplugins=(git)\r\n\r\nsource $ZSH/oh-my-zsh.sh\r\n\r\n# User configuration\r\n\r\nalias zshconfig=\"mate ~/.zshrc\"\r\nalias ohmyzsh=\"mate ~/.oh-my-zsh\"\r\n```",
        "labels": "Support",
        "id": 44121
    },
    {
        "title": "Problem create menu complement",
        "body": "I would like an aid, if possible.\r\n\r\nI am configuring a tool in zsh and creating an Oh My Zsh plugin for my masters.\r\n\r\nThe idea is to set up a self-completion for the terminal, I have a menu A of the tool, a submenu B and a submenu C of B. I was able to make submenu B work, but I can not do submenu C.\r\n\r\nMy script looks like this:\r\n\r\n[n-zsh.txt](https://github.com/robbyrussell/oh-my-zsh/files/3418934/n-zsh.txt)\r\n",
        "labels": "Support",
        "id": 44122
    },
    {
        "title": "How to disable changing directory by directory name",
        "body": "As known oh-my-zsh have a Intelligent way to change directory by directory name instead of \r\n`cd name`, but sometimes It bothered me to execute some command，assume that there is a directory named **gradle**， and I want to execute command **gradle** to build my project，but oh-my-zsh lead this command to  `change directory`",
        "labels": "Support",
        "id": 44123
    },
    {
        "title": "Unable to update",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nWhen I try to update Oh My Zsh (either manually or when prompted), I get an error.\r\n![image](https://user-images.githubusercontent.com/15055071/61600539-ffdc5100-abe5-11e9-82f0-6d43481975d5.png)\r\n\r\nIf I try to run git status in the .oh-my-zsh directory, I get a similar error. I'm guessing something is corrupted in the .oh-my-zsh local repo on my machine.\r\n![image](https://user-images.githubusercontent.com/15055071/61600557-1d111f80-abe6-11e9-9b29-7e98845c8628.png)\r\n\r\n\r\n**To Reproduce**\r\nNot really sure? It just started happening.\r\n\r\n**Expected behavior**\r\nI expect the update to proceed smoothly\r\n\r\n**System:**\r\n - OS: Windows 10 (WSL)\r\n - Zsh version: 5.4.2\r\n - Terminal emulator: Hyper\r\n\r\n",
        "labels": "Support",
        "id": 44124
    },
    {
        "title": "ZSH always asks for passphrase when cd to a directory with git",
        "body": "<!--\r\n1. Look for similar issues already posted (including closed ones)\r\n2. Include as much relevant information as possible\r\n3. Try to make sure the issue is due to Oh My Zsh\r\n-->\r\n\r\nI've searched a lot and can't find an answer, but everytime I `cd` to a directory that has git enabled (`git init`), zsh always asks for my `ssh key` passphrase after every command.\r\n\r\nIf I enter my passphrase, then zsh hangs and I have to kill it. If I just hit enter and leave the passphrase blank, then it works normally, but asks for the passphrase again after each command. If I remove my key from `.ssh` directory, then it won't ask for my passphrase anymore.\r\n\r\nHere is my full `.zshrc` file:\r\n\r\n```\r\n# If you come from bash you might have to change your $PATH.\r\n# export PATH=$HOME/bin:/usr/local/bin:$PATH\r\n\r\nexport ANDROID_HOME=~/Android/Sdk\r\nexport PATH=\"$PATH:$ANDROID_HOME/tools\"\r\nexport PATH=\"$PATH:$ANDROID_HOME/platform-tools\"\r\n\r\n# Path to your oh-my-zsh installation.\r\nexport ZSH=\"/Users/otaviobonder/.oh-my-zsh\"\r\nexport PATH=\"$PATH:/usr/local/bin\"\r\nexport PATH=\"$HOME/.fastlane/bin:$PATH\"\r\n\r\n# Set name of the theme to load --- if set to \"random\", it will\r\n# load a random theme each time oh-my-zsh is loaded, in which case,\r\n# to know which specific one was loaded, run: echo $RANDOM_THEME\r\n# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes\r\nZSH_THEME=\"spaceship\"\r\n\r\n# Set list of themes to pick from when loading at random\r\n# Setting this variable when ZSH_THEME=random will cause zsh to load\r\n# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/\r\n# If set to an empty array, this variable will have no effect.\r\n# ZSH_THEME_RANDOM_CANDIDATES=( \"robbyrussell\" \"agnoster\" )\r\n\r\n# Uncomment the following line to use case-sensitive completion.\r\n# CASE_SENSITIVE=\"true\"\r\n\r\n# Uncomment the following line to use hyphen-insensitive completion.\r\n# Case-sensitive completion must be off. _ and - will be interchangeable.\r\n# HYPHEN_INSENSITIVE=\"true\"\r\n\r\n# Uncomment the following line to disable bi-weekly auto-update checks.\r\n# DISABLE_AUTO_UPDATE=\"true\"\r\n\r\n# Uncomment the following line to change how often to auto-update (in days).\r\n# export UPDATE_ZSH_DAYS=13\r\n\r\n# Uncomment the following line to disable colors in ls.\r\n# DISABLE_LS_COLORS=\"true\"\r\n\r\n# Uncomment the following line to disable auto-setting terminal title.\r\n# DISABLE_AUTO_TITLE=\"true\"\r\n\r\n# Uncomment the following line to enable command auto-correction.\r\n# ENABLE_CORRECTION=\"true\"\r\n\r\n# Uncomment the following line to display red dots whilst waiting for completion.\r\n# COMPLETION_WAITING_DOTS=\"true\"\r\n\r\n# Uncomment the following line if you want to disable marking untracked files\r\n# under VCS as dirty. This makes repository status check for large repositories\r\n# much, much faster.\r\n# DISABLE_UNTRACKED_FILES_DIRTY=\"true\"\r\n\r\n# Uncomment the following line if you want to change the command execution time\r\n# stamp shown in the history command output.\r\n# You can set one of the optional three formats:\r\n# \"mm/dd/yyyy\"|\"dd.mm.yyyy\"|\"yyyy-mm-dd\"\r\n# or set a custom format using the strftime function format specifications,\r\n# see 'man strftime' for details.\r\n# HIST_STAMPS=\"mm/dd/yyyy\"\r\n\r\n# Would you like to use another custom folder than $ZSH/custom?\r\n# ZSH_CUSTOM=/path/to/new-custom-folder\r\n\r\n# Which plugins would you like to load?\r\n# Standard plugins can be found in ~/.oh-my-zsh/plugins/*\r\n# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/\r\n# Example format: plugins=(rails git textmate ruby lighthouse)\r\n# Add wisely, as too many plugins slow down shell startup.\r\nplugins=(git)\r\n\r\n\r\n# User configuration\r\n\r\n# export MANPATH=\"/usr/local/man:$MANPATH\"\r\n\r\n# You may need to manually set your language environment\r\n# export LANG=en_US.UTF-8\r\n\r\n# Preferred editor for local and remote sessions\r\n# if [[ -n $SSH_CONNECTION ]]; then\r\n#   export EDITOR='vim'\r\n# else\r\n#   export EDITOR='mvim'\r\n# fi\r\n\r\n# Compilation flags\r\n# export ARCHFLAGS=\"-arch x86_64\"\r\n\r\n# ssh\r\n# export SSH_KEY_PATH=\"~/.ssh/rsa_id\"\r\n\r\n# Set personal aliases, overriding those provided by oh-my-zsh libs,\r\n# plugins, and themes. Aliases can be placed here, though oh-my-zsh\r\n# users are encouraged to define aliases within the ZSH_CUSTOM folder.\r\n# For a full list of active aliases, run `alias`.\r\n#\r\n# Example aliases\r\n# alias zshconfig=\"mate ~/.zshrc\"\r\n# alias ohmyzsh=\"mate ~/.oh-my-zsh\"\r\n\r\nexport NVM_DIR=\"$HOME/.nvm\"\r\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm\r\n[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\r\n\r\n### Added by Plugin's installer\r\nsource '/Users/otaviobonder/.zplugin/bin/zplugin.zsh'\r\nautoload -Uz _zplugin\r\n(( ${+_comps} )) && _comps[zplugin]=_zplugin\r\n### End of Zplugin's installer chunk\r\n\r\nzplugin light zdharma/fast-syntax-highlighting\r\nzplugin light zsh-users/zsh-autosuggestions\r\nzplugin light zsh-users/zsh-history-substring-search\r\nzplugin light zsh-users/zsh-completions\r\nzplugin light buonomo/yarn-completion\r\n\r\npasteinit() {\r\n  OLD_SELF_INSERT=${${(s.:.)widgets[self-insert]}[2,3]}\r\n  zle -N self-insert url-quote-magic # I wonder if you'd need `.url-quote-magic`?\r\n}\r\n\r\npastefinish() {\r\n  zle -N self-insert $OLD_SELF_INSERT\r\n}\r\nzstyle :bracketed-paste-magic paste-init pasteinit\r\nzstyle :bracketed-paste-magic paste-finish pastefinish\r\n\r\n\r\n# Simplify prompt if we're using Hyper\r\nif [[ \"$TERM_PROGRAM\" == \"Hyper\" ]]; then\r\n  SPACESHIP_PROMPT_SEPARATE_LINE=false\r\n  SPACESHIP_DIR_SHOW=false\r\n  SPACESHIP_GIT_BRANCH_SHOW=false\r\nfi\r\n\r\n  # Set Spaceship ZSH as a prompt\r\n  autoload -U promptinit; promptinit\r\n  prompt spaceship\r\n\r\n```\r\n\r\nI thought that the `git` plugin was causing the issue, but I disabled it and the problem persisted. I have no clues on what can it be.\r\n\r\nAny help is appreciated. Thanks!",
        "labels": "Support",
        "id": 44125
    },
    {
        "title": "Disable Aliases from plugins I didn't enable",
        "body": "It appears that a bunch of aliases have been enabled upon installing `oh-my-zsh`, even though the plugin files in which they are declared were never included in my `.zshrc`\r\n\r\nHow can I disable all those aliases?\r\n\r\nP.S.: I noticed several similar issues but none actually discussing this specific issue.",
        "labels": "Support",
        "id": 44126
    },
    {
        "title": "How can i change theme in mac OS catalina",
        "body": "Hey, I just updated my os to Catalina beta. I just search ~/zshrc file to change the theme but I find it empty. Can anyone help me  how to change the theme .\r\n",
        "labels": "Support",
        "id": 44127
    },
    {
        "title": "Adding '├─' Character between propmpt line..",
        "body": "<!--\r\n1. Look for similar issues already posted (including closed ones)\r\n2. Include as much relevant information as possible\r\n3. Try to make sure the issue is due to Oh My Zsh\r\n-->\r\nHello, I'm using zsh\r\n\r\nI would like to start with Thank you for your service.\r\n\r\nI have two problems..\r\n\r\n1. I can't see fully updated zsh\r\n: I'm working on Windows 10, ununtu 18.04 (on Hyper V virtual machine) through MobaXterm.\r\nIn Hyper V virtual machine, I can see good zsh theme with nerd font.\r\n![image](https://user-images.githubusercontent.com/34624307/61348091-5ec66100-a89a-11e9-9a0f-2a2b55548d80.png)\r\nBut I can't see on MobaXterm.. I installed nerd fonts on ubuntu and windows and both are adjusted same fonts. It works on ubuntu but not on Windows..\r\n![image](https://user-images.githubusercontent.com/34624307/61348207-bf559e00-a89a-11e9-89df-742167368cc7.png)\r\n\r\n\r\n2. I want to add \"├─\" Character between prompt lines.\r\n:\r\n![image](https://user-images.githubusercontent.com/34624307/61348269-ef04a600-a89a-11e9-9d74-e41ca4197beb.png)\r\nI wanna add ├─ character over here.  How can I do it ?\r\nI modified\r\n**POWERLEVEL9K_MULTILINE_SECOND_PROMPT_PREFIX** and **POWERLEVEL9K_MULTILINE_NEWLINE_PROMPT_PREFIX**\r\nBut it never worked.. 😢\r\n\r\nHere below is my `~/.zshrc`\r\n```bash\r\n# If you come from bash you might have to change your $PATH.\r\n# export PATH=$HOME/bin:/usr/local/bin:$PATH\r\n\r\n# Path to your oh-my-zsh installation.\r\nexport ZSH=\"/home/hanzo/.oh-my-zsh\"\r\nexport TERM=\"xterm-256color\"\r\n# Set name of the theme to load --- if set to \"random\", it will\r\n# load a random theme each time oh-my-zsh is loaded, in which case,\r\n# to know which specific one was loaded, run: echo $RANDOM_THEME\r\n# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes\r\n\r\nPOWERLEVEL9K_MODE='nerdfont-complete'\r\nPOWERLEVEL9K_MODE='default'\r\n\r\n\r\nZSH_THEME=\"powerlevel9k/powerlevel9k\"\r\n\r\n# Set list of themes to pick from when loading at random\r\n# Setting this variable when ZSH_THEME=random will cause zsh to load\r\n# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/\r\n# If set to an empty array, this variable will have no effect.\r\n# ZSH_THEME_RANDOM_CANDIDATES=( \"robbyrussell\" \"agnoster\" )\r\n\r\n# Uncomment the following line to use case-sensitive completion.\r\n# CASE_SENSITIVE=\"true\"\r\n\r\n# Uncomment the following line to use hyphen-insensitive completion.\r\n# Case-sensitive completion must be off. _ and - will be interchangeable.\r\n# HYPHEN_INSENSITIVE=\"true\"\r\n\r\n# Uncomment the following line to disable bi-weekly auto-update checks.\r\n# DISABLE_AUTO_UPDATE=\"true\"\r\n\r\n# Uncomment the following line to automatically update without prompting.\r\n# DISABLE_UPDATE_PROMPT=\"true\"\r\n\r\n# Uncomment the following line to change how often to auto-update (in days).\r\n# export UPDATE_ZSH_DAYS=13\r\n\r\n# Uncomment the following line if pasting URLs and other text is messed up.\r\n# DISABLE_MAGIC_FUNCTIONS=true\r\n\r\n# Uncomment the following line to disable colors in ls.\r\n# DISABLE_LS_COLORS=\"true\"\r\n\r\n# Uncomment the following line to disable auto-setting terminal title.\r\n# DISABLE_AUTO_TITLE=\"true\"\r\n\r\n# Uncomment the following line to enable command auto-correction.\r\n# ENABLE_CORRECTION=\"true\"\r\n\r\n# Uncomment the following line to display red dots whilst waiting for completion.\r\n# COMPLETION_WAITING_DOTS=\"true\"\r\n\r\n# Uncomment the following line if you want to disable marking untracked files\r\n# under VCS as dirty. This makes repository status check for large repositories\r\n# much, much faster.\r\n# DISABLE_UNTRACKED_FILES_DIRTY=\"true\"\r\n\r\n# Uncomment the following line if you want to change the command execution time\r\n# stamp shown in the history command output.\r\n# You can set one of the optional three formats:\r\n# \"mm/dd/yyyy\"|\"dd.mm.yyyy\"|\"yyyy-mm-dd\"\r\n# or set a custom format using the strftime function format specifications,\r\n# see 'man strftime' for details.\r\n# HIST_STAMPS=\"mm/dd/yyyy\"\r\n\r\n# Would you like to use another custom folder than $ZSH/custom?\r\n# ZSH_CUSTOM=/path/to/new-custom-folder\r\n\r\n# Which plugins would you like to load?\r\n# Standard plugins can be found in ~/.oh-my-zsh/plugins/*\r\n# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/\r\n# Example format: plugins=(rails git textmate ruby lighthouse)\r\n# Add wisely, as too many plugins slow down shell startup.\r\nplugins=(git virtualenv)\r\n\r\nsource $ZSH/oh-my-zsh.sh\r\n\r\n# User configuration\r\n\r\n# export MANPATH=\"/usr/local/man:$MANPATH\"\r\n\r\n# You may need to manually set your language environment\r\n# export LANG=en_US.UTF-8\r\n\r\n# Preferred editor for local and remote sessions\r\n# if [[ -n $SSH_CONNECTION ]]; then\r\n#   export EDITOR='vim'\r\n# else\r\n#   export EDITOR='mvim'\r\n# fi\r\n\r\n# Compilation flags\r\n# export ARCHFLAGS=\"-arch x86_64\"\r\n\r\n# Set personal aliases, overriding those provided by oh-my-zsh libs,\r\n# plugins, and themes. Aliases can be placed here, though oh-my-zsh\r\n# users are encouraged to define aliases within the ZSH_CUSTOM folder.\r\n# For a full list of active aliases, run `alias`.\r\n#\r\n#\r\n# Example aliases\r\n# alias zshconfig=\"mate ~/.zshrc\"\r\n# alias ohmyzsh=\"mate ~/.oh-my-zsh\"\r\nPOWERLEVEL9K_PROMPT_ON_NEWLINE=true\r\nPOWERLEVEL9K_MULTILINE_NEWLINE_PROMPT_PREFIX='├─'\r\nPOWERLEVEL9K_MULTILINE_SECOND_PROMPT_PREFIX='├─'\r\nPOWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(os_icon dir virtualenv newline vcs pyenv)\r\nexport POWERLEVEL9K_PYENV_PROMPT_ALWAYS_SHOW=1\r\n#POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(dir virtualenv vcs)\r\nPOWERLEVEN9K_RIGHT_PROMPT_ELEMENTS=(status)\r\nPOWERLEVEL9K_LEFT_SEGMENT_SEPARATOR=$'\\uE0B0'\r\nPOWERLEVEL9K_RIGHT_SEGMENT_SEPARATOR=$'\\uE0B2'\r\nexport PYENV_ROOT=\"$HOME/.pyenv\"\r\nexport PATH=\"$PYENV_ROOT/bin:$PATH\"\r\neval \"$(pyenv init -)\"\r\n\r\nbash /home/hanzo/mount.sh\r\nOS_ICON=⚡ # Ubuntu icon was not working so.. turned it\r\n\r\n#export VIRTUAL_ENV_DISABLE_PROMPT=1\r\n```\r\nThank you very much \r\n\r\n\r\n",
        "labels": "Support",
        "id": 44128
    },
    {
        "title": "parse error near `()'",
        "body": "Hi,\r\n\r\nRecently I always get this error whenever I open a new terminal:\r\n```/Users/andreduong/.zshrc:90: parse error near `()'```",
        "labels": "Support",
        "id": 44129
    },
    {
        "title": "Readme of sfdx plugin ",
        "body": "Hi,\r\n\r\nis there any recent  documentation for sfdx plugin? \r\nI ve added in my plugins but it does not work. Should I follow https://github.com/wadewegner/salesforce-cli-zsh-completion guide?",
        "labels": "Support",
        "id": 44130
    },
    {
        "title": "vi-mode / and ? override to search within current line",
        "body": "The primary reason I use the vi-mode plugin is to easily navigate and edit long commands. However, the default search behaviour for `/` and `?` is to search through the command history, which I already have through `FZF`. I'd like to override this current history search to instead search through the current command, moving the cursor to the result.\r\n\r\nFurther, can you provide what I need to include in the zshrc to override the default `/`, `?` , `n` and `N` to have vim-mode search achieve this behaviour.",
        "labels": "Support",
        "id": 44131
    },
    {
        "title": "gitfast - command completion for git send-email",
        "body": "In trying to have a faster git-prompt and git branch switching etc I changed from 'git' plugin to use 'gitfast' plugin.  It's great but I can't get command completion to work for 'git send-email' and 'git format-patch'\r\n\r\nI've deleted the .zcomp* file and restarted but no joy.\r\n\r\nAny ideas?",
        "labels": "Support",
        "id": 44132
    },
    {
        "title": "Unable to create file filename*.txt using vim on terminal",
        "body": " I want to create a file(filename*.txt) using Vim editor on Terminal.But I am unable to create it.It is possible to create such file using bash shell.\r\n\r\n**Describe the bug**\r\n          I want to create a file(filename*.txt) using Vim editor on Terminal.As I have to use filename like file*1.txt but zsh is giving me error. \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Open Terminal\r\n2. zsh (Enter) Entering into zsh\r\n3. Run command 'vi file*1.txt '\r\n4. See error 'zsh: no matches found: file*1.txt'\r\n\r\n\r\n**Expected behavior**\r\n          I want to create a file named 'file*1.txt' using vim editor on zsh.I am able to create this file successfully using bash shell.\r\n\r\n\r\n**Screenshots or recordings**\r\nhttps://imgur.com/uGJtgDA\r\n\r\n\r\n**System:**\r\n - OS: Ubuntu 18.04.2 LTS\r\n - Zsh version zsh 5.4.2 (x86_64-ubuntu-linux-gnu)\r\n - Terminal emulator xterm-256color\r\n\r\n",
        "labels": "Support",
        "id": 44133
    },
    {
        "title": "Clear Command Not Working Properly",
        "body": "a. Describe the bug:\r\n\"clear\" command is not working Properly on switching the tabs. \r\n\r\nb. To Reproduce:\r\nSteps to reproduce the problem ( make sure you have only 1 tab in the terminal right now ):\r\n1. Clear a tab. \r\n2. Add a new tab to the terminal - cmd + T\r\n3. Switch back to the tab where you cleared the screen. \r\n4. See error, screen wont be cleared.\r\n\r\nc. Expected behavior:\r\nScreen should remain clear\r\n\r\nd. System:\r\n - OS: macOS\r\n - Zsh version - 5.7.1\r\n - Terminal emulator - iTerm2\r\n",
        "labels": "Support",
        "id": 44134
    },
    {
        "title": "macOS Catalina default zsh support?",
        "body": "I'm a complete terminal n00b, please excuse the dumb questions.\r\n\r\nAre there plans to support macOS Catalina's zsh?\r\nIt would be great if installation of themes and plugins could be integrated with the native zsh on Catalina without having to install zsh again. Or maybe ohmyzsh has modified zsh to allow plugins/themes?\r\n\r\nI just can't seem to find anything (that I understand) on the Internet. Please feel free to close this issue if my question doesn't make any sense. Really appreciate the enlightenment! Thank you!\r\n",
        "labels": "Support",
        "id": 44135
    },
    {
        "title": "No spaces in command prompt when using tmux",
        "body": "<!--\r\n1. Look for similar issues already posted (including closed ones)\r\n2. Include as much relevant information as possible\r\n3. Try to make sure the issue is due to Oh My Zsh\r\n-->\r\n I pulled **pytorch/pytorch:1.1.0-cuda10.0-cudnn7.5-runtime** from Docker Hub, and install tmux and zsh in this docker.\r\n\r\nAt first, after I start tmux, it displays an extra space in tmux, I added the following to ~/.zshrc:\r\n```\r\nexport LC_ALL=en_US.UTF-8 \r\nexport LANG=en_US.UTF-8\r\n```\r\nand added the following to .tmux.conf:\r\n```\r\nset -g utf8\r\nset-window-option -g utf8 on\r\n```\r\nHowever, after I start tmux, there is no space in command prompt:\r\n\r\n![jQMQ3](https://user-images.githubusercontent.com/13976974/60084772-bb869e00-976a-11e9-9340-8f9433de00ea.png)\r\n\r\n",
        "labels": "Support",
        "id": 44136
    },
    {
        "title": "There are commands missing in zsh that exist in bash",
        "body": "I followed step by step of installation guide but zsh does not find some components for example `npm`.\r\n\r\nIf I run `npm version` in zsh, it says: `comand not found: npm`\r\n\r\nBut I go to bash and run the same command, it works. And then in the same window if I go back to zsh and run `npm version`, it works normally.\r\n\r\nI wonder if it's happening with other things and I didn't try yet.\r\n\r\nMy question is: how do I turn all the bash commands to zsh?",
        "labels": "Support",
        "id": 44137
    },
    {
        "title": "Fix bad colors on Mac Terminal",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n<!-- A clear and concise description of what the bug is. -->\r\nCurrently on Mac Mojave 10.14, the CLI prompt in Terminal is unsightly. Power line bar is almost blacked out with very dark colors making the text unreadable. Using the default theme agnoster that came with installing oh-my-zsh. No issues with iTerm2\r\n\r\n\r\n**To Reproduce**\r\n<!--\r\nSteps to reproduce the behavior:\r\n1. Enable plugin '...'\r\n2. Run command '...', _or_ try to complete command '...', _etc._\r\n3. See error\r\n-->\r\nSet zsh as the default,  \r\nThe few following settings in .zshrc sourced at time of events  \r\n```  \r\n...\r\n source $HOME/.zsh/bundle/bin/antigen.zsh\r\n antigen use oh-my-zsh\r\n antigen bundle git\r\nantigen theme agnoster\r\n```  \r\nLaunch Terminal,   \r\nUse default preferences and Basic profile, set Font to Roboto Mono for Powerline    \r\nObserve appearance  \r\n\r\n**Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\nOn default Terminal, while on zsh and using agnoster theme, I expect a clear cli prompt with light colors, readable text on a white background.\r\n\r\n**Screenshots or recordings**\r\n<!--\r\nIf applicable, add screenshots or record an asciinema session (https://asciinema.org/)\r\nto help explain your problem.\r\n-->\r\n![image](https://user-images.githubusercontent.com/1103336/59986245-e99d9e00-9603-11e9-8b6c-a8a17531bd8c.png)\r\n\r\n**System:**\r\n - OS: Mac Mojave 10.14\r\n - Zsh version: latest\r\n - Terminal emulator: Mac default Terminal \r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->  \r\nDo I need to change color bit depth  \r\n",
        "labels": "Support",
        "id": 44138
    },
    {
        "title": "Git Prompt ",
        "body": "<!--\r\n1. Look for similar issues already posted (including closed ones)\r\n2. Include as much relevant information as possible\r\n3. Try to make sure the issue is due to Oh My Zsh\r\n-->\r\nHi Oh-My-Zsh Team,\r\n\r\nThank you for making such a wonderful product.  I am trying to create a custom theme and for the most part got it working.\r\n\r\nThe only quirk that I cannot figure out is why when I press tab to autocomplete/autosuggest, the prompt gets munched up.\r\n\r\nI tried removing the emoji's and special characters, but the only time this issue does not happen is when the git information is not displayed at all.\r\n\r\nAttached are some screenshots of what’s happening.\r\n\r\nThis is my prompt configuration:\r\nhttps://github.com/zhao-li/dots/blob/master/custom/themes/zhaoli.zsh-theme\r\n\r\nAny ideas, how I can fix my prompt so tabbing out doesn’t munch the prompt?\r\n\r\nThank you for your time\r\n<img width=\"720\" alt=\"NoGit_NoMunching\" src=\"https://user-images.githubusercontent.com/2177879/59956574-d2f11e80-942c-11e9-9286-ccc023517fa0.png\">\r\n<img width=\"717\" alt=\"WithGit_HasMunching\" src=\"https://user-images.githubusercontent.com/2177879/59956577-d8e6ff80-942c-11e9-98d1-1dec7319270b.png\">\r\n\r\n",
        "labels": "Support",
        "id": 44139
    },
    {
        "title": "Git prompt not documented",
        "body": "**Describe the bug**\r\nI can't find any documentation on the git prompt.\r\n\r\n**To Reproduce**\r\nDocs -> Plugins\r\nTry to click https://github.com/robbyrussell/oh-my-zsh/wiki/Plugins#git-prompt\r\n\r\n**Expected behavior**\r\nDocumentation on git prompt. What is +/-? What is the lightning bolt?\r\n",
        "labels": "Support",
        "id": 44140
    },
    {
        "title": "Cannot activate brew plugin to work",
        "body": "<!--\r\n1. Look for similar issues already posted (including closed ones)\r\n2. Include as much relevant information as possible\r\n3. Try to make sure the issue is due to Oh My Zsh\r\n-->\r\n\r\nHi, even if I've already enabled the `brew` plugin in `~/.zshrc`, and then source the file using `source ~/.zshrc`, finally restart the terminal, the `brews` command is still not found\r\n\r\npart of my `.zhsrc`:\r\n```sh\r\n# plugins\r\nplugins=(\r\n  git\r\n  autojump\r\n)\r\n\r\n# set autojump\r\n[[ -s `brew --prefix`/etc/autojump.sh ]] && . `brew --prefix`/etc/autojump.sh\r\n\r\n# set zsh syntax highlighting\r\nsource /Users/haoyangfan/Documents/settings/zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh\r\n```\r\n\r\nWhat I got after restarting the terminal\r\n```\r\n❯ brews\r\nzsh: command not found: brews\r\n```\r\n\r\nI think `brew` plugin is already bundled with `oh-my-zsh` so that I don't need to install it again by myself? \r\n\r\nAny help will be appreciated!",
        "labels": "Support",
        "id": 44141
    },
    {
        "title": "Zsh shut down mac",
        "body": "Is zsh can shut down macbook pro? Without any additional plugins, just randomly turn off",
        "labels": "Support",
        "id": 44142
    },
    {
        "title": "Autocomplete for custom function?",
        "body": "Considering that I have this function in `~/.zshrc`:\r\n\r\n```\r\nfunction work() {\r\n    cd /home/lucas/work/$1\r\n}\r\n```\r\n\r\nAnd these folders:\r\n\r\n```\r\n/home/lucas/work/foo\r\n/home/lucas/work/bar\r\n```\r\n\r\nHow can I type `work f` and press \"tab\" to get `work foo`?",
        "labels": "Support",
        "id": 44143
    },
    {
        "title": "Django tab completion does not work on cloned projects",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\nThe Django plugin does not work on a cloned project but works on projects created locally.\r\n\r\n\r\n\r\n**To Reproduce**\r\n<!--\r\nSteps to reproduce the behavior:\r\n1. Enable plugin '...'\r\n2. Run command '...', _or_ try to complete command '...', _etc._\r\n3. See error\r\n-->\r\n\r\nEnable plugin `django`.\r\n\r\nSay I have a project `profile_project_remote` on GitHub that's created on another machine and I have django installed on my local machine.\r\n\r\nIf I clone the remote project **that's not created locally by myself**:\r\n\r\n```\r\ngit clone git@github.com:HymanZHAN/profile_project_remote.git\r\ncd profile_project_remote\r\npython manage.py <Hit Tab>\r\n// A list of local files shows up.\r\nmanage.py         Pipfile           Pipfile.lock      profile_project/  profiles_api/\r\n```\r\n\r\nIf I start a new project locally:\r\n\r\n```\r\ndjango-admin startproject profile_project_local\r\ncd profile_project_local\r\npython manage.py <Hit Tab>\r\n// Django commands show up.\r\ncleanup                    -- remove old data from the database\r\ncompilemessages            -- compile .po files to .mo for use with gettext\r\ncreatecachetable           -- creates table for SQL cache backend\r\ncreatesuperuser            -- create a superuser\r\ndbshell                    -- run command-line client for the current database\r\ndiffsettings               -- display differences between the current settings and Django defaults\r\ndumpdata                   -- output contents of database as a fixture\r\nflush                      -- execute 'sqlflush' on the current database\r\ninspectdb                  -- output Django model module for tables in database\r\nloaddata                   -- install the named fixture(s) in the database\r\nmakemessages               -- pull out all strings marked for translation\r\nreset                      -- executes 'sqlreset' for the given app(s)\r\nrunfcgi                    -- run this project as a fastcgi\r\nrunserver                  -- start a lightweight web server for development\r\n```\r\n\r\n**Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\nThe autocompletion should also work on the cloned project.\r\n\r\n**Screenshots or recordings**\r\n<!--\r\nIf applicable, add screenshots or record an asciinema session (https://asciinema.org/)\r\nto help explain your problem.\r\n-->\r\n![cloned_project](https://user-images.githubusercontent.com/26806995/59456452-56cf5900-8de4-11e9-82e5-58e8f2d8307c.png)\r\n\r\n![local_project](https://user-images.githubusercontent.com/26806995/59456456-5a62e000-8de4-11e9-927d-51923d52d3c1.png)\r\n\r\n\r\n**System:**\r\n - OS: PopOS 19.04\r\n - Zsh version: zsh 5.5.1 (x86_64-ubuntu-linux-gnu)\r\n - Terminal emulator: Tilix & Gnome Terminal\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n",
        "labels": "Support",
        "id": 44144
    },
    {
        "title": "vim shows strange characters in zsh",
        "body": "\r\nStrange characters and no colour in VIm after new install of zsh\r\n\r\n\r\n**Describe the bug**\r\nVIm shows strange characters that won't go away in zsh. Vim in bash works fine. \r\n\r\n**To Reproduce**\r\n\r\n1. install homebrew - /usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\r\n2. install zsh - homebrew install zsh\r\n3. install oh my zsh - sh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\r\n4. tried to change thing sin .zshrc - vim ~/.zshrc\r\n\r\n\r\n**Expected behavior**\r\ncolours to show in VIm and no strange characters\r\n\r\n**Screenshots or recordings**\r\n<![Screen Shot 2019-06-05 at 10 18 59 PM](https://user-images.githubusercontent.com/49956921/59003172-e7a1a580-87e2-11e9-83e3-4bf98bc9a49c.png)>\r\n\r\n**System:**\r\n - OS: High Sierra 10.13.6\r\n - Zsh version 5.7.1 (x86_64-apple-darwin17.7.0)\r\n - iTerm2]\r\n\r\n**Additional context**\r\ni had tmux installed, but its not working in zsh either\r\n",
        "labels": "Support",
        "id": 44145
    },
    {
        "title": "Plugin not found even though not specified anywhere",
        "body": "Hi folks,\r\n\r\nSo I just moved to iTerm2 and zsh, along with OMZ. I am getting this error constantly when opening up a new terminal session:\r\n```\r\n[oh-my-zsh] plugin 'hub' not found\r\n[oh-my-zsh] plugin 'colored-man-page' not found\r\n```\r\n\r\nNow, even uninstalling and installing OMZ I get this. I am not sure where this plugin is called but my `zshrc` file contains:\r\n```\r\nplugins=(git wd last-working-dir)\r\nexport ZSH=/Users/doron.katz/.local/share/oh-my-zsh\r\nsource $ZSH/oh-my-zsh.sh\r\nsource /Users/doron.katz/.local/share/oh-my-zsh/plugins/colored-man-page/colored-man-pages.plugin.zsh\r\nexport PATH=\"/usr/local/bin:/usr/local/sbin:~/bin:$PATH\"export PATH=\"/usr/local/sbin:$PATH\"\r\nPOWERLEVEL9K_MODE='nerdfont-complete'\r\nsource  ~/powerlevel9k/powerlevel9k.zsh-theme\r\nPOWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(ssh dir vcs newline status)\r\nPOWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=()\r\nPOWERLEVEL9K_PROMPT_ADD_NEWLINE=true\r\n```\r\n\r\nI have even added `source /Users/doron.katz/.local/share/oh-my-zsh/plugins/colored-man-pages/colored-man-pages.plugin.zsh`. \r\n\r\nThe folder exists, but not sure who is calling that plugin anyway.. THe same for HUB.\r\n\r\nPlease help!\r\n\r\n",
        "labels": "Support",
        "id": 44146
    },
    {
        "title": "tweak tab title when a program is running?",
        "body": "I sometimes have 3 or 4 tabs running gradlew in iterm2. Whenever I run gradle, the tab title changes to `./gradlew`\r\n\r\nIs there a way to alter the tab title so that it includes the last part of the path?\r\n\r\nlike foo:gradlew where is foo is the last part of the path?  /abc/def/foo\r\n\r\n",
        "labels": "Support",
        "id": 44147
    },
    {
        "title": "kubectl plugin fails with permission denied: /usr/share/oh-my-zsh/cache/kubectl_completion",
        "body": "**Describe the bug**\r\nI have the `kubectl` plugin installed but I always get the following error when starting the shell:\r\n\r\n```bash\r\n/usr/share/oh-my-zsh/plugins/kubectl/kubectl.plugin.zsh:5: permission denied: /usr/share/oh-my-zsh/cache/kubectl_completion\r\n```\r\nThe respective code is this\r\n\r\n```bash\r\nif (( $+commands[kubectl] )); then\r\n    __KUBECTL_COMPLETION_FILE=\"${ZSH_CACHE_DIR}/kubectl_completion\"\r\n\r\n    if [[ ! -f $__KUBECTL_COMPLETION_FILE ]]; then\r\n        kubectl completion zsh >! $__KUBECTL_COMPLETION_FILE\r\n    fi\r\n\r\n    [[ -f $__KUBECTL_COMPLETION_FILE ]] && source $__KUBECTL_COMPLETION_FILE\r\n\r\n    unset __KUBECTL_COMPLETION_FILE\r\nfi\r\n```\r\nThere is no `kubectl_completion` in the `cache` \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Enable plugin 'kubectl'\r\n2. Open new terminal\r\n3. See error\r\n```bash\r\n/usr/share/oh-my-zsh/plugins/kubectl/kubectl.plugin.zsh:5: permission denied: /usr/share/oh-my-zsh/cache/kubectl_completion\r\n```\r\n\r\n**Expected behavior**\r\nNo error at all.\r\n\r\n**System:**\r\n - OS: Linux\r\n - Zsh version `zsh 5.7.1 (x86_64-pc-linux-gnu)`",
        "labels": "Support",
        "id": 44148
    },
    {
        "title": "Extra backslash for url parameters",
        "body": "<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\nWhen I type an url with parameters in my shell, e.g. `http://a.b.com/bla=1`, or paste it from clipboard (OSX), I always get extra backslash in front of parameter's values, i.e. `http://a.b.com/bla\\=1`. Originally I thought it was an issue of terminal I use or zsh, but I verified using different shells/computers that it is related to oh-my-zsh settings I have.\r\n\r\n**To Reproduce**\r\n1. you can either start typing `http://a.b.com/bla=1`\r\n2. you can copy an url with parameters and paste it in your shell\r\nin both cases I get back the following result\r\n`http://a.b.com/bla\\=1`\r\nI found that `=` and `?` are escaped.\r\n\r\n**Expected behavior**\r\nI would expect that no escaped backslash will appear when I type or paste my url, if it is a feature I would like to know which shell configuration parameter controls it or how to disable it.\r\n\r\n**Screenshots or recordings**\r\n\r\n**System:**\r\n - OS: macOS, 10.14.5\r\n - Zsh version: zsh 5.3 (x86_64-apple-darwin18.0)\r\n - Terminal emulator iTerm2\r\n\r\n**Additional context**\r\n<!-- Add any other context about the problem here. -->\r\n",
        "labels": "Support",
        "id": 44149
    },
    {
        "title": "\"Enter\" key doesn't work",
        "body": "My \"Enter\" key (I have a laptop) works with NumLk enabled only. How to make it work any time? Though is works fine in tty.",
        "labels": "Support",
        "id": 44150
    },
    {
        "title": "RubyMine Run Configuration Issues with Zsh",
        "body": "Hi, I tried zsh out yesterday but ended up deciding to switch back to regular bash. I ran the `uninstall_oh_my_zsh` script as well as ran `chsh -s /bin/bash` and `rm -rf .zsch` to get my shell defaulted to bash with my terminal. The issue comes up when I tried running programs in RubyMine, as it tries to execute the commands using /bin/zsh. I've tried setting the terminal setting in RubyMine's preferences to /bin/bash as well as ran a complete clean reinstall of the Application. One thing I noticed was odd though was after completely clean reinstalling RubyMine, /bin/zsh continues to be the default in RubyMine's terminal shell path, making me think this is a problem with my environment variables? Any help would be appreciated. Thanks.\r\n\r\n![image](https://user-images.githubusercontent.com/20158582/58651658-d686ff00-82df-11e9-895a-eba2f901a27c.png)\r\n\r\nThis is what it looks like when I try running a program on RubyMine. I've also checked all the run configuration settings and nothing seems out of the ordinary / references zsh directly",
        "labels": "Support",
        "id": 44151
    },
    {
        "title": "terraform state show item fails: no matches found",
        "body": "Hi, \r\n\r\nI got a problem when i want to display a state item which contains brackets : \r\n\r\nterraform state show module.EC2_MyAPP_3.aws_instance.myapp[0]\r\nzsh: no matches found: module.EC2_MyAPP_3.aws_instance.myapp[0]\r\n\r\nsame command tunning well on another shell. \r\n\r\nNas. \r\n",
        "labels": "Support",
        "id": 44152
    },
    {
        "title": "rsync ~/.ssh/config autocompletion doesn't work",
        "body": "Hi,\r\n\r\nI am currently running on ArchLinux as well as on Ubuntu 16.06. For commands `scp` and `ssh`. For both of these distros, oh-my-zsh's autocomplete works fine and I could easily pull custom host names configured in `~/.ssh/config` and '~/.ssh/config.d/home.config` (on ArchLinux).\r\n\r\nHowever, specifically for `rsync` I could not get this to work. To use host names configured in `~/.ssh/config`, I'm required to switch to `scp` or `ssh` first to utilize the autocomplete feature.\r\n\r\n**Use Case**\r\n\r\n`~/.ssh/config`:\r\n```\r\nInclude config.d/*\r\n```\r\n\r\n`~/.ssh/config/home.config`:\r\n```\r\nHost home_server_vpn*\r\n    Hostname 10.7.0.6\r\n    DynamicForward 3310\r\n    Host home_server_vpn_choong\r\n\r\nHost home_*_choong\r\n    User choong\r\n\r\nHost *\r\n    ServerAliveInterval 30\r\n    ServerAliveCountMax 3\r\n    ForwardAgent yes\r\n    IdentityFile ~/.ssh/id_rsa.sec\r\n```\r\n\r\n1. To copy a file from a remote server to local server using `rsync`,\r\n`$ rsync home<tab>`\r\ndoes not give any autocompletion\r\n\r\n2. However,\r\n`$ scp home<tab>` works perfectly fine and would result  in\r\n`$ scp home_server_vpn_choong`",
        "labels": "Support",
        "id": 44153
    },
    {
        "title": "SSH not working since switching to zsh",
        "body": "[This](https://github.com/robbyrussell/oh-my-zsh/issues/6660) issue exists but it is closed with no resolution\r\n\r\nIf I try to ssh I get the error `zsh: permission denied: /Users/sidwatal/.ssh`. `ssh -v` has the same result. I have tried several \"fixes\" on stack overflow but nothing seems to work\r\n\r\nIt is definitely something up with zsh because switching to bash makes it work immediately.\r\n\r\nAny help appreciated",
        "labels": "Support",
        "id": 44154
    },
    {
        "title": "AWS Plugin no longer working.",
        "body": "seems the regex to extract profile names isn't working anymore.\r\nI replaced:\r\n\r\n`grep '\\[profile' \"${AWS_CONFIG_FILE:-$HOME/.aws/config}\"|sed -e 's/.*profile \\([a-zA-Z0-9_\\.-]*\\).*/\\1/'`\r\n\r\nby:\r\n`grep '\\[[^]]*]' ${AWS_CONFIG_FILE:-$HOME/.aws/config} | cut -d \"[\" -f2 | cut -d \"]\" -f1`\r\n\r\nand it worked.\r\n\r\nplease fix :-)",
        "labels": "Support",
        "id": 44155
    },
    {
        "title": " Operating system shell functionality not yet implemented for Oracle",
        "body": " \r\nsqlmap.py -u \"http://***********************************\"  --os-shel\r\n\r\nThis error comes out\r\n\r\n[17:59:40] [INFO] the back-end DBMS is Oracle\r\nweb application technology: Apache\r\nback-end DBMS: Oracle\r\n[17:59:40] [CRITICAL] Operating system shell functionality not yet implemented for Oracle\r\n[17:59:40] [WARNING] HTTP error codes detected during run:\r\n500 (Internal Server Error) - 1 times\r\n",
        "labels": "Support",
        "id": 44156
    },
    {
        "title": "I had installed oh-my-zsh success in root acount, but i can't use it on my new account of admin",
        "body": "centOS 7  useradd newaccount can not use oh-my-zsh",
        "labels": "Support",
        "id": 44157
    },
    {
        "title": "Problems with the cyrillic",
        "body": "After the last update, there were problems with the Cyrillic alphabet. And insert text with Cyrillic.\r\nI have ubuntu 16.04 and until the last update there were no problems.\r\n\r\nThe text is inserted the second time:  `Ѓ<a3>идео^[[200~Ѓ<b2>идео~`\r\n",
        "labels": "Support",
        "id": 44158
    },
    {
        "title": "pass auto completion",
        "body": "Pass auto-completion isn’t working in zsh, instead it’s completing to whatever folder I’m currently in.\r\nI added \"pass\" to the plugins array in my ~/.zshrc.\r\nOMZ and zsh are up-to-date.\r\n\r\n - OS: Arch linux\r\n - Zsh version: 5.7.1\r\n - Terminal emulator: termite\r\n\r\nCompletion works fine in bash...\r\n",
        "labels": "Support",
        "id": 44159
    },
    {
        "title": "cd and autojump failed reporting /usr/bin/env error",
        "body": "**Describe the bug**\r\nA clear and concise description of what the bug is.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Enable plugin '...'\r\n2. Run command '...', _or_ try to complete command '...', _etc._\r\n3. See error\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots or recordings**\r\nIf applicable, add screenshots or record an [asciinema session](https://asciinema.org/) to help explain your problem.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: [e.g. macOS]\r\n - Zsh version [e.g. 5.6]\r\n - Terminal emulator [e.g. iTerm2]\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n",
        "labels": "Support",
        "id": 44160
    },
    {
        "title": "I see the default prompt after installing zsh",
        "body": "I cannot see the theme getting reflected on my terminal even after installing zsh on mac. \r\nI have also added ZSH_THEME to ~/.zshrc file. I see % symbol on terminal. Below is the screen shot. I have followed the document and followed the procedure. \r\n![image](https://user-images.githubusercontent.com/16803672/57963616-6e521980-78ec-11e9-8750-a42b889ab4c0.png)\r\n\r\n",
        "labels": "Support",
        "id": 44161
    },
    {
        "title": "prompt not shown due to hanged git config call",
        "body": "<!--\r\n1. Try to make sure the issue is due to Oh My Zsh\r\n2. Include as much information as possible\r\n-->\r\nI do not have access to root on this machine running CentOS 6.2. I run uname -a which yields:\r\n`Linux dlxlogin.local 2.6.32-220.el6.x86_64 #1 SMP Wed Nov 9 08:03:13 EST 2011 x86_64 x86_64 x86_64 GNU/Linux` \r\nI have recently compiled zsh 5.7.1 from source to my ~/share/ directory. Zsh was tested with \"make test\" and had no failures. Running the zsh executable gives me my prompt: \"dlxlogin%\". I installed onhmyzsh using the curl command. Running zsh after installing .ohmyzsh then gave me errors:\r\n\r\n```\r\n/home/cad234/.oh-my-zsh/oh-my-zsh.sh:69: compinit: function definition file not found\r\n/home/cad234/.oh-my-zsh/lib/directories.zsh:32: command not found: compdef\r\n/home/cad234/.oh-my-zsh/lib/theme-and-appearance.zsh:2: colors: function definition file not found\r\n/home/cad234/.oh-my-zsh/plugins/git/git.plugin.zsh:83: command not found: compdef\r\n```\r\nI solved this problem as others have by setting the $FPATH and alternatively by adding ZSH_DISABLE_COMPFIX=true to my.zshrc. NOW, my problem is that after switching shells to zsh, I have no prompt. There is no error message and I'm not sure how to troubleshoot it. The only possible way for me to get back to my shell is to close the terminal or to keep pressing \"ctrl + D\" to kill zsh. Any ideas on why my prompt has disappeared?\r\n",
        "labels": "Support",
        "id": 44162
    },
    {
        "title": "zsh: command not found: z",
        "body": "Hello! I've used Z from homebrew, but recently found that there is actually built-in plugin in oh-my-zsh, so i tried to add it as follows:\r\n\r\n```\r\nplugins=(\r\n  git\r\n  z\r\n  vi-mode\r\n  zsh-autosuggestions\r\n  zsh-completions\r\n  zsh-syntax-highlighting\r\n)\r\n```\r\nrunning fresh terminal with zsh ( iterm2 ) and when I'm trying to use 'z' i see following error:\r\n\r\n```\r\nz project\r\nzsh: command not found: z\r\n```\r\n\r\nwhile f.e. git plugin (and all the others) seems to work correctly.\r\n\r\nAlso if I manually source it via `source .oh-my-zsh/plugins/z/z.sh` it works as expected.",
        "labels": "Support",
        "id": 44163
    },
    {
        "title": "Kitty breaks zsh tabcomplete/autocomplete",
        "body": "I'm assuming this is a font issue or rather an issue with how kitty handles fonts but just to be safe I'm asking here if it's a bug with omz or with my config:\r\nWhen I start a command and tabcomplete this happens:\r\n![image](https://user-images.githubusercontent.com/20487548/57833695-e8828100-77ba-11e9-87ae-90f24a69b067.png)\r\nThe first `cd` in the screenshot doesn't exist and it's just a display bug but still a bit annoying.\r\n\r\nDoes anyone know how to resolve if possible at all?\r\n",
        "labels": "Support",
        "id": 44164
    },
    {
        "title": "Remove support for yaourt for yay in archlinux plugin",
        "body": "Since development of yaourt is stalled and will no longer be developed I suggest plugin should now use yay(anothe aur helper) for ya* aliases or at least should be supported alongside yaourt.\r\n\r\n@seriousben",
        "labels": "Support",
        "id": 44165
    },
    {
        "title": "Git branch command will display into more mode",
        "body": "When using git branch command to see the branch of a warehouse, will enter more mode, the experience is not feeling very well.\r\n\r\nAs shown in the picture：\r\n![git_branch_more](https://user-images.githubusercontent.com/5302051/57613353-39229000-75a9-11e9-9ef6-8ae0f0554288.gif)\r\n\r\nWhether can adjust the other display mode.\r\n",
        "labels": "Support",
        "id": 44166
    },
    {
        "title": "cannot use |",
        "body": "the Pipe (alt + 7) ist not available any ideas?\r\n\r\nI'm using the font: \"Meslo LG S Regular for Powerline\"",
        "labels": "Support",
        "id": 44167
    },
    {
        "title": "Chinnese simbols in zsh bar",
        "body": "Hello\r\n\r\n  I've recently installed zsh and all the stuff (I think), but the zsh bar is not shown correctly as you can see in the image below: \r\n\r\n![image](https://user-images.githubusercontent.com/3830293/57567762-4b040780-73de-11e9-8b58-d16db3e97203.png)\r\n\r\nThanks for your help.\r\n\r\nPS: I tried this solution: https://github.com/robbyrussell/oh-my-zsh/issues/5709#issuecomment-267086715",
        "labels": "Support",
        "id": 44168
    },
    {
        "title": "alien_async_prompt:1: command not found: async_init",
        "body": "Hi there, I get a issue:\r\n\r\nWhen I start zsh then it does start, but shows the following:\r\n```\r\nalien_venv:1: command not found: plib_venv                                      \r\nalien_async_prompt:1: command not found: async_init\r\nalien_async_prompt:2: command not found: async_start_worker\r\nalien_async_prompt:3: command not found: async_register_callback\r\nalien_async_prompt:4: command not found: async_job\r\n\r\n```\r\nWhat can I do to get rid of the opening warnings?",
        "labels": "Support",
        "id": 44169
    },
    {
        "title": "unstoppable autojump complaint(Please install autojump first (https://github.com/wting/autojump)",
        "body": "Hi,\r\nI remove `autojump` from `plugins` in my `.zshrc` and source it.\r\nHowever, whenever I open a new terminal, it shows **Please install autojump first (https://github.com/wting/autojump)** which is annoying.\r\nI have no idea about how to fix it.\r\nI have installed and uninstalled `autojump` both locally and globally again and again.",
        "labels": "Support",
        "id": 44170
    },
    {
        "title": "lowdash completion and then: \"can only be called from completion function\"",
        "body": "I needed imagemagick for a gulp thing. According to their docs I used brew to install it. Brew auto updated, installed all the dependencies and finally the app, all with no errors or warnings.\r\n\r\nNow when from the console I try to run it I type \"image\" and hit tab, the terminal shows me these options:\r\n\r\n`_genisoimage  _imagemagick  _xloadimage   jimage`\r\n\r\nI add an 'm' and tab again and now I'm ready to run `_imagemagick`. But what's with that prefix? Anyways:\r\n\r\n```\r\nΔ merl /Users/merl $ _imagemagick\r\n_tags:comptags:36: can only be called from completion function\r\n_tags:comptry:55: can only be called from completion function\r\n_tags:comptags:60: can only be called from completion function\r\n```\r\n\r\nI've lost an hour of searching and trying stuff like deleting the .zcompdump* file and resetting zsh (but the file and all its contents appears right back with some \" _imagemagick\" inside... I don't know.\r\n\r\nThis is not the first time something like this happens (autocomplete giving me a `_whatever` command)\r\nThose _tags errors are absolutely cryptic, I don't know what else to do.\r\n\r\nPS: also, gulp complains as expected \"Error: Cannot find module 'imagemagick'\"",
        "labels": "Support",
        "id": 44171
    },
    {
        "title": "Strange % character on startup (MacOS Hyper terminal)",
        "body": "<img width=\"944\" alt=\"屏幕快照 2019-05-05 下午8 08 44\" src=\"https://user-images.githubusercontent.com/3746270/57193795-dbbb8d00-6f71-11e9-9754-bd1cc1d23a39.png\">\r\n\r\nTry copy all texts resulted in:\r\n\r\n```\r\n%                                       \r\n\r\n                                        \r\n\r\n\r\n~                                                                                                             \r\n▶ \r\n```\r\n\r\nEven if I change to another theme:\r\n<img width=\"938\" alt=\"屏幕快照 2019-05-05 下午8 15 14\" src=\"https://user-images.githubusercontent.com/3746270/57193873-9481cc00-6f72-11e9-89e1-32d5571a9050.png\">\r\n",
        "labels": "Support",
        "id": 44172
    },
    {
        "title": "Tab completion doesn't work on apt but on apt-get",
        "body": "` apt-get -y ` and Tab, I can get a lot of options, it works perfectly. But `apt -y `\r\nNothing output here.\r\nHow can I solve this problem?\r\nWhat information should I provide?",
        "labels": "Support",
        "id": 44173
    },
    {
        "title": "After `Brew Upgrade` now getting error.",
        "body": "After running `brew upgrade` I am now getting the following lines after every command:\r\n\r\n```\r\nomz_urlencode:42: failed to load module `zsh/regex': dlopen(/usr/local/Cellar/zsh/5.7/lib/zsh/regex.bundle, 9): image not found\r\nomz_urlencode:42: -regex-match not available for regex\r\n```\r\n\r\nCan someone help?",
        "labels": "Support",
        "id": 44174
    },
    {
        "title": "Can't launch zsh on EC2 with ubuntu 16.04 HVM",
        "body": "Installed oh-my-zsh on an EC2 instance a week ago and it worked perfectly. It printed following message and ssh exited after the update today(04/30/2019): \r\n```\r\n/home/ubuntu/.pyenv/versions/3.6.8/bin/aws_zsh_completer.sh: line 16: autoload: command not found\r\n/home/ubuntu/.pyenv/versions/3.6.8/bin/aws_zsh_completer.sh: line 17: bashcompinit: command not found\r\n```\r\n\r\nCurrently, I have switched back to the following commit to get it working. \r\n```\r\nf5b2d9c meta: ignore example files in custom directory\r\n```\r\nIt was not having such problem before so I assume some changes after this commit caused the issue.\r\n\r\nCheers ",
        "labels": "Support",
        "id": 44175
    },
    {
        "title": "Found Windows line endings in .oh-my-zsh/lib/theme-and-appearance.zsh",
        "body": "This morning I answered Y to the biweekly update and my theme broke. I don't use anything fancy, I use all the defaults from Oh My ZSH.\r\n\r\nThe error code was nice, it said there were some `^M` characters in the theme-and-appearance file. So I got in there with a `sed $'s/\\r//g'` and then a `source ~/.zshrc`. Now my theme is back to normal.\r\n\r\nSo the bug is that there are Windows line endings in the most recent update that should probably not be there.",
        "labels": "Support",
        "id": 44176
    },
    {
        "title": "battery plugin displays infinity symbol instead of battery level",
        "body": "This is my robbyrussell.zsh-theme  file : - \r\n\r\n```\r\nlocal ret_status=\"%(?:%{$fg_bold[green]%}➜ :%{$fg_bold[red]%}➜ )\"\r\nPROMPT='${ret_status} $USER@$HOST%{$fg[cyan]%}%~%{$reset_color%} $(git_prompt_info)'\r\nRPROMPT='$(battery_pct_prompt)'\r\nZSH_THEME_GIT_PROMPT_PREFIX=\"%{$fg_bold[blue]%}git:(%{$fg[red]%}\"\r\nZSH_THEME_GIT_PROMPT_SUFFIX=\"%{$reset_color%} \"\r\nZSH_THEME_GIT_PROMPT_DIRTY=\"%{$fg[blue]%}) %{$fg[yellow]%}✗\"\r\nZSH_THEME_GIT_PROMPT_CLEAN=\"%{$fg[blue]%})\"\r\n```\r\n",
        "labels": "Support",
        "id": 44177
    },
    {
        "title": "zsh terminal not updating when doing a git operation such pull, push, change branch.",
        "body": "Whenever I make a git operation (on VS code) the integrated zsh terminal does not update. For example, if I am on a branch \"develop\" and I switch to \"master\" the headline on the terminal will still show \"develop\"",
        "labels": "Support",
        "id": 44178
    },
    {
        "title": "Square character in agnoster theme",
        "body": "OS:Arch linux\r\nWM:i3\r\nTerminal:Urxvt\r\nzsh Theme: Agnoster\r\nHow to fix this square?\r\n![2019-04-29-105845_1366x768_scrot](https://user-images.githubusercontent.com/45327204/56877238-60884180-6a6e-11e9-849e-da283beed3b7.png)\r\n",
        "labels": "Support",
        "id": 44179
    },
    {
        "title": "Font broken after today's kernel update on Mint 19 system",
        "body": "Hello,\r\n\r\ntoday I got the following updates on my Mint 19 system:\r\n\r\n> Start-Date: 2019-04-24  11:13:09\r\n> Commandline: packagekit role='update-packages'\r\n> Requested-By: user (1000)\r\n> Install: linux-image-4.15.0-48-generic:amd64 (4.15.0-48.51, automatic), linux-headers-4.15.0-48:amd64 (4.15.0-48.51, automatic), linux-headers-4.15.0-48-generic:amd64 (4.15.0-48.51, automatic), linux-modules-extra-4.15.0-48-generic:amd64 (4.15.0-48.51, automatic), linux-modules-4.15.0-48-generic:amd64 (4.15.0-48.51, automatic)\r\n> Upgrade: linux-headers-generic:amd64 (4.15.0.47.49, 4.15.0.48.50), linux-libc-dev:amd64 (4.15.0-47.50, 4.15.0-48.51), linux-image-generic:amd64 (4.15.0.47.49, 4.15.0.48.50), google-chrome-stable:amd64 (73.0.3683.103-1, 74.0.3729.108-1), linux-generic:amd64 (4.15.0.47.49, 4.15.0.48.50)\r\n> End-Date: 2019-04-24  11:14:16\r\n\r\nAfterwards, my zsh shell with agnoster theme displayed a lot of ???:\r\n\r\n`user@host ��� ~ ���` \r\n\r\nSomebody else got this problem and an idea how to fix this?",
        "labels": "Support",
        "id": 44180
    },
    {
        "title": "Cursor position",
        "body": "Dear, I have problems with cursor position.\r\nSometimes, for example when I paste, if I put the cursor on the top of a letter, and I write something, it will not write on the position I have marked, it will write that one or two positions on the left. It's something very similar to https://github.com/robbyrussell/oh-my-zsh/issues/3325 but now only happens when pasting...",
        "labels": "Support",
        "id": 44181
    },
    {
        "title": "ZSH_THEME in .zshrc doesn't work",
        "body": "In .zshrc I dont have ZSH_THEME. When I add this with some theme it does not works after source .zshrc\r\n\r\nWy It does not work ?\r\n\r\nZSH version 5.5.1 in Ubuntu 19",
        "labels": "Support",
        "id": 44182
    },
    {
        "title": "`gem push TAB` raises error",
        "body": "I get the following error when typing `gem push` with a tab following:\r\n\r\n```\r\n_arguments:comparguments:325: doubled rest argument definition: *:gem:_files -g \"*.gem(-.)\"\r\n```\r\n\r\n`gem + TAB` works fine. I'm not sure whether this is a bug, filing anyway since this may be someone else's problem too.\r\n\r\nP.S. I initially posted this to [zsh-autosuggestions](https://github.com/zsh-users/zsh-autosuggestions/issues/423) but according to folks over there this is not their issue.",
        "labels": "Support",
        "id": 44183
    },
    {
        "title": "Did plugin handling change somehow, getting some missing plugins.",
        "body": "Suddenly I'm getting this on in my shells on init.\r\n[oh-my-zsh] plugin 'colored-man' not found\r\n[oh-my-zsh] plugin 'k' not found\r\n[oh-my-zsh] plugin 'pipenv' not found\r\n\r\nI think k was at least installed manually, can't remember how because a while back.",
        "labels": "Support",
        "id": 44184
    },
    {
        "title": "Display error when using zsh on a server  ",
        "body": "When using zsh on a server (connected to the server by ssh on iterm2), I always encounter this display error. I have tried oh-my-zsh on different servers and different client macs, the problem is still here. (the server is ubuntu 16.04.)\r\n![WX20190421-014742](https://user-images.githubusercontent.com/31400800/56460589-81e68f00-63d7-11e9-9ec5-cc25b8237bdc.png)\r\n\r\n",
        "labels": "Support",
        "id": 44185
    },
    {
        "title": "Agnoster Arrow Bug",
        "body": "I am currently using Zsh 5.7.1 with Oh-My-Zsh with agnoster. I installed the Powerline fonts by my arrows are not as stylish as in the screenshot presented in themes and the colors are not the same either - on terminal or iTerm (https://github.com/robbyrussell/oh-my-zsh/wiki/Themes). \r\n\r\n![image](https://user-images.githubusercontent.com/18091914/56452618-2e0d7480-6309-11e9-86a6-8f30a684f0b9.png)\r\nHere is how my iTerm looks like and my settings.\r\n\r\nI think its a bug but I fear this could be caused by not installing the file 10-powerline-symbols.conf (https://github.com/powerline/powerline/tree/develop/font) but I dont know where to put it on MacOS Mojave (10.14.4).\r\n\r\nWhat is this bug with OMZ? ",
        "labels": "Support",
        "id": 44186
    },
    {
        "title": "[oh-my-zsh] plugin 'd' not found",
        "body": "I found this error recently.\r\n\r\nDid you remove this plugin? or it just changes name?",
        "labels": "Support",
        "id": 44187
    },
    {
        "title": "Bira theme breaks slightly on non-zero return value",
        "body": "![Screen Shot](https://user-images.githubusercontent.com/2002883/56321979-afec7a80-611c-11e9-8eb2-f67a9b6775ca.png)\r\n\r\nAs you can see, when I run a command with a non-zero exit, the cursor is placed over the `$` character, and the next command I type overwrites it.\r\n\r\nRunning iTerm 2 on MacOS\r\n",
        "labels": "Support",
        "id": 44188
    },
    {
        "title": "why my prompt is not in UTF-8?",
        "body": "I have this error as you can see (see screenshot below)\r\n\r\n[https://gifyu.com/image/923z](https://gifyu.com/image/923z)\r\n\r\nMy parameter has been set as UTF-8 so I'm not sure of what is going on.\r\n\r\nCheers.\r\n\r\n",
        "labels": "Support",
        "id": 44189
    },
    {
        "title": "bira theme: prompt text overwritten on command error",
        "body": "I use the latest `oh-my-zsh` with the `bira` theme on `zsh 5.7.1` installed using `antigen`. \r\n\r\n```\r\nantigen use oh-my-zsh\r\nantigen theme robbyrussell/oh-my-zsh themes/bira\r\nantigen apply\r\nCOMPLETION_WAITING_DOTS=false\r\n```\r\n\r\nWhen I run a command which returns an error, the cursor on the next prompt line gets moved to the `$` character in the prompt causing it to be overwritten when a command is typed. There was also an issue with the cursor getting pushed a bit to the right and the backspace not working in some cases, but disabling `COMPLETION_WAITING_DOTS` seems to have fixed it. Example illustrating the issue below:\r\n\r\n```\r\n─ guruprasad@precious ~  \r\n╰─$ date\r\nThu Apr 11 23:48:03 IST 2019\r\n╭─ guruprasad@precious ~  \r\n╰─$ lll\r\nzsh: correct 'lll' to 'll' [nyae]? n\r\nzsh: command not found: lll\r\n╭─ guruprasad@precious ~  \r\n╰─$\r\n╭─ guruprasad@precious ~  \r\n╰─ls \r\n```\r\n",
        "labels": "Support",
        "id": 44190
    },
    {
        "title": "Color isn't displayed by `git log` when oh-my-zsh is used with WSL(Ubuntu)",
        "body": "`git log` correctly displays colorful output in :\r\n\r\n* WSL+bash\r\n* WSL+vanilla zsh\r\n* cygwin+zsh+oh-my-zsh\r\n* zsh+oh-my-zsh on a real linux system.\r\n\r\nHowever, under Windows Subsystem for Linux, when using zsh+oh-my-zsh, the ansi color sequences from `git log` aren't recognized. Piping this output through cat does display colors correctly. `git show` and `git diff` both fail to display colors correctly, but `git status` works just fine, as do all other non-git commands I have tried.\r\n\r\n![image](https://user-images.githubusercontent.com/17056237/55975692-5d541f80-5c3f-11e9-808c-c12fb95d7964.png)\r\n\r\nBehavior is identical when using WSL TTY, and the default windows terminal. \r\n\r\nThis seems to be independent of theme. I encountered this with `robbyrussel` and `ys`, but tried about half a dozen random themes and observed this with every one. \r\n\r\nTERM is set to `xterm-256color`. Ubuntu 18.04, Windows 10, zsh 5.4.2, git 2.17.1",
        "labels": "Support",
        "id": 44191
    },
    {
        "title": "Need some help in theme creation",
        "body": "I was working in a new theme\r\n```\r\nFG_COLOR_RED=%{$fg[red]%}\r\nFG_COLOR_CYAN=%{$fg[cyan]%}\r\nFG_COLOR_YELLOW=%{$fg[yellow]%}\r\nFG_COLOR_BLACK=%{$fg[black]%}\r\n\r\nBG_COLOR_BLACK=%{$bg[black]%}\r\nBG_COLOR_BLUE=%{$bg[blue]%}\r\nBG_COLOR_WHITE=%{$bg[white]%}\r\n\r\nRESET_COLOR=%{$reset_color%}\r\n\r\nPROMPT_NEWLINE='%{'$'\\n''%}'\r\nRPROMPT_PREFIX='%{'$'\\e[1A''%}' # one line up\r\nRPROMPT_SUFFIX='%{'$'\\e[1B''%}' # one line down\r\n\r\nif [ $(whoami) = \"root\" ]; then\r\n  USERCOLOR=$FG_COLOR_RED\r\nelse\r\n  USERCOLOR=$FG_COLOR_CYAN\r\nfi\r\n\r\nPROMPT='$USERCOLOR$BG_COLOR_BLACK [ %n >$RESET_COLOR$FG_COLOR_YELLOW$BG_COLOR_BLACK [ %m >$RESET_COLOR$FG_COLOR_BLACK$BG_COLOR_BLUE [ %~ >$RESET_COLOR$PROMPT_NEWLINE$USERCOLOR$BG_COLOR_BLACK [ %# > $RESET_COLOR'\r\n\r\nRPROMPT='$RPROMPT_PREFIX$(git_prompt_info)$BG_COLOR_WHITE $FG_COLOR_BLACK<! %!$RESET_COLOR$FG_COLOR_BLACK$BG_COLOR_BLUE <%*$RESET_COLOR$RPROMPT_SUFFIX'\r\n\r\nZSH_THEME_GIT_PROMPT_PREFIX=\"$BG_COLOR_BLACK<git: $FG_COLOR_YELLOW\"\r\nZSH_THEME_GIT_PROMPT_SUFFIX=\"$RESET_COLOR\"\r\nZSH_THEME_GIT_PROMPT_DIRTY=\"$FG_COLOR_RED\"\r\nZSH_THEME_GIT_PROMPT_CLEAN=\"$FG_COLOR_CYAN~\"\r\n```\r\n\r\nBut the `RPROMPT` seems to had some issues.\r\nFirst, `RPROMPT` can not showed in the right edge on the shell.\r\nSecond, it can change the place itself, just like this\r\nThird, when I using the tab key to auto completion the command, some time,  it will going crazy...\r\n\r\n![Untitled](https://user-images.githubusercontent.com/10005128/55893359-0f192f00-5bf3-11e9-908d-acf08936cf3e.gif)\r\n\r\nI was working this theme base on an old one, the old one can works normally.\r\n```\r\nCURRENTUSER=$(whoami)\r\nif [ \"$CURRENTUSER\" = \"root\" ]; then USERCOLOR=\"red\"; else USERCOLOR=\"cyan\"; fi\r\n\r\nPROMPT='⎡\\\r\n%{$fg[$USERCOLOR]%}%{$bg[black]%} [%n> %{$reset_color%}\\\r\n%{$fg[yellow]%}%{$bg[black]%}[%m> %{$reset_color%}\\\r\n%{$fg[black]%}%{$bg[blue]%}[%~> %{$reset_color%}\r\n⎣\\\r\n%(?,%{$fg[green]%}%{$bg[black]%} [%?> %{$reset_color%},%{$fg[red]%}%{$bg[black]%} [%?> %{$reset_color%})%{$fg[$USERCOLOR]%}%# > %{$reset_color%}\\\r\n'\r\n\r\nRPROMPT='$(git_prompt_info)%{$bg[white]%} %{$fg[black]%}<! %!%{$reset_color%}%{$fg[black]%}%{$bg[blue]%} <%*%{$reset_color%}'\r\n\r\nZSH_THEME_GIT_PROMPT_PREFIX=\"%{$bg[black]%}<git: %{$fg[yellow]%}\"\r\nZSH_THEME_GIT_PROMPT_SUFFIX=\"%{$reset_color%}\"\r\nZSH_THEME_GIT_PROMPT_DIRTY=\"%{$fg[red]%}*\"\r\nZSH_THEME_GIT_PROMPT_CLEAN=\"%{$fg[cyan]%}~\"\r\n```\r\n\r\nSo, what is going on here?",
        "labels": "Support",
        "id": 44192
    },
    {
        "title": "[oh-my-zsh] plugin 'lwd' not found",
        "body": "Starting this morning, i noticed that every new terminal started outputting `[oh-my-zsh] plugin 'lwd' not found`. I've run `upgrade_oh_my_zsh` and have the latest version. ",
        "labels": "Support",
        "id": 44193
    },
    {
        "title": "Tab completion isn't working for wd or nvm plugin",
        "body": "I've installed a fresh copy of zsh and oh-my-zsh on Elementary OS Juno.\r\n\r\n```\r\nZSH: 5.4.2\r\n```\r\n\r\nand I've enabled the following plugins\r\n\r\n```\r\nplugins=(\r\n  extract\r\n  git\r\n  nvm\r\n  wd\r\n  virtualenvwrapper\r\n)\r\n```\r\n\r\nautocomplete isn't working for wd and nvm. The rest are fine.\r\n\r\nCan someone please point me on how to debug this issue?",
        "labels": "Support",
        "id": 44194
    },
    {
        "title": "AWS plugin needs more flexibility with hiding \"prefix\" prompt or \"suffix\" prompt",
        "body": "On the prefix (left) side, I have \"AWS: default\" prepended to my prompt, and on the suffix (right) side, I have `<aws:default>`. If I specify `SHOW_AWS_PROMPT=false`, it only gets rid of the suffix, which I actually want. I _don't_ want the prefix prompt.\r\n\r\nThere should be two options to cover this, e.g. `SHOW_AWS_PREFIX_PROMPT` and `SHOW_AWS_SUFFIX_PROMPT`.",
        "labels": "Support",
        "id": 44195
    },
    {
        "title": "zsh: can't open input file: ~/.oh-my-zsh/tools/check_for_upgrade.sh",
        "body": "```sh\r\nkodi-htpc$ zsh\r\nzsh\r\nzsh: can't open input file: ~/.oh-my-zsh/tools/check_for_upgrade.sh\r\n/home/hannah/.oh-my-zsh/oh-my-zsh.sh:34: no matches found: ~/.oh-my-zsh/lib/*.zsh\r\n```\r\n\r\nSimilar to #1245 but does not get fixed through what is listed, and a second error.\r\n",
        "labels": "Support",
        "id": 44196
    },
    {
        "title": " Fedora29 / adding rpmfusion  -  zsh: parse error near `)'",
        "body": "# On Fedora 29 when trying to add rpmfustion repos i get this error:\r\n\r\n-------------------------------------------------\r\n\r\nsudo dnf install -y https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm \\ https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$\\(rpm -E %fedora).noarch.rpm\r\nzsh: parse error near `)'\r\n\r\n-------------------------------------------------\r\n\r\nI ran the same command in bash. Worked flawlessly.\r\n\r\n# Here is my .zshrc:\r\n\r\nexport ZSH=\"/home/myself/.oh-my-zsh\"\r\n\r\nZSH_THEME=\"powerlevel9k/powerlevel9k\"\r\n\r\nZSH_DISABLE_COMPFIX=true\r\n\r\nplugins=(git git-extras pip python)\r\n\r\nsource $ZSH/oh-my-zsh.sh\r\n\r\n# User settings:\r\nPOWERLEVEL9K_ALWAYS_SHOW_CONTEXT=true\r\nPOWERLEVEL9K_CONTEXT_TEMPLATE=\"%n|`hostname -f`\"\r\nPOWERLEVEL9K_CONTEXT_DEFAULT_FOREGROUND=\"002\"\r\nPOWERLEVEL9K_CONTEXT_DEFAULT_BACKGROUND=\"236\"\r\nPOWERLEVEL9K_DIR_HOME_BACKGROUND=\"002\"\r\nPOWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status)\r\nPOWERLEVEL9K_RIGHT_PROMPT_DEFAULT_BACKGROUND=\"236\"\r\nPOWERLEVEL9K_SHORTEN_DIR_LENGTH=1\r\n\r\n# User specific alias:\r\nalias update='sudo dnf update -x '\\''kernel*'\\'''\r\nalias glances=\"glances -1 -4 -t 1 --process-short-name -3 --hide-kernel-threads --disable-process\"\r\nalias nvidia=\"nvidia-smi -l 1\"\r\nalias python=\"python3\"\r\nalias syncOne='onedrive --synchronize --verbose --confdir=\"~/.config/onedriveOne\"'\r\nalias monOne='onedrive --monitor --verbose --confdir=\"~/.config/onedriveOne\"'\r\nalias syncTwo='onedrive --synchronize --verbose --confdir=\"~/.config/onedriveTwo\"'\r\nalias monTwo='onedrive --monitor --verbose --confdir=\"~/.config/onedriveTwo\"'\r\n\r\n# User specific functions:\r\nif [ -f $HOME/.bash-insulter/src/bash.command-not-found ]; then\r\n   source $HOME/.bash-insulter/src/bash.command-not-found\r\nfi\r\n",
        "labels": "Support",
        "id": 44197
    },
    {
        "title": "Disable kube Prompt",
        "body": "![1554329055532](https://user-images.githubusercontent.com/4263420/55516346-dca48a80-5664-11e9-88cf-f32a8aa78182.jpg)\r\n\r\nAnyone know Where is this come from ? I want to remove it ...\r\n**`[kube(n/a) git(e465b3b) branch(intl-1150)]`**",
        "labels": "Support",
        "id": 44198
    },
    {
        "title": "The position of caret is different when I type text and when I don't.",
        "body": "![pic1](https://user-images.githubusercontent.com/46282492/55425272-073b0880-55bd-11e9-9d56-1d378317c602.PNG)\r\n![pic2](https://user-images.githubusercontent.com/46282492/55425275-099d6280-55bd-11e9-8b23-c62ad6842e51.PNG)\r\n\r\nIs there any way to fix caret's position?",
        "labels": "Support",
        "id": 44199
    },
    {
        "title": "Warning: plugin history, not found",
        "body": "Since an OMZ update, every time I open a new teminal, I am greeted by this message \"Warning: plugin history, not found\".\r\n\r\nI have read the other issues regarding this, but I cannot find the solution to this problem.\r\nhistory/history.plugin.zsh exists inside my ~/.oh-my-zsh directory and the git plugin, which is located there as well (git/git.plugin.zsh), loads without problem.",
        "labels": "Support",
        "id": 44200
    },
    {
        "title": "zsh-completions not found",
        "body": "For the last two days I've had a problem with the plugin zsh-completions. It is well installed and I reinstalled it with brew but the error persists! \r\n\r\nI have `Warning: plugin zsh-completions not found`",
        "labels": "Support",
        "id": 44201
    },
    {
        "title": "Docker complite does not work.",
        "body": "Nice to meet you guys. Installed fresh Ubuntu 18.04, add old-creepy Unity. \r\n\r\nInstall last ZSH from APT\r\nzsh 5.4.2 (x86_64-ubuntu-linux-gnu)\r\n\r\nInstall docker and docker-compose\r\nDocker version 18.09.4, build d14af54266\r\ndocker-compose version 1.23.2, build 1110ad01\r\n\r\nInstalled last Oh My Zsh from master branch\r\n\r\ncommit b7b40b0b68c791d57d91c7f4e17ed681d01d5c75 (grafted, HEAD -> master, origin/master, origin/HEAD)\r\nAuthor: Jakub Łuczyński <doubleloop@users.noreply.github.com>\r\nDate:   Tue Mar 26 14:44:58 2019 +0100\r\n\r\nAdd wanted plugins in .zshrc\r\nplugins=(docker docker-compose git)\r\nAfter restart shell and try autocomplite\r\n\r\n![Broken](https://user-images.githubusercontent.com/40993787/55242793-03228a00-524f-11e9-94f4-4eec95282ca0.jpg)\r\n\r\nI tried to find a solution on the Internet, but after 4-5 attempts, I decided to create an issue.\r\nI tried source .zshrc\r\nI changed the name of the plugins to the wrong ones (the file loads and says that it cannot find the wrong plugin)\r\nTried to download _docker from the docker / cli repository\r\n\r\nSame problem with docker-compose. \r\nTried docker-compose kill -s -> output list of files and dirs. ",
        "labels": "Support",
        "id": 44202
    },
    {
        "title": "Newlines seem to be getting printed out after command",
        "body": "![empty_lines](https://user-images.githubusercontent.com/5522618/55216095-184cd980-51b9-11e9-8733-80c476d57178.png)\r\n",
        "labels": "Support",
        "id": 44203
    },
    {
        "title": "Most of the zsh themes did not work in xshell",
        "body": "Hi. I have set `ZSH_THEME=\"random\"` in `.zshrc` file, but only several of them work well. What could be the problem?\r\n![20190329100732](https://user-images.githubusercontent.com/27913271/55205317-4d831700-520d-11e9-8ef7-bbda4ff6e44d.png)\r\n![20190329100753](https://user-images.githubusercontent.com/27913271/55205318-5247cb00-520d-11e9-9196-ac3e008ec065.png)\r\n\r\n",
        "labels": "Support",
        "id": 44204
    },
    {
        "title": "How do I find path to a plugin's directory while it is being loaded?",
        "body": "I have recently moved to zsh and oh-my-zsh from bash. I have existing tooling which consists of external Python scripts to do the heavy lifting and Bash wrappers around the Python.\r\n\r\nI would like to package all of this together as an oh-my-zsh plugin. E.g.\r\n\r\n```\r\n.oh-my-zsh/custom/plugins/FOO/\r\n.oh-my-zsh/custom/plugins/FOO/foo.plugin.zsh\r\n.oh-my-zsh/custom/plugins/FOO/bin/\r\n.oh-my-zsh/custom/plugins/FOO/bin/foo-tool.py\r\n```\r\n\r\nThe contents of foo.plugin.zsh would be something like this:\r\n\r\n```\r\n# How do I determine PLUGIN_DIR?\r\nPLUGIN_DIR=...\r\n\r\nFOOTOOL=\"$PLUGIN_DIR/bin/foo-tool.py\"\r\n\r\nfoo() {\r\n   eval \\$( \"$FOOTOOL\" \"\\$@\" )\r\n}\r\n```\r\n\r\nThe question is how do I determine PLUGIN_DIR? I've tried a number of approaches, but so far nothing works when oh-my-zsh sources the plugin.\r\n\r\nWhat is the magic incantation I'm searching for?",
        "labels": "Support",
        "id": 44205
    },
    {
        "title": "Illegal variable name",
        "body": "Trying to install on a Mac via sh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\" and I got an error \"Illegal variable name\".",
        "labels": "Support",
        "id": 44206
    },
    {
        "title": "Warning: plugins not found!",
        "body": "After last update, i receive the following messages after start my terminal: \r\n\r\n* Warning: plugin node_modules not found\r\n* Warning: plugin apt not found\r\n* Warning: plugin deb not found\r\n\r\n",
        "labels": "Support",
        "id": 44207
    },
    {
        "title": "Buggy Characters in shell",
        "body": "![](https://i.imgur.com/dadfxDr.png)\r\nWhat can i do ?",
        "labels": "Support",
        "id": 44208
    },
    {
        "title": "Auto completion broken",
        "body": "When I press Tab to AutoCorrect what I entered at the beginning remains and is not removed but the commands work\r\n![Screenshot](https://imgur.com/AS2se0h.png)",
        "labels": "Support",
        "id": 44209
    },
    {
        "title": "Plugin Not Found",
        "body": "I must be missing something about how `zsh` plugins work.\r\n\r\nI have the following plugins enabled:\r\n\r\n`plugins=(aws, git, gradle, npm, pip, yarn)`\r\n\r\nAll of them show up in the `~/.oh-my-zsh/plugins` folder.\r\n\r\nAll of them are part of the bundled plugins but only `yarn` isn't throwing a not found warning.\r\n\r\nhttps://github.com/robbyrussell/oh-my-zsh/wiki/Plugins\r\n\r\nThis is what I see when I open up the terminal:\r\n\r\n```\r\nWarning: plugin aws, not found\r\nWarning: plugin git, not found\r\nWarning: plugin gradle, not found\r\nWarning: plugin npm, not found\r\nWarning: plugin pip, not found\r\n```\r\n\r\nAny insight would be great! Thanks!",
        "labels": "Support",
        "id": 44210
    },
    {
        "title": "[Ask] How to remove AWS from agnoster theme?",
        "body": "",
        "labels": "Support",
        "id": 44211
    },
    {
        "title": "An update broke a couple of plugins",
        "body": "I just got the regular update prompt and after entering the shell, I saw the following:\r\n\r\n```\r\nWarning: plugin colorized not found\r\nWarning: plugin colored-man not found\r\nWarning: plugin copyfiles not found\r\nWarning: plugin zsh-syntax-highlighting not found\r\n```\r\n\r\nAre there any additional steps I should take after updating to the latest version?",
        "labels": "Support",
        "id": 44212
    },
    {
        "title": "A prefix icon appeared after switching back to `robyrussell.zsh-theme`. How do I delete it?",
        "body": "I was using a **custom** theme which is known as [Powerlevel9k](https://github.com/bhilburn/powerlevel9k) and for a moment wanted to switch back the default theme which is `robbyrussell.zsh-theme`. Then an unknown **prefix icon** appeared at the start of line.\r\n\r\n<img width=\"352\" alt=\"Screen Shot 2019-03-23 at 06 53 57\" src=\"https://user-images.githubusercontent.com/47678095/54861404-4d7ca600-4d39-11e9-9e56-311c08fd670f.png\">\r\n\r\nAs it shows in the screenshot, Hyper Terminal **does not have** that prefix but when I open iTerm2 it's there.\r\n\r\nHere's my configuration files.\r\n\r\n`.zshrc` file\r\n\r\n```\r\nexport PATH=$HOME/bin:/usr/local/bin:/usr/local/sbin:$PATH\r\n\r\nexport ZSH=$HOME/.oh-my-zsh\r\n\r\nZSH_THEME=\"robbyrussell\"\r\n\r\nCOMPLETION_WAITING_DOTS=\"true\"\r\n\r\nplugins=(\r\n  git\r\n  docker\r\n  docker-compose\r\n  osx\r\n  node\r\n  npm\r\n  brew\r\n  ng\r\n  yo\r\n  xcode\r\n  urltools\r\n  vscode\r\n  battery\r\n  chucknorris\r\n  colorize\r\n  command-not-found\r\n  copydir\r\n  copyfile\r\n  colored-man-pages\r\n  dircycle\r\n  yarn-completion\r\n  zsh-autosuggestions\r\n  zsh-completions\r\n  zsh-syntax-highlighting\r\n  history-substring-search\r\n)\r\n\r\nsource $ZSH/oh-my-zsh.sh\r\nautoload -U +X bashcompinit && bashcompinit\r\nsource /usr/local/etc/bash_completion.d/az\r\n\r\nexport LANG=en_US.UTF-8\r\n\r\nalias zshconfig=\"code ~/.zshrc\"\r\nalias ohmyzsh=\"code ~/.oh-my-zsh\"\r\nalias shopt=\"/usr/bin/shopt\"\r\nalias vsclist=\"code --list-extensions\"\r\n\r\ntest -e \"${HOME}/.iterm2_shell_integration.zsh\" && source \"${HOME}/.iterm2_shell_integration.zsh\"\r\n```\r\n**Output** of `~/.oh-my-zsh/custom/themes`\r\n\r\n```\r\n➜  themes git:(master) ✗ ls -la\r\ntotal 8\r\ndrwxr-xr-x   4 metebyte  staff  128 Mar 23 06:50 .\r\ndrwxr-xr-x   5 metebyte  staff  160 Mar 17 02:35 ..\r\n-rw-r--r--   1 metebyte  staff  147 Mar 17 02:35 example.zsh-theme\r\ndrwxr-xr-x  23 metebyte  staff  736 Mar 17 20:54 powerlevel9k\r\n```\r\n",
        "labels": "Support",
        "id": 44213
    },
    {
        "title": "Tab Completion after change of packages needs a restart of zsh",
        "body": "I am running ohmyzsh on my linux machine, macbookpro and android termux.\r\n\r\nAfter I install a new package/software via brew / apt / pacman / pip / npm, I have to restart zsh before I get the tab completion of that newly installed software. If I remove the package, I also have to restart zsh to not having that newly deleted package in my tab completion.\r\n\r\nIs there a way to update the package information without restarting zsh? I've searched for google and looked through the .zshrc and found nothing.",
        "labels": "Support",
        "id": 44214
    },
    {
        "title": "compdef: unknown command or service: rails ",
        "body": "I use [asdf](https://github.com/asdf-vm/asdf)\r\n`compdef: unknown command or service: rails`\r\n",
        "labels": "Support",
        "id": 44215
    },
    {
        "title": "how do I see glyphs on console only Linux (example: Ubuntu server edition)?",
        "body": "So I have installed ZSH + oh-my-zsh + powerlevel9k on my Ubuntu server edition.\r\n\r\nWhile it's working including the colors (I used darkorange background to display current user), I cannot get the glyphs to work. In place of the home folder icon (enter image description here) when I'm on the user home folder, all I see is a triangle.\r\n\r\nI'm guessing this problem is not specific to powerlevel9k but any theme that uses glyphs?\r\n\r\nCan someone please advice how this can be fixed?\r\n\r\nThanks",
        "labels": "Support",
        "id": 44216
    },
    {
        "title": "cd history broken",
        "body": "Usually, I can use `cd -NUMBER` to navigate to one of the last directories.\r\nFor some time now, the autocompletion when pressing Tab after - seems to be broken, see the following example, where I choose to `cd` back to the home directory, but it actually goes back to `/etc`.\r\n\r\nhttps://asciinema.org/a/7Y8tZEsa6IjDWU02B5KmiEZOL\r\n\r\nHappening on latest oh-my-zsh with zsh 5.7.1",
        "labels": "Support",
        "id": 44217
    },
    {
        "title": "Error updating with index",
        "body": "When open a terminal I've this oh-my-zsh's error : \r\n`   upgrade_oh_my_my_zsh\r\nUpdating Oh My Zsh\r\nerror: shoot with an impossible reline: your index contains unconfirmed changes.\r\nerror: please validate or store them. \r\n(it's a translation)\r\n`\r\nSo, what can I do to resolve it ?",
        "labels": "Support",
        "id": 44218
    },
    {
        "title": "Parse error when trying to configure themes",
        "body": "I am trying to customize my .zshrc. I am getting this error when trying to source .zshrc\r\n\r\n```\r\n/home/tlil/.oh-my-zsh/oh-my-zsh.sh:34: parse error near `${ZSH_CUSTOM}/lib/*z...'\r\n```\r\n\r\nLine 34 of ~/.oh-my-zshrc and surrounding lines:\r\n\r\n```\r\nfor config_file ${ZSH_CUSTOM}/lib/*zsh; do        # (My comment): This is line 34\r\n  custom_config_file=\"${ZSH_CUSTOM}/lib/${config_file:t}\"\r\n  [ -f \"${custom_config_file}\" ] && config_file=${custom_config_file}\r\n  source $config_file\r\ndone\r\n```\r\n\r\nMy .zshrc\r\n\r\n```\r\nexport ZSH=$HOME/.oh-my-zsh\r\nENABLE_CORRECTION=\"true\"\r\nCOMPLETION_WAITING_DOTS=\"true\"\r\nDISABLE_UNTRACKED_FILES_DIRTY=\"true\"\r\n\r\nplugins=(git zsh-syntax-highlighting zsh-auto-completion colored-man-pages)\r\n\r\nexport LANG=en_US.UTF-8\r\nexport ARCHFLAGS=\"-arch x86_64\"\r\nsource /home/tlil/.zsh-syntax-highlighting/zsh-syntax-highlighting.zsh\r\nsource /home/tlil/.oh-my-zsh/oh-my-zsh.sh\r\n```",
        "labels": "Support",
        "id": 44219
    },
    {
        "title": "AHEAD indicator does not show unless also behind",
        "body": "It might have been the case for quite a long time, but the ahead indicator will not show in some cases.\r\n\r\n1. use `strug` as a `ZSH_THEME`;\r\n2. go on a branch which has an upstream branch;\r\n3. make a commit\r\n\r\nExpected prompt: `something something (origin/my-branch +1)`\r\nActual prompt: `something something (origin/my-branch)`\r\n\r\nWhat works well is being behind or both ahead and behind, you will get `something something (origin/my-branch +11 -4)`, which is a super useful feature, thank you for it 👍",
        "labels": "Support",
        "id": 44220
    },
    {
        "title": "Maximized terminal window height shrinks on tab close on mac",
        "body": "On mac, when maximized: Closing a tab (out of two), returning down to a single tab shrinks the height of the terminal window by the size of the (no-longer visible) tab strip height.\r\nExpected: window height should remain the same - maximized.\r\nNote: this also happens when the terminal window is not maximized but the issue is noticeable mostly when it is maximized.",
        "labels": "Support",
        "id": 44221
    },
    {
        "title": "idea for colored-man-pages",
        "body": "Hi, \r\nI use colored-man-pages, and I recently installed man pages for cppreferance.com [pages](https://github.com/jeaye/stdman). In those pages there is section called \"Example\". It would be nice if this section would have syntax highlight. ",
        "labels": "Support",
        "id": 44222
    },
    {
        "title": "ZSH Theme prompt not properly updating",
        "body": "I'm trying to write a ZSH Theme that displays specific characters depending on the Git status (if within a git repo). I've previously implemented this theme in Bash, but am having some issues with moving over to ZSH. This is likely my own fault, but if anyone could help it'd be much appreciated.\r\n\r\nRelevant Portion of my theme:\r\n\r\n```\r\nlocal jobs=\"%{$terminfo[bold]$fg[cyan]%}[%{$fg[magenta]%}%j%{$terminfo[bold]$fg[cyan]%}]%{$reset_color%}\"\r\nlocal git_branch='$(git_prompt_info)%{$reset_color%}'\r\nlocal current_dir=\"%{$terminfo[bold]$fg[orange]%}%~%{$reset_color%}\"\r\n\r\nif [[ $UID -eq 0 ]]; then\r\n    local user_host=\"%{$terminfo[bold]$fg[red]%}%n@%m%{$reset_color%}\"\r\n    local user_symbol=\"#\"\r\nelse\r\n    local user_host=\"%{$terminfo[bold]$fg[green]%}%n@%{$fg[red]%}%m%{$reset_color%}\"\r\n    local user_symbol=\"$\"\r\nfi\r\n\r\nfunction git_has_unstaged() {\r\n  if ! $(git diff-files --quiet --ignore-submodules --); then\r\n      echo -n \"%*! \";\r\n  fi;\r\n}\r\n\r\nfunction git_has_uncommitted() {\r\n  if [ ! $(git diff --quiet --ignore-submodules --cached; echo \"${?}\") = \"0\" ]; then\r\n      echo -n \"%*+ \";\r\n  fi;\r\n}\r\n\r\nfunction git_has_untracked() {\r\n  if [ -n \"$(git ls-files --others --exclude-standard)\" ]; then\r\n      echo -n \"%*? \";\r\n  fi;\r\n}\r\n\r\nfunction git_has_stashed() {\r\n  if $(git rev-parse --verify refs/stash &>/dev/null); then\r\n      echo -n \"%*$ \";\r\n  fi;\r\n}\r\n\r\nfunction git_status_symbols() {\r\n  echo -n \"%{$terminfo[bold]$fg[blue]%}[\";\r\n  if [ $(git rev-parse --is-inside-work-tree &>/dev/null; echo \"${?}\") = \"0\" ]; then\r\n    #Now is it Git repo\r\n    if [ \"$(git rev-parse --is-inside-git-dir 2> /dev/null)\" = \"false\" ]; then\r\n      # check if the current directory is in .git before running git checks\r\n      # Ensure the index is up to date.\r\n      git update-index --really-refresh -q &>/dev/null;\r\n      git_has_uncommitted;\r\n      git_has_unstaged;\r\n      git_has_untracked;\r\n      git_has_stashed;\r\n    fi;\r\n  fi;\r\n  echo -n \"]%{$reset_color%}\";\r\n}\r\n\r\nPROMPT=\"╭─${user_host} ${current_dir} ${jobs} ${git_branch} $(git_status_symbols)\r\n╰─%B${user_symbol}%b \"\r\nZSH_THEME_GIT_PROMPT_PREFIX=\"%{$fg[yellow]%}‹\"\r\nZSH_THEME_GIT_PROMPT_SUFFIX=\"›%{$reset_color%}\"\r\n```\r\n\r\nMy issue is that the `git_status_symbols` value in the prompt doesn't update according to updates in the fs/git. Example:\r\n```\r\n╭─theonlyjohnny@phoenix ~/configs [0] ‹bored› []\r\n╰─$ git status\r\nOn branch bored\r\nYour branch is up to date with 'origin/bored'.\r\n\r\nnothing to commit, working tree clean\r\n╭─theonlyjohnny@phoenix ~/configs [0] ‹bored› []\r\n╰─$ touch ./t\r\n╭─theonlyjohnny@phoenix ~/configs [0] ‹bored› []\r\n╰─$ git_has_untracked\r\n%*? %                                                                                                                                                                                                                                                                                                               ╭─theonlyjohnny@phoenix ~/configs [0] ‹bored› []\r\n╰─$ zsh\r\n╭─theonlyjohnny@phoenix ~/configs [0] ‹bored› [1:50:37? ]\r\n╰─$\r\n╭─theonlyjohnny@phoenix ~/configs [0] ‹bored› [1:52:14? ]\r\n╰─$ rm t\r\n╭─theonlyjohnny@phoenix ~/configs [0] ‹bored› [1:52:16? ]\r\n╰─$ git_has_untracked\r\n╭─theonlyjohnny@phoenix ~/configs [0] ‹bored› [1:52:22? ]\r\n╰─$ zsh\r\n╭─theonlyjohnny@phoenix ~/configs [0] ‹bored› []\r\n╰─$\r\n```\r\nAs you can see, while my `git_has_untracked` function is properly echoing a `?`, the prompt is not reflecting this until I start a new shell. After removing the untracked file, the `git_has_untracked` function properly no longer echoes anything. What's interesting here is that the time is still being updated. Upon creation of a new shell the prompt is once again correct.\r\n\r\nAny help appreciated! Thanks",
        "labels": "Support",
        "id": 44223
    },
    {
        "title": "git aware prompt always incorrect",
        "body": "Hi,\r\n\r\nI am using zsh running in terminator on WSL. I find that using any git aware oh-my-zsh prompt theme will give incorrect git status which constantly changes. Here is an example of some prompts in a new repo, all I have done is pressed <CR> again each time I have a new prompt.\r\n![image](https://user-images.githubusercontent.com/25767561/53917279-167d7380-405c-11e9-8c43-8fb96dc584ff.png)\r\n\r\nThe git status shows a mixture of untracked, unstaged, staged and conflicted statuses. I will often get a 130 return code from doing nothing.\r\n\r\nJon",
        "labels": "Support",
        "id": 44224
    },
    {
        "title": "yarn completion invalid",
        "body": "1a657c6c4d44dbfcffb4c633a58e623f4d692706 add a split file containing completion scripts. But it's invalid for me. And if I combine this file into the original `.zsh` file, everything works fine. Should I commit a fix to do that?",
        "labels": "Support",
        "id": 44225
    },
    {
        "title": "What is the correct way to show some env var in PROMPT?",
        "body": "Hi!\r\nIn my work I need to fast switch KUBECONFIG variable, and I'd like to have it as a part of my PROMPT.\r\nMy current PROMPT looks like:\r\n```\r\nlocal⎈ az@host ~/projects$\r\n```\r\nThe local - is the name of file-profile and it's the value of KUBECONFIG env var.\r\neverything looks like fine, until I try to do some tab-autocompletions.\r\nFor example, when I type 'ls' and press 'tab' I see:\r\n```local⎈ az@host /tmp$ ls        ls\r\nssh-sx6ma6bEUvfn\r\n```\r\n\r\n```\r\nprecmd() {\r\n  kubecfg=$(echo \"$KUBECONFIG\" | cut -d '/' -f 5)\r\n}\r\n\r\nimg=$(echo \"\\u2388\")\r\nkube=\"$fg[red]\"'${kubecfg}'\"$fg[blue]${img}\"\r\n\r\nPROMPT=\"${kube} ${user} ${pwd}$ \"\r\n```\r\n\r\nI know that I have to use %{ %} , but I failed to modify my there for this :( \r\nCould you help me? \r\n",
        "labels": "Support",
        "id": 44226
    },
    {
        "title": "tab completes moves to wrong line",
        "body": "I've only got this issue on my MacBook pro. On my arch linux box with basically the same rc it works perfectly.  Here is the prompt pre-tab complete: \r\n```\r\n#( 02/24/19@12:24PM )( garrettbattaglia@Garretts-MacBook-Pro ):~ \r\n   nano \r\n```\r\n\r\nafter: \r\n```\r\n#( 02/24~/.oh-my-zshloadrcrettbattaglia@Garretts-MacBook-Pro ):~ \r\n   nano\r\n```\r\n\r\nas you can see the completion  is on the line above. \r\n\r\n[zshrc](https://gist.github.com/gwoplock/4d4869cf64268b43cd951543237d4eec)\r\n\r\n",
        "labels": "Support",
        "id": 44227
    },
    {
        "title": "How to fix ohmyzsh startup error",
        "body": "Here is the error when i open my console and oh-my-zsh as default shell\r\nzsh: done       echo |\r\nzsh: abort",
        "labels": "Support",
        "id": 44228
    },
    {
        "title": "ssh-agent plugin always asks for passphrase after boot",
        "body": "Hello, I'm not sure if that is normal behaviour,\r\n\r\nI have the following code (part of it) in my `.zshrc` file:\r\n\r\n```\r\n  ssh-agent\r\n)\r\n\r\nzstyle :omz:plugins:ssh-agent agent-forwarding on\r\nzstyle :omz:plugins:ssh-agent identities id_rsa gitlab github\r\n\r\n\r\nsource $ZSH/oh-my-zsh.sh\r\n```\r\n\r\nBut every time after the boot of machine, when I run iTerm, I prompted to enter passphrase:\r\n\r\n```\r\nLast login: Sun Feb 17 23:34:58 on ttys001\r\nEnter passphrase for /Users/*****/.ssh/id_rsa:\r\nIdentity added: /Users/*****/.ssh/id_rsa (/Users/*****/.ssh/id_rsa)\r\nIdentity added: /Users/*****/.ssh/gitlab (/Users/*****/.ssh/gitlab)\r\nEnter passphrase for /Users/*****/.ssh/github:\r\nIdentity added: /Users/*****/.ssh/github (*******@gmail.com)\r\n```\r\n\r\nOnce I add my passphrase, then if I close iTerm and start it again it won't ask me again. It only asks me when I boot my computer and launching iTerm for the first time after boot.\r\n\r\nIs that normal? And if not, how can I fix it? And if yes, is there a way to prevent it or store my passphrase somewhere in my system so it will automatically read it?\r\n\r\nThank you in advance!",
        "labels": "Support",
        "id": 44229
    },
    {
        "title": "Completion with \". <TAB>\" should work like with \"source <TAB>\"",
        "body": "As it is not uncommon to use single dot instead of ``source`` it would be nice if completion for it would work the same. For example\r\n```\r\nsource <TAB>\r\n```\r\ntriggers completion with folders / files in current directory.\r\nIn bash the same goes for \r\n```\r\n. <TAB>\r\n```\r\n\r\nHowever, it does not seem to work in ZSH with oh-my-zsh. \r\nAm I missing something?",
        "labels": "Support",
        "id": 44230
    },
    {
        "title": "workon do not change python virtual environment",
        "body": "Hi, \r\nI have installed virtualenvwrapper with \r\n    `pip install virtualenvwrapper`\r\nI have also added the following commands at the end of my `~/.zshrc` \r\n\r\n    export VIRTUALENVWRAPPER_PYTHON=/usr/local/bin/python3.6\r\n    export VIRTUALENVWRAPPER_VIRTUALENV=/usr/local/bin/virtualenv\r\n    export WORKON_HOME=~/.virtualenvs\r\n    source /usr/local/bin/virtualenvwrapper.sh\r\n    export VIRTUAL_ENV_DISABLE_PROMPT=0\r\n    POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status virtualenv)\r\n\r\nPlus adding `virtualenv` in the list of plugins.\r\nI have created a virtualenvironment and I can see it in the list if I type `workon`\r\nHowever, when I try \r\n   `workon my_env`\r\nNothing happens, if I use `which python` and `python --version` they are both pointing to the system default. Please help. I have tried all stackoverflow questions with no luck.",
        "labels": "Support",
        "id": 44231
    },
    {
        "title": "Virtualenvwrapper conplains unnecesarily",
        "body": "I get this error message when I start zsh\r\n\r\n    [oh-my-zsh] $WORKON_HOME is not defined so plugin virtualenvwrapper will not work\r\n\r\n, but the last commit f461d21de1bd0c1394e57a2e3af69778692e4ba4 made the plugin behave like virtualenvwrapper on Bash, and default to `$HOME/.virtualenvs`.\r\n\r\nAm I correct in that this warning should just be removed?\r\nThe plugin seems to works just fine.",
        "labels": "Support",
        "id": 44232
    },
    {
        "title": "Conditionally add to prompt only if envar is set",
        "body": "How can I update the robbyrussell theme to include a envar `$CLIENT` in the prompt, only if the envar `$CLIENT` is set?\r\n\r\nDoing the following in the theme file always adds the envar:\r\n\r\n```\r\nPROMPT='${hostname} [%{$fg[blue]%}$CLIENT%{$fg_bold[black]%}] ${ret_status} %{$fg[cyan]%}%c%{$reset_color%} $(git_prompt_info)'\r\n```\r\n\r\nSo I only want the entire block `[%{$fg[blue]%}$CLIENT%{$fg_bold[black]%}]` to display if `$CLIENT` is set.\r\n\r\n",
        "labels": "Support",
        "id": 44233
    },
    {
        "title": "ggl giving error, temporarily fixed by commenting lines",
        "body": "/Users/abdullahkhilji/.oh-my-zsh/plugins/git/git.plugin.zsh:120: defining function based on alias `ggl'\r\n/Users/abdullahkhilji/.oh-my-zsh/plugins/git/git.plugin.zsh:120: parse error near `()'",
        "labels": "Support",
        "id": 44234
    },
    {
        "title": "Does it support Windows?",
        "body": "I have used this terminal in Mac but now I am using Windows. Does it support windows? If not do you have any idea what is close to this on windows?",
        "labels": "Support",
        "id": 44235
    },
    {
        "title": "oh-my-zsh default ~/.zshrc will cause locale to be unset",
        "body": "When loading omz default zshrc file:\r\n```\r\n 🌝👍 ~ echo $LANG\r\n\r\n```\r\nand bash:\r\n```\r\n 🌝👍 v bash\r\nsakiiily@eat-x220i [ v ] $ echo $LANG\r\nen_US.UTF-8\r\n```\r\nThe solution is to add `source /etc/profile` to your zshrc",
        "labels": "Support",
        "id": 44236
    },
    {
        "title": "zsh mistakenly thinks unterminated quote when using exclamation mark (!\")",
        "body": "(not sure if zsh bug or by-design or oh-my-zsh bug)\r\n\r\nWhen I type `echo --message=\"foo!\"` to my oh-my-zsh (up-to-date) with zsh 5.3, I get a \"dquote\" prompt for an unterminated quote:\r\n\r\n```\r\n$ echo --message=\"foo!\"\r\ndquote>\r\n```\r\n\r\nThis does not happen in bash.\r\n\r\nWeird enough, when I drop the `!` from `foo!` it works fine:\r\n\r\n```\r\necho --message=\"foo\"\r\n--message=foo\r\n```\r\n\r\n(I'm sorry for reporting here if this is not a zsh issue.)",
        "labels": "Support",
        "id": 44237
    },
    {
        "title": "Slow shell",
        "body": "After the last update my shell become very slow, it takes several seconds (10+) to start the session, open a folder, etc. I have tested `bash` and it loads very quickly.\r\n\r\nI'm using `zsh` 5.4.2 and the latest version of oh my zsh, I had also tested using terminator, deepin terminal, gnome terminal and to disable all [plugins](https://github.com/robbyrussell/oh-my-zsh/issues/1311), but it still slow.\r\n\r\nSome tips ?",
        "labels": "Support",
        "id": 44238
    },
    {
        "title": "config globalias to expand not always",
        "body": "globalias is a nice plugin, but is it possible to disable expansion for some of the aliases. for example the ls,cp,rm commands are commonly aliased, but it's quite annoying to expand them.",
        "labels": "Support",
        "id": 44239
    },
    {
        "title": "Line editing unusable near large directories",
        "body": "When I try to edit a history item which refers to a non-git directory with 242698 files in it, as soon as I type the `/`, zsh stops visually updating the line being edited.  By hitting enter with `-xv` set and waiting over a minute, I could get the following sequence of events:\r\n\r\n```\r\n~/t/a/recognition> ls -U img | head | xargs -I _ file img/_\r\nls -U img | head | xargs -I _ file img/_\r\n+preexec:0> neatPwd\r\n+neatPwd:1> pwd\r\n+neatPwd:1> sed $'\\ns#^/home/morris#~#\\ns#\\\\([^/]\\\\)[^/]*/#\\\\1/#g'\r\n+preexec:0> title 'ls -U img | head | xargs -I _ file img/_' '~/t/a/recognition'\r\n+title:2> local a='ls -U img | head | xargs -I _ file img/_'\r\n+title:5> a=+title:5> print -Pn '%40>...>ls -U img | head | xargs -I _ file img/_'\r\n+title:5> a=+title:5> tr -d '\\n'\r\n+title:5> a='ls -U img | head | xargs -I _ file img/_'\r\n+title:6> case screen-256color (screen*)\r\n+title:8> print -Pn '\\e]2;ls -U img | head | xargs -I _ file img/_ @ ~/t/a/recognition\\a'\r\n+title:9> print -Pn '\\ekls -U img | head | xargs -I _ file img/_\\e\\'\r\n+title:10> print -Pn '\\e_~/t/a/recognition   \\e\\'\r\n+_zsh_highlight_preexec_hook:2> typeset -g _ZSH_HIGHLIGHT_PRIOR_BUFFER=''\r\n+_zsh_highlight_preexec_hook:3> typeset -gi _ZSH_HIGHLIGHT_PRIOR_CURSOR=''\r\n+fizsh:22> ls '--color=auto' -U img\r\n+fizsh:22> head\r\n+fizsh:22> xargs -I _ file img/_\r\nimg/0710.0422-Figure-7_6.png: PNG image data, 12 x 15, 8-bit/color RGB, non-interlaced\r\nimg/1004.3467-Figure-5_27.png: PNG image data, 10 x 13, 8-bit/color RGB, non-interlaced\r\nimg/0909.5125-Figure-10_110.png: PNG image data, 9 x 7, 8-bit/color RGB, non-interlaced\r\nimg/0903.2138-Figure-2_37.png: PNG image data, 11 x 10, 8-bit/color RGB, non-interlaced\r\nimg/0803.0342-Figure-8_157.png: PNG image data, 14 x 11, 8-bit/color RGB, non-interlaced\r\nimg/1007.1014-Figure-2_1.png: PNG image data, 26 x 14, 8-bit/color RGB, non-interlaced\r\nimg/0910.5865-Figure-2_183.png: PNG image data, 3 x 7, 8-bit/color RGB, non-interlaced\r\nimg/1001.3270-Figure-13_166.png: PNG image data, 30 x 15, 8-bit/color RGB, non-interlaced\r\nimg/0707.0227-Figure-1_28.png: PNG image data, 16 x 17, 8-bit/color RGB, non-interlaced\r\nimg/0807.3014-Figure-6_77.png: PNG image data, 10 x 9, 8-bit/color RGB, non-interlaced\r\n+precmd:1> neatPwd\r\n+neatPwd:1> pwd\r\n+neatPwd:1> sed $'\\ns#^/home/morris#~#\\ns#\\\\([^/]\\\\)[^/]*/#\\\\1/#g'\r\n+precmd:1> title fizsh '~/t/a/recognition'\r\n+title:2> local a=fizsh\r\n+title:5> a=+title:5> print -Pn '%40>...>fizsh'\r\n+title:5> a=+title:5> tr -d '\\n'\r\n+title:5> a=fizsh\r\n+title:6> case screen-256color (screen*)\r\n+title:8> print -Pn '\\e]2;fizsh @ ~/t/a/recognition\\a'\r\n+title:9> print -Pn '\\ekfizsh\\e\\'\r\n+title:10> print -Pn '\\e_~/t/a/recognition   \\e\\'\r\n+_zsh_highlight_main__precmd_hook:1> _zsh_highlight_main__command_type_cache=( )\r\n+fizsh:23> /home/morris/.fizsh/fizsh-prompt.zsh\r\n```\r\n\r\nI don't see information about line-editing here, is it possible to print debug information about that?\r\n\r\nBeing able to work without auto-complete in large directories would be a great feature for people working with big data.",
        "labels": "Support",
        "id": 44240
    },
    {
        "title": ".zshrc custom installation : how to source it?",
        "body": "I want to install oh-my-zsh and its settings (i.e. zshrc file) in a subfolder of my Dropbox.\r\n\r\nFound how to modify the path to my oh-my-zsh installation. \r\n\r\nI also wants to add my .zshrc file in my Dropbox so I do not have to modify the settings on any of my macs. \r\n\r\nMy settings only loads when .zshrc is located in ~/  When located in one of my Dropbox sub-folder they don't. \r\n\r\nHow can I source my .zshrc file so I do do have to source it manually every time I launch zsh?\r\n\r\nThank you !\r\n\r\n",
        "labels": "Support",
        "id": 44241
    },
    {
        "title": "misc.zsh (`\\n') git.plugin.zsh (_omz_git_git_cmd^M)",
        "body": "Hi,\r\n\r\ntwo errors after upgrade\r\n\r\n* OS: Ubuntu 18.04\r\nThere is a problem with end of line characters \r\n\r\n```\r\n$ source .zshrc\r\n\r\n.../.oh-my-zsh/lib/misc.zsh:41: parse error near `\\n'\r\n.../.oh-my-zsh/plugins/git/git.plugin.zsh:2: not an identifier: _omz_git_git_cmd^M\r\n```\r\n\r\nI re-saved the files using `LF` and no more warnings.\r\n\r\nThanks",
        "labels": "Support",
        "id": 44242
    },
    {
        "title": "Clear git Prompt",
        "body": "Hello!\r\n\r\nI am using iTerm for my terminal, powerlevel9k as my theme and I am on a Mac. I am having an issue (maybe it's a git thing) but one day while I was using git, I accidentally committed code outside of the directory the project was on and since zsh has a git prompt on it, this shows up.\r\n\r\n<img width=\"404\" alt=\"zsh-problem\" src=\"https://user-images.githubusercontent.com/11360056/51445472-945f0880-1cc2-11e9-9371-708aaf14b543.png\">\r\n\r\n\r\nIt comes up no matter what project I am on. In the image, I am in my main directory.\r\n\r\nHow do I get clear this so I can start fresh?\r\n\r\nThank you.",
        "labels": "Support",
        "id": 44243
    },
    {
        "title": "vim , zsh ,zshrc ",
        "body": "why  use vim with zsh that it's very  stuck and slowly",
        "labels": "Support",
        "id": 44244
    },
    {
        "title": "No command 'your' found, did you mean:",
        "body": "I've installed zsh on my Terminal(Termux) on android with following command `sh -c \"$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)\"`\r\n\r\nIts working fine,but i got error after use another theme\r\n```\r\nNo command 'l#' found, did you mean:\r\n Command 'ld' from package 'binutils'\r\n Command 'ln' from package 'busybox'\r\n Command 'ls' from package 'busybox'\r\n Command 'ln' from package 'coreutils'\r\n Command 'ls' from package 'coreutils'\r\n Command 'lz' from package 'mtools'\r\nNo command 'your' found, did you mean:\r\n Command 'tor' from package 'tor'\r\n```\r\n\r\nI tried to using others theme but still error like that\r\n\r\nim used zsh version `zsh 5.6.2 (aarch64-unknown-linux-android)`\r\n\r\nI don't know where my wrong,any help so appreciate ",
        "labels": "Support",
        "id": 44245
    },
    {
        "title": "Suggestions pushes prompt to right",
        "body": "When I for example start writing `ls -` and then press tab to see possible parameters etc, a space is created and everything is pushed a bit to the right and duplicates what I've already written (in this case `ls -    *BLANK SPACE*     ls -`)\r\n\r\n![screenshot 2019-01-17 at 15 07 17](https://user-images.githubusercontent.com/1162046/51324250-86af4600-1a6a-11e9-9b8f-aeba86ff00b2.png)\r\n\r\nI've tried this without any themes and its still an issue.. please help me! :) \r\nIts super annoying",
        "labels": "Support",
        "id": 44246
    },
    {
        "title": "Too long git branch names",
        "body": "I sometime work with very long branch names which make a new line in my prompt.\r\n\r\nIs there a way to trim down the branch_name to only show maybe:\r\n**bugfix/XX-3145**\r\ninstead of: \r\n**bugfix/XX-3145-monkeys-are-in-their-cage-again**\r\n\r\nOr maybe some typ of ellipsis thingy where it says something like: \r\n**bugfix/XX-3145-monk...**\r\n\r\nCheers!",
        "labels": "Support",
        "id": 44247
    },
    {
        "title": "Is it possible to make git autocompltion work like in bash?",
        "body": "Hi!\r\n\r\n## Setup\r\n\r\n```\r\n➜  plugins git:(master) ✗ cat /etc/issue\r\nUbuntu 18.04.1 LTS \\n \\l\r\n➜  plugins git:(master) ✗ zsh --version\r\nzsh 5.4.2 (x86_64-ubuntu-linux-gnu)\r\n➜  .oh-my-zsh git:(master) ✗ git log --oneline | head -1\r\na299501 Merge pull request #7386 from deepan10/features/ansible-plugin\r\n```\r\n\r\n`.zshrc` file is default.\r\n\r\n## How to reproduce problem\r\n\r\nWrite `git check` and press tab.\r\n\r\n## What the correct behavior should be\r\n\r\nInstead it can just complete it to most used `git checkout`.\r\n\r\n## What the actual behavior is\r\n\r\nOh-my-zsh shows me 6 suggestions 5 of them I don't even know (and don't want to).\r\n\r\n``` shell\r\n➜  .oh-my-zsh git:(master) ✗ git check\r\ncheck-attr       -- display gitattributes information\r\ncheck-ignore     -- debug gitignore/exclude files\r\ncheck-mailmap    -- show canonical names and email addresses of contacts\r\ncheck-ref-format -- ensure that a reference name is well formed\r\ncheckout         -- checkout branch or paths to working tree\r\ncheckout-index   -- copy files from index to working directory\r\n```\r\n----\r\nI like oh-my-zsh behaviour with git (PS1, etc) except this issue. I probably fixed it on my old computer somehow (or I use old version), but it was long ago and I don't remember how I did it :(\r\nNow I got a new one and getting a little bit frustrated each time I change branches.\r\n\r\nIn bash it works exactly like I want (or I get used to how it works in bash).\r\n\r\nIs it possible to change this behavior with some tricky option in config file and save ability to update zsh? I tried to disable git plugin, remove it from `~/.oh-my-zsh/plugins/` but nothing helps.",
        "labels": "Support",
        "id": 44248
    },
    {
        "title": "Random emoji for each line ",
        "body": "I want to make my prompt to print a random emoji for each command I write. I can make it print a random emoji for each new terminal but I have no idea how to make it print a random emoji for each new command.",
        "labels": "Support",
        "id": 44249
    },
    {
        "title": "How to leave cursor at the position in forward-i-search mode",
        "body": "In the command line, search `█echo winner` with `Ctrl+S` with text `winner` (want to replace with `loser` )\r\n```\r\n> echo winner█\r\nfwd-i-search: winner\r\n```\r\nNote: current cursor is indicated by █\r\n\r\nNow when i hit `Enter`, the command just run without give me a chance to change command line.\r\nIn Emacs hit `Enter` run `isearch-exit` to exit I-search mode, leaving cursor at the point...\r\n\r\ni found double `ESC` or `Ctrl-[` should make that work, but i want `Enter` instead...\r\n",
        "labels": "Support",
        "id": 44250
    },
    {
        "title": "How do i use default commands mac?",
        "body": "Hey,\r\n\r\nThis might have been asked already but couldn't find the issue. When i try to run the default commands of mac before i had this installed it doesn't work anymore. How can i use the default commands again with oh my zsh?\r\n\r\nKind regards,\r\n\r\ncuexit",
        "labels": "Support",
        "id": 44251
    },
    {
        "title": "When you insert the command appears white fill",
        "body": "When you insert a command, a white fill appears. How to remove it?\r\n<img width=\"152\" alt=\"screen shot 2019-01-01 at 23 57 05\" src=\"https://user-images.githubusercontent.com/23306157/50576343-1e812300-0e21-11e9-9b23-3b8e46f6ca44.png\">\r\n",
        "labels": "Support",
        "id": 44252
    },
    {
        "title": "Unable to automate update of zsh and make it unattended",
        "body": "I love zsh and oh-my-zsh and I use it on multiple machines but the update prompts is a real PITA that break my \"flow\".\r\n\r\nAs a power user I do want to configure it to always update without asking me. How can I do that?",
        "labels": "Support",
        "id": 44253
    },
    {
        "title": "Git branch completion doesn't work",
        "body": "Hey, I have browsed a number of threads regarding this beyond counting.\r\n\r\nI want to be able to hit `<TAB>` after `git checkout` and see a list of the local\r\nbranches that exist in my repository. I was told this would work as-is when I installed\r\n`zsh` and `oh-my-zsh` from `brew`. It didn't, so I tried to debug it in the following ways:\r\n\r\n1) Added `git` to my plugins. Then I investigated and it only defines a list of aliases\r\n2) Added `gitfast` to my plugins. It ships with a `git-completion.bash` script, but it never sources it anywhere\r\n3) Tried downloading those scripts: [git-completion.bash](https://github.com/git/git/blob/master/contrib/completion/git-completion.bash) and [git-completion.zsh](https://github.com/git/git/blob/master/contrib/completion/git-completion.zsh) and sourcing the latter.\r\nI also tried each of those steps after removing `~/.zcompdump*`.\r\n\r\nPerhaps someone with a deeper insight could help. Attachments:\r\n\r\n[my .zshrc](http://termbin.com/1u7g)\r\n\r\nThe tab completion suggests file names for `checkout`:\r\n![image](https://user-images.githubusercontent.com/9921596/49443909-f1176a00-f7cd-11e8-8b8e-b7bdcf65f538.png)\r\n",
        "labels": "Support",
        "id": 44254
    },
    {
        "title": "alias folder navigation",
        "body": "There is a view to allow zsh to view folders that are created as alias when I use for example CD or any other command?",
        "labels": "Support",
        "id": 44255
    },
    {
        "title": "update error in KDE NEON ",
        "body": "\r\n![screenshot_20181208_093751](https://user-images.githubusercontent.com/36255122/49681751-fd9d0a80-facc-11e8-9d76-23a2f33ca9a2.png)\r\noh-my-zsh is unable to update automatically in KDE NEON distribution . it can only be updated by changing directory to `~/.oh-my-zsh` than executing `git pull`\r\n\r\ncan you look into this ... ",
        "labels": "Support",
        "id": 44256
    },
    {
        "title": "Themes not loading",
        "body": "for some reason when i source .zshrc the themes dont change\r\nhttp://dpaste.com/1D6ZJ99",
        "labels": "Support",
        "id": 44257
    },
    {
        "title": "Piping to non-existant command fails silently",
        "body": "When using `oh-my-zsh` (actual):\r\n```\r\n$ echo hello | notrealcommand\r\n$\r\n```\r\n\r\nWhen using `zsh --norcs` (expected):\r\n```\r\n$ echo hello | notrealcommand\r\nzsh: command not found: notrealcommand\r\n$\r\n```\r\n\r\nWhen using bash (for comparison):\r\n```\r\n$ echo hello | notrealcommand\r\nnotrealcommand: command not found\r\n```\r\nI am using `oh-my-zsh` with a number of aliases defined. I am also using the `command-not-found` library.\r\n\r\nPlease let me know if you need to see some of my config in order to debug this.",
        "labels": "Support",
        "id": 44258
    },
    {
        "title": "First characters of prompt are repeated after tab autocompletion (in a docker container)",
        "body": "Similar to  #4632  #3505 #3368  #4341 #5157 (...). Should we document this somewhere?\r\n\r\nI could reproduce the problem inside a Docker container with almost all themes.  It could not be solved by setting proper `locale` (suggested in #5157). It does not work if I add `%{...%}` as well (from #3932 and https://unix.stackexchange.com/questions/90772/first-characters-of-the-command-repeated-in-the-display-when-completing ).\r\nInstead, I fixed it by replacing all special characters with normal ones.\r\nTake `robbyrussell.zsh-theme` for example, replace the `➜` with `>` and `✗` with `X`:\r\n```\r\n local ret_status=\"%(?:%{$fg_bold[green]%}> :%{$fg_bold[red]%}> )\"\r\n PROMPT='${ret_status} %{$fg[cyan]%}%c%{$reset_color%} $(git_prompt_info)'\r\n \r\n ZSH_THEME_GIT_PROMPT_PREFIX=\"%{$fg_bold[blue]%}git:(%{$fg[red]%}\"\r\n ZSH_THEME_GIT_PROMPT_SUFFIX=\"%{$reset_color%} \"\r\n ZSH_THEME_GIT_PROMPT_DIRTY=\"%{$fg[blue]%}) %{$fg[yellow]%}X\"\r\n ZSH_THEME_GIT_PROMPT_CLEAN=\"%{$fg[blue]%})\"\r\n```\r\nand the annoying problem is solved.\r\n\r\nJust a workaround but may help if for people who could not solve it by `export LC_CTYPE=en_US.UTF-8`. I would be glad to know if there is any other solution without replacing these characters inside a Docker container.",
        "labels": "Support",
        "id": 44259
    },
    {
        "title": "sometime, oh-my-zsh Taking too much time while login",
        "body": "This happens quit randomly, and it won't happen for a while after a trigger. So any idea that I can save login log into a file, so I can check it out when the issue happen ?",
        "labels": "Support",
        "id": 44260
    },
    {
        "title": "Git no indication when new untracked files are being added",
        "body": "While using git with zsh, there is no indication to show when new untracked files are being added, although there is indication when tracked files are changed.\r\nWithout seeing the `git status`, developer can't know if any untracked files exist.",
        "labels": "Support",
        "id": 44261
    },
    {
        "title": "The `.` command only finds files from PATH",
        "body": "The `.` command only is able to find files in PATH  while the source command is working fine. I only installed oh-my-zsh without modification along with https://github.com/clvv/fasd. \r\n\r\nWhile looking into this I realized that my Ubuntu18 `shell` has the same behavior while it works fine in `bash`. \r\n\r\nIs it possible to extend the zsh `.` command to run on files in working dir?",
        "labels": "Support",
        "id": 44262
    },
    {
        "title": "Calling a function when custom alias called",
        "body": "I'm writing a script to prevent me from entering some wrong commands like `rm`.\r\n\r\n```\r\nanti_RM() {\r\n   echo \"STOP!\" >&2\r\n   sleep 3\r\n}\r\n\r\nalias rm -fr /*=\"anti_RM\"\r\nalias rm -rf /*=\"anti_RM\"\r\nalias rm -fr /.=\"anti_RM\"\r\nalias rm -rf /.=\"anti_RM\"\r\n```\r\n\r\nWhen i coded this alias script in my custom `.zsh` file that calling from `.zshrc`, i get this error:\r\n\r\n`/home/dentrax/.zsh/aliases.zsh:20: no matches found: /*=anti_RM`\r\n\r\nHow do I make this right? Am i missing something? or Do we have to do this a different way for ZSH?",
        "labels": "Support",
        "id": 44263
    },
    {
        "title": "plugin dev question - check for local files ",
        "body": "My iterm2 is loading really slow.  I had some pyenv init commands that add 1 second to my load time.  Without those (not via the pyenv plugin) my shell loads quick.\r\n\r\nwith out pyenv plugin or pyenv init hard coded\r\n```\r\nmachine-d 福 ~\r\n10022 ◯ : /usr/bin/time zsh -i -c exit\r\n        0.38 real         0.17 user         0.12 sys\r\n```\r\nwith the pyenv -init scripts in my .zshrc, it takes about 1.5 seconds.\r\n\r\nwith the pyenv plugin, it's even worse! \r\n```\r\nmachine-id 福 ~\r\n10018 ◯ : /usr/bin/time zsh -i -c exit\r\n        4.99 real         1.54 user         0.95 sys\r\n```\r\n\r\nSo I want to write my own pyenv plugin, and just make it very quick.  \r\n\r\n1) check for .python-version file\r\n2) if that exists, run the init scripts\r\n\r\nI've looked at a few plugins but not sure how in a plugin to check to see if a specific file exists in the current working directory.   Is there a plugin I could look at to figure this out? \r\n\r\n\r\n\r\n",
        "labels": "Support",
        "id": 44264
    },
    {
        "title": "prepend conda to PATH on macOS High Sierra version 10.13.6 ",
        "body": "Hi there,\r\nIf I prepend \r\n```\r\nexport PATH=\"/anaconda3/bin\":$PATH\r\n```\r\nmy zsh terminal will not show the folder/file colors.\r\n\r\nIf I append it to my PATH, everything works fine.\r\nAny hint why?\r\n\r\nThanks,\r\nTommy ",
        "labels": "Support",
        "id": 44265
    },
    {
        "title": "git plugin latency",
        "body": "Hello.\r\n\r\nRecently, I cloned Unreal Engine to review the code.\r\nWhen I change to Unreal Engine directory, there are 1-4 seconds before terminal \"responds\".\r\n\r\nI tried both of my Mac and laptop. And both of them have same issue.\r\n\r\nUser software 1\r\n - Mac OS Sierra\r\n - Zsh 5.6.2\r\n - Oh-my-zsh latest version\r\n\r\nUser software 2\r\n - Ubuntu 18.04\r\n - Zsh 5.6.2\r\n - Oh-my-zsh latest version\r\n\r\nI used debug mode using this command \"zsh -xv\"\r\nAnd I found the moment what the responds happen.\r\n\r\n    +prompt_git:13> repo_path=+prompt_git:13> git rev-parse --git-dir\r\n    +prompt_git:13> repo_path=.git\r\n    +prompt_git:14> dirty=+prompt_git:14> parse_git_dirty\r\n    +parse_git_dirty:1> local STATUS=''\r\n    +parse_git_dirty:2> local -a FLAGS\r\n    +parse_git_dirty:3> FLAGS=( --porcelain )\r\n    +parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty\r\n    +parse_git_dirty:4> [[ '' != 1 ]]\r\n    +parse_git_dirty:5> [[ 1 -gt 0 ]]\r\n    +parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty'\r\n    +parse_git_dirty:8> [[ '' == true ]]\r\n    +parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'\r\n    +parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1\r\n         <On this moment, stopped 1-4 seconds delay>\r\n\r\n\r\nI think so many commits(Unreal Engine has 63,000 commits) make latency to open directory.\r\nWhen I deleted the \".git\" folder, the issue was gone.\r\nDoes we improve this latency?",
        "labels": "Support",
        "id": 44266
    },
    {
        "title": "Manuall Install without Git on command line.",
        "body": "Hi, I currently wanted to make a install but since I do not have sudo rights and can not agree to the Xcode license, I can't use Git on command line thanks to that, but I can clone from indirect sources (GitKraken GitHub Desktop, etc) How could I go on manually installing with these tools?",
        "labels": "Support",
        "id": 44267
    },
    {
        "title": " [per-directory-history] Multiple shells in the same folder do not share history",
        "body": "# How to reproduce the problem\r\n\r\n1. Open a shell in a folder, and type `echo hello`.\r\n2. Open a second shell in that same folder and type `echo world`.\r\n3. In both shells, use the arrow keys to view their respective history.\r\n\r\n# What happens\r\n\r\nEach shell does not contain the history of the other, albeit them being in the same folder. Sometimes, toggling to global and back makes the entries appear in the history, but a little in the wrong order.\r\n\r\n# What should happen\r\n\r\nAll shells in the same folder have a shared history.",
        "labels": "Support",
        "id": 44268
    },
    {
        "title": "Home and End key work not correctly when use plugin vi-mode ...",
        "body": "When I use `vi-mode` plugin, Press <kbd>Home</kbd> shows a `H` and move the command going to exec to next line:\r\n```\r\n➜  ~ H\r\nls\r\n```\r\nPress <kbd>End</kbd> shows a `F` and move the command going to exec to next line:\r\n```\r\n➜  ~ F\r\nls\r\n```\r\n\r\nOS: `Manjaro` + `zsh 5.6.2`",
        "labels": "Support",
        "id": 44269
    },
    {
        "title": "Completion for some plugins not working",
        "body": "Given the following minimal `zshrc`:\r\n\r\n```zsh\r\nplugins=(tmuxinator)\r\nZSH_THEME=\"robbyrussell\"\r\nexport ZSH=/home/bob/src/bobwhitelock/dotfiles/oh-my-zsh\r\nsource $ZSH/oh-my-zsh.sh\r\n```\r\n\r\n`tmuxinator <tab>` just gives me the default completion of the current directory rather than the completion defined in the plugin (in `plugins/tmuxinator/_tmuxinator`).\r\n\r\nSimilarly with this minimal `zshrc`:\r\n\r\n```zsh\r\nplugins=(httpie)\r\nZSH_THEME=\"robbyrussell\"\r\nexport ZSH=/home/bob/src/bobwhitelock/dotfiles/oh-my-zsh\r\nsource $ZSH/oh-my-zsh.sh\r\n```\r\n\r\n`http <tab>` gives me no completion at all, rather than the completion defined in the plugin. Without the `httpie` plugin I do get the default current directory plugin, which makes me think something's happening at least.\r\n\r\nIs something else needed to load these completions? Am I doing something wrong here?\r\n\r\nI'm running Arch and Linux 4.14.76-1-lts in case that might make a difference.\r\n\r\nThanks :slightly_smiling_face:.\r\n",
        "labels": "Support",
        "id": 44270
    },
    {
        "title": "Some themes not working",
        "body": "I'm changing the ZSH_THEME at /~.zshrc and I'm normally seeing the updated theme upon opening a new terminal tab.\r\nHowever, there are a few themes which simply do not work and default to robbyrussell.\r\nThose themes are:\r\n\r\n- awesomepanda\r\n- ys\r\n\r\nThose happen to be precisely the themes which I want because they have keyword highlighting :-(\r\n\r\nI'm running zsh 5.3 (x86_64-apple-darwin17.0)",
        "labels": "Support",
        "id": 44271
    },
    {
        "title": "agnoster: Unable to correctly identify non-repository directories",
        "body": "@mcornella Hi, \r\n\r\nmacOS 10.13.6\r\niterm2\r\nhg 4.7.2\r\n\r\nEvery time I open a new iterm2 tab, it block a few second, then show a improper prompt. It will block after every command run.\r\n\r\n`~` dir is not a hg repository.\r\n\r\n![image](https://user-images.githubusercontent.com/22186269/46903535-f8767180-cf08-11e8-8a4a-4a1c661036a5.png)\r\n\r\nso I change the code in `prompt_hg`\r\n```\r\n  (( $+commands[hg] )) || return\r\n  local rev st branch\r\n  if $(hg id | grep -v '000000000000' >/dev/null 2>&1); then   # here!!!\r\n```\r\n\r\nFixed!\r\n\r\n![image](https://user-images.githubusercontent.com/22186269/46903597-dd583180-cf09-11e8-8d7a-c47c387a6e68.png)\r\n\r\nCan I submit a PR to fix this bug?\r\n\r\nThanks!",
        "labels": "Support",
        "id": 44272
    },
    {
        "title": "Tab autocomplete on ssh uses Hostname instead of Host",
        "body": "Lets say I've:\r\n\r\n```\r\nHost fujin\r\nUser sandro\r\nPort 999\r\nHostname fujin.domain.com\r\n```\r\nIn `.ssh/config` file.\r\n\r\nwhen I type `$ ssh fu` in terminal and hit tab, autocomplete makes it `$ ssh fujin.domain.com`\r\n\r\nI'm pretty sure it did not work this way few month back, it would just autocomplete to `$ ssh fujin`.",
        "labels": "Support",
        "id": 44273
    },
    {
        "title": "zsh: permission denied: live-server ( or any global package with zsh)",
        "body": "At first I had this problem \r\nzsh: command not found: live-server\r\n\r\nbut then I was able to redirect my PATH to my npm-global file and reinstalled brew.\r\n\r\nI have been combing through other issues and they either don't make sense to me or that are attached to a different problem. \r\n\r\nhere is my .zshrc\r\n```zsh\r\n#Add node bin directory to path\r\n#export PATH=$HOME/npm-global/lib/node_modules:$PATH\r\nexport PATH=$HOME/usr/daniel/bin:$PATH\r\n\r\n# Path to your oh-my-zsh installation.\r\nexport ZSH=$HOME/.oh-my-zsh\r\n\r\n# Set name of the theme to load.\r\n# Look in ~/.oh-my-zsh/themes/\r\n# Optionally, if you set this to \"random\", it'll load a random theme each\r\n# time that oh-my-zsh is loaded.\r\nZSH_THEME=\"random\"\r\n\r\n# HOW TO RUN VISUAL STUDIO CODE FROM ZSH ON MAC OSX\r\nfunction code {\r\n    if [[ $# = 0 ]]\r\n    then\r\n        open -a \"Visual Studio Code\"\r\n    else\r\n        local argPath=\"$1\"\r\n        [[ $1 = /* ]] && argPath=\"$1\" || argPath=\"$PWD/${1#./}\"\r\n        open -a \"Visual Studio Code\" \"$argPath\"\r\n    fi\r\n}\r\n\r\n\r\n# Load Nerd Fonts with Powerlevel9k theme for Zsh\r\nPOWERLEVEL9K_MODE='nerdfont-complete'\r\nsource ~/powerlevel9k/powerlevel9k.zsh-theme\r\n\r\n# Customise the Powerlevel9k prompts\r\nPOWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(ssh dir node_version vcs custom_javascript newline status)\r\n\r\n# Create a custom JavaScript prompt section\r\nPOWERLEVEL9K_CUSTOM_JAVASCRIPT=\"echo -n '\\ue781' JavaScript\"\r\nPOWERLEVEL9K_CUSTOM_JAVASCRIPT_FOREGROUND=\"black\"\r\nPOWERLEVEL9K_CUSTOM_JAVASCRIPT_BACKGROUND=\"yellow\"\r\n\r\nPOWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=()\r\nPOWERLEVEL9K_PROMPT_ADD_NEWLINE=true\r\n\r\n\r\n# Aliases for list commands with colorful output\r\nalias lsc=\"colorls\"\r\nalias ls='ls -G'\r\n\r\n# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)\r\n# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/\r\n# Example format: plugins=(rails git textmate ruby lighthouse)\r\n# Add wisely, as too many plugins slow down shell startup.\r\nplugins=(git)\r\n\r\nsource $ZSH/oh-my-zsh.sh\r\n```",
        "labels": "Support",
        "id": 44274
    },
    {
        "title": "self-update on macOS aborts on case-different filename",
        "body": "When running the built-in auto-updater, it bails out on trying to change the case of `plugins/ubuntu/README.md`. Case changes in git is very dangerous around filesystems with interesting case-insensitive semantics.\r\nThe effect on my APFS volume when doing a `rm readme.md` in a directory containing both `README.md` and `readme.md` is to delete both, for example.\r\nThis is completely blocking forward progress in my checkout.\r\n```\r\n create mode 100644 plugins/ubuntu/README.md\r\n delete mode 100644 plugins/ubuntu/readme.md\r\n create mode 100644 plugins/vagrant/README.md\r\n create mode 100644 plugins/vundle/README.md\r\n create mode 100644 plugins/web-search/README.md\r\n create mode 100644 plugins/yum/README.md\r\nFirst, rewinding head to replay your work on top of it...\r\nerror: The following untracked working tree files would be overwritten by checkout:\r\n\tplugins/ubuntu/README.md\r\nPlease move or remove them before you switch branches.\r\nAborting\r\ncould not detach HEAD\r\nThere was an error updating. Try again later?\r\n```",
        "labels": "Support",
        "id": 44275
    },
    {
        "title": "history-substring-search matches only from beginning of line",
        "body": "When using history-substring-search, I expect to be able to use arbitrarily positioned substrings, like in fizsh.  However, it appears that I can only search history by substrings anchored at the beginning of the history item, unlike in fizsh.\r\n\r\nFor example, in fizsh, `googl` :arrow_up: would match `ping google.com`, however, in history-substring-search, it does not.\r\n\r\nHowever, history-substring-search seems to be enabled; `pin` :arrow_up: does match `ping google.com`.\r\n\r\nI'm on 3320658f30e0556bae0844629a265ae71f807cc1, just pulled and reproduced bug as written above.  Using an arch system.",
        "labels": "Support",
        "id": 44276
    },
    {
        "title": "Oh-my-zsh & tmux outputting unexpected messages ",
        "body": "I generated a ssh key by 'ssh-keygen' yesterday and later when I start new sessions for tmux, tmux output something related to SSH, but I know really know what that is. I used 'grep' to search and got this:\r\n\r\n![image](https://user-images.githubusercontent.com/30824931/46526642-68f61080-c8c1-11e8-84f0-ba993423579a.png)\r\n\r\n**My question:**\r\n 1, Why this message is shown?\r\n 2, How can I disable the message?\r\n\r\n**Other info**\r\nRunning debian, it's WSL installed form Microsoft's store a few weeks ago, I think it's up to date:)",
        "labels": "Support",
        "id": 44277
    },
    {
        "title": "permission denied: /root/.oh-my-zsh/oh-my-zsh.sh",
        "body": "At my home-lab setup, I run RedHat, and only **root** user has ALL privileges.\r\nRegular user \"**skeleto**\" and he can't run any of yum install or any root privileges \r\nSo, I install \"**zsh**\" and \"**oh-my-zsh**\" as **root** and setup all. All work fine as root.\r\n\r\nThen i run next\r\n> [skeleto@olimp ~]$ chsh -s /bin/zsh \r\n> Changing shell for skeleto.\r\n> Password: \r\n> Shell changed.\r\n\r\nand when i relog to be sure for apply all, i got this\r\n`/home/skeleto/.zshrc:source:68: permission denied: /root/.oh-my-zsh/oh-my-zsh.sh`\r\n\r\nAny words of wisdom ? ",
        "labels": "Support",
        "id": 44278
    },
    {
        "title": "adding current branch name on all the timestamp lines?",
        "body": "Is possible to add the current branch name on all the timestamp lines? Something like this:\r\n\r\nFROM:\r\n\r\n    [18:37:39] Starting 'build-js'...\r\n    [18:37:49] finished 'build-js'...\r\n\r\nTO:\r\n\r\n    [18:37:39 - **current-branch-name** ] Starting 'build-js'...\r\n    [18:37:49 - **current-branch-name** ] finished 'build-js'...\r\n\r\nThanks.",
        "labels": "Support",
        "id": 44279
    },
    {
        "title": "clean theme display error",
        "body": "![tim 20180928151049](https://user-images.githubusercontent.com/6966865/46193451-ca056d80-c330-11e8-9767-81d691db10c2.png)\r\n\r\nWhen you enter the git project, there will be a space missing.",
        "labels": "Support",
        "id": 44280
    },
    {
        "title": "`source` points to the wrong directory in MSYS2 when Cygwin is installed",
        "body": "I have both Cygwin and MSYS2 installed on my PC.  I'm unable to launch `oh-my-zsh` after it has been installed successfully on one versus the other.\r\n\r\n```\r\nwayne@0620-DESKTOP-PC MSYS ~/development/hifi-fork\r\n$ zsh\r\n/c/Users/wayne/.zshrc:source:69: no such file or directory: /cygdrive/c/Users/wayne/.oh-my-zsh/oh-my-zsh.sh\r\n\\[\\e]0;\\w\\a\\]\\n\\[\\e[32m\\]\\u@\\h \\[\\e[35m\\]$MSYSTEM\\[\\e[0m\\] \\[\\e[33m\\]\\w\\[\\e[0m\\]\\n\\$\r\n\\[\\e]0;\\w\\a\\]\\n\\[\\e[32m\\]\\u@\\h \\[\\e[35m\\]$MSYSTEM\\[\\e[0m\\] \\[\\e[33m\\]\\w\\[\\e[0m\\]\\n\\$ exit\r\n```\r\nIf I perform these steps I can get it working.\r\n\r\n![image](https://user-images.githubusercontent.com/10539521/46095416-5406d800-c171-11e8-9234-188a208a6abc.png)\r\n\r\nIs it because there can only be one or the other linked to `oh-my-zsh`?",
        "labels": "Support",
        "id": 44281
    },
    {
        "title": "Path display error",
        "body": "There is an error in path displaying on Archlinux.\r\n![image](https://user-images.githubusercontent.com/16780053/46024684-e8455080-c119-11e8-8c40-c4ef0d888c2b.png)\r\nmissing `\"/\"` after `\"~\"`\r\n![image](https://user-images.githubusercontent.com/16780053/46024751-07dc7900-c11a-11e8-8304-e844908d550f.png)\r\ndisplay absolute path instead of `\"~\"`",
        "labels": "Support",
        "id": 44282
    },
    {
        "title": "Messy code in the display ",
        "body": "![image](https://user-images.githubusercontent.com/42408511/45725325-f3195600-bbec-11e8-887b-106fa118da37.png)\r\n\r\nthe screen will display the \"?\" when I use the default scheme, does anyone know how to fix it?",
        "labels": "Support",
        "id": 44283
    },
    {
        "title": "How to customize root user agnoster theme",
        "body": "Hi everyone,\r\nI'm starting to use zsh shell. I noticed that when I switch to root user an arrow + the current directory are shown. How can I set a colored label (ex: root (in red)) instead of an arrow as root user?\r\n\r\nThank you guys!",
        "labels": "Support",
        "id": 44284
    },
    {
        "title": "Automatic tab completion when filenames have a similar name",
        "body": "Say I have two files in the same folder, index.html and index.js.\r\nI type in \"ed ind\", then hit tab.\r\n\r\nDesired behavior: \"ed index.html' populates. \r\nThen if I don't like that filename I can just keep tabbing through all files that start with 'ind'\r\nActual behavior:\"ed index\" populates\r\n\r\nReasoning: As it currently operates I have to hit the TAB button 4 times and it feels really clunky. Having \"index\" populate doesn't really save me any time as no \"index\" file exists and i have to keep mashing TAB a million times to get it what I want it to do.\r\n",
        "labels": "Support",
        "id": 44285
    },
    {
        "title": "The same settings in ubuntu and centos but the different effects are normal?",
        "body": "I have installed the oh-my-zsh both in ubuntu and centos, and only setting the theme to be `agnoster`.\r\n\r\nBut the look like is different like this:\r\n\r\n![image](https://user-images.githubusercontent.com/13602602/45132307-05de6480-b1c3-11e8-8e79-b9dfc3dd2eb2.png)\r\n\r\nSo, it's normal?",
        "labels": "Support",
        "id": 44286
    },
    {
        "title": "Updating a plugin with local preferences",
        "body": "I wanted to change the prompt provided by the mercurial plugin (display the currently active bookmark rather than the branch).\r\n\r\nI went into plugins/mercurial and made the change to the shell script.  I'm not seeing changes - even after logging out and logging in.\r\n\r\nIs the file cached somewhere?  What is the proper way to update plugins with your own locally desired updates?",
        "labels": "Support",
        "id": 44287
    },
    {
        "title": "ansible-playbook tab completion to select .yml playbook files not working",
        "body": "Tab completion to select a yml file after 'ansible-playbook' doesn't work, I've tried adding ansible and ansible-playbook to the plugins. I've also tried with both .yml and .yaml with no success.\r\n\r\nAutocompletion works without oh_my_zsh but can't figure out where in oh_my_zsh tab completion for file selection after the ansible-playbook command is used.",
        "labels": "Support",
        "id": 44288
    },
    {
        "title": "Is there support for GNURoot Debian?",
        "body": "",
        "labels": "Support",
        "id": 44289
    },
    {
        "title": "Display two batteries status?",
        "body": "I have a lenovo t450 which has an internal and a external battery.  It use the internal battery first then it uses the external battery.  Is there a way with zsh to show the battery status of both batteries via zsh?",
        "labels": "Support",
        "id": 44290
    },
    {
        "title": "oh-my-zsh plugin using older version of git-flow-avh",
        "body": "https://github.com/robbyrussell/oh-my-zsh/blob/f2f078a1bbbce1631a99150029541544e621b6be/plugins/git-flow-avh/git-flow-avh.plugin.zsh\r\n\r\nWhy does my oh-my-zsh plugin use an older version of `git-flow-avh` than I have installed?\r\n\r\n```zsh\r\n» which git-flow\r\n/usr/local/bin/git-flow\r\n\r\n» /usr/local/bin/git-flow version\r\n1.11.0 (AVH Edition)\r\n\r\n» git flow version\r\n1.9.1 (AVH Edition)\r\n```\r\nI'm not even sure how this is happening.\r\n\r\n@petervanderdoes @rumpelsepp @YoshiMan @jkaving",
        "labels": "Support",
        "id": 44291
    },
    {
        "title": "Plugins don't seem to load",
        "body": "Hi, I'm sure this is me being stupid, but I have the following config:\r\n# Path to your oh-my-zsh installation.\r\n```\r\nexport ZSH=/Users/name/.oh-my-zsh\r\n\r\n# Set name of the theme to load.\r\n# Look in ~/.oh-my-zsh/themes/\r\n# Optionally, if you set this to \"random\", it'll load a random theme each\r\n# time that oh-my-zsh is loaded.\r\nZSH_THEME=\"pygmalion\"\r\n\r\n# Uncomment the following line to use case-sensitive completion.\r\n# CASE_SENSITIVE=\"true\"\r\n\r\n# Uncomment the following line to use hyphen-insensitive completion. Case\r\n# sensitive completion must be off. _ and - will be interchangeable.\r\n# HYPHEN_INSENSITIVE=\"true\"\r\n\r\n# Uncomment the following line to disable bi-weekly auto-update checks.\r\n# DISABLE_AUTO_UPDATE=\"true\"\r\n\r\n# Uncomment the following line to change how often to auto-update (in days).\r\n# export UPDATE_ZSH_DAYS=13\r\n\r\n# Uncomment the following line to disable colors in ls.\r\n# DISABLE_LS_COLORS=\"true\"\r\n\r\n# Uncomment the following line to disable auto-setting terminal title.\r\n# DISABLE_AUTO_TITLE=\"true\"\r\n\r\n# Uncomment the following line to enable command auto-correction.\r\n# ENABLE_CORRECTION=\"true\"\r\n\r\n# Uncomment the following line to display red dots whilst waiting for completion.\r\n# COMPLETION_WAITING_DOTS=\"true\"\r\n\r\n# Uncomment the following line if you want to disable marking untracked files\r\n# under VCS as dirty. This makes repository status check for large repositories\r\n# much, much faster.\r\n# DISABLE_UNTRACKED_FILES_DIRTY=\"true\"\r\n\r\n# Uncomment the following line if you want to change the command execution time\r\n# stamp shown in the history command output.\r\n# The optional three formats: \"mm/dd/yyyy\"|\"dd.mm.yyyy\"|\"yyyy-mm-dd\"\r\nHIST_STAMPS=\"dd/mm/yyyy\"\r\n\r\n# Would you like to use another custom folder than $ZSH/custom?\r\n# ZSH_CUSTOM=/path/to/new-custom-folder\r\n\r\n# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)\r\n# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/\r\n# Example format: plugins=(rails git textmate ruby lighthouse)\r\n# Add wisely, as too many plugins slow down shell startup.\r\nplugins=(pyenv zsh-syntax-higlighting)\r\n\r\n# User configuration\r\n\r\nsource $ZSH/oh-my-zsh.sh\r\n\r\nexport PATH=\"/usr/local/bin:/opt/local/bin:/opt/local/sbin:/opt/local/bin:/usr/local/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/usr/local/CrossPack-AVR/bin:/usr/local/MacGPG2/bin:/Library/TeX/texbin\"\r\n\r\n# export MANPATH=\"/usr/local/man:$MANPATH\"\r\n\r\n# You may need to manually set your language environment\r\n#\r\n# export LANG=en_US.UTF-8\r\n\r\n# Preferred editor for local and remote sessions\r\n# if [[ -n $SSH_CONNECTION ]]; then\r\n#   export EDITOR='vim'\r\n# else\r\n#   export EDITOR='mvim'\r\n# fi\r\n\r\n# Compilation flags\r\n# export ARCHFLAGS=\"-arch x86_64\"\r\n\r\n# ssh\r\n# export SSH_KEY_PATH=\"~/.ssh/dsa_id\"\r\n\r\n# Set personal aliases, overriding those provided by oh-my-zsh libs,\r\n# plugins, and themes. Aliases can be placed here, though oh-my-zsh\r\n# users are encouraged to define aliases within the ZSH_CUSTOM folder.\r\n# For a full list of active aliases, run `alias`.\r\n#\r\n# Example aliases\r\n# alias zshconfig=\"mate ~/.zshrc\"\r\n# alias ohmyzsh=\"mate ~/.oh-my-zsh\"\r\n#\r\neval \"$(thefuck --alias)\"\r\n\r\nexport PATH=\"/usr/local/sbin:$PATH\"\r\nexport PATH=\"/Users/name/.pyenv:$PATH\"\r\neval \"$(pyenv init -)\"\r\neval \"$(pyenv virtualenv-init -)\"\r\n```\r\nNeither one of the plugins seems to work properly. Pyenv *does* activate the virtualenv when entering a project, but it does not change the prompt. Zsh-syntax-highlighting does nothing at all...",
        "labels": "Support",
        "id": 44292
    },
    {
        "title": "Update prompt doesn't appear to work, or does and just repeatidly asks.",
        "body": "When I open iTerm on Mac and Terminal on Ubuntu, almost every time I get prompted \"[Oh My Zsh] Would you like to update? [Y/n]:\"\r\n\r\nEvery time I choose yes, but i continue to get the message.\r\n\r\nI would expect this to only appear one time after installing OMZSH. Is this a bug?\r\n\r\nThis may be related to [this](https://github.com/robbyrussell/oh-my-zsh/issues/7036) issue.",
        "labels": "Support",
        "id": 44293
    },
    {
        "title": "how to set prompt colour to depend on hostname",
        "body": "I recently came across https://github.com/robbyrussell/oh-my-zsh/issues/5686 that explains how to add username and/or hostname to default theme's prompt.\r\n\r\nI wonder if there is an easy way to set different colours depending on the hostname, e.g.\r\nhostname_name_1 -> red\r\nhostname_name_2 -> blue\r\netc...\r\n\r\nI would like to have it in form of some if / case way to be able to share same config across different computers.",
        "labels": "Support",
        "id": 44294
    },
    {
        "title": "git branch display as file ",
        "body": "I wish first photo, how can I do？\r\n![2018-07-24 4 14 58](https://user-images.githubusercontent.com/15888216/43125538-ea0bdde2-8f5c-11e8-93e1-de215b29182b.png)\r\n![2018-07-24 4 14 38](https://user-images.githubusercontent.com/15888216/43125553-f5cfeca4-8f5c-11e8-9301-d080f9a95df4.png)\r\n\r\n\r\n\r\n",
        "labels": "Support",
        "id": 44295
    },
    {
        "title": "Can not complete docker commands after alias with grc",
        "body": "Can not get docker completion work after alias with [grc](https://github.com/garabik/grc).\r\n\r\n```sh\r\n$ alias docker='grc -es --colour=auto /usr/bin/docker'\r\n$ docker <tab> # Not working anymore\r\n```\r\n\r\nAny ideas? thanks.",
        "labels": "Support",
        "id": 44296
    },
    {
        "title": "Question: Expanding ssh tab completion",
        "body": "I utilize different know_hosts files for different environments at work, EG `known_hosts_prod` for production via a configuration line like this in my `~/.ssh/config`\r\n```\r\nHost production_hosts.example.com\r\n    UserKnownHostsFile ~/.ssh/known_hosts_prod\r\n```\r\nThis however seems to break the ssh known hosts tab completion.  This appears to come from `plugins/common-aliases/common-aliases.plugin.zsh` with this line:\r\n```\r\nzstyle -e ':completion:*:(ssh|scp|sftp|rsh|rsync):hosts' hosts 'reply=(${=${${(f)\"$(cat {/etc/ssh_,~/.ssh/known_}hosts(|2)(N) /dev/null)\"}%%[# ]*}//,/ })'\r\n```\r\nI've tried including a modified version of this line in my `.zshrc`, updating the `plugins/common-aliases/common-aliases.plugin.zsh` directly to the following:\r\n```\r\nzstyle -e ':completion:*:(ssh|scp|sftp|rsh|rsync):hosts' hosts 'reply=(${=${${(f)\"$(cat {/etc/ssh_,~/.ssh/known_}hosts{,_*}(|2)(N) /dev/null)\"}%%[# ]*}//,/ })'\r\n```\r\nand it hasn't worked. What am I missing?\r\n",
        "labels": "Support",
        "id": 44297
    },
    {
        "title": "How do I create a zsh theme?",
        "body": "Title says it all",
        "labels": "Support",
        "id": 44298
    },
    {
        "title": "can't work fine with `TERM=screen-256color`",
        "body": "If I set `TERM=screen-256color` in `.zshrc`, when I print cmd, it will display error, use `TERM=term-256color` work find.\r\n\r\n![image](https://user-images.githubusercontent.com/106934/39737428-927254bc-52b7-11e8-943a-af50e6074d86.png)\r\n\r\nos:ubuntu 16.04\r\ngnome terminal\r\n\r\n",
        "labels": "Support",
        "id": 44299
    },
    {
        "title": "Writing my own plugin?",
        "body": "I'm using zsh with OMZ for quite a while now, recently I had the idea of just trying to write my own plugin. After trying to find any resource on how to write such a plugin and looking at some of the plugin's source code, which did not succeed I decided to open this issue: Is there any tutorial, explanation or hints how to write ones own plugin or am I overseeing something super obvious?",
        "labels": "Support",
        "id": 44300
    },
    {
        "title": "Powerline font symbols not displayed correctly",
        "body": "Hello,\r\nI'm connecting on the server by SSH only. There's no GUI or X server available.\r\n\r\nI've just installed zsh in my HOME because I've no root access on the server.\r\nThen, I've installed the oh-my-zsh ans set the THEME to `ZSH_THEME=\"agnoster\"`\r\nI've also installed powerline-font : \r\n```\r\nwget https://github.com/powerline/powerline/raw/develop/font/PowerlineSymbols.otf\r\nwget https://github.com/powerline/powerline/raw/develop/font/10-powerline-symbols.conf\r\nmv PowerlineSymbols.otf ~/.local/share/fonts/\r\nfc-cache -vf ~/.local/share/fonts/\r\nmv 10-powerline-symbols.conf ~/.config/fontconfig/conf.d/\r\n```\r\n\r\nHere's the output of my prompt. It seems that I've a problem of symbols.\r\n![image](https://user-images.githubusercontent.com/1486562/38626434-ded8c8a6-3dac-11e8-98ff-8d296b1813c3.png)\r\n\r\n```\r\necho \"\\ue0b0 \\u00b1 \\ue0a0 \\u27a6 \\u2718 \\u26a1 \\u2699\"\r\nzsh: character not in range\r\n```\r\n\r\n",
        "labels": "Support",
        "id": 44301
    },
    {
        "title": "Font missed?",
        "body": "Hey, I intalled ZSH on OpenSuse Leap 42.3 and now when I installed the default theme of this I see that error, now I'm on i3wm, I tried to move some new fonts to .fonts path but nothing :cry:\r\nAny Idea?, this is in URXVT \r\n![screenshot_2018-04-08_09-16-17](https://user-images.githubusercontent.com/26731428/38469161-8966f146-3b0d-11e8-82d0-b6e2a8221e0c.png)\r\n",
        "labels": "Support",
        "id": 44302
    },
    {
        "title": "$PATH outside the terminal... command not found",
        "body": "System: Kde Neon 5.12.4\r\n```\r\nbash --version\r\nGNU bash, version 4.3.48(1)-release (x86_64-pc-linux-gnu)\r\n\r\nzsh --version\r\nzsh 5.1.1 (x86_64-ubuntu-linux-gnu)\r\n```\r\nOh-my-zsh just installed from github on april 6, 2018.\r\n\r\n\r\nI have installed zsh, then oh-my-zsh then powerlevel9k.\r\n\r\nI `cat ~/.bashrc >> ~/.zshrc` in order to get my aliases and such. Obviously certain things from my .bashrc I had to remove because they had no place in the zshrc. I also have my export path uncommented 'export PATH=$HOME/bin:/usr/local/bin:$PATH'\r\n\r\nNow, if I issue a command I have in /home/raitaro/bin it is found and it works alright, because the $PATH is set nicely:\r\n```\r\necho $PATH\r\n/home/raitaro/torch/install/bin:/home/raitaro/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin\r\n```\r\nOk, I thought, look it up. I did end up on the arch wiki so I made this .zshprofile\r\n```                                                          \r\ntypeset -U path\r\npath=(~/.local/bin $HOME/bin $path[@])\r\n```\r\nI also tried with the .zshenv, tried to just copy the export path from .zshrc... yet again, my path seems fine in the terminal but not outside of it. Login out or restart did not have any improvements at all.\r\n\r\nSo for example let's take my `waterfox` script that opens waterfox from the home dir. It is found, autocompleted and it works. But outside of the terminal I MUST reference it as `~/bin/waterfox` or otherwise it does not work. I have `waterfox -p PROFILE` as custom entries in my menu... I had to change all of them to the absolute path; creating a new keyboard shurtcut with `waterfox` does nothing, I have to reference it in full.\r\n\r\nI also have custom kservice menu entries. They are basically right click menu option. Anything that is in my bin simply shows \"Command not found\" or doesn't even do anything. Obviously before trying out zsh everything went fine.",
        "labels": "Support",
        "id": 44303
    },
    {
        "title": "Changing git branch in IDE isn't reflected in the PS1 in the console",
        "body": "As Is:\r\nChanging git branch in IDE isn't reflected in the PS1 in the console. The branch is indeed switched, because when i do `gco branch-name` it logs `Already on branch-name`, but it was only after running that command.\r\nTO BE:\r\n I wish the CL would refresh on changing branch in my editor (VS code)\r\n\r\n🙏 ",
        "labels": "Support",
        "id": 44304
    },
    {
        "title": "Zsh icons broke",
        "body": "I have used arch for so long and I am using manjaro for a while now. It had urxvt customized and eveyrthing looked so good. The terminal the was so great rxvt is a terminal I love so I had neovim I had tmux and so I decided to download zsh. \r\n\r\nNow I am new to zsh, I have only used for 2-3 months and I completly love it but I have encountered a problem: recently I upgraded my packages and I currently am using manjaro i3 and so I have set up a dropdown terminal that auto starts each time I refresh i3. And the update finished I restarted i3 and I saw that my dropdown or scratchpad terminal was not showing the symbols of oh-my-zsh theme, I thought this was just a temporary problem so I did a restart and actually the theme broke on all my terminals. I made a thread in the manjaro forums and they couldn't help me. So I hope that you guys can. \r\n\r\nI am using robbyrussell theme just because It comes by deafult I like it the most and this is the robbyrussell github page. But I want to mention that this error only occurrs with rxvt when I try it with something like sterminal everything is fine. \r\n\r\nNow I haven't changed my Xresources config, I've left like when it came by deafult which looks pretty good to me and I havent even added extra stuff to zshrc because I havent decided to configure it yet it just has the deafult oh-my-zsh config file. Now please if you could help me I'd find it really useful I've searched everywhere but nothing seems to help me.\r\n\r\nIf you need additional information just reply me and sorry for extra details and again sorry if i made this kinda informal question and last apologise is for my english. \r\n\r\nRxvt version - 9.22\r\nZsh version - 5.4.2\r\nOh-my-zsh version - (Latest that is avaible in aur package oh-my-zsh-git)",
        "labels": "Support",
        "id": 44305
    },
    {
        "title": "Anyone know why the result of 'for' loop string including space isn't like bash",
        "body": "You could reproduce:\r\n```\r\n$ names=\"what who why\"\r\nroot@31-216:~/smartx/zbs-master \r\n $ for name in $names; do\r\nfor>     echo my name is $name\r\nfor> done \r\nmy name is what who why\r\nroot@31-216:~/smartx/zbs-master \r\n $ bash\r\nroot@31-216:~/smartx/zbs-master#names=\"what who why\"\r\nroot@31-216:~/smartx/zbs-master#for name in $names; do\r\n>     echo my name is $name\r\n> done\r\nmy name is what\r\nmy name is who\r\nmy name is why\r\n\r\n```",
        "labels": "Support",
        "id": 44306
    },
    {
        "title": "Separate instance for different terminal emulators?",
        "body": "Hey there!\r\n\r\nI'm currently running with [iTerm](https://www.iterm2.com/) as my terminal emulator and ZSH as my shell. I'm testing out [hyper](https://hyper.is/) as a replacement. Hyper has an option `shell`, which is described as \"A path to a custom shell to run when Hyper starts a new session\".\r\n\r\nI'd love to be able to use a separate instance of ZSH and Oh My Zsh for hyper. Is this functionality implemented and if so how can I use it? I've been looking, but I can't find anything about this. ",
        "labels": "Support",
        "id": 44307
    },
    {
        "title": "zsh shows verbose debugging information without -xv",
        "body": "Hello, so I restarted my system after a while. I updated zsh just before that. Now each time I start a zsh shell, I see a whole lot of debugging information, and I'm not using `-xv`. When I used `-xv`, I get even more info but in a different color highlight. I can't see the result of the commands I enter because it gets lost in the logs.\r\n\r\n![screen shot 2018-02-16 at 10 39 55 am](https://user-images.githubusercontent.com/4608143/36301754-3ff2f732-1306-11e8-91f1-8c4c90b76015.png)\r\n\r\nAny idea how to fix this issue?",
        "labels": "Support",
        "id": 44308
    },
    {
        "title": "Git fast autocomplete",
        "body": "How can I force zsh to use unstaged files in `git add` autocompletion? Now I have to write start of filename or `.` for every file in directory. It's quite annoying TBH.  ",
        "labels": "Support",
        "id": 44309
    },
    {
        "title": "Problem with colorize plugin",
        "body": "Hello\r\nWhat's wrong with my colorize plugin?\r\n```\r\n> ccat client-configs/make_config.sh\r\npackage \\'Pygments\\' is not installed!\r\n> pip list\r\npip (8.1.1)\r\nPygments (2.2.0)\r\n> python --version\r\nPython 2.7.12\r\n```",
        "labels": "Support",
        "id": 44310
    },
    {
        "title": "Command shared history but remember last command",
        "body": "Shared history is great, you won't miss a command. But usually, I need to cancel a process and execute it back again immediately so I would press the up key, half of the time that command is no longer there. I don't know if this could be easily accomplished or is a pain. Thanks\r\n",
        "labels": "Support",
        "id": 44311
    },
    {
        "title": "multi line (long command on narrow terminal window) editing troubles (ITerm2?)",
        "body": "Hi there,\r\n\r\n Using oh-my-zsh in iTerm2, I can't reliably edit long lines on the prompt line, especially in narrow terminals (typically with multiple windows on several servers, but with extra long line same issue).\r\n\r\n With oh-my-zsh, the cursor position is a blind guess after I've up-arrowed to the line line, not to mention the line not properly shown either.\r\n\r\n When I disable oh-my-zsh, those same lines I can reliably see the cursor position on the various lines of the long line.\r\n\r\n How to fix, where to start showing pictures to explain the issues seen?\r\nAnybody else (especially MacOS(X) users) seen these troubles with long, multiline commands, to edit",
        "labels": "Support",
        "id": 44312
    },
    {
        "title": "Tab completion in tmux/screen?",
        "body": "Both `tmux attach` and `screen -xRRS`  are not having tab completion working? This has been the case across ALL systems I've used oh-my-zsh on. macOS, Ubuntu, osmc, all distros I've tested on. My oh-my-zsh config is usually similar to this:\r\n\r\n```\r\nZSH=\"$HOME/.oh-my-zsh\"\r\nZSH_THEME=\"dieter\"\r\nDEFAULT_USER=\"$USER\"\r\nCOMPLETION_WAITING_DOTS=\"true\"\r\nPATH=\"$HOME/scripts:$PATH\"\r\n# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)\r\n# Example format: plugins=(rails git textmate ruby lighthouse)\r\nplugins=(cp colorize encode64 last-working-dir screen git vi-mode rsync singlechar ssh-agent themes autojump compleat gem history emoji)\r\n\r\nsource $ZSH/oh-my-zsh.sh\r\n\r\n# Customize to your needs...\r\nexport GIT_EDITOR=\"vim\"\r\nexport EDITOR=\"vim\"\r\nsource $ZSH/custom/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh\r\nsource $ZSH/custom/zsh-history-substring-search/zsh-history-substring-search.zsh\r\nsource $ZSH/custom/zsh-autosuggestions/autosuggestions.zsh\r\nsource $HOME/.cust.zsh\r\n\r\nzle-line-init() {\r\n    zle autosuggest-start\r\n}\r\nzle -N zle-line-init\r\n\r\n\r\ntest -e \"${HOME}/.iterm2_shell_integration.zsh\" && source \"${HOME}/.iterm2_shell_integration.zsh\"\r\n\r\nalias at=\"atom\"\r\n\r\n# make less more friendly for non-text input files, see lesspipe(1)\r\n[ -x /usr/bin/lesspipe ] && eval \"$(SHELL=/bin/sh lesspipe)\"\r\n\r\n# set variable identifying the chroot you work in (used in the prompt below)\r\nif [ -z \"${debian_chroot:-}\" ] && [ -r /etc/debian_chroot ]; then\r\n    debian_chroot=$(cat /etc/debian_chroot)\r\nfi\r\n\r\nif [ -x /usr/bin/dircolors ]; then\r\n    test -r ~/.dircolors && eval \"$(dircolors -b ~/.dircolors)\" || eval \"$(dircolors -b)\"\r\n    alias ls='ls --color=auto'\r\n    #alias dir='dir --color=auto'\r\n    #alias vdir='vdir --color=auto'\r\n\r\n    alias grep='grep --color=auto'\r\n    alias fgrep='fgrep --color=auto'\r\n    alias egrep='egrep --color=auto'\r\nfi\r\n\r\n# some more ls aliases\r\nalias ll='ls -alF'\r\nalias la='ls -A'\r\nalias l='ls -CF'\r\n\r\n# Add an \"alert\" alias for long running commands.  Use like so:\r\n#   sleep 10; alert\r\n#alias alert='notify-send --urgency=low -i \"$([ $? = 0 ] && echo terminal || echo error)\" \"$(history|tail -n1|sed -e '\\''s/^\\s*[0-9]\\+\\s*//;s/[;&|]\\s*alert$//'\\'')\"'\r\n\r\n# Run openbox at boot/login?\r\nif [ -z \"$DISPLAY\" ] && [ -n \"$XDG_VTNR\" ] && [ \"$XDG_VTNR\" -eq 1 ]; then\r\n  # exec startx\r\nfi\r\n```\r\n\r\nand ~/.cust.zsh:\r\n\r\n```\r\n# Did you install thefuck?\r\n# eval \"$(thefuck --alias)\"\r\n# Add an \"alert\" alias for long running commands.  Use like so:\r\n#   sleep 10; alert\r\n#alias alert='notify-send --urgency=low -i \"$([ $? = 0 ] && echo terminal || echo error)\" \"$(history|tail -n1|sed -e '\\''s/^\\s*[0-9]\\+\\s*//;s/[;&|]\\s*alert$//'\\'')\"'\r\nfunction screen() {\r\n  /usr/bin/script -q -c \"/usr/bin/screen ${*}\" /dev/null\r\n}\r\n```\r\n\r\nAny ideas? I usually, now, use `curl https://swo.re/in.sh | sh` to do an initial setup of everything (all my configs are in https://swo.re/zsh.zip).",
        "labels": "Support",
        "id": 44313
    },
    {
        "title": "/etc/path changes PATH variable after .zshenv",
        "body": "According to the current initialization of oh-my-zsh, the paths in /etc/path will be appended to the beginning of the PATH variable **after** the paths in .zshenv are added.\r\n\r\nSuch behavior causes great problem when you want some other directories be searched first before the \r\n/usr/local/bin\r\n/usr/bin\r\n/bin\r\n/usr/sbin\r\n/sbin\r\ndirectories in /etc/path.\r\n\r\nIt may sound rare, but there is a very practical case. Consider the GNU coreutils package that is often installed through Homebrew in OS X. Many developers want them to replace the default BSD utilities installed in Mac OS, not just in interactive shell, but also in shell script. \r\n\r\nHowever, if the paths in /etc/path are added after .zshenv, there is no way for the local user to let GNU coreutils takes priority.\r\n\r\nFundamentally, such order of execution does not make sense from a design point of view. The .zshenv file is designed to let the local user customize the PATH variable. Therefore, it should be executed after  /etc/path, not before.\r\n\r\nIn conclusion, I would strongly recommend .zshenv be executed in initialization after the paths in /etc/path being added to the PATH variable.",
        "labels": "Support",
        "id": 44314
    },
    {
        "title": "A few issues, including failed attempts at changing theme",
        "body": "A few items:\r\n\r\nWhen I open my terminal, I get the following line read to me before the input line:\r\n/Users/rafaelvergnaud/.zshrc:export:96: not valid in this context: -w\r\n\r\nRelevant history history:\r\n   30 export ZSH=/Users/rafaelvergnaud/.oh-my-zsh\r\n   34  mkdir ~/bin\r\n   35  ln -s \"/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl\" ~/bin/subl\r\n   36  echo 'export PATH=$PATH:$HOME/bin' >> ~/.zshrc\r\n   37  echo \"export EDITOR='subl' -w\" >> ~/.zshrc\r\n   46  ls -l oh.my.zsh\r\n   47  /usr/local/bin\r\n   48  ln -s \"/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl\" subl\\n\r\n   82  echo 'export PATH=$PATH:$HOME/bin' >> ~/.zshrc\r\n   83  echo \"export EDITOR='subl' -w\" >> ~/.zshrc\r\n   86  export PATH=$PATH:$HOME/bin\r\n\r\nI am new to all this and I'm not sure what I did or how to fix it.\r\n\r\n--------------------\r\n\r\nMoreover, I do not actually find ~./zshrc in my home directory.\r\nI do get\r\n                   **-rw-r--r--  1 rafaelvergnaud  staff  3236 Feb  2 21:53 .zshrc**\r\nwhen I type in the command\r\n                **ls -l .zshrc**\r\n\r\nIf I type subl .zshrc, an empty files comes up.\r\nMoreover, if I use nano, the theme does seem to change, but not to the right one (at least it doesn't match the themes pictured in the github  page).\r\n\r\nI have the following written in the nano file:\r\nexport ZSH=/Users/rafaelvergnaud/.oh-my-zsh\r\nZSH_THEME=\"mh\"",
        "labels": "Support",
        "id": 44315
    },
    {
        "title": "command not found env_default",
        "body": "I got issue on `env_default`, seems it the `misc.zsh` is loaded before `functions.zsh` (which define `env_default`).\r\n\r\n![image](https://user-images.githubusercontent.com/378699/35545904-69ec5ab8-05ac-11e8-83e0-4622a89ce6b9.png)\r\n",
        "labels": "Support",
        "id": 44316
    },
    {
        "title": "common-aliases: suggestion: get last command and save it to ~/.important_history",
        "body": "Sometimes, you want to save the last command you did to a command logbook. (I mean the commands definition, not its output). You do not want to search and save the whole .history , because there is also a lot of trash (like cp, mv, etc.). If you just executed / finished an important command, you can save its definition to ~/.important_history by executing: \r\n``\r\nfc -ln \"$1\" \"$1\" | sed '1s/^[[:space:]]*//' >> ~/.important_history\r\n``\r\nI would call this command savelast. \r\n\r\nI do not yet know how to squeeze the whole command into an alias, but maybe you can help me with that. \r\n\r\n\r\n",
        "labels": "Support",
        "id": 44317
    },
    {
        "title": "new Feature :- One must be able to change the line spacing in the terminal using ohzmyzsh for better readability.",
        "body": "i am great fan since i a have used ohmyzsh, i am using terminator as my terminal emulator on debian, ti would love to have a feature to change / edit line spacing to improve better readability of the terminal.  @mcornella @robbyrussell @apjanke @ncanceill ",
        "labels": "Support",
        "id": 44318
    },
    {
        "title": "Using putty, LEFT and RIGHT keys move cursor one word, instead of one char",
        "body": "Hello,\r\n\r\nFirst things first: I like ZSH, and now I like it even more with Oh-my-zsh. Thanks for the great work!\r\n\r\nI have looked for a solution to this for a few days now, but can't find a solution.\r\nAdmittedly, I do not understand how zle really works, same for bindkey. Same goes for the way terminal emulators send \"control sequences\", and what the \"terminal type\" means (xterm, versus xterm-256-color, and others). Same for the \"Application mode\"\r\n\r\n### What I observe:\r\nthe left and right cursor keys move one whole word when I edit my command line. Home and End keys though, bring the cursro to the beginning and end of the line, as expected. This happens on putty running on Windows, but also on Terminator to that same machine running on Ubuntu 16.04\r\n\r\n### What I would expect:\r\nLeft and right moves the cursor one single char. Home and end keys work fine.\r\nStrangely enough, when I run Terminator on a local shell, the cursor keys work as I expect. The issue only happens when I ssh to another machine (where I have another user env)\r\n\r\n### What I have found so far:\r\nI think it is a bindkey issue. Zsh on my local machine works fine and is pretty clean, but on the remote machines I connect to, there is a lot of system-wide config that I inherit, including zshrc files.\r\nAlso, if I switch to vim mode using `bindkey -v`, rhe cursor keys behave as expected, but the Home and End keys now don't, they change letters to upper or lower case.\r\n\r\nAny help that you could give would be greatly appreciated. If this is not the place for this question, could you please let me know where I can get the answers I'm looking for?\r\n\r\nMany thanks\r\nWill",
        "labels": "Support",
        "id": 44319
    },
    {
        "title": "Vi Mode Weirndess",
        "body": "Using OhMyZSH on Cygwin64 \r\n\r\nwhen I use VI mode sometimes I end up with a weird capital letter \"F\" at the beginning of my command line (regardless of theme, which changes randomly). I'm using the history plug in.\r\n",
        "labels": "Support",
        "id": 44320
    },
    {
        "title": "If the directory permissions is 777, CD command is optional, the color is not friendly, too ugly, is there any way?",
        "body": "If the directory permissions is 777, CD command is optional, the color is not friendly, too ugly, is there any way?\r\n\r\n![image](https://user-images.githubusercontent.com/6280121/34867822-83fa561a-f7bc-11e7-9ed7-468a27b38843.png)\r\n",
        "labels": "Support",
        "id": 44321
    },
    {
        "title": "when pressing tab to auto-complete, font colour changes, ... why??",
        "body": "so i'm struggling with some frustrating behaviour i can't find any information on.\r\n\r\nif i have some files with a common prefix, then i autocomplete some command on them, like \"cat ...\" i get my font changing colour:\r\n\r\n![image](https://user-images.githubusercontent.com/129525/34459346-fda3de70-ee41-11e7-9659-f030329f630c.png)\r\n\r\nwhy?  and how can i change this?\r\n\r\nit isn't a colour defined by my terminal, nor is it in my .zshrc or in my particular colour theme\r\n\r\ni'm using zgen, so i have this:\r\n\r\n```\r\nzstyle ':completion:*' list-colors \"${(@s.:.)LS_COLORS}\"\r\n\r\n# load zgen\r\nsource \"$HOME/.zgen/zgen.zsh\"\r\n\r\n# if the init scipt doesn't exist\r\nif ! zgen saved; then\r\n  zgen oh-my-zsh\r\n  zgen oh-my-zsh plugins/sudo\r\n  zgen oh-my-zsh plugins/command-not-found\r\n  # zgen load silky/noon.zsh-theme noon.zsh-theme\r\n  zgen load /home/noon/dev/noon.zsh-theme/noon.zsh-theme\r\n  \r\n  # generate the init script from plugins above\r\n  zgen save\r\nfi\r\n```\r\n\r\nwhere the colour scheme is exactly this one: https://github.com/silky/noon.zsh-theme/blob/master/noon-light.zsh-theme\r\n\r\nany tips would be really appreciated!\r\n\r\n\r\n\r\n",
        "labels": "Support",
        "id": 44322
    },
    {
        "title": "Can't use any themes",
        "body": "I have installed `oh-my-zsh` and `Iterm2` but when I change my theme to `Agnoster` nothing changes. Here's my `.zshrc` file:\r\n\r\n```export ZSH=/Users/{username}/.oh-my-zsh\r\nZSH_THEME=\"agnoster\"\r\nplugins=(\r\n  git\r\n)\r\n\r\nsource $ZSH/oh-my-zsh.sh\r\n```\r\n\r\nBut my Iterm2 terminal still looks the same\r\n\r\n`echo $SHELL` outputs `/bin/zsh`",
        "labels": "Support",
        "id": 44323
    },
    {
        "title": "vim - read from stdin returns error",
        "body": "When `oh-my-zsh` is enabled (no plugins, default theme) the following command gives an error:\r\n```\r\necho \"OK\" | vim -\r\nVIM - Vi IMproved 8.0 (2016 Sep 12, compiled Nov 19 2017 20:19:52)\r\nToo many edit arguments: \"-\"\r\nMore info with: \"vim -h\"\r\n```\r\nWhile this should just load `ok` string into `vim`.",
        "labels": "Support",
        "id": 44324
    },
    {
        "title": "I have some question",
        "body": "And I don't know where I can ask.. It about zsh.\r\n\r\nyou have set \r\n`setopt COMBINING_CHARS` in `.zshrc` file to avoid Thai Language error. \r\nBut when I open new terminal this command somehow it didn't load for me, so I need to run `exec zsh` to activate it. \r\n",
        "labels": "Support",
        "id": 44325
    },
    {
        "title": "docker stack rm autocomplite",
        "body": "![image](https://user-images.githubusercontent.com/4757342/32702939-22911ff2-c810-11e7-8ca5-59e359cc0ca1.png)\r\n\r\nWhen press Tab there are no options or stacks shown\r\n\r\nUbuntu 16.04\r\noh my zsh dcb8101fdeded9aa4310d867f9c809c976a0f1cb\r\nzsh 5.1.1 (x86_64-ubuntu-linux-gnu)",
        "labels": "Support",
        "id": 44326
    },
    {
        "title": "Load custom zsh files at the end",
        "body": "Hi,\r\n\r\nI'd like to know if it's possible to load files in custom folders only at the end of ohmyzsh load. Why? Because for example I'm using ag instead of grep, I have an alias grep='ag' and my theme is requiring some grep specific options not available in ag. The theme is not fully loaded.\r\n\r\nAs I'd like to keep my custom aliases, I'd like to know how it is possible to load some specific (or all custome files) only at the end.\r\n\r\nThanks in advance",
        "labels": "Support",
        "id": 44327
    },
    {
        "title": "closing zsh with oh my zsh kills all child processes created with `&`",
        "body": "I just switched from zpresto to oh-my-zsh, now when I start a child process, say: `$ emacs &` and then `^D`, I get the message: `zsh: you have running jobs.`, if I do it again then zsh will close and emacs stops. \r\n\r\nI didn't have this before. \r\n\r\n`zsh 5.3 (x86_64-apple-darwin17.0)`",
        "labels": "Support",
        "id": 44328
    },
    {
        "title": "systemctl enable  complete very slow",
        "body": "**issue**\r\nwhen i type \"systemctl enable/staus/disable/start\"  then i type such as \"ma\"(mariadb should show)\r\nbut when i input 'm' or 'ma' or 'mari\" and hit TAB twice zsh not respond over serveral seconds,\r\n**ENV**\r\nzsh 5.2\r\n.zshrc is ohmyzsh default configure.",
        "labels": "Support",
        "id": 44329
    },
    {
        "title": "ssh password symbol broken",
        "body": "Hi,\r\n\r\nthe symbol for ssh login is broken. Now i see an ugly key. In previous versions there was a nice key. How can i change the symbol?\r\n",
        "labels": "Support",
        "id": 44330
    },
    {
        "title": "COMPLETION_WAITING_DOTS keybind gets overridden",
        "body": "It seems that `lib/completion.zsh` is getting run before `lib/key-bindings.zsh`, and when the latter runs `bindkey -e`, it resets the binding for `^I` to the default.",
        "labels": "Support",
        "id": 44331
    },
    {
        "title": "Oh my zsh is getting stuck",
        "body": "Since I am having issue that it's taking time to return command response. I am using Mac and this is the screenshot of the process it is running:\r\n\r\n<img width=\"265\" alt=\"screen shot 2017-10-10 at 4 30 49 pm\" src=\"https://user-images.githubusercontent.com/273196/31388639-14971b3c-ade8-11e7-9997-334a586998d3.png\">\r\n",
        "labels": "Support",
        "id": 44332
    },
    {
        "title": "Question",
        "body": "Hello,\r\n\r\nI have installed oh-my-zsh and I wonder how to change this behaviour :\r\n- Ctrl-w (^W) don't erase option  **--** or **-**. Exemple **_ls --human-readable -l_** erase just letter **l**or **human-readable** without **-** and **--**.\r\n- up arrow must always rewind the previous history (not the case if I have already put something on the sreen). Only true if the prompt is empty.\r\n\r\nBy advance thank for your help :)",
        "labels": "Support",
        "id": 44333
    },
    {
        "title": "Oh My Zsh completion broken since some recent update",
        "body": "I've notice that autocomplete stopped working. So I tried reinstalling oh my zsh and after installing it again the problem persists. I also see this awkward output when installing:\r\n\r\n<details>\r\n\r\n```\r\nLooking for an existing zsh config...\r\nFound ~/.zshrc. Backing up to ~/.zshrc.pre-oh-my-zsh\r\nUsing the Oh My Zsh template file and adding it to ~/.zshrc\r\n         __                                     __   \r\n  ____  / /_     ____ ___  __  __   ____  _____/ /_  \r\n / __ \\/ __ \\   / __ `__ \\/ / / /  /_  / / ___/ __ \\ \r\n/ /_/ / / / /  / / / / / / /_/ /    / /_(__  ) / / / \r\n\\____/_/ /_/  /_/ /_/ /_/\\__, /    /___/____/_/ /_/  \r\n                        /____/                       ....is now installed!\r\n\r\n\r\nPlease look over the ~/.zshrc file to select plugins, themes, and options.\r\n\r\np.s. Follow us at https://twitter.com/ohmyzsh.\r\n\r\np.p.s. Get stickers and t-shirts at http://shop.planetargon.com.\r\n\r\nbracketed-paste-magic () {\r\n\t# undefined\r\n\tbuiltin autoload -XUz\r\n}\r\ncolors () {\r\n\temulate -L zsh\r\n\ttypeset -Ag color colour\r\n\tcolor=(00 none 01 bold 02 faint 22 normal 03 standout 23 no-standout 04 underline 24 no-underline 05 blink 25 no-blink 07 reverse 27 no-reverse 08 conceal 28 no-conceal 30 black 40 bg-black 31 red 41 bg-red 32 green 42 bg-green 33 yellow 43 bg-yellow 34 blue 44 bg-blue 35 magenta 45 bg-magenta 36 cyan 46 bg-cyan 37 white 47 bg-white 39 default 49 bg-default) \r\n\tlocal k\r\n\tfor k in ${(k)color}\r\n\tdo\r\n\t\tcolor[${color[$k]}]=$k \r\n\tdone\r\n\tfor k in ${color[(I)3?]}\r\n\tdo\r\n\t\tcolor[fg-${color[$k]}]=$k \r\n\tdone\r\n\tcolor[grey]=${color[black]} \r\n\tcolor[fg-grey]=${color[grey]} \r\n\tcolor[bg-grey]=${color[bg-black]} \r\n\tcolour=(${(kv)color}) \r\n\tlocal lc=$'\\e[' rc=m \r\n\ttypeset -Hg reset_color bold_color\r\n\treset_color=\"$lc${color[none]}$rc\" \r\n\tbold_color=\"$lc${color[bold]}$rc\" \r\n\ttypeset -AHg fg fg_bold fg_no_bold\r\n\tfor k in ${(k)color[(I)fg-*]}\r\n\tdo\r\n\t\tfg[${k#fg-}]=\"$lc${color[$k]}$rc\" \r\n\t\tfg_bold[${k#fg-}]=\"$lc${color[bold]};${color[$k]}$rc\" \r\n\t\tfg_no_bold[${k#fg-}]=\"$lc${color[normal]};${color[$k]}$rc\" \r\n\tdone\r\n\ttypeset -AHg bg bg_bold bg_no_bold\r\n\tfor k in ${(k)color[(I)bg-*]}\r\n\tdo\r\n\t\tbg[${k#bg-}]=\"$lc${color[$k]}$rc\" \r\n\t\tbg_bold[${k#bg-}]=\"$lc${color[bold]};${color[$k]}$rc\" \r\n\t\tbg_no_bold[${k#bg-}]=\"$lc${color[normal]};${color[$k]}$rc\" \r\n\tdone\r\n}\r\ncompdump () {\r\n\t# undefined\r\n\tbuiltin autoload -XUz\r\n}\r\ncompinit () {\r\n\temulate -L zsh\r\n\tsetopt extendedglob\r\n\ttypeset _i_dumpfile _i_files _i_line _i_done _i_dir _i_autodump=1 \r\n\ttypeset _i_tag _i_file _i_addfiles _i_fail=ask _i_check=yes _i_name \r\n\twhile [[ $# -gt 0 && $1 = -[dDiuC] ]]\r\n\tdo\r\n\t\tcase \"$1\" in\r\n\t\t\t(-d) _i_autodump=1 \r\n\t\t\t\tshift\r\n\t\t\t\tif [[ $# -gt 0 && \"$1\" != -[dfQC] ]]\r\n\t\t\t\tthen\r\n\t\t\t\t\t_i_dumpfile=\"$1\" \r\n\t\t\t\t\tshift\r\n\t\t\t\tfi ;;\r\n\t\t\t(-D) _i_autodump=0 \r\n\t\t\t\tshift ;;\r\n\t\t\t(-i) _i_fail=ign \r\n\t\t\t\tshift ;;\r\n\t\t\t(-u) _i_fail=use \r\n\t\t\t\tshift ;;\r\n\t\t\t(-C) _i_check= \r\n\t\t\t\tshift ;;\r\n\t\tesac\r\n\tdone\r\n\ttypeset -gHA _comps _services _patcomps _postpatcomps\r\n\ttypeset -gHA _compautos\r\n\ttypeset -gHA _lastcomp\r\n\tif [[ -n $_i_dumpfile ]]\r\n\tthen\r\n\t\ttypeset -g _comp_dumpfile=\"$_i_dumpfile\" \r\n\telse\r\n\t\ttypeset -g _comp_dumpfile=\"${ZDOTDIR:-$HOME}/.zcompdump\" \r\n\tfi\r\n\ttypeset -gHa _comp_options\r\n\t_comp_options=(bareglobqual extendedglob glob multibyte multifuncdef nullglob rcexpandparam unset NO_allexport NO_aliases NO_cshnullglob NO_cshjunkiequotes NO_errexit NO_errreturn NO_globassign NO_globsubst NO_histsubstpattern NO_ignorebraces NO_ignoreclosebraces NO_kshglob NO_ksharrays NO_kshtypeset NO_markdirs NO_octalzeroes NO_posixbuiltins NO_posixidentifiers NO_shwordsplit NO_shglob NO_warnnestedvar NO_warncreateglobal) \r\n\ttypeset -gH _comp_setup='local -A _comp_caller_options;\r\n             _comp_caller_options=(${(kv)options[@]});\r\n             setopt localoptions localtraps localpatterns ${_comp_options[@]};\r\n             local IFS=$'\\'\\ \\\\t\\\\r\\\\n\\\\0\\'';\r\n             builtin enable -p \\| \\~ \\( \\? \\* \\[ \\< \\^ \\# 2>&-;\r\n             exec </dev/null;\r\n             trap - ZERR;\r\n             local -a reply;\r\n             local REPLY' \r\n\ttypeset -ga compprefuncs comppostfuncs\r\n\tcompprefuncs=() \r\n\tcomppostfuncs=() \r\n\t: $funcstack\r\n\tcompdef () {\r\n\t\tlocal opt autol type func delete eval new i ret=0 cmd svc \r\n\t\tlocal -a match mbegin mend\r\n\t\temulate -L zsh\r\n\t\tsetopt extendedglob\r\n\t\tif (( ! $# ))\r\n\t\tthen\r\n\t\t\tprint -u2 \"$0: I need arguments\"\r\n\t\t\treturn 1\r\n\t\tfi\r\n\t\twhile getopts \"anpPkKde\" opt\r\n\t\tdo\r\n\t\t\tcase \"$opt\" in\r\n\t\t\t\t(a) autol=yes  ;;\r\n\t\t\t\t(n) new=yes  ;;\r\n\t\t\t\t([pPkK]) if [[ -n \"$type\" ]]\r\n\t\t\t\t\tthen\r\n\t\t\t\t\t\tprint -u2 \"$0: type already set to $type\"\r\n\t\t\t\t\t\treturn 1\r\n\t\t\t\t\tfi\r\n\t\t\t\t\tif [[ \"$opt\" = p ]]\r\n\t\t\t\t\tthen\r\n\t\t\t\t\t\ttype=pattern \r\n\t\t\t\t\telif [[ \"$opt\" = P ]]\r\n\t\t\t\t\tthen\r\n\t\t\t\t\t\ttype=postpattern \r\n\t\t\t\t\telif [[ \"$opt\" = K ]]\r\n\t\t\t\t\tthen\r\n\t\t\t\t\t\ttype=widgetkey \r\n\t\t\t\t\telse\r\n\t\t\t\t\t\ttype=key \r\n\t\t\t\t\tfi ;;\r\n\t\t\t\t(d) delete=yes  ;;\r\n\t\t\t\t(e) eval=yes  ;;\r\n\t\t\tesac\r\n\t\tdone\r\n\t\tshift OPTIND-1\r\n\t\tif (( ! $# ))\r\n\t\tthen\r\n\t\t\tprint -u2 \"$0: I need arguments\"\r\n\t\t\treturn 1\r\n\t\tfi\r\n\t\tif [[ -z \"$delete\" ]]\r\n\t\tthen\r\n\t\t\tif [[ -z \"$eval\" ]] && [[ \"$1\" = *\\=* ]]\r\n\t\t\tthen\r\n\t\t\t\twhile (( $# ))\r\n\t\t\t\tdo\r\n\t\t\t\t\tif [[ \"$1\" = *\\=* ]]\r\n\t\t\t\t\tthen\r\n\t\t\t\t\t\tcmd=\"${1%%\\=*}\" \r\n\t\t\t\t\t\tsvc=\"${1#*\\=}\" \r\n\t\t\t\t\t\tfunc=\"$_comps[${_services[(r)$svc]:-$svc}]\" \r\n\t\t\t\t\t\t[[ -n ${_services[$svc]} ]] && svc=${_services[$svc]} \r\n\t\t\t\t\t\t[[ -z \"$func\" ]] && func=\"${${_patcomps[(K)$svc][1]}:-${_postpatcomps[(K)$svc][1]}}\" \r\n\t\t\t\t\t\tif [[ -n \"$func\" ]]\r\n\t\t\t\t\t\tthen\r\n\t\t\t\t\t\t\t_comps[$cmd]=\"$func\" \r\n\t\t\t\t\t\t\t_services[$cmd]=\"$svc\" \r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tprint -u2 \"$0: unknown command or service: $svc\"\r\n\t\t\t\t\t\t\tret=1 \r\n\t\t\t\t\t\tfi\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tprint -u2 \"$0: invalid argument: $1\"\r\n\t\t\t\t\t\tret=1 \r\n\t\t\t\t\tfi\r\n\t\t\t\t\tshift\r\n\t\t\t\tdone\r\n\t\t\t\treturn ret\r\n\t\t\tfi\r\n\t\t\tfunc=\"$1\" \r\n\t\t\t[[ -n \"$autol\" ]] && autoload -Uz \"$func\"\r\n\t\t\tshift\r\n\t\t\tcase \"$type\" in\r\n\t\t\t\t(widgetkey) while [[ -n $1 ]]\r\n\t\t\t\t\tdo\r\n\t\t\t\t\t\tif [[ $# -lt 3 ]]\r\n\t\t\t\t\t\tthen\r\n\t\t\t\t\t\t\tprint -u2 \"$0: compdef -K requires <widget> <comp-widget> <key>\"\r\n\t\t\t\t\t\t\treturn 1\r\n\t\t\t\t\t\tfi\r\n\t\t\t\t\t\t[[ $1 = _* ]] || 1=\"_$1\" \r\n\t\t\t\t\t\t[[ $2 = .* ]] || 2=\".$2\" \r\n\t\t\t\t\t\t[[ $2 = .menu-select ]] && zmodload -i zsh/complist\r\n\t\t\t\t\t\tzle -C \"$1\" \"$2\" \"$func\"\r\n\t\t\t\t\t\tif [[ -n $new ]]\r\n\t\t\t\t\t\tthen\r\n\t\t\t\t\t\t\tbindkey \"$3\" | IFS=$' \\t' read -A opt\r\n\t\t\t\t\t\t\t[[ $opt[-1] = undefined-key ]] && bindkey \"$3\" \"$1\"\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tbindkey \"$3\" \"$1\"\r\n\t\t\t\t\t\tfi\r\n\t\t\t\t\t\tshift 3\r\n\t\t\t\t\tdone ;;\r\n\t\t\t\t(key) if [[ $# -lt 2 ]]\r\n\t\t\t\t\tthen\r\n\t\t\t\t\t\tprint -u2 \"$0: missing keys\"\r\n\t\t\t\t\t\treturn 1\r\n\t\t\t\t\tfi\r\n\t\t\t\t\tif [[ $1 = .* ]]\r\n\t\t\t\t\tthen\r\n\t\t\t\t\t\t[[ $1 = .menu-select ]] && zmodload -i zsh/complist\r\n\t\t\t\t\t\tzle -C \"$func\" \"$1\" \"$func\"\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\t[[ $1 = menu-select ]] && zmodload -i zsh/complist\r\n\t\t\t\t\t\tzle -C \"$func\" \".$1\" \"$func\"\r\n\t\t\t\t\tfi\r\n\t\t\t\t\tshift\r\n\t\t\t\t\tfor i\r\n\t\t\t\t\tdo\r\n\t\t\t\t\t\tif [[ -n $new ]]\r\n\t\t\t\t\t\tthen\r\n\t\t\t\t\t\t\tbindkey \"$i\" | IFS=$' \\t' read -A opt\r\n\t\t\t\t\t\t\t[[ $opt[-1] = undefined-key ]] || continue\r\n\t\t\t\t\t\tfi\r\n\t\t\t\t\t\tbindkey \"$i\" \"$func\"\r\n\t\t\t\t\tdone ;;\r\n\t\t\t\t(*) while (( $# ))\r\n\t\t\t\t\tdo\r\n\t\t\t\t\t\tif [[ \"$1\" = -N ]]\r\n\t\t\t\t\t\tthen\r\n\t\t\t\t\t\t\ttype=normal \r\n\t\t\t\t\t\telif [[ \"$1\" = -p ]]\r\n\t\t\t\t\t\tthen\r\n\t\t\t\t\t\t\ttype=pattern \r\n\t\t\t\t\t\telif [[ \"$1\" = -P ]]\r\n\t\t\t\t\t\tthen\r\n\t\t\t\t\t\t\ttype=postpattern \r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tcase \"$type\" in\r\n\t\t\t\t\t\t\t\t(pattern) if [[ $1 = (#b)(*)=(*) ]]\r\n\t\t\t\t\t\t\t\t\tthen\r\n\t\t\t\t\t\t\t\t\t\t_patcomps[$match[1]]=\"=$match[2]=$func\" \r\n\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t\t_patcomps[$1]=\"$func\" \r\n\t\t\t\t\t\t\t\t\tfi ;;\r\n\t\t\t\t\t\t\t\t(postpattern) if [[ $1 = (#b)(*)=(*) ]]\r\n\t\t\t\t\t\t\t\t\tthen\r\n\t\t\t\t\t\t\t\t\t\t_postpatcomps[$match[1]]=\"=$match[2]=$func\" \r\n\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t\t_postpatcomps[$1]=\"$func\" \r\n\t\t\t\t\t\t\t\t\tfi ;;\r\n\t\t\t\t\t\t\t\t(*) if [[ \"$1\" = *\\=* ]]\r\n\t\t\t\t\t\t\t\t\tthen\r\n\t\t\t\t\t\t\t\t\t\tcmd=\"${1%%\\=*}\" \r\n\t\t\t\t\t\t\t\t\t\tsvc=yes \r\n\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t\tcmd=\"$1\" \r\n\t\t\t\t\t\t\t\t\t\tsvc= \r\n\t\t\t\t\t\t\t\t\tfi\r\n\t\t\t\t\t\t\t\t\tif [[ -z \"$new\" || -z \"${_comps[$1]}\" ]]\r\n\t\t\t\t\t\t\t\t\tthen\r\n\t\t\t\t\t\t\t\t\t\t_comps[$cmd]=\"$func\" \r\n\t\t\t\t\t\t\t\t\t\t[[ -n \"$svc\" ]] && _services[$cmd]=\"${1#*\\=}\" \r\n\t\t\t\t\t\t\t\t\tfi ;;\r\n\t\t\t\t\t\t\tesac\r\n\t\t\t\t\t\tfi\r\n\t\t\t\t\t\tshift\r\n\t\t\t\t\tdone ;;\r\n\t\t\tesac\r\n\t\telse\r\n\t\t\tcase \"$type\" in\r\n\t\t\t\t(pattern) unset \"_patcomps[$^@]\" ;;\r\n\t\t\t\t(postpattern) unset \"_postpatcomps[$^@]\" ;;\r\n\t\t\t\t(key) print -u2 \"$0: cannot restore key bindings\"\r\n\t\t\t\t\treturn 1 ;;\r\n\t\t\t\t(*) unset \"_comps[$^@]\" ;;\r\n\t\t\tesac\r\n\t\tfi\r\n\t}\r\n\ttypeset _i_wdirs _i_wfiles\r\n\t_i_wdirs=() \r\n\t_i_wfiles=() \r\n\tautoload -Uz compaudit\r\n\tif [[ -n \"$_i_check\" ]]\r\n\tthen\r\n\t\ttypeset _i_q\r\n\t\tif ! eval compaudit\r\n\t\tthen\r\n\t\t\tif [[ -n \"$_i_q\" ]]\r\n\t\t\tthen\r\n\t\t\t\tif [[ \"$_i_fail\" = ask ]]\r\n\t\t\t\tthen\r\n\t\t\t\t\tif ! read -q \"?zsh compinit: insecure $_i_q, run compaudit for list.\r\nIgnore insecure $_i_q and continue [y] or abort compinit [n]? \"\r\n\t\t\t\t\tthen\r\n\t\t\t\t\t\tprint -u2 \"$0: initialization aborted\"\r\n\t\t\t\t\t\tunfunction compinit compdef\r\n\t\t\t\t\t\tunset _comp_dumpfile _comp_secure compprefuncs comppostfuncs _comps _patcomps _postpatcomps _compautos _lastcomp\r\n\t\t\t\t\t\treturn 1\r\n\t\t\t\t\tfi\r\n\t\t\t\t\t_i_wfiles=() \r\n\t\t\t\t\t_i_wdirs=() \r\n\t\t\t\telse\r\n\t\t\t\t\t(( $#_i_wfiles )) && _i_files=(\"${(@)_i_files:#(${(j:|:)_i_wfiles%.zwc})}\") \r\n\t\t\t\t\t(( $#_i_wdirs )) && _i_files=(\"${(@)_i_files:#(${(j:|:)_i_wdirs%.zwc})/*}\") \r\n\t\t\t\tfi\r\n\t\t\tfi\r\n\t\t\ttypeset -g _comp_secure=yes \r\n\t\tfi\r\n\tfi\r\n\tautoload -Uz compdump compinstall\r\n\t_i_done='' \r\n\tif [[ -f \"$_comp_dumpfile\" ]]\r\n\tthen\r\n\t\tif [[ -n \"$_i_check\" ]]\r\n\t\tthen\r\n\t\t\tIFS=$' \\t' read -rA _i_line < \"$_comp_dumpfile\"\r\n\t\t\tif [[ _i_autodump -eq 1 && $_i_line[2] -eq $#_i_files && $ZSH_VERSION = $_i_line[4] ]]\r\n\t\t\tthen\r\n\t\t\t\tbuiltin . \"$_comp_dumpfile\"\r\n\t\t\t\t_i_done=yes \r\n\t\t\tfi\r\n\t\telse\r\n\t\t\tbuiltin . \"$_comp_dumpfile\"\r\n\t\t\t_i_done=yes \r\n\t\tfi\r\n\tfi\r\n\tif [[ -z \"$_i_done\" ]]\r\n\tthen\r\n\t\ttypeset -A _i_test\r\n\t\tfor _i_dir in $fpath\r\n\t\tdo\r\n\t\t\t[[ $_i_dir = . ]] && continue\r\n\t\t\t(( $_i_wdirs[(I)$_i_dir] )) && continue\r\n\t\t\tfor _i_file in $_i_dir/^([^_]*|*~|*.zwc)(N)\r\n\t\t\tdo\r\n\t\t\t\t_i_name=\"${_i_file:t}\" \r\n\t\t\t\t(( $+_i_test[$_i_name] + $_i_wfiles[(I)$_i_file] )) && continue\r\n\t\t\t\t_i_test[$_i_name]=yes \r\n\t\t\t\tIFS=$' \\t' read -rA _i_line < $_i_file\r\n\t\t\t\t_i_tag=$_i_line[1] \r\n\t\t\t\tshift _i_line\r\n\t\t\t\tcase $_i_tag in\r\n\t\t\t\t\t(\\#compdef) if [[ $_i_line[1] = -[pPkK](n|) ]]\r\n\t\t\t\t\t\tthen\r\n\t\t\t\t\t\t\tcompdef ${_i_line[1]}na \"${_i_name}\" \"${(@)_i_line[2,-1]}\"\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tcompdef -na \"${_i_name}\" \"${_i_line[@]}\"\r\n\t\t\t\t\t\tfi ;;\r\n\t\t\t\t\t(\\#autoload) autoload -Uz \"$_i_line[@]\" ${_i_name}\r\n\t\t\t\t\t\t[[ \"$_i_line\" != \\ # ]] && _compautos[${_i_name}]=\"$_i_line\"  ;;\r\n\t\t\t\tesac\r\n\t\t\tdone\r\n\t\tdone\r\n\t\tif [[ $_i_autodump = 1 ]]\r\n\t\tthen\r\n\t\t\tcompdump\r\n\t\tfi\r\n\tfi\r\n\tfor _i_line in complete-word delete-char-or-list expand-or-complete expand-or-complete-prefix list-choices menu-complete menu-expand-or-complete reverse-menu-complete\r\n\tdo\r\n\t\tzle -C $_i_line .$_i_line _main_complete\r\n\tdone\r\n\tzle -la menu-select && zle -C menu-select .menu-select _main_complete\r\n\tbindkey '^i' | IFS=$' \\t' read -A _i_line\r\n\tif [[ ${_i_line[2]} = expand-or-complete ]] && zstyle -a ':completion:' completer _i_line && (( ${_i_line[(i)_expand]} <= ${#_i_line} ))\r\n\tthen\r\n\t\tbindkey '^i' complete-word\r\n\tfi\r\n\tunfunction compinit compaudit\r\n\tautoload -Uz compinit compaudit\r\n\treturn 0\r\n}\r\ncompinstall () {\r\n\t# undefined\r\n\tbuiltin autoload -XUz\r\n}\r\ndown-line-or-beginning-search () {\r\n\t# undefined\r\n\tbuiltin autoload -XU\r\n}\r\nedit-command-line () {\r\n\t# undefined\r\n\tbuiltin autoload -XU\r\n}\r\nis-at-least () {\r\n\temulate -L zsh\r\n\tlocal IFS=\".-\" min_cnt=0 ver_cnt=0 part min_ver version order \r\n\tmin_ver=(${=1}) \r\n\tversion=(${=2:-$ZSH_VERSION} 0) \r\n\twhile (( $min_cnt <= ${#min_ver} ))\r\n\tdo\r\n\t\twhile [[ \"$part\" != <-> ]]\r\n\t\tdo\r\n\t\t\t(( ++ver_cnt > ${#version} )) && return 0\r\n\t\t\tif [[ ${version[ver_cnt]} = *[0-9][^0-9]* ]]\r\n\t\t\tthen\r\n\t\t\t\torder=(${version[ver_cnt]} ${min_ver[ver_cnt]}) \r\n\t\t\t\tif [[ ${version[ver_cnt]} = <->* ]]\r\n\t\t\t\tthen\r\n\t\t\t\t\t[[ $order != ${${(On)order}} ]] && return 1\r\n\t\t\t\telse\r\n\t\t\t\t\t[[ $order != ${${(O)order}} ]] && return 1\r\n\t\t\t\tfi\r\n\t\t\t\t[[ $order[1] != $order[2] ]] && return 0\r\n\t\t\tfi\r\n\t\t\tpart=${version[ver_cnt]##*[^0-9]} \r\n\t\tdone\r\n\t\twhile true\r\n\t\tdo\r\n\t\t\t(( ++min_cnt > ${#min_ver} )) && return 0\r\n\t\t\t[[ ${min_ver[min_cnt]} = <-> ]] && break\r\n\t\tdone\r\n\t\t(( part > min_ver[min_cnt] )) && return 0\r\n\t\t(( part < min_ver[min_cnt] )) && return 1\r\n\t\tpart='' \r\n\tdone\r\n}\r\nup-line-or-beginning-search () {\r\n\t# undefined\r\n\tbuiltin autoload -XU\r\n}\r\nurl-quote-magic () {\r\n\t# undefined\r\n\tbuiltin autoload -XUz\r\n}\r\n```\r\n\r\n</details>",
        "labels": "Support",
        "id": 44334
    },
    {
        "title": "Additional Output in command prompt",
        "body": "In zsh shell, I am having the following issue. After I press a command in command prompt, it is repeated in second line and also there's an ineligible character as well.\r\n![screenshot from 2017-08-18 13-17-46](https://user-images.githubusercontent.com/3380056/29462498-66a62848-8451-11e7-9d41-2bce32d614d1.png)\r\nI am using Guake, if that helps. Although the issue persists in other terminals as well",
        "labels": "Support",
        "id": 44335
    },
    {
        "title": "code completion can't work when i input sudo",
        "body": "![image](https://user-images.githubusercontent.com/11351097/29367477-9c1d630c-82cf-11e7-8ded-13185119ec62.png)\r\n\r\nI use Ubuntu17.04",
        "labels": "Support",
        "id": 44336
    },
    {
        "title": "when i press enter-key and execute 'ls' command, the oh my zsh is very slow",
        "body": "system macos 10.12.6\r\n\r\n",
        "labels": "Support",
        "id": 44337
    },
    {
        "title": "Can't find osx plugins",
        "body": "![screen shot 2017-08-06 at 10 06 48](https://user-images.githubusercontent.com/18232831/28999990-3e6ae86c-7a8f-11e7-80dc-080b3316a786.png)\r\nI try to source .zshrc,but zsh told me:/Users/spark/.oh-my-zsh/plugins/osx/osx.plugin.zsh:178: command not found: compdef.How to solve the problem?",
        "labels": "Support",
        "id": 44338
    },
    {
        "title": "Refined theme removes current directory display",
        "body": "@mcornella , when I set my theme to refined, I lose display of the current directory, but there is still a line break for one. Is this intended behavior?",
        "labels": "Support",
        "id": 44339
    },
    {
        "title": "upgrade_oh_my_zsh for a user",
        "body": "Is it possible to run `upgrade_oh_my_zsh` for a provided user using `sudo` instead of just the current user.",
        "labels": "Support",
        "id": 44340
    },
    {
        "title": "Are precmd and postcmd resetting gnu screen window names?",
        "body": "Whenever I create a new window in `gnu screen` I usually give it a name which persists between disconnects, but I notice that with `oh-my-zsh` distribution of `zsh` the title gets reset when I run a command in the window. Basically it gets reset to `(x* ~)` where `x` is the window number.\r\n\r\nNot only that when I run a command in remote session in that window the title which was set locally gets changed to the command run in the remote window if the remote shell is `zsh`. This doesn't happen with `bash`.\r\n\r\nI asked the question on [stackexchange](https://unix.stackexchange.com/questions/375649/how-can-i-stop-zsh-oh-my-zsh-from-resetting-screen-window-titles) and I am told that it may have something to do with `precmd` and `postcmd` options in `oh-my-zsh`. How can I fix them?",
        "labels": "Support",
        "id": 44341
    },
    {
        "title": "command line-theme changed when bad command is typed",
        "body": "hi, i have experiencing small isuue, its not a big deal but i was thinking maybe someone could help me with this, basically when use bad command (example in the picture below) my command line breaks in to different line with missing hostname, then when i use right command its back on again, any one had this issue before ?\r\nMany thanks\r\n\r\nBartosz\r\n\r\np.s. i might do something wrong with the theme but hope someone here may know the answer\r\n\r\n![screen shot 2017-07-12 at 11 49 19](https://user-images.githubusercontent.com/12444755/28114450-d8dfe82a-66f8-11e7-90f4-22c3fa56f38c.png)\r\n\r\nthis is my theme code\r\n\r\n`local ret_status=\"%(?:%{$fg_bold[green]bartron %}%{$FG[141]ツ %}%{$fg_bold[green]➜ :)\"`\r\n`PROMPT='%{$fg[red]%T%} ${ret_status} %{$fg[cyan]%}%~%{$reset_color%} $(git_prompt_info)'`\r\n\r\n`ZSH_THEME_GIT_PROMPT_PREFIX=\"%{$fg_bold[blue]%}git:(%{$fg[yellow]%}\"`\r\n`ZSH_THEME_GIT_PROMPT_SUFFIX=\"%{$reset_color%} \"`\r\n`ZSH_THEME_GIT_PROMPT_DIRTY=\"%{$fg[blue]%}) %{$fg[red]%}✗\"`\r\n`ZSH_THEME_GIT_PROMPT_CLEAN=\"%{$fg[blue]%})\"`\r\n",
        "labels": "Support",
        "id": 44342
    },
    {
        "title": "Does oh-my-zsh's theme conflict with terminal's theme? ",
        "body": "I am using 2 terminals. see the following 2 screenshots. \r\nLeft is MacOSX default terminal app, and right is iTerm2. \r\n\r\nIn the following 1st screenshot, both terminal app and iTerm2 are using `Solarized Dark theme` in theirs settings, and I used oh-my-zsh theme `crcandy` too. You can see the results of them are different. It seems that the MacOSX default terminal can show the color defined in crcandy.zsh-theme, but iTerm2 failed.\r\n\r\n![image](https://user-images.githubusercontent.com/2831220/28058768-51f289e8-6654-11e7-8465-c40cafe361e2.png)\r\n\r\nIn the following 2nd screenshot, I removed `Solarized Dark theme` for both terminal apps. But crcandy.zsh-theme was still in use. You can see that both terminals can show the color correctly. \r\n\r\n![image](https://user-images.githubusercontent.com/2831220/28112530-ed5fb806-672b-11e7-9024-b51dde84319a.png)\r\n\r\n\r\nSo, I am not sure if it is a bug of oh-my-zsh. It seems that it can't apply terminal app's theme and zsh theme at the same time to iTerm2 app. ",
        "labels": "Support",
        "id": 44343
    },
    {
        "title": "Sierra OSx Autocomplete issues",
        "body": "Hey guys,\r\n\r\nFor the most part autocomplete works wonderfully.  But i have one issue so far.\r\n\r\nWhen using this command:\r\n>open -a \"Microsoft Word\" Filename.docx  \r\n\r\nthe autocomplete on Filename.docx doesnt work.  Am I missing something or maybe can be directed to the right solution?\r\n\r\nOr is this a missing feature maybe a bug?\r\n\r\nRegards.\r\n",
        "labels": "Support",
        "id": 44344
    },
    {
        "title": "issue: showed me \"argument too long\"",
        "body": "I wanted to delete all mail files with \"rm *\". Because there's more than 10thousands files, zsh told me argument too long.",
        "labels": "Support",
        "id": 44345
    },
    {
        "title": "How to run custom commands after zsh launches",
        "body": "Hi, \r\n\r\nI am using zsh in iTerm.  On startup I put following commands in General to launch : \r\n\r\nzsh (launches zsh). \r\n\r\nHowever I want once the zsh launches then 2 commands execute (as we can do in terminal or iterm2)  ie: ls && nvm use 4.2.3 (these must be executing inside zsh)\r\n\r\nHow to do this.",
        "labels": "Support",
        "id": 44346
    },
    {
        "title": "can not autocomplete my makefile compile command when press \"TAB\"",
        "body": "this problem willl not happen in other shell like bash,when i press TAB and can not find the makefile command in the list.\r\nthis is my system version\r\n\"Linux zwxf 4.9.0-deepin5-amd64 #1 SMP PREEMPT Deepin 4.9.8-5 (2017-05-02) x86_64 GNU/Linux\"\r\nplease check it out.",
        "labels": "Support",
        "id": 44347
    },
    {
        "title": "ZSH completion functions broken",
        "body": "My oh-my-zsh install which has been working for almost a year has just broken. When I open a terminal, I get:\r\n```\r\n/home/marcel/.oh-my-zsh/lib/theme-and-appearance.zsh:2: colors: function definition file not found\r\n/home/marcel/.oh-my-zsh/oh-my-zsh.sh:78: compinit: function definition file not found\r\n/home/marcel/.oh-my-zsh/plugins/git/git.plugin.zsh:80: command not found: compdef\r\n/home/marcel/.oh-my-zsh/plugins/git/git.plugin.zsh:93: command not found: compdef\r\n/home/marcel/.oh-my-zsh/plugins/git/git.plugin.zsh:100: command not found: compdef\r\n/home/marcel/.oh-my-zsh/plugins/git/git.plugin.zsh:109: command not found: compdef\r\n/home/marcel/.oh-my-zsh/plugins/git/git.plugin.zsh:119: command not found: compdef\r\n/home/marcel/.oh-my-zsh/plugins/git/git.plugin.zsh:129: command not found: compdef\r\n/home/marcel/.oh-my-zsh/plugins/git/git.plugin.zsh:138: command not found: compdef\r\n/home/marcel/.oh-my-zsh/plugins/git/git.plugin.zsh:144: command not found: compdef\r\n/home/marcel/.oh-my-zsh/plugins/git/git.plugin.zsh:147: command not found: compdef\r\n/home/marcel/.oh-my-zsh/plugins/git/git.plugin.zsh:150: command not found: compdef\r\n/home/marcel/.oh-my-zsh/plugins/git/git.plugin.zsh:153: command not found: compdef\r\n/home/marcel/.oh-my-zsh/plugins/git/git.plugin.zsh:163: command not found: compdef\r\n/home/marcel/.oh-my-zsh/plugins/git/git.plugin.zsh:166: command not found: compdef\r\n/home/marcel/.oh-my-zsh/plugins/git/git.plugin.zsh:168: command not found: compdef\r\n/home/marcel/.oh-my-zsh/plugins/git/git.plugin.zsh:182: command not found: compdef\r\n/home/marcel/.oh-my-zsh/plugins/git/git.plugin.zsh:193: command not found: compdef\r\n$SPACESHIP_PROMPT_TRUNC is deprecated. Use $SPACESHIP_DIR_TRUNC instead.\r\nspaceship_setup:3: add-zsh-hook: function definition file not found\r\nspaceship_setup:4: add-zsh-hook: function definition file not found\r\n$SPACESHIP_PROMPT_TRUNC is deprecated. Use $SPACESHIP_DIR_TRUNC instead.\r\nspaceship_setup:3: add-zsh-hook: function definition file not found\r\nspaceship_setup:4: add-zsh-hook: function definition file not found\r\n```\r\nA lot of other answers involve running `compaudit`. Running this gives me `zsh: compaudit: function definition file not found`.\r\n\r\n### What I have tried:\r\n1. `rm ~/.zcompdump*`\r\n1. Reinstalling oh-my-zsh\r\n1. Reinstalling zsh from source\r\n1. Adding `/usr/share/zsh/functions` to `$fpath`\r\n1. `chown -R 755 /usr/share/zsh/functions`\r\n\r\n### My environment:\r\n* `uname -a`: `Linux Hermes 4.11.6-1-ARCH #1 SMP PREEMPT Sat Jun 17 08:19:42 CEST 2017 x86_64 GNU/Linux`\r\n* `zsh --version`: `zsh 5.3.1 (x86_64-unknown-linux-gnu)`\r\n* `which zsh`: `/usr/local/bin/zsh`\r\n\r\nSorry if this is the wrong place to post this. I don't know if it's a zsh issue or an omzsh issue but I couldn't find where to post zsh issues so here I am.",
        "labels": "Support",
        "id": 44348
    },
    {
        "title": "docker restart has no autocomplete for the container name",
        "body": "There is no autocompletion proposed for docker restart for the container names while it's working fine with docker stop for instance.",
        "labels": "Support",
        "id": 44349
    },
    {
        "title": "allow inverting behaviour of globalias plugin",
        "body": "I like the idea of the `globalias` plugin, but defaulting to replace aliases/subcommands is rather annoying, especially for people who like to draft oneliners or large pipes in a shell before copying them into a script etc.\r\n\r\ntherefore I want to propose a `~/.zshrc` config variable like `GLOBALIAS_INVERT_KEYS` or `zstyle :omz:plugins:globalias invert_keys` or similar that does nothing on space but replaces the aliases on ctrl+space.",
        "labels": "Support",
        "id": 44350
    },
    {
        "title": "use fishy theme can not hide default_user",
        "body": "\r\nI use the fishy theme for my omz\r\n\r\n~/.zshrc\r\n\r\n```bash\r\nZSH_THEME = \"fishy\"\r\n```\r\n\r\ni use all like this \r\n\r\n\r\n```bash\r\n\r\nDEFAULT_USER=`whoami`\r\n\r\n```\r\n\r\n\r\n```bash\r\n\r\nexport DEFAULT_USER=`whoami`\r\n\r\n```\r\n\r\n\r\n\r\n```bash\r\n\r\nUSER=``\r\n\r\n```\r\n\r\nbut don't sovle my problem.\r\n\r\n",
        "labels": "Support",
        "id": 44351
    },
    {
        "title": "How to hide cd echo",
        "body": "My current directory is /path/to/foo, and then I ran commands `cd /; cd -`.\r\nNow my current directory is still /path/to/foo, but I got  console echo \"/path/to/foo\", this is the directory path.\r\nHow can I hide it?",
        "labels": "Support",
        "id": 44352
    },
    {
        "title": "Tab completion colors",
        "body": "Problem: tab completion is colored, but colors do not match other colors throughout the terminal.\r\n\r\n\r\n1. How to reproduce the problem  \r\nrun `ls` then type `vim <tab>` with default color scheme/theme  \r\n2. What the correct behavior should be\r\nColors displayed should match colors of output of `ls`\r\n3. What the actual behavior is\r\nColor of output is different than color of `ls` output  \r\n(In my case I'm using the Smyck color scheme for iTerm, though that should not matter here)  \r\n<img width=\"922\" alt=\"screen shot 2017-05-01 at 6 08 19 pm\" src=\"https://cloud.githubusercontent.com/assets/1351436/25600562/ccef3076-2e99-11e7-97b3-247dea8c8dbe.png\">  \r\n\r\nAs you can see, all the colors are different and the `Adobe` entry is downright illegible.\r\n\r\nI came across #1563 but I am new to this and don't know enough about zsh theming to know what dir_colors is or really understand what's going on in that thread. I tried the workaround listed in the thread: `zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}`, but it removes color from tab completion output completely. As I understand it, this behavior is to be expected as I am on a mac and macs use LSCOLORS, but when I use LSCOLORS in that line, I get the same broken result as I do omitting the line in question.\r\n\r\nThis seems like it should be a simple thing. Yes there are iTerm themes that make it legible, but they make my vim scheme illegible and I'd really rather solve this the right way.\r\n\r\nAs a workaround, can I manually override the tab completion colors? Where can I look to look up the LS output colors? `echo LSCOLORS` give me this insane string: `Gxfxcxdxbxegedabagacad`",
        "labels": "Support",
        "id": 44353
    },
    {
        "title": "multiple lines issue in OSX",
        "body": "When having a long command in a ssh session (more than one line in the terminal) and start to write or delete part of the command, the cursor gets crazy and jumps to different locations, so I'm not able to see where am I modifying the script. This happens in default terminal, iTerm as well. \r\n\r\n<img width=\"581\" alt=\"screen shot 2017-04-25 at 11 39 41 am\" src=\"https://cloud.githubusercontent.com/assets/2141907/25391151/f49db360-29ab-11e7-9aea-ecfedd7396d4.png\">\r\n",
        "labels": "Support",
        "id": 44354
    },
    {
        "title": "Is any possibilities to marked and get actions from filepath in omz stdout?",
        "body": "On Mac zsh I can click on the file path in the terminal (when i retrieved some prints in stdout ) and file will be opened on the linked application.For example clicking on the web-link (ctrl+mouse left button) is working fine. How can I get the same behavior with file path on Linux? Maybe some plugins I should to use?\r\n\r\nLinux Mint 18.1\r\nzsh --version: zsh 5.1.1 (x86_64-ubuntu-linux-gnu)\r\n",
        "labels": "Support",
        "id": 44355
    },
    {
        "title": "Which plugin does completion of last similar command",
        "body": "I had a plugin enabled that I loved, then I lost the config file, and now I'm trying to find it again. It would auto-fill the last similar command from shell when up was pressed. \r\n\r\nSay my zsh history from newest to oldest was: \r\n\r\n```bash\r\ncd $HOME\r\nssh host@example.com\r\nrsync -avz files/ otherfiles/\r\nssh host@secondexample.com\r\n```\r\n\r\nIf I just executed the `cd $HOME` command and had a blank prompt, if I typed `ssh` then `up-key`, it would, instead of filling with `cd $HOME`, would jump to `ssh host@example.com`. Pressing `up-key` again would fill with `ssh host@secondexample.com`. \r\n\r\nWhich plugin does this? I loved it and can't find it.\r\n\r\nSorry this is not an issue but a support need. ",
        "labels": "Support",
        "id": 44356
    },
    {
        "title": "ZSH Theme adds 1 extra space",
        "body": "I notice when I enable ZSH theme that I can an extra space to the left of the prompt, is this by design or a bug? Is it something that I can change?\r\n\r\nNo theme:\r\n![image](https://cloud.githubusercontent.com/assets/6215805/24582199/806f84f2-16f8-11e7-8fb5-bc1928f11c83.png)\r\n\r\nZSH_THEME=\"robbyrussell\"\r\n![image](https://cloud.githubusercontent.com/assets/6215805/24582179/35939248-16f8-11e7-8981-02ea0be0c74a.png)\r\n\r\nZSH_THEME=\"powerlevel9k/powerlevel9k\"\r\n![image](https://cloud.githubusercontent.com/assets/6215805/24582170/ff387416-16f7-11e7-9c72-01866bfe1c0c.png)\r\n\r\nMore clearly seen from the left.",
        "labels": "Support",
        "id": 44357
    },
    {
        "title": "How to display only the folder name instead of the whole path in terminal?",
        "body": "I don't want to see the whole path of where I am, instead, I only want to see the folder that I am in currently.\r\n\r\nThe solution that I got was to modify the code from:\r\n[`prompt_segment blue black '%~'`](https://github.com/robbyrussell/oh-my-zsh/blob/master/themes/agnoster.zsh-theme#L190)\r\nto:\r\n`prompt_segment blue black '%1~'`.\r\n\r\nNow with each update, I have stash the change.\r\n\r\nIs there a better way of doing it by adding a setting to the zshrc file?",
        "labels": "Support",
        "id": 44358
    },
    {
        "title": "previous shell text still showing when view files with vim",
        "body": "somehow the view inside hyper doesn't get reset when opening files in vim (or nano),\r\nthe characters just get replaced where there is no whitespace on the textfile and stay as they are where there is whitespace.\r\n\r\n![image](https://cloud.githubusercontent.com/assets/2669027/24067599/3c12bd7e-0bc2-11e7-9b74-dd0659e9784f.png)\r\n",
        "labels": "Support",
        "id": 44359
    },
    {
        "title": "battery percentage is different from the one in the menu bar",
        "body": "the menu bar shows me 100% while oh-my-zsh shows me 95% : \r\nhttp://www.picpaste.com/Screen_Shot_2017-03-16_at_10.12.26_AM-c77I5TcO.png\r\nhttp://www.picpaste.com/Screen_Shot_2017-03-16_at_10.12.35_AM-75WarLr2.png\r\n",
        "labels": "Support",
        "id": 44360
    },
    {
        "title": "robbyrussell: command prompt missing last character ",
        "body": "I'm having an issue whereby the command prompt is missing the last character.\r\n\r\n![screen shot 2017-03-13 at 10 41 43](https://cloud.githubusercontent.com/assets/3205699/23851143/44540cf4-07da-11e7-8cd5-a99c9a5a9113.png)\r\n\r\nRunning the robbyrussell theme.\r\n",
        "labels": "Support",
        "id": 44361
    },
    {
        "title": "History not working as expected",
        "body": "The following options doesn't have the desired effect:\r\n\r\n>HISTSIZE=50000\r\n>SAVEHIST=$HISTSIZE\r\n\r\n>wc -l ~/.zsh_history                                                                                                                                                          \r\n>10286 /home/war/.zsh_history\r\n\r\nIn the past my history was up to 11220, yet after a reboot it is back down. \r\n\r\n>setopt hist_ignore_dups\r\n\r\n>10032  l\r\n>10034  l\r\n>10036  l\r\n>10038  l\r\n>10041  l\r\n>10044  l\r\n>10046  l\r\n>10048  l\r\n>10054  l\r\n>10056  l\r\n>10058  l\r\n>10060  l\r\n\r\nI can confirm that the hist_ignore_space option does work. \r\n\r\nFrom reading the documentation: http://zsh.sourceforge.net/Doc/Release/Options.html#index-APPEND_005fHISTORY \r\n\r\nSHARE_HISTORY <K>\r\n\r\nThis option both imports new commands from the history file, and also causes your typed commands to be appended to the history file (the latter is like specifying INC_APPEND_HISTORY, **which should be turned off if this option is in effect**). The history lines are also output with timestamps ala EXTENDED_HISTORY (which makes it easier to find the spot where we left off reading the file after it gets re-written).\r\n\r\nThis suggests that the history configuration in oh-my-zsh doesn't take this into account. ",
        "labels": "Support",
        "id": 44362
    },
    {
        "title": "apt autocomplete not working, displaying folders",
        "body": "Using Ubuntu 14.04 and `apt` autocomplete doesn't work.\r\n\r\n`sudo apt upd...`\r\n`sudo apt upg...`\r\n`sudo apt install ter...`\r\nNone of these commands return anything when I press tab.\r\n\r\nIf I for example type:\r\n`sudo apt install tem` and press tab it will resolve to:\r\n`sudo apt install Templates/` if I am currently in the home folder. So it is behaving as if I am using `cd` or something like that.\r\n\r\nThe `apt-get` command works normally, and both commands work like they should in bash.",
        "labels": "Support",
        "id": 44363
    },
    {
        "title": "OMZ + zle reset-prompt prevents browsing history with arrow keys",
        "body": "I just installed zsh and oh-my-zsh (my previous shell was bash). My `.zshrc` is completely unmodified from oh-my-zsh's default settings. The \"git\" plugin is the only enabled plugin.\r\n\r\nI created a very simple theme using [this technique](http://askubuntu.com/a/360172/565424):\r\n\r\n    setopt PROMPT_SUBST\r\n    PROMPT='[%D{%L:%M:%S}] '\r\n    TMOUT=1\r\n    TRAPALRM() {\r\n      zle reset-prompt\r\n    }\r\n\r\nAfter enabling this theme, I am finding that the up and down arrow keys do not properly recall my history:\r\n\r\n* When I press the up arrow once, my most recent command is recalled, as expected.\r\n* When I press the up arrow a second time, nothing happens. I expected my next-most-recent command to be recalled.\r\n* When I press the down arrow after pressing the up arrow the first time, nothing happens. I expected the prompt to go back to the empty prompt I started with.\r\n\r\nThe output of `history` shows a full history.\r\n\r\nIf I replace my `.zshrc` with *only* the contents of the script above (essentially using the prompt settings from the theme but disabling oh-my-zsh), my up and down arrows work as expected.\r\n\r\nIf I go back to my oh-my-zsh `.zshrc` and comment out the `zle reset-prompt` line in my theme, my history works fine (but the clock is no longer live).\r\n\r\nHow can I use both oh-my-zsh and `zle reset-prompt` without causing my up/down arrows to behave differently? Is this a bug in oh-my-zsh, or a configuration error?",
        "labels": "Support",
        "id": 44364
    },
    {
        "title": "How to make  ZSH_THEME= as a function of the hostname?",
        "body": "I want to have different themes for different servers.\r\nI want it almost in random but fixed order.\r\n\r\nI mean I don't care what exact theme is set for exact host, but I want the same for each connect.\r\n",
        "labels": "Support",
        "id": 44365
    },
    {
        "title": "sourcing .zprofile is too delayed",
        "body": "added this to `.zprofile`\r\n```\r\nif type setxkbmap >/dev/null 2>&1; then\r\n        setxkbmap -layout us,ru -option ctrl:nocaps 2>/dev/null\r\nfi\r\n```\r\nAfter successful authentication, there is a long delay, after my `caps` becomes `ctrl`.\r\nWhat should I do to run script right after log in ?",
        "labels": "Support",
        "id": 44366
    },
    {
        "title": "cd autocomplete doesn't work as expected",
        "body": "Steps to reproduce:\r\n1. Create two directories under a common directory, week 2 and Week 3\r\n2. From within the common directory type cd (press tab to autocomplete)\r\n3. Observe.\r\n\r\nWhat happens:\r\nzsh autocompletes the command to cd \"week\\ \" Notice the w is lowercase\r\n\r\nWhat is expected:\r\nsince there are two folders, \"week 2\" with a lower case w and \"Week 3\" with an uppercase w, autocomplete should show both alternatives instead of going for the lower case \"week 2\"",
        "labels": "Support",
        "id": 44367
    },
    {
        "title": "Update breaks oh-my-zsh -- dumps script to screen",
        "body": "I just updated oh-my-zsh to the newest version on two Macs, one 10.12 and one 10.11\r\nNow when I open a new terminal on either machine, zsh dumps the contents of a script to the screen. I restored my backed up oh-my-zsh config but it doesn't help. Only removing oh-my-zsh completely restores a normal prompt without all the junk.\r\n\r\nHere are first few lines (see attached file):\r\n\r\n```\r\nLast login: Thu Jan 12 23:50:40 on ttys014\r\nbracketed-paste-magic () {\r\n\t# undefined\r\n\tbuiltin autoload -XUz\r\n}\r\ncolors () {\r\n\temulate -L zsh\r\n\ttypeset -Ag color colour\r\n\tcolor=(00 none 01 bold 02 faint 22 normal 03 standout 23 no-standout 04 underline 24 no-underline 05 blink 25 no-blink 07 reverse 27 no-reverse 08 conceal 28 no-conceal 30 black 40 bg-black 31 red 41 bg-red 32 green 42 bg-green 33\r\n```\r\n\r\n\r\n[oh-my-zsh-terminal-dump.txt](https://github.com/robbyrussell/oh-my-zsh/files/703552/oh-my-zsh-terminal-dump.txt)",
        "labels": "Support",
        "id": 44368
    },
    {
        "title": "themes / prompt not working",
        "body": "On my Linux PC the oh-my-zsh themes are not working correctly.\r\n\r\nI always have the following prompt:\r\n`ben@Ben-PC-Arch ~ % `\r\n\r\nI recorded a short clip demonstrating the problem:\r\n[https://asciinema.org/a/0daf3p2uuvwwysk912ix2fo8g](https://asciinema.org/a/0daf3p2uuvwwysk912ix2fo8g)\r\n\r\nMy zsh version is 5.3.\r\n",
        "labels": "Support",
        "id": 44369
    },
    {
        "title": "Question: How to edit my ZSH Git plugin alias?",
        "body": "I want to change my `gm` alias from `git merge` to `git merge --no-ff`. I came across this [file](https://github.com/robbyrussell/oh-my-zsh/blob/master/plugins/git/git.plugin.zsh) but I've no idea how to get into it from my local machine.\r\n\r\nPlease help.",
        "labels": "Support",
        "id": 44370
    },
    {
        "title": "Zsh prints some script at startup, many functionality is \"broken\"",
        "body": "```\r\nbracketed-paste-magic () {\r\n\t# undefined\r\n\tbuiltin autoload -XUz\r\n}\r\ncolors () {\r\n\temulate -L zsh\r\n\ttypeset -Ag color colour\r\n\tcolor=(00 none 01 bold 02 faint 22 normal 03 standout 23 no-standout 04 underline 24 no-underline 05 blink 25 no-blink 07 reverse 27 no-reverse 08 conceal 28 no-conceal 30 black 40 bg-black 31 red 41 bg-red 32 green 42 bg-green 33 yellow 43 bg-yellow 34 blue 44 bg-blue 35 magenta 45 bg-magenta 36 cyan 46 bg-cyan 37 white 47 bg-white 39 default 49 bg-default) \r\n\tlocal k\r\n\tfor k in ${(k)color}\r\n\tdo\r\n\t\tcolor[${color[$k]}]=$k \r\n\tdone\r\n\tfor k in ${color[(I)3?]}\r\n\tdo\r\n\t\tcolor[fg-${color[$k]}]=$k \r\n\tdone\r\n\tcolor[grey]=${color[black]} \r\n\tcolor[fg-grey]=${color[grey]} \r\n\tcolor[bg-grey]=${color[bg-black]} \r\n\tcolour=(${(kv)color}) \r\n\tlocal lc=$'\\e[' rc=m \r\n\ttypeset -Hg reset_color bold_color\r\n\treset_color=\"$lc${color[none]}$rc\" \r\n\tbold_color=\"$lc${color[bold]}$rc\" \r\n\ttypeset -AHg fg fg_bold fg_no_bold\r\n\tfor k in ${(k)color[(I)fg-*]}\r\n\tdo\r\n\t\tfg[${k#fg-}]=\"$lc${color[$k]}$rc\" \r\n\t\tfg_bold[${k#fg-}]=\"$lc${color[bold]};${color[$k]}$rc\" \r\n\t\tfg_no_bold[${k#fg-}]=\"$lc${color[normal]};${color[$k]}$rc\" \r\n\tdone\r\n\ttypeset -AHg bg bg_bold bg_no_bold\r\n\tfor k in ${(k)color[(I)bg-*]}\r\n\tdo\r\n\t\tbg[${k#bg-}]=\"$lc${color[$k]}$rc\" \r\n\t\tbg_bold[${k#bg-}]=\"$lc${color[bold]};${color[$k]}$rc\" \r\n\t\tbg_no_bold[${k#bg-}]=\"$lc${color[normal]};${color[$k]}$rc\" \r\n\tdone\r\n}\r\ncompdump () {\r\n\t# undefined\r\n\tbuiltin autoload -XUz\r\n}\r\ncompinit () {\r\n\temulate -L zsh\r\n\tsetopt extendedglob\r\n\ttypeset _i_dumpfile _i_files _i_line _i_done _i_dir _i_autodump=1 \r\n\ttypeset _i_tag _i_file _i_addfiles _i_fail=ask _i_check=yes _i_name \r\n\twhile [[ $# -gt 0 && $1 = -[dDiuC] ]]\r\n\tdo\r\n\t\tcase \"$1\" in\r\n\t\t\t(-d) _i_autodump=1 \r\n\t\t\t\tshift\r\n\t\t\t\tif [[ $# -gt 0 && \"$1\" != -[dfQC] ]]\r\n\t\t\t\tthen\r\n\t\t\t\t\t_i_dumpfile=\"$1\" \r\n\t\t\t\t\tshift\r\n\t\t\t\tfi ;;\r\n\t\t\t(-D) _i_autodump=0 \r\n\t\t\t\tshift ;;\r\n\t\t\t(-i) _i_fail=ign \r\n\t\t\t\tshift ;;\r\n\t\t\t(-u) _i_fail=use \r\n\t\t\t\tshift ;;\r\n\t\t\t(-C) _i_check= \r\n\t\t\t\tshift ;;\r\n\t\tesac\r\n\tdone\r\n\ttypeset -gHA _comps _services _patcomps _postpatcomps\r\n\ttypeset -gHA _compautos\r\n\ttypeset -gHA _lastcomp\r\n\tif [[ -n $_i_dumpfile ]]\r\n\tthen\r\n\t\ttypeset -g _comp_dumpfile=\"$_i_dumpfile\" \r\n\telse\r\n\t\ttypeset -g _comp_dumpfile=\"${ZDOTDIR:-$HOME}/.zcompdump\" \r\n\tfi\r\n\ttypeset -gHa _comp_options\r\n\t_comp_options=(bareglobqual extendedglob glob multibyte multifuncdef nullglob rcexpandparam unset NO_allexport NO_aliases NO_cshnullglob NO_cshjunkiequotes NO_errexit NO_globassign NO_globsubst NO_histsubstpattern NO_ignorebraces NO_ignoreclosebraces NO_kshglob NO_ksharrays NO_kshtypeset NO_markdirs NO_octalzeroes NO_posixbuiltins NO_shwordsplit NO_shglob NO_warncreateglobal) \r\n\ttypeset -gH _comp_setup='local -A _comp_caller_options;\r\n             _comp_caller_options=(${(kv)options[@]});\r\n             setopt localoptions localtraps localpatterns ${_comp_options[@]};\r\n             local IFS=$'\\'\\ \\\\t\\\\r\\\\n\\\\0\\'';\r\n             builtin enable -p \\| \\~ \\( \\? \\* \\[ \\< \\^ \\# 2>/dev/null;\r\n             exec </dev/null;\r\n             trap - ZERR;\r\n             local -a reply;\r\n             local REPLY' \r\n\ttypeset -ga compprefuncs comppostfuncs\r\n\tcompprefuncs=() \r\n\tcomppostfuncs=() \r\n\t: $funcstack\r\n\tcompdef () {\r\n\t\tlocal opt autol type func delete eval new i ret=0 cmd svc \r\n\t\tlocal -a match mbegin mend\r\n\t\temulate -L zsh\r\n\t\tsetopt extendedglob\r\n\t\tif (( ! $# ))\r\n\t\tthen\r\n\t\t\tprint -u2 \"$0: I need arguments\"\r\n\t\t\treturn 1\r\n\t\tfi\r\n\t\twhile getopts \"anpPkKde\" opt\r\n\t\tdo\r\n\t\t\tcase \"$opt\" in\r\n\t\t\t\t(a) autol=yes  ;;\r\n\t\t\t\t(n) new=yes  ;;\r\n\t\t\t\t([pPkK]) if [[ -n \"$type\" ]]\r\n\t\t\t\t\tthen\r\n\t\t\t\t\t\tprint -u2 \"$0: type already set to $type\"\r\n\t\t\t\t\t\treturn 1\r\n\t\t\t\t\tfi\r\n\t\t\t\t\tif [[ \"$opt\" = p ]]\r\n\t\t\t\t\tthen\r\n\t\t\t\t\t\ttype=pattern \r\n\t\t\t\t\telif [[ \"$opt\" = P ]]\r\n\t\t\t\t\tthen\r\n\t\t\t\t\t\ttype=postpattern \r\n\t\t\t\t\telif [[ \"$opt\" = K ]]\r\n\t\t\t\t\tthen\r\n\t\t\t\t\t\ttype=widgetkey \r\n\t\t\t\t\telse\r\n\t\t\t\t\t\ttype=key \r\n\t\t\t\t\tfi ;;\r\n\t\t\t\t(d) delete=yes  ;;\r\n\t\t\t\t(e) eval=yes  ;;\r\n\t\t\tesac\r\n\t\tdone\r\n\t\tshift OPTIND-1\r\n\t\tif (( ! $# ))\r\n\t\tthen\r\n\t\t\tprint -u2 \"$0: I need arguments\"\r\n\t\t\treturn 1\r\n\t\tfi\r\n\t\tif [[ -z \"$delete\" ]]\r\n\t\tthen\r\n\t\t\tif [[ -z \"$eval\" ]] && [[ \"$1\" = *\\=* ]]\r\n\t\t\tthen\r\n\t\t\t\twhile (( $# ))\r\n\t\t\t\tdo\r\n\t\t\t\t\tif [[ \"$1\" = *\\=* ]]\r\n\t\t\t\t\tthen\r\n\t\t\t\t\t\tcmd=\"${1%%\\=*}\" \r\n\t\t\t\t\t\tsvc=\"${1#*\\=}\" \r\n\t\t\t\t\t\tfunc=\"$_comps[${_services[(r)$svc]:-$svc}]\" \r\n\t\t\t\t\t\t[[ -n ${_services[$svc]} ]] && svc=${_services[$svc]} \r\n\t\t\t\t\t\t[[ -z \"$func\" ]] && func=\"${${_patcomps[(K)$svc][1]}:-${_postpatcomps[(K)$svc][1]}}\" \r\n\t\t\t\t\t\tif [[ -n \"$func\" ]]\r\n\t\t\t\t\t\tthen\r\n\t\t\t\t\t\t\t_comps[$cmd]=\"$func\" \r\n\t\t\t\t\t\t\t_services[$cmd]=\"$svc\" \r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tprint -u2 \"$0: unknown command or service: $svc\"\r\n\t\t\t\t\t\t\tret=1 \r\n\t\t\t\t\t\tfi\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tprint -u2 \"$0: invalid argument: $1\"\r\n\t\t\t\t\t\tret=1 \r\n\t\t\t\t\tfi\r\n\t\t\t\t\tshift\r\n\t\t\t\tdone\r\n\t\t\t\treturn ret\r\n\t\t\tfi\r\n\t\t\tfunc=\"$1\" \r\n\t\t\t[[ -n \"$autol\" ]] && autoload -Uz \"$func\"\r\n\t\t\tshift\r\n\t\t\tcase \"$type\" in\r\n\t\t\t\t(widgetkey) while [[ -n $1 ]]\r\n\t\t\t\t\tdo\r\n\t\t\t\t\t\tif [[ $# -lt 3 ]]\r\n\t\t\t\t\t\tthen\r\n\t\t\t\t\t\t\tprint -u2 \"$0: compdef -K requires <widget> <comp-widget> <key>\"\r\n\t\t\t\t\t\t\treturn 1\r\n\t\t\t\t\t\tfi\r\n\t\t\t\t\t\t[[ $1 = _* ]] || 1=\"_$1\" \r\n\t\t\t\t\t\t[[ $2 = .* ]] || 2=\".$2\" \r\n\t\t\t\t\t\t[[ $2 = .menu-select ]] && zmodload -i zsh/complist\r\n\t\t\t\t\t\tzle -C \"$1\" \"$2\" \"$func\"\r\n\t\t\t\t\t\tif [[ -n $new ]]\r\n\t\t\t\t\t\tthen\r\n\t\t\t\t\t\t\tbindkey \"$3\" | IFS=$' \\t' read -A opt\r\n\t\t\t\t\t\t\t[[ $opt[-1] = undefined-key ]] && bindkey \"$3\" \"$1\"\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tbindkey \"$3\" \"$1\"\r\n\t\t\t\t\t\tfi\r\n\t\t\t\t\t\tshift 3\r\n\t\t\t\t\tdone ;;\r\n\t\t\t\t(key) if [[ $# -lt 2 ]]\r\n\t\t\t\t\tthen\r\n\t\t\t\t\t\tprint -u2 \"$0: missing keys\"\r\n\t\t\t\t\t\treturn 1\r\n\t\t\t\t\tfi\r\n\t\t\t\t\tif [[ $1 = .* ]]\r\n\t\t\t\t\tthen\r\n\t\t\t\t\t\t[[ $1 = .menu-select ]] && zmodload -i zsh/complist\r\n\t\t\t\t\t\tzle -C \"$func\" \"$1\" \"$func\"\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\t[[ $1 = menu-select ]] && zmodload -i zsh/complist\r\n\t\t\t\t\t\tzle -C \"$func\" \".$1\" \"$func\"\r\n\t\t\t\t\tfi\r\n\t\t\t\t\tshift\r\n\t\t\t\t\tfor i\r\n\t\t\t\t\tdo\r\n\t\t\t\t\t\tif [[ -n $new ]]\r\n\t\t\t\t\t\tthen\r\n\t\t\t\t\t\t\tbindkey \"$i\" | IFS=$' \\t' read -A opt\r\n\t\t\t\t\t\t\t[[ $opt[-1] = undefined-key ]] || continue\r\n\t\t\t\t\t\tfi\r\n\t\t\t\t\t\tbindkey \"$i\" \"$func\"\r\n\t\t\t\t\tdone ;;\r\n\t\t\t\t(*) while (( $# ))\r\n\t\t\t\t\tdo\r\n\t\t\t\t\t\tif [[ \"$1\" = -N ]]\r\n\t\t\t\t\t\tthen\r\n\t\t\t\t\t\t\ttype=normal \r\n\t\t\t\t\t\telif [[ \"$1\" = -p ]]\r\n\t\t\t\t\t\tthen\r\n\t\t\t\t\t\t\ttype=pattern \r\n\t\t\t\t\t\telif [[ \"$1\" = -P ]]\r\n\t\t\t\t\t\tthen\r\n\t\t\t\t\t\t\ttype=postpattern \r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tcase \"$type\" in\r\n\t\t\t\t\t\t\t\t(pattern) if [[ $1 = (#b)(*)=(*) ]]\r\n\t\t\t\t\t\t\t\t\tthen\r\n\t\t\t\t\t\t\t\t\t\t_patcomps[$match[1]]=\"=$match[2]=$func\" \r\n\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t\t_patcomps[$1]=\"$func\" \r\n\t\t\t\t\t\t\t\t\tfi ;;\r\n\t\t\t\t\t\t\t\t(postpattern) if [[ $1 = (#b)(*)=(*) ]]\r\n\t\t\t\t\t\t\t\t\tthen\r\n\t\t\t\t\t\t\t\t\t\t_postpatcomps[$match[1]]=\"=$match[2]=$func\" \r\n\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t\t_postpatcomps[$1]=\"$func\" \r\n\t\t\t\t\t\t\t\t\tfi ;;\r\n\t\t\t\t\t\t\t\t(*) if [[ \"$1\" = *\\=* ]]\r\n\t\t\t\t\t\t\t\t\tthen\r\n\t\t\t\t\t\t\t\t\t\tcmd=\"${1%%\\=*}\" \r\n\t\t\t\t\t\t\t\t\t\tsvc=yes \r\n\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t\tcmd=\"$1\" \r\n\t\t\t\t\t\t\t\t\t\tsvc= \r\n\t\t\t\t\t\t\t\t\tfi\r\n\t\t\t\t\t\t\t\t\tif [[ -z \"$new\" || -z \"${_comps[$1]}\" ]]\r\n\t\t\t\t\t\t\t\t\tthen\r\n\t\t\t\t\t\t\t\t\t\t_comps[$cmd]=\"$func\" \r\n\t\t\t\t\t\t\t\t\t\t[[ -n \"$svc\" ]] && _services[$cmd]=\"${1#*\\=}\" \r\n\t\t\t\t\t\t\t\t\tfi ;;\r\n\t\t\t\t\t\t\tesac\r\n\t\t\t\t\t\tfi\r\n\t\t\t\t\t\tshift\r\n\t\t\t\t\tdone ;;\r\n\t\t\tesac\r\n\t\telse\r\n\t\t\tcase \"$type\" in\r\n\t\t\t\t(pattern) unset \"_patcomps[$^@]\" ;;\r\n\t\t\t\t(postpattern) unset \"_postpatcomps[$^@]\" ;;\r\n\t\t\t\t(key) print -u2 \"$0: cannot restore key bindings\"\r\n\t\t\t\t\treturn 1 ;;\r\n\t\t\t\t(*) unset \"_comps[$^@]\" ;;\r\n\t\t\tesac\r\n\t\tfi\r\n\t}\r\n\ttypeset _i_wdirs _i_wfiles\r\n\t_i_wdirs=() \r\n\t_i_wfiles=() \r\n\tautoload -Uz compaudit\r\n\tif [[ -n \"$_i_check\" ]]\r\n\tthen\r\n\t\ttypeset _i_q\r\n\t\tif ! eval compaudit\r\n\t\tthen\r\n\t\t\tif [[ -n \"$_i_q\" ]]\r\n\t\t\tthen\r\n\t\t\t\tif [[ \"$_i_fail\" = ask ]]\r\n\t\t\t\tthen\r\n\t\t\t\t\tif ! read -q \"?zsh compinit: insecure $_i_q, run compaudit for list.\r\nIgnore insecure $_i_q and continue [y] or abort compinit [n]? \"\r\n\t\t\t\t\tthen\r\n\t\t\t\t\t\tprint -u2 \"$0: initialization aborted\"\r\n\t\t\t\t\t\tunfunction compinit compdef\r\n\t\t\t\t\t\tunset _comp_dumpfile _comp_secure compprefuncs comppostfuncs _comps _patcomps _postpatcomps _compautos _lastcomp\r\n\t\t\t\t\t\treturn 1\r\n\t\t\t\t\tfi\r\n\t\t\t\t\t_i_wfiles=() \r\n\t\t\t\t\t_i_wdirs=() \r\n\t\t\t\telse\r\n\t\t\t\t\t(( $#_i_wfiles )) && _i_files=(\"${(@)_i_files:#(${(j:|:)_i_wfiles%.zwc})}\") \r\n\t\t\t\t\t(( $#_i_wdirs )) && _i_files=(\"${(@)_i_files:#(${(j:|:)_i_wdirs%.zwc})/*}\") \r\n\t\t\t\tfi\r\n\t\t\tfi\r\n\t\t\ttypeset -g _comp_secure=yes \r\n\t\tfi\r\n\tfi\r\n\tautoload -Uz compdump compinstall\r\n\t_i_done='' \r\n\tif [[ -f \"$_comp_dumpfile\" ]]\r\n\tthen\r\n\t\tif [[ -n \"$_i_check\" ]]\r\n\t\tthen\r\n\t\t\tIFS=$' \\t' read -rA _i_line < \"$_comp_dumpfile\"\r\n\t\t\tif [[ _i_autodump -eq 1 && $_i_line[2] -eq $#_i_files && $ZSH_VERSION = $_i_line[4] ]]\r\n\t\t\tthen\r\n\t\t\t\tbuiltin . \"$_comp_dumpfile\"\r\n\t\t\t\t_i_done=yes \r\n\t\t\tfi\r\n\t\telse\r\n\t\t\tbuiltin . \"$_comp_dumpfile\"\r\n\t\t\t_i_done=yes \r\n\t\tfi\r\n\tfi\r\n\tif [[ -z \"$_i_done\" ]]\r\n\tthen\r\n\t\ttypeset -A _i_test\r\n\t\tfor _i_dir in $fpath\r\n\t\tdo\r\n\t\t\t[[ $_i_dir = . ]] && continue\r\n\t\t\t(( $_i_wdirs[(I)$_i_dir] )) && continue\r\n\t\t\tfor _i_file in $_i_dir/^([^_]*|*~|*.zwc)(N)\r\n\t\t\tdo\r\n\t\t\t\t_i_name=\"${_i_file:t}\" \r\n\t\t\t\t(( $+_i_test[$_i_name] + $_i_wfiles[(I)$_i_file] )) && continue\r\n\t\t\t\t_i_test[$_i_name]=yes \r\n\t\t\t\tIFS=$' \\t' read -rA _i_line < $_i_file\r\n\t\t\t\t_i_tag=$_i_line[1] \r\n\t\t\t\tshift _i_line\r\n\t\t\t\tcase $_i_tag in\r\n\t\t\t\t\t(\\#compdef) if [[ $_i_line[1] = -[pPkK](n|) ]]\r\n\t\t\t\t\t\tthen\r\n\t\t\t\t\t\t\tcompdef ${_i_line[1]}na \"${_i_name}\" \"${(@)_i_line[2,-1]}\"\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tcompdef -na \"${_i_name}\" \"${_i_line[@]}\"\r\n\t\t\t\t\t\tfi ;;\r\n\t\t\t\t\t(\\#autoload) autoload -Uz \"$_i_line[@]\" ${_i_name}\r\n\t\t\t\t\t\t[[ \"$_i_line\" != \\ # ]] && _compautos[${_i_name}]=\"$_i_line\"  ;;\r\n\t\t\t\tesac\r\n\t\t\tdone\r\n\t\tdone\r\n\t\tif [[ $_i_autodump = 1 ]]\r\n\t\tthen\r\n\t\t\tcompdump\r\n\t\tfi\r\n\tfi\r\n\tfor _i_line in complete-word delete-char-or-list expand-or-complete expand-or-complete-prefix list-choices menu-complete menu-expand-or-complete reverse-menu-complete\r\n\tdo\r\n\t\tzle -C $_i_line .$_i_line _main_complete\r\n\tdone\r\n\tzle -la menu-select && zle -C menu-select .menu-select _main_complete\r\n\tbindkey '^i' | IFS=$' \\t' read -A _i_line\r\n\tif [[ ${_i_line[2]} = expand-or-complete ]] && zstyle -a ':completion:' completer _i_line && (( ${_i_line[(i)_expand]} <= ${#_i_line} ))\r\n\tthen\r\n\t\tbindkey '^i' complete-word\r\n\tfi\r\n\tunfunction compinit compaudit\r\n\tautoload -Uz compinit compaudit\r\n\treturn 0\r\n}\r\ncompinstall () {\r\n\t# undefined\r\n\tbuiltin autoload -XUz\r\n}\r\ndown-line-or-beginning-search () {\r\n\t# undefined\r\n\tbuiltin autoload -XU\r\n}\r\nedit-command-line () {\r\n\t# undefined\r\n\tbuiltin autoload -XU\r\n}\r\nis-at-least () {\r\n\temulate -L zsh\r\n\tlocal IFS=\".-\" min_cnt=0 ver_cnt=0 part min_ver version order \r\n\tmin_ver=(${=1}) \r\n\tversion=(${=2:-$ZSH_VERSION} 0) \r\n\twhile (( $min_cnt <= ${#min_ver} ))\r\n\tdo\r\n\t\twhile [[ \"$part\" != <-> ]]\r\n\t\tdo\r\n\t\t\t(( ++ver_cnt > ${#version} )) && return 0\r\n\t\t\tif [[ ${version[ver_cnt]} = *[0-9][^0-9]* ]]\r\n\t\t\tthen\r\n\t\t\t\torder=(${version[ver_cnt]} ${min_ver[ver_cnt]}) \r\n\t\t\t\tif [[ ${version[ver_cnt]} = <->* ]]\r\n\t\t\t\tthen\r\n\t\t\t\t\t[[ $order != ${${(On)order}} ]] && return 1\r\n\t\t\t\telse\r\n\t\t\t\t\t[[ $order != ${${(O)order}} ]] && return 1\r\n\t\t\t\tfi\r\n\t\t\t\t[[ $order[1] != $order[2] ]] && return 0\r\n\t\t\tfi\r\n\t\t\tpart=${version[ver_cnt]##*[^0-9]} \r\n\t\tdone\r\n\t\twhile true\r\n\t\tdo\r\n\t\t\t(( ++min_cnt > ${#min_ver} )) && return 0\r\n\t\t\t[[ ${min_ver[min_cnt]} = <-> ]] && break\r\n\t\tdone\r\n\t\t(( part > min_ver[min_cnt] )) && return 0\r\n\t\t(( part < min_ver[min_cnt] )) && return 1\r\n\t\tpart='' \r\n\tdone\r\n}\r\nup-line-or-beginning-search () {\r\n\t# undefined\r\n\tbuiltin autoload -XU\r\n}\r\nurl-quote-magic () {\r\n\t# undefined\r\n\tbuiltin autoload -XUz\r\n}\r\n```\r\n\r\nThis is what I see when Terminal launches\r\n\r\n`cd` `mv` auto-compilation is broken, doesn't list files in current directory\r\nTried to upgrade, no luck\r\n\r\n.zshrc:\r\n```\r\n# If you come from bash you might have to change your $PATH.\r\n# export PATH=$HOME/bin:/usr/local/bin:$PATH\r\n\r\n# Path to your oh-my-zsh installation.\r\nexport ZSH=/Users/GRiMe2D/.oh-my-zsh\r\n\r\n# Set name of the theme to load. Optionally, if you set this to \"random\"\r\n# it'll load a random theme each time that oh-my-zsh is loaded.\r\n# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes\r\nZSH_THEME=\"agnoster\"\r\n\r\n# Uncomment the following line to use case-sensitive completion.\r\n# CASE_SENSITIVE=\"true\"\r\n\r\n# Uncomment the following line to use hyphen-insensitive completion. Case\r\n# sensitive completion must be off. _ and - will be interchangeable.\r\n# HYPHEN_INSENSITIVE=\"true\"\r\n\r\n# Uncomment the following line to disable bi-weekly auto-update checks.\r\n# DISABLE_AUTO_UPDATE=\"true\"\r\n\r\n# Uncomment the following line to change how often to auto-update (in days).\r\n# export UPDATE_ZSH_DAYS=13\r\n\r\n# Uncomment the following line to disable colors in ls.\r\n# DISABLE_LS_COLORS=\"true\"\r\n\r\n# Uncomment the following line to disable auto-setting terminal title.\r\n# DISABLE_AUTO_TITLE=\"true\"\r\n\r\n# Uncomment the following line to enable command auto-correction.\r\n# ENABLE_CORRECTION=\"true\"\r\n\r\n# Uncomment the following line to display red dots whilst waiting for completion.\r\n# COMPLETION_WAITING_DOTS=\"true\"\r\n\r\n# Uncomment the following line if you want to disable marking untracked files\r\n# under VCS as dirty. This makes repository status check for large repositories\r\n# much, much faster.\r\n# DISABLE_UNTRACKED_FILES_DIRTY=\"true\"\r\n\r\n# Uncomment the following line if you want to change the command execution time\r\n# stamp shown in the history command output.\r\n# The optional three formats: \"mm/dd/yyyy\"|\"dd.mm.yyyy\"|\"yyyy-mm-dd\"\r\n# HIST_STAMPS=\"mm/dd/yyyy\"\r\n\r\n# Would you like to use another custom folder than $ZSH/custom?\r\n# ZSH_CUSTOM=/path/to/new-custom-folder\r\n\r\n# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)\r\n# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/\r\n# Example format: plugins=(rails git textmate ruby lighthouse)\r\n# Add wisely, as too many plugins slow down shell startup.\r\nplugins=(git)\r\n\r\nsource $ZSH/oh-my-zsh.sh\r\n\r\n# User configuration\r\n\r\n# export MANPATH=\"/usr/local/man:$MANPATH\"\r\n\r\n# You may need to manually set your language environment\r\n# export LANG=en_US.UTF-8\r\n\r\n# Preferred editor for local and remote sessions\r\n# if [[ -n $SSH_CONNECTION ]]; then\r\n#   export EDITOR='vim'\r\n# else\r\n#   export EDITOR='mvim'\r\n# fi\r\n\r\n# Compilation flags\r\n# export ARCHFLAGS=\"-arch x86_64\"\r\n\r\n# ssh\r\n# export SSH_KEY_PATH=\"~/.ssh/rsa_id\"\r\n\r\n# Set personal aliases, overriding those provided by oh-my-zsh libs,\r\n# plugins, and themes. Aliases can be placed here, though oh-my-zsh\r\n# users are encouraged to define aliases within the ZSH_CUSTOM folder.\r\n# For a full list of active aliases, run `alias`.\r\n#\r\n# Example aliases\r\n# alias zshconfig=\"mate ~/.zshrc\"\r\n# alias ohmyzsh=\"mate ~/.oh-my-zsh\"\r\n```\r\n\r\nSystem:\r\nOSX El Capitan 10.11.6 (15G31)",
        "labels": "Support",
        "id": 44371
    },
    {
        "title": "showing weird characters",
        "body": "I followed the tutorial and installed oh-my-zsh with agnoster theme but i guess it didn't get installed properly. How can i fix it \r\n\r\n[console screenshot](https://www.dropbox.com/s/8lexeekved9gq4x/Screenshot%202016-12-12%2023.13.13.jpg?dl=0)",
        "labels": "Support",
        "id": 44372
    },
    {
        "title": "setting terminal tab title",
        "body": "Hi, \r\nOn Ubuntu 16.04(Xenial Xerius): I try to set the terminal tab title following [this post](http://blog.pengyifan.com/how-to-set-terminal-title-dynamically-to-the-current-working-directory/):\r\n```\r\nprint -Pn \"\\e]1;test_title\\a\"\r\n```\r\nwhich has actually no effect. I wonder whether this problem is caused by interference with oh-my-zsh. I notice that `lib/termsupport.zsh` does define a title() function which has no effect either: \r\n```\r\ntitle short_tab\r\n```\r\nAny help/suggestion on this is appreciated. ",
        "labels": "Support",
        "id": 44373
    },
    {
        "title": "Segmentation Fault on LS -LA alias (l)",
        "body": "Try to write l\\ and press enter two time\r\n\r\nCya zsh :D",
        "labels": "Support",
        "id": 44374
    },
    {
        "title": "how to enable username and hostname in the default theme?",
        "body": "I do want to stick with the **default** theme but I want to just be able to see username and hostname in order to avoid running commands on the wrong host. \r\n\r\nHow can I do this?",
        "labels": "Support",
        "id": 44375
    },
    {
        "title": "strange Symbol when in a git Repo",
        "body": "Using the Agnoster Theme and the Git Plugin, I do experience some strange display when changing into an git repository. On my server everything seems to work ok but ion my personal computer I get the following \r\n\r\n\r\n![111](https://cloud.githubusercontent.com/assets/22954412/20786190/d3c0a996-b7a4-11e6-909f-8e8b2f0b9b89.png)\r\n\r\ndoes anyone why?",
        "labels": "Support",
        "id": 44376
    },
    {
        "title": "emacs plugin not working on Mac OS X 10.11.6",
        "body": "when `emacs` terminal will have a splash and return to `$` prompt.",
        "labels": "Support",
        "id": 44377
    },
    {
        "title": "[vi-mode]: commands do not execute",
        "body": "vi-mode on the whole is fantastic, but commands in normal mode do not work. For example\r\n\r\n```\r\n$ got add -A && got commit -m \"test\"     (ESC + :)\r\nexecute: s/got/git\r\n```\r\nBut when I press <kbd>Enter</kbd> or <kbd>esc</kbd> nothing happens. ZSH just freezes.\r\n\r\nMy system information:\r\n<details>\r\n```\r\nk2                          \r\n    description: Desktop Computer\r\n    product: MS-7817 (To be filled by O.E.M.)\r\n    vendor: MSI\r\n    version: 1.0\r\n    serial: To be filled by O.E.M.\r\n    width: 4294967295 bits\r\n    capabilities: smbios-2.8 dmi-2.8 smp vsyscall32\r\n    configuration: administrator_password=disabled boot=normal chassis=desktop family=To be filled by O.E.M. frontpanel_password=disabled keyboard_password=disabled power-on_password=disabled sku=To be filled by O.E.M. uuid=00000000-0000-0000-0000-D8CB8A56A0EB\r\n  *-core\r\n       description: Motherboard\r\n       product: H81M-E33 (MS-7817)\r\n       vendor: MSI\r\n       physical id: 0\r\n       version: 1.0\r\n       serial: To be filled by O.E.M.\r\n       slot: To be filled by O.E.M.\r\n     *-firmware\r\n          description: BIOS\r\n          vendor: American Megatrends Inc.\r\n          physical id: 0\r\n          version: V6.6\r\n          date: 07/22/2014\r\n          size: 64KiB\r\n          capacity: 8128KiB\r\n          capabilities: pci upgrade shadowing cdboot bootselect socketedrom edd int13floppy1200 int13floppy720 int13floppy2880 int5printscreen int9keyboard int14serial int17printer acpi usb biosbootspecification uefi\r\n     *-cpu\r\n          description: CPU\r\n          product: Intel(R) Core(TM) i5-4460  CPU @ 3.20GHz\r\n          vendor: Intel Corp.\r\n          physical id: 3d\r\n          bus info: cpu@0\r\n          version: Intel(R) Core(TM) i5-4460 CPU @ 3.20GHz\r\n          slot: SOCKET 0\r\n          size: 3398MHz\r\n          capacity: 3800MHz\r\n          width: 64 bits\r\n          clock: 100MHz\r\n          capabilities: x86-64 fpu fpu_exception wp vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm ida arat pln pts dtherm tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid xsaveopt cpufreq\r\n          configuration: cores=4 enabledcores=4 threads=4\r\n        *-cache:0\r\n             description: L2 cache\r\n             physical id: 3e\r\n             slot: CPU Internal L2\r\n             size: 1MiB\r\n             capacity: 1MiB\r\n             capabilities: internal write-back unified\r\n             configuration: level=2\r\n        *-cache:1\r\n             description: L1 cache\r\n             physical id: 3f\r\n             slot: CPU Internal L1\r\n             size: 256KiB\r\n             capacity: 256KiB\r\n             capabilities: internal write-back\r\n             configuration: level=1\r\n        *-cache:2\r\n             description: L3 cache\r\n             physical id: 40\r\n             slot: CPU Internal L3\r\n             size: 6MiB\r\n             capacity: 6MiB\r\n             capabilities: internal write-back unified\r\n             configuration: level=3\r\n     *-memory\r\n          description: System Memory\r\n          physical id: 41\r\n          slot: System board or motherboard\r\n          size: 4GiB\r\n        *-bank:0\r\n             description: DIMM [empty]\r\n             product: [Empty]\r\n             vendor: [Empty]\r\n             physical id: 0\r\n             serial: [Empty]\r\n             slot: ChannelA-DIMM0\r\n        *-bank:1\r\n             description: DIMM [empty]\r\n             product: [Empty]\r\n             vendor: [Empty]\r\n             physical id: 1\r\n             serial: [Empty]\r\n             slot: ChannelA-DIMM1\r\n        *-bank:2\r\n             description: DIMM DDR3 Synchronous 1600 MHz (0.6 ns)\r\n             product: 4GBH2X02E99927-16\r\n             vendor: AMD\r\n             physical id: 2\r\n             serial: 00000000\r\n             slot: ChannelB-DIMM0\r\n             size: 4GiB\r\n             width: 64 bits\r\n             clock: 1600MHz (0.6ns)\r\n        *-bank:3\r\n             description: DIMM [empty]\r\n             product: [Empty]\r\n             vendor: [Empty]\r\n             physical id: 3\r\n             serial: [Empty]\r\n             slot: ChannelB-DIMM1\r\n     *-pci\r\n          description: Host bridge\r\n          product: 4th Gen Core Processor DRAM Controller\r\n          vendor: Intel Corporation\r\n          physical id: 100\r\n          bus info: pci@0000:00:00.0\r\n          version: 06\r\n          width: 32 bits\r\n          clock: 33MHz\r\n          configuration: driver=hsw_uncore\r\n          resources: irq:0\r\n        *-pci:0\r\n             description: PCI bridge\r\n             product: Xeon E3-1200 v3/4th Gen Core Processor PCI Express x16 Controller\r\n             vendor: Intel Corporation\r\n             physical id: 1\r\n             bus info: pci@0000:00:01.0\r\n             version: 06\r\n             width: 32 bits\r\n             clock: 33MHz\r\n             capabilities: pci pm msi pciexpress normal_decode bus_master cap_list\r\n             configuration: driver=pcieport\r\n             resources: irq:25 ioport:e000(size=4096) memory:f7e00000-f7efffff ioport:e0000000(size=276824064)\r\n           *-display\r\n                description: VGA compatible controller\r\n                product: Hawaii PRO [Radeon R9 290]\r\n                vendor: Advanced Micro Devices, Inc. [AMD/ATI]\r\n                physical id: 0\r\n                bus info: pci@0000:01:00.0\r\n                version: 00\r\n                width: 64 bits\r\n                clock: 33MHz\r\n                capabilities: pm pciexpress msi vga_controller bus_master cap_list rom\r\n                configuration: driver=radeon latency=0\r\n                resources: irq:32 memory:e0000000-efffffff memory:f0000000-f07fffff ioport:e000(size=256) memory:f7e00000-f7e3ffff memory:f7e40000-f7e5ffff\r\n           *-multimedia\r\n                description: Audio device\r\n                product: Hawaii HDMI Audio\r\n                vendor: Advanced Micro Devices, Inc. [AMD/ATI]\r\n                physical id: 0.1\r\n                bus info: pci@0000:01:00.1\r\n                version: 00\r\n                width: 64 bits\r\n                clock: 33MHz\r\n                capabilities: pm pciexpress msi bus_master cap_list\r\n                configuration: driver=snd_hda_intel latency=0\r\n                resources: irq:31 memory:f7e60000-f7e63fff\r\n        *-usb:0\r\n             description: USB controller\r\n             product: 8 Series/C220 Series Chipset Family USB xHCI\r\n             vendor: Intel Corporation\r\n             physical id: 14\r\n             bus info: pci@0000:00:14.0\r\n             version: 05\r\n             width: 64 bits\r\n             clock: 33MHz\r\n             capabilities: pm msi xhci bus_master cap_list\r\n             configuration: driver=xhci_hcd latency=0\r\n             resources: irq:27 memory:f7f00000-f7f0ffff\r\n           *-usbhost:0\r\n                product: xHCI Host Controller\r\n                vendor: Linux 4.4.13-1-MANJARO xhci-hcd\r\n                physical id: 0\r\n                bus info: usb@4\r\n                logical name: usb4\r\n                version: 4.04\r\n                capabilities: usb-3.00\r\n                configuration: driver=hub slots=2 speed=5000Mbit/s\r\n           *-usbhost:1\r\n                product: xHCI Host Controller\r\n                vendor: Linux 4.4.13-1-MANJARO xhci-hcd\r\n                physical id: 1\r\n                bus info: usb@3\r\n                logical name: usb3\r\n                version: 4.04\r\n                capabilities: usb-2.00\r\n                configuration: driver=hub slots=10 speed=480Mbit/s\r\n              *-usb:0\r\n                   description: Keyboard\r\n                   product: USB Keyboard\r\n                   vendor: Holtek Semiconductor, Inc.\r\n                   physical id: 1\r\n                   bus info: usb@3:1\r\n                   version: 2.30\r\n                   capabilities: usb-1.10\r\n                   configuration: driver=usbhid maxpower=50mA speed=2Mbit/s\r\n              *-usb:1\r\n                   description: Mouse\r\n                   product: USB OPTICAL MOUSE\r\n                   vendor: Pixart Imaging, Inc.\r\n                   physical id: 3\r\n                   bus info: usb@3:3\r\n                   version: 1.00\r\n                   capabilities: usb-1.10\r\n                   configuration: driver=usbhid maxpower=100mA speed=2Mbit/s\r\n        *-communication\r\n             description: Communication controller\r\n             product: 8 Series/C220 Series Chipset Family MEI Controller #1\r\n             vendor: Intel Corporation\r\n             physical id: 16\r\n             bus info: pci@0000:00:16.0\r\n             version: 04\r\n             width: 64 bits\r\n             clock: 33MHz\r\n             capabilities: pm msi bus_master cap_list\r\n             configuration: driver=mei_me latency=0\r\n             resources: irq:28 memory:f7f1a000-f7f1a00f\r\n        *-usb:1\r\n             description: USB controller\r\n             product: 8 Series/C220 Series Chipset Family USB EHCI #2\r\n             vendor: Intel Corporation\r\n             physical id: 1a\r\n             bus info: pci@0000:00:1a.0\r\n             version: 05\r\n             width: 32 bits\r\n             clock: 33MHz\r\n             capabilities: pm debug ehci bus_master cap_list\r\n             configuration: driver=ehci-pci latency=0\r\n             resources: irq:16 memory:f7f18000-f7f183ff\r\n           *-usbhost\r\n                product: EHCI Host Controller\r\n                vendor: Linux 4.4.13-1-MANJARO ehci_hcd\r\n                physical id: 1\r\n                bus info: usb@1\r\n                logical name: usb1\r\n                version: 4.04\r\n                capabilities: usb-2.00\r\n                configuration: driver=hub slots=2 speed=480Mbit/s\r\n              *-usb\r\n                   description: USB hub\r\n                   vendor: Intel Corp.\r\n                   physical id: 1\r\n                   bus info: usb@1:1\r\n                   version: 0.05\r\n                   capabilities: usb-2.00\r\n                   configuration: driver=hub slots=4 speed=480Mbit/s\r\n        *-multimedia\r\n             description: Audio device\r\n             product: 8 Series/C220 Series Chipset High Definition Audio Controller\r\n             vendor: Intel Corporation\r\n             physical id: 1b\r\n             bus info: pci@0000:00:1b.0\r\n             version: 05\r\n             width: 64 bits\r\n             clock: 33MHz\r\n             capabilities: pm msi pciexpress bus_master cap_list\r\n             configuration: driver=snd_hda_intel latency=0\r\n             resources: irq:30 memory:f7f10000-f7f13fff\r\n        *-pci:1\r\n             description: PCI bridge\r\n             product: 8 Series/C220 Series Chipset Family PCI Express Root Port #1\r\n             vendor: Intel Corporation\r\n             physical id: 1c\r\n             bus info: pci@0000:00:1c.0\r\n             version: d5\r\n             width: 32 bits\r\n             clock: 33MHz\r\n             capabilities: pci pciexpress msi pm normal_decode bus_master cap_list\r\n             configuration: driver=pcieport\r\n             resources: irq:16 ioport:2000(size=4096) memory:f0a00000-f0bfffff ioport:f0c00000(size=2097152)\r\n        *-pci:2\r\n             description: PCI bridge\r\n             product: 8 Series/C220 Series Chipset Family PCI Express Root Port #3\r\n             vendor: Intel Corporation\r\n             physical id: 1c.2\r\n             bus info: pci@0000:00:1c.2\r\n             version: d5\r\n             width: 32 bits\r\n             clock: 33MHz\r\n             capabilities: pci pciexpress msi pm normal_decode bus_master cap_list\r\n             configuration: driver=pcieport\r\n             resources: irq:18 ioport:d000(size=4096) memory:f7d00000-f7dfffff ioport:f0900000(size=1048576)\r\n           *-network\r\n                description: Ethernet interface\r\n                product: RTL8111/8168/8411 PCI Express Gigabit Ethernet Controller\r\n                vendor: Realtek Semiconductor Co., Ltd.\r\n                physical id: 0\r\n                bus info: pci@0000:03:00.0\r\n                logical name: enp3s0\r\n                version: 0c\r\n                serial: d8:cb:8a:56:a0:eb\r\n                size: 1Gbit/s\r\n                capacity: 1Gbit/s\r\n                width: 64 bits\r\n                clock: 33MHz\r\n                capabilities: pm msi pciexpress msix vpd bus_master cap_list ethernet physical tp 10bt 10bt-fd 100bt 100bt-fd 1000bt-fd autonegotiation\r\n                configuration: autonegotiation=on broadcast=yes driver=r8168 driverversion=8.040.00-NAPI duplex=full ip=192.168.1.23 latency=0 link=yes multicast=yes port=twisted pair speed=1Gbit/s\r\n                resources: irq:29 ioport:d000(size=256) memory:f7d00000-f7d00fff memory:f0900000-f0903fff\r\n        *-usb:2\r\n             description: USB controller\r\n             product: 8 Series/C220 Series Chipset Family USB EHCI #1\r\n             vendor: Intel Corporation\r\n             physical id: 1d\r\n             bus info: pci@0000:00:1d.0\r\n             version: 05\r\n             width: 32 bits\r\n             clock: 33MHz\r\n             capabilities: pm debug ehci bus_master cap_list\r\n             configuration: driver=ehci-pci latency=0\r\n             resources: irq:23 memory:f7f17000-f7f173ff\r\n           *-usbhost\r\n                product: EHCI Host Controller\r\n                vendor: Linux 4.4.13-1-MANJARO ehci_hcd\r\n                physical id: 1\r\n                bus info: usb@2\r\n                logical name: usb2\r\n                version: 4.04\r\n                capabilities: usb-2.00\r\n                configuration: driver=hub slots=2 speed=480Mbit/s\r\n              *-usb\r\n                   description: USB hub\r\n                   vendor: Intel Corp.\r\n                   physical id: 1\r\n                   bus info: usb@2:1\r\n                   version: 0.05\r\n                   capabilities: usb-2.00\r\n                   configuration: driver=hub slots=6 speed=480Mbit/s\r\n        *-isa\r\n             description: ISA bridge\r\n             product: C220 Series Chipset Family H81 Express LPC Controller\r\n             vendor: Intel Corporation\r\n             physical id: 1f\r\n             bus info: pci@0000:00:1f.0\r\n             version: 05\r\n             width: 32 bits\r\n             clock: 33MHz\r\n             capabilities: isa bus_master cap_list\r\n             configuration: driver=lpc_ich latency=0\r\n             resources: irq:0\r\n        *-storage\r\n             description: SATA controller\r\n             product: 8 Series/C220 Series Chipset Family 6-port SATA Controller 1 [AHCI mode]\r\n             vendor: Intel Corporation\r\n             physical id: 1f.2\r\n             bus info: pci@0000:00:1f.2\r\n             version: 05\r\n             width: 32 bits\r\n             clock: 66MHz\r\n             capabilities: storage msi pm ahci_1.0 bus_master cap_list\r\n             configuration: driver=ahci latency=0\r\n             resources: irq:26 ioport:f070(size=8) ioport:f060(size=4) ioport:f050(size=8) ioport:f040(size=4) ioport:f020(size=32) memory:f7f16000-f7f167ff\r\n        *-serial UNCLAIMED\r\n             description: SMBus\r\n             product: 8 Series/C220 Series Chipset Family SMBus Controller\r\n             vendor: Intel Corporation\r\n             physical id: 1f.3\r\n             bus info: pci@0000:00:1f.3\r\n             version: 05\r\n             width: 64 bits\r\n             clock: 33MHz\r\n             configuration: latency=0\r\n             resources: memory:f7f15000-f7f150ff ioport:f000(size=32)\r\n  *-power UNCLAIMED\r\n       description: To Be Filled By O.E.M.\r\n       product: To Be Filled By O.E.M.\r\n       vendor: To Be Filled By O.E.M.\r\n       physical id: 1\r\n       version: To Be Filled By O.E.M.\r\n       serial: To Be Filled By O.E.M.\r\n       capacity: 32768mWh\r\n```\r\n</details>",
        "labels": "Support",
        "id": 44378
    },
    {
        "title": "DISABLE_UPDATE_PROMPT=true, still prompting",
        "body": "I've set this value in my ~/.zshrc, but I still get prompted to update.   What behavior should I be seeing with this var set to true?",
        "labels": "Support",
        "id": 44379
    },
    {
        "title": "ps1 problem",
        "body": "why after i input a linux command, then next line will show the command.\r\n\r\nAnd why always shows ~%\r\n\r\n\r\n",
        "labels": "Support",
        "id": 44380
    },
    {
        "title": "Why add the line alias, failure",
        "body": "Why add the following line alias:\r\n`Alias -g rm = 'rm -i'`\r\nIt will affect the docker, because when running docker rm, on-my-zsh will resolve into docker rm -i, resulting in the implementation of failure.\r\n\r\n```\r\n$ docker rm 5afb994baf78\r\nunknown shorthand flag: 'i' in -i\r\nSee 'docker rm --help'.\r\n```",
        "labels": "Support",
        "id": 44381
    },
    {
        "title": "function git_compare_version (${(s/./)INSTALLED_GIT_VERSION[3]}) too slow",
        "body": "when i first start my iterm2 (zsh with oh-my-zsh)，it's very slow.\r\n\r\nAfter trace, I found function **git_compare_version** caused, exactly by this line:  \r\n`INSTALLED_GIT_VERSION=(${(s/./)INSTALLED_GIT_VERSION[3]});`\r\n\r\nhere are a simulate \r\n\r\n```\r\n$ cat zsh-test.sh\r\n#!/usr/bin/env zsh -xv\r\nexport PS4=$'%D{%M%S%.} %N:%i> '\r\n\r\nINSTALLED_GIT_VERSION=($(command git --version 2>/dev/null));\r\nINSTALLED_GIT_VERSION=(${(s/./)INSTALLED_GIT_VERSION[3]});\r\n\r\necho \"$INSTALLED_GIT_VERSION\"\r\n```\r\n\r\n```\r\n# !/usr/bin/env zsh -xv\r\n\r\nexport PS4=$'%D{%M%S%.} %N:%i> '\r\n+./zsh-test.sh:2> export PS4='%D{%M%S%.} %N:%i> '\r\n\r\nINSTALLED_GIT_VERSION=($(command git --version 2>/dev/null));\r\n5649865 ./zsh-test.sh:4> INSTALLED_GIT_VERSION=5649867 ./zsh-test.sh:4> git --version\r\n5649865 ./zsh-test.sh:4> INSTALLED_GIT_VERSION=( git version 2.8.4 '(Apple' 'Git-73)' ) \r\nINSTALLED_GIT_VERSION=(${(s/./)INSTALLED_GIT_VERSION[3]});\r\n5650999 ./zsh-test.sh:5> INSTALLED_GIT_VERSION=( 2 8 4 ) \r\n\r\necho \"$INSTALLED_GIT_VERSION\"\r\n5650999 ./zsh-test.sh:7> echo '2 8 4'\r\n2 8 4\r\n```\r\n\r\nIt's elapsed more than 1 seconds,  but when I run it again, it's just elapsed tens of milliseconds\r\nIt's just slowly at first run. why ?\r\n\r\nmy zsh version: zsh 5.2 (x86_64-apple-darwin16.0.0)\r\n",
        "labels": "Support",
        "id": 44382
    },
    {
        "title": "agnoster: how to remove username@computer from prompt?",
        "body": "Using agnoster theme on osx iterm.\nHow can I modify the prompt to NOT display the username@computername /dir/dirname\n\nIt is too long.\nIdeally I like to just display full directory path on line (plus all the features of the powerline, which works fine) and on the next line just have the prompt\n\nMany thanks.\n",
        "labels": "Support",
        "id": 44383
    },
    {
        "title": "gradle -? fails with omz",
        "body": "```\n╰─[:)] % gradle -?  \nzsh: no matches found: -?\n```\n\nNeed some way to make -? work in some cases.\n",
        "labels": "Support",
        "id": 44384
    },
    {
        "title": "My custom oh-my-zsh theme",
        "body": "Can I fork this project and include my [personal theme](https://github.com/gpaixao/aterminal-oh-my-zsh-theme) ?\n",
        "labels": "Support",
        "id": 44385
    },
    {
        "title": "trying to modify bureau theme to include IP, but it puts time on new line.",
        "body": "i modified the bureau theme to include an ip like so... however its putting the clock on a new line, im assuming this comes down to the spaces function.. not sure how else to troubleshoot it so it goes back to the right prompt.\n\n![image](https://cloud.githubusercontent.com/assets/2991640/19535800/0f2ef6c2-95fe-11e6-8f4a-411d75e9aabd.png)\n\nthe edits i made are\n\n```\nipv4_local () {\n  local _result=\"\"\n  _result=$(getent hosts NBWK4UF75V1M  | awk '{ printf \"%s\", $1 } END {print \"\"}')\n  echo $_result\n}\n\n_IPV4=\"%{$fg[green]$(ipv4_local)%}%{$reset_color%}\"\n\n\n_PATH=\"%{$fg_bold[white]%}%~%{$reset_color%}\"\n\nif [[ $EUID -eq 0 ]]; then\n  _USERNAME=\"%{$fg_bold[red]%}%n\"\n  _LIBERTY=\"%{$fg[red]%}#\"\nelse\n  _USERNAME=\"%{$fg_bold[cyan]%}%n\"\n  _LIBERTY=\"%{$fg[green]%}$\"\nfi\n\n_USERNAME=\"$_USERNAME%{$reset_color%}@%m(${_IPV4})\"\n_LIBERTY=\"$_LIBERTY%{$reset_color%}\"\n```\n\nif i take the $_IPV4 out it works like the theme ships with. can anyone help me troubleshoot?\n",
        "labels": "Support",
        "id": 44386
    },
    {
        "title": "alias (caching) question",
        "body": "I have this (very ugly) alias to just quickly show my local IP adresses:\n\n``` bash\nalias localip=\"\nprintf '%s\\n' '========================';\nprintf '%s\\n' 'en0: \\\"$(ipconfig getifaddr en0)\\\"';;\nprintf '%s\\n' 'en4: \\\"$(ipconfig getifaddr en4)\\\"';\nprintf '%s\\n' '========================';\n\"\n```\n\nwhich is just an alias for executing the commands:\n\n``` bash\n➔ ipconfig getifaddr en0\n➔ ipconfig getifaddr en4\n```\n\nSomehow, the alias does not update correctly when my IP address changes. It does report the correct IP addresses when I reload my shell. This leads me to think that there is some alias caching going on, somewhere? is it just regular terminal logic to do this, or is this something (oh-my-)ZSH does?\n",
        "labels": "Support",
        "id": 44387
    },
    {
        "title": "info: how I can hide the pc name and full actual directory route",
        "body": "I want that my prompt only shows my user and actual directory, not the full path. But I cand find a way.\n",
        "labels": "Support",
        "id": 44388
    },
    {
        "title": "<cmd>:<num>: command not found: <expr>",
        "body": "Hello. I am using `oh-my-zsh` and found an issue. In the first place I thought it was an issue in `ack-grep`, because this was the command I experienced the issue first. Then it turned out it probably is more about the shell I am using. So here you go. \n\n```\nvagrant@xenial ack-grep --version\nack 2.14\nRunning under Perl 5.22.1 at /usr/bin/perl\n\nCopyright 2005-2014 Andy Lester.\n\nThis program is free software.  You may modify or distribute it\nunder the terms of the Artistic License v2.0.\nvagrant@xenial ack-grep Foo().Bar\nvagrant@xenial ack-grep\nack-grep:2: command not found: .Bar\nvagrant@xenial ack-grep --version\nack-grep:3: command not found: .Bar\n```\n\n```\nvagrant@xenial zsh --version\nzsh 5.1.1 (x86_64-ubuntu-linux-gnu)\n```\n\n```\nvagrant@xenial tar --version\ntar (GNU tar) 1.28\nCopyright (C) 2014 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\nWritten by John Gilmore and Jay Fenlason.\nvagrant@xenial tar Foo().Bar\nvagrant@xenial tar --version\ntar:3: command not found: .Bar\n```\n\nSee also the original issue in the `ack-grep` repo: https://github.com/petdance/ack2/issues/612. Have somebody an idea what is going on here? \n",
        "labels": "Support",
        "id": 44389
    },
    {
        "title": "my vim setting files are removed after auto update.",
        "body": "<img width=\"477\" alt=\"2016-10-01 12 24 14\" src=\"https://cloud.githubusercontent.com/assets/5924403/19011495/2e2d6f48-87d2-11e6-8bac-1c83a24be00b.png\">\n\nEvery setting files are removed in vim73 directory after oh-my-zsh auto update.\nAnd autocomplete tab key is not work.\nI think it is about removed files...\n\nHow can I fix it???\nI am mac user.\n",
        "labels": "Support",
        "id": 44390
    },
    {
        "title": "agnoster theme - only show ~ as working directory",
        "body": "Is there a way to only show `~` instead of the full directory in the `agnoster` theme? I kind of love the blue rectangle strip but again don't want to show the full working path.\n",
        "labels": "Support",
        "id": 44391
    },
    {
        "title": "tmux plugin causes hanging tmux sessions",
        "body": "Steps to reproduce:\n- Attach to a tmux session.\n- Close the graphical Terminal.app or iTerm2 window that contains the tmux session (running inside zsh).\n- In a new window, attach to the same session.\n\nIf and only if the tmux plugin is enabled, then the following symptoms are observed:\n- Whatever is inside tmux appears to be frozen, because the displayed text only updates when switching windows. However, tmux still works as expected—it's just programs running inside tmux that suffer from the problem.\n- Pressing `prefix + D` lists both the current session as well as the last session, which is somehow **prevented from being killed when the terminal window is closed**.\n- Detaching the \"ghost\" session from inside tmux or using `kill` returns the behavior of the tmux session to normal.\n\nSee also:\n- https://gitlab.com/gnachman/iterm2/issues/3995\n- https://gitlab.com/gnachman/iterm2/issues/2706\n\nwhere the same symptoms are observed but for different reasons.\n",
        "labels": "Support",
        "id": 44392
    },
    {
        "title": "Completion no longer works for directories containing hyphens",
        "body": "As a consequence of #5435, a common short cut I use has stopped working:\n\nAssume the following (simplified) directory structure:\n\n```\n> tree\n.\n├── common\n├── companyname-backend\n├── companyname-boilerplate\n├── companyname-frontend\n└── companyname-gateway\n```\n\nI used to be able to quickly `cd` around using unique \"name-parts\" (sorry not sure what the correct terminology is here), e.g.:\n1. `cd c-f<TAB>` would autocomplete to `cd companyname-frontend`\n2. `cd c-b<TAB>` would autocomplete to `cd companyname-b` and show the completion options `companyname-backend/      companyname-boilerplate/`\n3. `cd c-ba<TAB>` would autocomplete to `cd  companyname-backend/`\n\nThis was very useful and saved me a lot of TAB-time :-)\n\nNow my examples 1. and 3. above require several more steps:\n1. `cd c<TAB>`\n2. `cd comp<TAB>`\n3. `cd companyname-f<TAB>`\nand\n1. `cd c<TAB>`\n2. `cd comp<TAB>`\n3. `cd companyname-ba<TAB>`\n\n(example 2. isn't really affected in \"total number of `<TAB>`s\", but I guess it shows how I tend to use the old-style completion)\n\nIs there a way to implement the fixes of #5435 without breaking this use case? Or, is there a better way to `cd` around with minimal `<TAB>`ing, using the new completion?\n",
        "labels": "Support",
        "id": 44393
    },
    {
        "title": "How to disable auto selected mode after paste",
        "body": "I only used default settings with theme pygmalion\n\n![dingtalk20160927113550](https://cloud.githubusercontent.com/assets/13538862/18859456/c12f7414-84a6-11e6-8c54-b3fd9768b6bf.png)\n",
        "labels": "Support",
        "id": 44394
    },
    {
        "title": "[Documentation] ZSH without Oh-My-Zsh",
        "body": "A co-worker introduced me to Oh-My-Zsh several months back, and it has since migrated to be on a number of my own personal systems. It's going to stay on these, so I stay up to date with the latest and greatest from Oh-My-Zsh. :+1:\n\nHowever, I'd also like to extend some of the goodness to more restricted environments, like servers, in a more light-weight and controlled manner. How would I go about understanding how Oh-My-Zsh hooks into Zsh and then extracting specific pieces of Oh-My-Zsh into a flat .zshrc file?\n",
        "labels": "Support",
        "id": 44395
    },
    {
        "title": "PERL environment variable are lost",
        "body": "After installing oh-my-zsh and opening a new terminal, PERL\\* environment variables are unset.\n\nFrom zsh:\n\n```\n % env | grep PERL\nPERL5LIB=/home/dandv/perl5/lib/perl5\nPERL_LOCAL_LIB_ROOT=/home/dandv/perl5\nPERL_MB_OPT=--install_base \"/home/dandv/perl5\"\nPERL_MM_OPT=INSTALL_BASE=/home/dandv/perl5\n % sh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\nCloning Oh My Zsh...\nCloning into '/home/dandv/.oh-my-zsh'...\nremote: Counting objects: 806, done.\nremote: Compressing objects: 100% (675/675), done.\nremote: Total 806 (delta 19), reused 692 (delta 9), pack-reused 0\nReceiving objects: 100% (806/806), 548.23 KiB | 506.00 KiB/s, done.\nResolving deltas: 100% (19/19), done.\nChecking connectivity... done.\nLooking for an existing zsh config...\nFound ~/.zshrc. Backing up to ~/.zshrc.pre-oh-my-zsh\nUsing the Oh My Zsh template file and adding it to ~/.zshrc\n         __                                     __   \n  ____  / /_     ____ ___  __  __   ____  _____/ /_  \n / __ \\/ __ \\   / __ `__ \\/ / / /  /_  / / ___/ __ \\ \n/ /_/ / / / /  / / / / / / /_/ /    / /_(__  ) / / / \n\\____/_/ /_/  /_/ /_/ /_/\\__, /    /___/____/_/ /_/  \n                        /____/                       ....is now installed!\n\n\nPlease look over the ~/.zshrc file to select plugins, themes, and options.\n\np.s. Follow us at https://twitter.com/ohmyzsh.\n\np.p.s. Get stickers and t-shirts at http://shop.planetargon.com.\n\n➜  ~ env | grep PERL\nPERL_LOCAL_LIB_ROOT=/home/dandv/perl5\nPERL_MB_OPT=--install_base \"/home/dandv/perl5\"\nPERL5LIB=/home/dandv/perl5/lib/perl5\nPERL_MM_OPT=INSTALL_BASE=/home/dandv/perl5\n```\n\nSo far so good. But **starting a new terminal** and running `env | grep PERL` produces empty output.\n",
        "labels": "Support",
        "id": 44396
    },
    {
        "title": "Hello! I've updated Mac OS Sierra, but can not be used iTerm",
        "body": "Hello! I've updated Mac OS Sierra, but can not be used iTerm\n\n```\nLast login: Thu Sep 22 20:51:15 on ttys001\n/Users/jiangguoliang/.oh-my-zsh/tools/check_for_upgrade.sh:3: failed to load module zsh/datetime': dlopen(/usr/lib/zsh/5.0.8/zsh/datetime.so, 9): image not found _current_epoch:1: bad math expression: operand expected at/ 60 / 60 ...'\n/Users/jiangguoliang/.oh-my-zsh/lib/completion.zsh:11: failed to load module zsh/zle': dlopen(/usr/lib/zsh/5.0.8/zsh/zle.so, 9): image not found /Users/jiangguoliang/.oh-my-zsh/lib/completion.zsh:22: failed to load modulezsh/zle': dlopen(/usr/lib/zsh/5.0.8/zsh/zle.so, 9): image not found\n/Users/jiangguoliang/.oh-my-zsh/lib/completion.zsh:26: command not found: zstyle\n/Users/jiangguoliang/.oh-my-zsh/lib/completion.zsh:29: failed to load module zsh/zle': dlopen(/usr/lib/zsh/5.0.8/zsh/zle.so, 9): image not found /Users/jiangguoliang/.oh-my-zsh/lib/completion.zsh:31: command not found: zstyle /Users/jiangguoliang/.oh-my-zsh/lib/completion.zsh:32: command not found: zstyle /Users/jiangguoliang/.oh-my-zsh/lib/completion.zsh:37: command not found: zstyle /Users/jiangguoliang/.oh-my-zsh/lib/completion.zsh:41: command not found: zstyle /Users/jiangguoliang/.oh-my-zsh/lib/completion.zsh:44: command not found: zstyle /Users/jiangguoliang/.oh-my-zsh/lib/completion.zsh:45: command not found: zstyle /Users/jiangguoliang/.oh-my-zsh/lib/completion.zsh:48: command not found: zstyle /Users/jiangguoliang/.oh-my-zsh/lib/completion.zsh:59: command not found: zstyle /Users/jiangguoliang/.oh-my-zsh/lib/functions.zsh:104: failed to load modulezsh/langinfo': dlopen(/usr/lib/zsh/5.0.8/zsh/langinfo.so, 9): image not found\n/Users/jiangguoliang/.oh-my-zsh/lib/key-bindings.zsh:7: failed to load module zsh/terminfo': dlopen(/usr/lib/zsh/5.0.8/zsh/terminfo.so, 9): image not found /Users/jiangguoliang/.oh-my-zsh/lib/key-bindings.zsh:18: command not found: bindkey /Users/jiangguoliang/.oh-my-zsh/lib/key-bindings.zsh:20: command not found: bindkey /Users/jiangguoliang/.oh-my-zsh/lib/key-bindings.zsh:21: command not found: bindkey /Users/jiangguoliang/.oh-my-zsh/lib/key-bindings.zsh:22: command not found: bindkey /Users/jiangguoliang/.oh-my-zsh/lib/key-bindings.zsh:23: failed to load modulezsh/terminfo': dlopen(/usr/lib/zsh/5.0.8/zsh/terminfo.so, 9): image not found\n/Users/jiangguoliang/.oh-my-zsh/lib/key-bindings.zsh:26: failed to load module zsh/terminfo': dlopen(/usr/lib/zsh/5.0.8/zsh/terminfo.so, 9): image not found /Users/jiangguoliang/.oh-my-zsh/lib/key-bindings.zsh:31: failed to load modulezsh/terminfo': dlopen(/usr/lib/zsh/5.0.8/zsh/terminfo.so, 9): image not found\n/Users/jiangguoliang/.oh-my-zsh/lib/key-bindings.zsh:37: failed to load module zsh/terminfo': dlopen(/usr/lib/zsh/5.0.8/zsh/terminfo.so, 9): image not found /Users/jiangguoliang/.oh-my-zsh/lib/key-bindings.zsh:43: failed to load modulezsh/terminfo': dlopen(/usr/lib/zsh/5.0.8/zsh/terminfo.so, 9): image not found\n/Users/jiangguoliang/.oh-my-zsh/lib/key-bindings.zsh:46: failed to load module zsh/terminfo': dlopen(/usr/lib/zsh/5.0.8/zsh/terminfo.so, 9): image not found /Users/jiangguoliang/.oh-my-zsh/lib/key-bindings.zsh:50: command not found: bindkey /Users/jiangguoliang/.oh-my-zsh/lib/key-bindings.zsh:52: command not found: bindkey /Users/jiangguoliang/.oh-my-zsh/lib/key-bindings.zsh:53: command not found: bindkey /Users/jiangguoliang/.oh-my-zsh/lib/key-bindings.zsh:55: failed to load modulezsh/terminfo': dlopen(/usr/lib/zsh/5.0.8/zsh/terminfo.so, 9): image not found\n/Users/jiangguoliang/.oh-my-zsh/lib/key-bindings.zsh:59: command not found: bindkey\n/Users/jiangguoliang/.oh-my-zsh/lib/key-bindings.zsh:60: failed to load module zsh/terminfo': dlopen(/usr/lib/zsh/5.0.8/zsh/terminfo.so, 9): image not found /Users/jiangguoliang/.oh-my-zsh/lib/key-bindings.zsh:63: command not found: bindkey /Users/jiangguoliang/.oh-my-zsh/lib/key-bindings.zsh:64: command not found: bindkey /Users/jiangguoliang/.oh-my-zsh/lib/key-bindings.zsh:65: command not found: bindkey /Users/jiangguoliang/.oh-my-zsh/lib/key-bindings.zsh:70: failed to load modulezsh/zle': dlopen(/usr/lib/zsh/5.0.8/zsh/zle.so, 9): image not found\n/Users/jiangguoliang/.oh-my-zsh/lib/key-bindings.zsh:71: command not found: bindkey\n/Users/jiangguoliang/.oh-my-zsh/lib/key-bindings.zsh:74: command not found: bindkey\n/Users/jiangguoliang/.oh-my-zsh/lib/theme-and-appearance.zsh:2: colors: function definition file not found\n/Users/jiangguoliang/.oh-my-zsh/oh-my-zsh.sh:77: compinit: function definition file not found\n/Users/jiangguoliang/.oh-my-zsh/plugins/git/git.plugin.zsh:2: command not found: zstyle\n/Users/jiangguoliang/.oh-my-zsh/plugins/git/git.plugin.zsh:76: command not found: compdef\n/Users/jiangguoliang/.oh-my-zsh/plugins/git/git.plugin.zsh:87: command not found: compdef\n/Users/jiangguoliang/.oh-my-zsh/plugins/git/git.plugin.zsh:94: command not found: compdef\n/Users/jiangguoliang/.oh-my-zsh/plugins/git/git.plugin.zsh:103: command not found: compdef\n/Users/jiangguoliang/.oh-my-zsh/plugins/git/git.plugin.zsh:113: command not found: compdef\n/Users/jiangguoliang/.oh-my-zsh/plugins/git/git.plugin.zsh:123: command not found: compdef\n/Users/jiangguoliang/.oh-my-zsh/plugins/git/git.plugin.zsh:132: command not found: compdef\n/Users/jiangguoliang/.oh-my-zsh/plugins/git/git.plugin.zsh:138: command not found: compdef\n/Users/jiangguoliang/.oh-my-zsh/plugins/git/git.plugin.zsh:141: command not found: compdef\n/Users/jiangguoliang/.oh-my-zsh/plugins/git/git.plugin.zsh:144: command not found: compdef\n/Users/jiangguoliang/.oh-my-zsh/plugins/git/git.plugin.zsh:147: command not found: compdef\n/Users/jiangguoliang/.oh-my-zsh/plugins/git/git.plugin.zsh:156: command not found: compdef\n/Users/jiangguoliang/.oh-my-zsh/plugins/git/git.plugin.zsh:159: command not found: compdef\n/Users/jiangguoliang/.oh-my-zsh/plugins/git/git.plugin.zsh:161: command not found: compdef\n/Users/jiangguoliang/.oh-my-zsh/plugins/git/git.plugin.zsh:175: command not found: compdef\n/Users/jiangguoliang/.oh-my-zsh/plugins/git/git.plugin.zsh:186: command not found: compdef\n/Users/jiangguoliang/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh:111: command not found: zle\n/Users/jiangguoliang/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh:341: command not found: zle\n/Users/jiangguoliang/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh:342: command not found: zle\n/Users/jiangguoliang/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh:343: command not found: zle\n/Users/jiangguoliang/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh:444: add-zsh-hook: function definition file not found\nzsh: failed to load module `zsh/zle': dlopen(/usr/lib/zsh/5.0.8/zsh/zle.so, 9): image not found\n```\n",
        "labels": "Support",
        "id": 44397
    },
    {
        "title": "Issue with todays update - zsh-syntax-highlighting",
        "body": "Oh-my-zsh via antigen just updated today when I logged in and it gave this message:\n\n``` zsh\ncommand not found: add-zsh-hook\nzsh-syntax-highlighting: failed loading highlighters, exiting.\n```\n\nAnd now everytime I type any character it spits out this in huge amounts:\n\n``` zsh\n_zsh_highlight:31: command not found: _zsh_highlight_brackets_highlighter_predicate\n```\n\nI've made no changes to my configuration in over a year.\n",
        "labels": "Support",
        "id": 44398
    },
    {
        "title": "where should i put my aliases",
        "body": "I am just wondering it's too bad to put all my aliases in the .zshrc. where can i put  them instead?\n",
        "labels": "Support",
        "id": 44399
    },
    {
        "title": "Autocomplete doesn't recognize filename with number after dot",
        "body": "# [/home/Documents]/ tree\n\n.├── file.2016jar\n └── file.jar\nWhen type java -jar file <THEN TAB> only file.jar is listed\n\nPlease remove if this is not an issue,best regards!\n",
        "labels": "Support",
        "id": 44400
    },
    {
        "title": "themes not displayed properly when becoming root",
        "body": "When I issue the command sudo su, the theme (bira) cannot be displayed properly.\nMay I knwo how to fix that? I am using OSX 10.11.6.\n\n<img width=\"644\" alt=\"screen shot 2016-09-07 at 1 41 22 pm\" src=\"https://cloud.githubusercontent.com/assets/3275948/18322550/3b23a66a-7501-11e6-8eda-d6f9aded4714.png\">\n",
        "labels": "Support",
        "id": 44401
    },
    {
        "title": "how can I remove \" master ●\" label",
        "body": "How can I remove \"master\" label, in my computer I use \"agnoster\" theme\n\n ⚡ root@illsuionsMBP  ~   master ● \n",
        "labels": "Support",
        "id": 44402
    },
    {
        "title": "display not normal!",
        "body": "![image](https://cloud.githubusercontent.com/assets/3859671/18269275/0d2054d6-745a-11e6-9307-f02546d8b8f4.png)\n",
        "labels": "Support",
        "id": 44403
    },
    {
        "title": "cat {file1,file2} > file3",
        "body": "cat {file1,file2} > file3\nIt's not support in zsh, but can be used with bash.\n",
        "labels": "Support",
        "id": 44404
    },
    {
        "title": "custom plugin auto run when shell start",
        "body": "I want to add a new plugin in `.oh-my-zsh/custom/plugin`, named _colors_, and this is how I do it.\n\n```\nmkdir ~/.oh-my-zsh/custom/plugins/colors\nvim ~/.oh-my-zsh/custom/plugins/colors/colors.plugin.zsh\n```\n\nand code in `colors.plugin.zsh` is this\n\n```\ncolors() {\n    local fgc bgc vals seq0\n\n    printf \"Color escapes are %s\\n\" '\\e[${value};...;${value}m'\n    printf \"Values 30..37 are \\e[33mforeground colors\\e[m\\n\"\n    printf \"Values 40..47 are \\e[43mbackground colors\\e[m\\n\"\n    printf \"Value  1 gives a  \\e[1mbold-faced look\\e[m\\n\\n\"\n\n    # foreground colors\n    for fgc in {30..37}; do\n        # background colors\n        for bgc in {40..47}; do\n            fgc=${fgc#37} # white\n            bgc=${bgc#40} # black\n\n            vals=\"${fgc:+$fgc;}${bgc}\"\n            vals=${vals%%;}\n\n            seq0=\"${vals:+\\e[${vals}m}\"\n            printf \"  %-9s\" \"${seq0:-(default)}\"\n            printf \" ${seq0}TEXT\\e[m\"\n            printf \" \\e[${vals:+${vals+$vals;}}1mBOLD\\e[m\"\n        done\n        echo; echo\n    done\n}\n```\n\nfinally, I add colors in .zshrc->plugins.\nBut when I open terminal, colors() will automate running, Why?\n",
        "labels": "Support",
        "id": 44405
    },
    {
        "title": "Autocomplete the last word still here",
        "body": "when i click tab the last word still here\n\n![](https://camo.githubusercontent.com/e4329790b66bef72aaf1dee1ad212804299ed05a/687474703a2f2f37786f6d72752e636f6d312e7a302e676c622e636c6f7564646e2e636f6d2f73686f742d323031362d30382d32355f30382d35362d31382e706e67)\n\nas you can see the word `so` can't delete\n\n![](https://camo.githubusercontent.com/c32cfa19702bce8bdcd7ff0db2db25b2d2003b4b/687474703a2f2f37786f6d72752e636f6d312e7a302e676c622e636c6f7564646e2e636f6d2f73686f742d323031362d30382d32355f30382d35392d34322e706e67)\n\nhow can i fix it ? thanks plz\n",
        "labels": "Support",
        "id": 44406
    },
    {
        "title": "REPORTTIME",
        "body": "Hi,\nI am using Arch linux\nI use REPORTTIME feature my zshrc using export REPORTTIME=0 ( want every command to get reported ) \nusing zsh 5.2-1 and oh-my-zsh-git from aur\nmy zshrc \n\n> ZSH=/usr/share/oh-my-zsh/\n> REPORTTIME=0\n> ZSH_THEME=\"agnoster\"\n> DISABLE_AUTO_UPDATE=\"true\"\n> ENABLE_CORRECTION=\"true\"\n> COMPLETION_WAITING_DOTS=\"true\"\n> HIST_STAMPS=\"yyyy-mm-dd\"\n> plugins=(git command-not-found)\n> export LANG=en_US.UTF-8\n> export EDITOR=\"vim\"\n> export ARCHFLAGS=\"-arch x86_64\"\n> ZSH_CACHE_DIR=$HOME/.oh-my-zsh-cache\n> if [[ ! -d $ZSH_CACHE_DIR ]]; then\n>  mkdir $ZSH_CACHE_DIR\n> fi\n> source $ZSH/oh-my-zsh.sh\n> source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh\n\nbut everytime I execute command get reported with\n\n> ali@Dell  ~   echo Hi\n> Hi  \n> 0.00s user 0.00s system 0% cpu 0.003 total  \n> 0.00s user 0.00s system 0% cpu 0.002 total\n\nafter using the default zshrc I dont get reported with 2 outputs\nusing the method from [http://superuser.com/questions/735660/whats-the-zsh-equivalent-of-bashs-prompt-command](url) to execute time before every command I got\n\n> ali@Dell  ~  echo Hi\n> Hi\n> shell  0.60s user 0.09s system 0% cpu 9:58.11 total  \n> children  0.20s user 0.03s system 0% cpu 9:58.11 total\n\nHow do I remove the shell reported time `shell  0.60s user 0.09s system 0% cpu 9:58.11 total` or in the first example `0.00s user 0.00s system 0% cpu 0.003 total`\nthank you .\n",
        "labels": "Support",
        "id": 44407
    },
    {
        "title": "Autocomplete not working correctly with filenames containing spaces",
        "body": "It's leaving the first \"word\" in the directory in the command line, erroneously.\n\nIf I attempt to complete a filename containing a space in a directory containing a space, like this\n\n```\n $ git add Su[TAB]\n```\n\nfor\n\n```\n$ git add Supporting\\ Files//Project\\ Name-Info.plist\n```\n\n_Edited to show what I actually typed._\n\nIt stops at the name of the directory. Then I hit <tab> again, and it partially completes the name of the file, and drops an extra copy of the first \"word\" into the command line.\n\n```\n$ git add Supporting Supporting\\ Files/Pr\n```\n\nIf I hit tab again, it completes the filename, but the extra copy of the first word remains.\n\n```\n$ git add Supporting Supporting\\ Files/Project\\ Name-Info.plist\n```\n\nThe command fails, because there's no such file \"Supporting.\"\n\n```\nfatal: pathspec 'Supporting' did not match any files\n```\n",
        "labels": "Support",
        "id": 44408
    },
    {
        "title": "Question about sourced files",
        "body": "Hello there,\nIs there possible to put \" plugins=(...) \"into an independent file i.e plugins in my sourced directory and source to it? Instead of putting those in the .zshrc file?\n\nI recently ran into the issue that it could not launch the plugins automatically after machine booted, but have to source the .zshrc file afte booting?\n\nAs you can see from the image below, it could not lanuch the theme automatically,neither.\n\n![zsh_boot_issue 2016-08-17_150758](https://cloud.githubusercontent.com/assets/1448776/17758425/e28d6d18-6521-11e6-99a5-edf1e46d4169.jpg)\n\nFollowing is my .zshrc file.( I modified the .zshrc file by adding the plugins=(...) into it , as result the plugins can be loaded sucessfully.)\n\n```\n#!/bin/zsh\n# Path to your oh-my-zsh installation.\n  export ZSH=/root/.oh-my-zsh\n\n# User configuration\n\n# export PATH=\"/usr/bin:/bin:/usr/sbin:/sbin:$PATH\"\n# export MANPATH=\"/usr/local/man:$MANPATH\"\n#autoload -U compinit && compinit\n\n#source .zshrc aliases\nalias reload=\"source ~/.zshrc && echo 'Your zshrc file has been reloaded'\"\n#\n\n#This is my zsh plugins settings\n\n# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)\n# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/\n# Example format: plugins=(rails git textmate ruby lighthouse)\n# Add wisely, as too many plugins slow down shell startup.\n#plugins=(git)\nplugins=(git \n        git-extras \n        history \n        cp \n        fasd \n        tmux \n        autojump \n        colored-man-pages \n        ubuntu \n        z \n        dirhistory\n        vi-mode\n        zsh-syntax-highlighting\n)\n#plugins=(git git-extras history fasd tmux autojump colored-man-pages ubuntu z dirhistory)\n\n#source for customized plugins\n#source ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh\n#source ~/.oh-my-zsh/custom/plugins/zsh-history-substring-search/zsh-history-substring-search.zsh\n#source ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh\n#source relative zsh settings file\nsource $ZSH/oh-my-zsh.sh\n\nfor file in ~/.oh-my-zsh/custom/sourced/* ; do\n       source \"$file\"\n   done\n\n#Automatically mount shared folder from host Windows to virtual machine Linux as Machine booted\n. ~/mount_shared_folder.zsh\n```\n\n@bradp\nThank you\nPS: You guys also can [check here](https://github.com/bradp/dotfiles/issues/3#issuecomment-240452944)\n",
        "labels": "Support",
        "id": 44409
    },
    {
        "title": "zsh update gave me a parse_git_dirty error",
        "body": "prompt_git:4: command not found: parse_git_dirty\n\nThe recent update to oh my zsh has created the above error whenever I run any command now in iTerm2. I've only been able to find outdated (2012) information on this error and it's been pretty vague. Any ideas on how I can either roll back zsh or eliminate this error? Thanks!\n",
        "labels": "Support",
        "id": 44410
    },
    {
        "title": "How ssh autocomplete hosts list is being generated?",
        "body": "I see a bunch of hosts that I don't want to see there. How to remove em?\n",
        "labels": "Support",
        "id": 44411
    },
    {
        "title": "Why can't I see the emojis properly?",
        "body": "I installed [wild-cherry](https://github.com/mashaal/wild-cherry) theme, it uses emojis, also\n- [x] downloaded and installed a [powerline-font](https://github.com/powerline/fonts/tree/master/Monofur)\n- [x] enable the emoji plugin\n\nBut I still get this\n\n![image](https://cloud.githubusercontent.com/assets/11675538/16891978/1f3937e6-4aca-11e6-9e4e-eb812e4b51cb.png)\n",
        "labels": "Support",
        "id": 44412
    },
    {
        "title": "Alias on separet file",
        "body": "Hello,\n\nI want to transfer my alias and function on separate file but I don't know how to do.\n\nActually all function and alias is in the .zshrc\n\nthank you\n",
        "labels": "Support",
        "id": 44413
    },
    {
        "title": "Hashbang for zsh?",
        "body": "I have a shell script which has `#!/bin/bash` as the first line and so whenever I execute the script(by `source script`), it changes my shell from `zsh` to `bash`. How do I prevent this from happening? I tried replacing it with `#!/bin/env zsh` and `#!/bin/zsh` but no luck.\n",
        "labels": "Support",
        "id": 44414
    },
    {
        "title": "gcam alias question",
        "body": "In reference to the [gcam alias](https://github.com/robbyrussell/oh-my-zsh/blob/master/plugins/git/git.plugin.zsh) can somebody explain to me why that's `git commit -a -m` and not just `git commit -m` I'm unclear on why we have the -a flag there. Isn't that the shorthand for `git commit --ammend`?\n\nThanks for the clarification and apologies if this is stupidly simple, I couldn't come up with a clear answer reading through the git docs but assume it was aliased this way with good reason.\n",
        "labels": "Support",
        "id": 44415
    },
    {
        "title": "vi-mode plugin - normal mode indicator is missing.",
        "body": "Hello, I've tried several themes and even terminals but I can't seem to find any that displays an indicator for vi-mode plugin's normal mode.\n\nAm I misunderstanding here something?\n\nEdit: after going through several random themes I finally found one that actually works, it's `avit`, so it seem to be theme issue.\n",
        "labels": "Support",
        "id": 44416
    },
    {
        "title": "Environment specific customization ",
        "body": "I would find it extremely handy if I could have different custom scripts for different environments. For example in the custom directory I could have one directory called Darwin and one called Linux. \n\nIs there support for something similar already? \n",
        "labels": "Support",
        "id": 44417
    },
    {
        "title": "Jump to slash, Delete to slash",
        "body": "How to make this:\n\n> ~/hello/sick-sad-world\n\nE.g I want to remove 'sick-sad-world' until slash after hello.\n\n> ~/hello/\n\n But `^W` and `Alt + Backspace` removes by words until minus.\n\n> ~/hello/sick-sad-\n\nAnd if I want to remove or change 'sick-', I need to jump to slash, but Ctrl + ← jumps to minus too.\n\n`WORDCHARS='*?.[]~-_=&;!#$%^(){}<>'` in `~/.zshrc` does not help\n",
        "labels": "Support",
        "id": 44418
    },
    {
        "title": "ubuntu oh-my-zsh login remote ubuntu server via ssh cause encoding error",
        "body": "hi, i'm using zsh in my ubuntu laptop,\nwhen i login to remote ubuntu server via ssh, the encoding seems not utf8\nif i open a file via vim ,and exec `:set encoding` in vim, it shows `laten1`\nif i exec `mvn --version` in remote server terminal , it does not show `UTF8` in platform encoding\n\nhowever, if i switch to bash and login remote server, the encoding works well.\n\nWhat's wrong with my zsh configure and how can i fix this?\n",
        "labels": "Support",
        "id": 44419
    },
    {
        "title": "Mac Capitan: only work git plugin",
        "body": "I installed oh-my-zsh in Mac Capitan, but it only works git plugin. Example: I see in mi repository with Ruby on Rails: `web-app git:(master) ✗`\n\nFeatures\n- Mac Capitan Version 10.11.4\n- zsh 5.0.8 (x86_64-apple-darwin15.0)\n- zshrc file  by default (It includes default plugins git, ruby and rails)\n-  Default terminal\n\nApparently not load the configuration file, because only work the default theme.\n",
        "labels": "Support",
        "id": 44420
    },
    {
        "title": "Terminal title misbehaves with putty and tmux",
        "body": "Hi folks,\n\nI dont know who is exactly the culprit here, but when running oh-my-zsh inside a tmux inside a putty, the terminal title displays some dubious characters, have a look at the screenshot:\n\n![2016-04-22 09_31_51-0_9_ - _ _zsh_](https://cloud.githubusercontent.com/assets/19407/14734855/8bf69bfc-086d-11e6-9e43-8545ab1eb084.png)\n\nIf I run the zsh session with tmux the title is displayed without the additional characters.\n\nI'm activating the titles in tmux with „set -g set-titles on“.\n",
        "labels": "Support",
        "id": 44421
    },
    {
        "title": "Gnu screen + Oh my zsh + French Accents not getting along",
        "body": "Hi,\n\nWe I launch screen and I'm in a folder with accents i.e ~/Téléchargement, screen tab that displays the $(pwd) cannot refresh as it doesn't process the accents correctly. \n\nI address it by modifying the following file : oh-my-zsh/lib/termsupport.zsh\n`title $ZSH_THEME_TERM_TAB_TITLE_IDLE $ZSH_THEME_TERM_TITLE_IDLE`\nwith\n`title $ZSH_THEME_TERM_TAB_TITLE_IDLE $ZSH_THEME_TERM_TITLE_IDLE | iconv -f utf8 -t ascii//TRANSLIT`\n\nI not sure it's an issue and there should be definitly a better way to do it. \n\nJust wanted to let you know...\n\nCheers... \n",
        "labels": "Support",
        "id": 44422
    },
    {
        "title": "Can't auto complete pip3's uninstall subcommand.",
        "body": "It works fine when I want to complete `pip3 install` subcommand. However, I got trouble when I run `pip3 uninstall [TAB]`. \n\nOn my OSX, auto completion can only complete `wheel` package. For example, if I execute `pip3 uninstall [TAB]`, `wheel` is append. However, when I execute `pip3 uninstall req[TAB]`, I want it to auto complete `requests` package which I have exactly installed, the terminal is blocked a while, but nothing is completed. If I interrupt the auto completion when the terminal is blocked, errors are dumped as below:\n\n```\n(most recent call last):\n  File \"/usr/local/bin/pip\", line 9, in <module>\n    load_entry_point('pip==7.1.2', 'console_scripts', 'pip')()\n  File \"/usr/local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 558, in load_entry_point\n    return get_distribution(dist).load_entry_point(group, name)\n  File \"/usr/local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2682, in load_entry_point\n                                     pip3 uninstall ssh    return ep.load()  13:00:28\n  File \"/usr/local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2355, in load\n    return self.resolve()\n  File \"/usr/local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2361, in resolve\n    module = __import__(self.module_name, fromlist=['__name__'], level=0)\n  File \"/usr/local/lib/python2.7/site-packages/pip/__init__.py\", line 13, in <module>\n    from pip.utils import get_installed_distributions, get_prog\n  File \"/usr/local/lib/python2.7/site-packages/pip/utils/__init__.py\", line 23, in <module>\n    from pip._vendor import pkg_resources\n  File \"/usr/local/lib/python2.7/site-packages/pip/_vendor/pkg_resources/__init__.py\", line 3078, in <module>\n    @_call_aside\n  File \"/usr/local/lib/python2.7/site-packages/pip/_vendor/pkg_resources/__init__.py\", line 3064, in _call_aside\n    f(*args, **kwargs)\n  File \"/usr/local/lib/python2.7/site-packages/pip/_vendor/pkg_resources/__init__.py\", line 3091, in _initialize_master_working_set\n    working_set = WorkingSet._build_master()\n  File \"/usr/local/lib/python2.7/site-packages/pip/_vendor/pkg_resources/__init__.py\", line 636, in _build_master\n    ws = cls()\n  File \"/usr/local/lib/python2.7/site-packages/pip/_vendor/pkg_resources/__init__.py\", line 629, in __init__\n    self.add_entry(entry)\n  File \"/usr/local/lib/python2.7/site-packages/pip/_vendor/pkg_resources/__init__.py\", line 685, in add_entry\n    for dist in find_distributions(entry, True):\n  File \"/usr/local/lib/python2.7/site-packages/pip/_vendor/pkg_resources/__init__.py\", line 2108, in find_on_path\n    if lower.endswith('.egg-info') or lower.endswith('.dist-info'):\nKeyboardInterrupt\n```\n\nBesides, If I run the same command on my Ubuntu server, the errors are significantly different:\n\n```\n_pip_installed:1: command not found: pip 0:01:43\n_pip_installed:1: command not found: pip\n_pip_installed:1: command not found: pip\n```\n",
        "labels": "Support",
        "id": 44423
    },
    {
        "title": "Issues on dpoggi theme ",
        "body": "I usually use the `dpogi` theme but it looses itself sometimes. \nIt looks like this where the pipe is the input prompt.\n\n```\nleco@gaphl12:~ » |\n```\n\nSomtimes, the prompt goes before the `»` character.\n\n```\nleco@gaphl12:~ | » \n```\n\nSomtimes, some substring from last command polutes the command line, like this example with a cat:\n\n```\nleco@gaphl12:~ » cat|cat myfile.txt\n```\n\nSomeone knows how to improve the theme?\n",
        "labels": "Support",
        "id": 44424
    },
    {
        "title": "How to use docker-compose plugin",
        "body": "Hi, I have enabled `docker` and `docker-compose` plugins. Here is the line in ~/.zshrc\n\n```\nplugins=(git github history symfony2 docker docker-compose)\n```\n\n`docker` completions works by tab, but `docker-compose` doesn't work. What I'm doing wrong?\n",
        "labels": "Support",
        "id": 44425
    },
    {
        "title": "AUTO_TITLE functionality breaks in tmux",
        "body": "In my tmux config, I have it set up to handle the window title like so:\n\n```\nset-option -g set-titles on\nset-option -g set-titles-string '#{pane_title}'\nset-option -g default-terminal 'screen-256color'\n```\n\nThat is, get the title from the active pane's title. The function in oh my zsh for setting the window title looks like this:\n\n```\nfunction title {\n   if [[ \"$DISABLE_AUTO_TITLE\" == \"true\" ]] || [[ \"$EMACS\" == *term* ]]; then\n     return\n   fi\n   if [[ \"$TERM\" == screen* ]]; then\n     print -Pn \"\\ek$1:q\\e\\\\\" #set screen hardstatus, usually truncated at 20 chars\n   elif [[ \"$TERM\" == xterm* ]] || [[ $TERM == rxvt* ]] || [[ $TERM == ansi ]] || [[ \"$TERM_PROGRAM\" == \"iTerm.app\" ]]; then\n     print -Pn \"\\e]2;$2:q\\a\" #set window name\n     print -Pn \"\\e]1;$1:q\\a\" #set icon (=tab) name\n   fi\n }\n```\n\nsince tmux advises using `screen` or `screen-256color` for your TERM variable, this causes the first if condition to match, and the screen hardstatus doesn't seem to work for tmux, leading to a garbled or unchanging title. For tmux, I think  the statements in the elif branch makes sense, since then things just act like any other shell, which tmux can easily to hook into. Since tmux sets the $TMUX variable, that would probably be an easy way to detect this case, perhaps something like:\n\n```\nfunction title {\n   if [[ \"$DISABLE_AUTO_TITLE\" == \"true\" ]] || [[ \"$EMACS\" == *term* ]]; then\n     return\n   fi\n   if [[ \"$TERM\" == screen* ]] && [[ -z \"$TMUX\" ]]; then\n     print -Pn \"\\ek$1:q\\e\\\\\" #set screen hardstatus, usually truncated at 20 chars\n   elif [[ \"$TERM\" == xterm* ]] || [[ $TERM == rxvt* ]] || [[ $TERM == ansi ]] || [[ \"$TERM_PROGRAM\" == \"iTerm.app\" ]] || [[ -n \"$TMUX\" ]]; then\n     print -Pn \"\\e]2;$2:q\\a\" #set window name\n     print -Pn \"\\e]1;$1:q\\a\" #set icon (=tab) name\n   fi\n }\n```\n",
        "labels": "Support",
        "id": 44426
    },
    {
        "title": "compleat plugin not working",
        "body": "hello, I am new to zsh,\n\ncompleat via github HEAD,\ncompiled successfully(conclusion from stdout),\nand ofcuz add compleat to plugins=...\n\nAnyone works on this plugin please help.\n\nFYI:\nzsh 5.0.2 (x86_64-slackware-linux-gnu)\nOMZ via install.ohmyz.sh\nadded top.usage & tested **only** on top(is this nessary?? it's stupid to add all the commend *.usage file)\ncompleat also not working on my bash(using method on compleat/readme.md\n",
        "labels": "Support",
        "id": 44427
    },
    {
        "title": "fatal: Invalid gitfile format: .git",
        "body": "After upgrading to the latest version, I see the error `fatal: Invalid gitfile format: .git` whenever I get to a non-git repository directory.\n\n![screenshot](https://cloud.githubusercontent.com/assets/369350/3285163/2d6d720a-f536-11e3-9cb2-f90a615ba977.png) \n",
        "labels": "Support",
        "id": 44428
    },
    {
        "title": "update brings lots of \"undefined-key\" and binding problems",
        "body": "For your information, I work under cygwin (I would rather not to).\r\nI guess, it's easy to fix but I don't have the time to mess with it.\r\n\r\nSince a recent auto update, every time i start my zsh, I get:\r\n\r\n```\r\n\"^@\\\" set-mark-comman\" undefined-key\r\n\"^A\\\" beginning-of-lin\" undefined-key\r\n\"^B\\\" backward-cha\" undefined-key\r\n\"^D\\\" delete-char-or-lis\" undefined-key\r\n\"^E\\\" end-of-lin\" undefined-key\r\n\"^F\\\" forward-cha\" undefined-key\r\n\"^G\\\" send-brea\" undefined-key\r\n\"^H\\\" backward-delete-cha\" undefined-key\r\n\"^I\\\" expand-or-complet\" undefined-key\r\n\"^J\\\" accept-lin\" undefined-key\r\n\"^K\\\" kill-lin\" undefined-key\r\n\"^L\\\" clear-scree\" undefined-key\r\n\"^M\\\" accept-lin\" undefined-key\r\n\"^N\\\" down-line-or-histor\" undefined-key\r\n\"^O\\\" accept-line-and-down-histor\" undefined-key\r\n\"^P\\\" up-line-or-histor\" undefined-key\r\n\"^Q\\\" push-lin\" undefined-key\r\n\"^R\\\" history-incremental-search-backwar\" undefined-key\r\n\"^S\\\" history-incremental-search-forwar\" undefined-key\r\n\"^T\\\" transpose-char\" undefined-key\r\n\"^U\\\" kill-whole-lin\" undefined-key\r\n\"^V\\\" quoted-inser\" undefined-key\r\n\"^W\\\" backward-kill-wor\" undefined-key\r\n\"^X^B\\\" vi-match-bracke\" undefined-key\r\n\"^X^E\\\" edit-command-lin\" undefined-key\r\n\"^X^F\\\" vi-find-next-cha\" undefined-key\r\n\"^X^J\\\" vi-joi\" undefined-key\r\n\"^X^K\\\" kill-buffe\" undefined-key\r\n\"^X^N\\\" infer-next-histor\" undefined-key\r\n\"^X^O\\\" overwrite-mod\" undefined-key\r\n\"^X^R\\\" _read_com\" undefined-key\r\n\"^X^U\\\" und\" undefined-key\r\n\"^X^V\\\" vi-cmd-mod\" undefined-key\r\n\"^X^X\\\" exchange-point-and-mar\" undefined-key\r\n\"^X*\\\" expand-wor\" undefined-key\r\n\"^X=\\\" what-cursor-positio\" undefined-key\r\n\"^X?\\\" _complete_debu\" undefined-key\r\n\"^XC\\\" _correct_filenam\" undefined-key\r\n\"^XG\\\" list-expan\" undefined-key\r\n\"^Xa\\\" _expand_alia\" undefined-key\r\n\"^Xc\\\" _correct_wor\" undefined-key\r\n\"^Xd\\\" _list_expansion\" undefined-key\r\n\"^Xe\\\" _expand_wor\" undefined-key\r\n\"^Xg\\\" list-expan\" undefined-key\r\n\"^Xh\\\" _complete_hel\" undefined-key\r\n\"^Xm\\\" _most_recent_fil\" undefined-key\r\n\"^Xn\\\" _next_tag\" undefined-key\r\n\"^Xr\\\" history-incremental-search-backwar\" undefined-key\r\n\"^Xs\\\" history-incremental-search-forwar\" undefined-key\r\n\"^Xt\\\" _complete_ta\" undefined-key\r\n\"^Xu\\\" und\" undefined-key\r\n\"^X~\\\" _bash_list-choice\" undefined-key\r\n\"^Y\\\" yan\" undefined-key\r\n\"^[^D\\\" list-choice\" undefined-key\r\n\"^[^G\\\" send-brea\" undefined-key\r\n\"^[^H\\\" backward-kill-wor\" undefined-key\r\n\"^[^I\\\" self-insert-unmet\" undefined-key\r\n\"^[^J\\\" self-insert-unmet\" undefined-key\r\n\"^[^L\\\" clear-scree\" undefined-key\r\n\"^[^M\\\" self-insert-unmet\" undefined-key\r\n\"^[^_\\\" copy-prev-wor\" undefined-key\r\n\"^[ \\\" expand-histor\" undefined-key\r\n\"^[!\\\" expand-histor\" undefined-key\r\n\"^[\\\"\\\" quote-regio\" undefined-key\r\n\"^[\\$\\\" spell-wor\" undefined-key\r\n/home/maxime.beucher/.zcompdump:2043: unmatched '\r\n```\r\n\r\nPlease help me :p\r\n\r\nAnd btw, thank you very much !! All of you !\r\n",
        "labels": "Support",
        "id": 44429
    },
    {
        "title": "FAQ: include note about what happens to configs you had before installing OMZ",
        "body": "Suggested text to be included in `readme` as a footnote in the installation section, or as an FAQ (\"What happened to the configurations I had set up before installing Oh My Zsh?\":\r\n```\r\nNote: If you had configurations saved in `.zshrc` prior to installing Oh My Zsh, those configurations are automatically  archived in a `.pre-oh-my-zsh` file and the new Oh My Zsh configurations will replace those previous configurations in `.zshrc`. You can import those archived configurations by adding `source ~/.pre-oh-my-zsh` at the end of your `.zshrc` file.\r\n```\r\n\r\nContext and research I've done related to this suggestion:\r\nThe only reference to the `.pre-oh-my-zsh` file I found in the OMZ documentation is in the context of uninstalling the framework, and none of the obvious google searches addressed resulted in answers to \"what happened to my previous configs?\" - having this noted in the context of the installation instructions or FAQs would have saved me a bit of confusion and surprise thinking I'd lost those configs.\r\n\r\nI'm down to submit a PR for this as a `readme` edit, but wasn't sure if it's preferable for this note to live in the wiki docs.",
        "labels": "Type: documentation",
        "id": 44430
    },
    {
        "title": "FAQ: include note about what happens to configs you had before installing OMZ",
        "body": "Suggested text to be included in `readme` as a footnote in the installation section, or as an FAQ (\"What happened to the configurations I had set up before installing Oh My Zsh?\":\r\n```\r\nNote: If you had configurations saved in `.zshrc` prior to installing Oh My Zsh, those configurations are automatically  archived in a `.pre-oh-my-zsh` file and the new Oh My Zsh configurations will replace those previous configurations in `.zshrc`. You can import those archived configurations by adding `source ~/.pre-oh-my-zsh` at the end of your `.zshrc` file.\r\n```\r\n\r\nContext and research I've done related to this suggestion:\r\nThe only reference to the `.pre-oh-my-zsh` file I found in the OMZ documentation is in the context of uninstalling the framework, and none of the obvious google searches addressed resulted in answers to \"what happened to my previous configs?\" - having this noted in the context of the installation instructions or FAQs would have saved me a bit of confusion and surprise thinking I'd lost those configs.\r\n\r\nI'm down to submit a PR for this as a `readme` edit, but wasn't sure if it's preferable for this note to live in the wiki docs.",
        "labels": "Type: documentation",
        "id": 44431
    },
    {
        "title": "No \"thefuck\" plugin description",
        "body": "Not really a bug but for a lack of a better category, I'm posting it as such. \r\n\r\nOn the Wiki \"plugins\" page, there is a link to a \"thefuck\" plugin, but it appears to be dead. Searching the page doesn't yield any results other than the table of contents. \r\n\r\nSorry but I don't have time to investigate now - just signaling it in case you want to fix it !\r\n\r\nEdit: apparently it labeled the issue as support rather than bug? pretty sure I selected bug. anyhow :)\r\n",
        "labels": "Type: documentation",
        "id": 44432
    },
    {
        "title": "Dead link in wiki",
        "body": "In the wiki, in the [plugin section](https://github.com/ohmyzsh/ohmyzsh/wiki/Plugins), the `stack` link links to nowhere.\r\nEDIT:\r\nI tried to add stack in my zshrc, and it didn't work, even if all other plugins works\r\nError:\r\n```\r\nshika-blyat@shika-blyat  ~  source ~/.zshrc           \r\n/home/shika-blyat/.oh-my-zsh/plugins/stack/stack.plugin.zsh:2: command not found: stack\r\n```\r\nzshrc involved line:\r\n`plugins=(git archlinux cabal cargo cp docker man pip stack rust sublime sudo vscode)`\r\nfull zshrc in case it's useful:\r\nhttps://bin.drlazor.be/holarclump.zsh",
        "labels": "Type: documentation",
        "id": 44433
    },
    {
        "title": "Wiki plugin terraform listed in TOC but missing documentation section",
        "body": "I'm wondering if the terraform plugin is in usable shape, and where I might find documentation for how to use it. I saw it listed on the [wiki plugin page](https://github.com/ohmyzsh/ohmyzsh/wiki/Plugins), but the documentation section is missing.\r\n\r\nAny info or help would be great, I don't have a lot of GitHub wiki practice. Thanks!",
        "labels": "Type: documentation",
        "id": 44434
    },
    {
        "title": "The `jump` anchor link in the plugin list is broken",
        "body": "**Describe the bug**\r\nThe `jump` link does not link to anything in the list of plugins.\r\n\r\n**To Reproduce**\r\nClick the `jump` link on the page: https://github.com/ohmyzsh/ohmyzsh/wiki/Plugins\r\n\r\n**Expected behavior**\r\nLink doesn't exist or links to the relevant section\r\n",
        "labels": "Type: documentation",
        "id": 44435
    },
    {
        "title": "fetch option on ohmyz.sh",
        "body": "The website has installer options for both curl and wget. Neither of which are out of the box solutions on FreeBSD. This may sound silly since someone may end up installing curl anyways, but have you thought about adding an option for `fetch`?\r\n\r\nIt's very similar to the wget one:\r\n``` bash\r\n\r\n\r\n$ sh -c \"$(fetch https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh -o -)\"\r\n\r\n```",
        "labels": "Type: documentation",
        "id": 44436
    },
    {
        "title": "⚙️[wiki]: why wiki editing is public.",
        "body": "Check this wiki page =>  https://github.com/robbyrussell/oh-my-zsh/wiki/This-seems-to-be-public\r\n<!--\r\nFill this out before posting. You can delete irrelevant sections, but\r\nan issue where no sections have been filled will be deleted without comment.\r\n-->\r\n\r\n**Describe the bug**\r\naccess rights\r\n\r\n**To Reproduce**\r\n<!--\r\nSteps to reproduce the behavior:\r\n1. Go to any wiki page\r\n2. Hit edit\r\n3. Save & boom, its public\r\n-->\r\n\r\n**Expected behavior**\r\nOnly maintainers can edit this.\r\n\r\n\r\n**Fix**\r\n\r\n![Screenshot from 2019-06-28 17-27-54](https://user-images.githubusercontent.com/32242596/60340948-a6a84580-99ca-11e9-9686-7c218e1d5a99.png)\r\n",
        "labels": "Type: documentation",
        "id": 44437
    },
    {
        "title": "Git prompt not documented",
        "body": "**Describe the bug**\r\nI can't find any documentation on the git prompt.\r\n\r\n**To Reproduce**\r\nDocs -> Plugins\r\nTry to click https://github.com/robbyrussell/oh-my-zsh/wiki/Plugins#git-prompt\r\n\r\n**Expected behavior**\r\nDocumentation on git prompt. What is +/-? What is the lightning bolt?\r\n",
        "labels": "Type: documentation",
        "id": 44438
    },
    {
        "title": "Theme Gallery",
        "body": "providing screenshots of the themes might make choosing a theme easier",
        "labels": "Type: documentation",
        "id": 44439
    },
    {
        "title": "Sublime plugin inconsistent readme and platform support",
        "body": "I stumbled across a platform inconsistency with the current sublime plugin.\r\n\r\nIn 2015 @ckesc introduced the `sst` command which sudos sublime (commit 5b90092). Readme was later updated to reflect this change (commit c28b226).\r\n\r\nThis is misleading now. Having a look at the plugin source `sst` is only available for Linux, no alias were introduced for macOS and cygwin. The latter may not provide `sudo` but macOS indeed does.",
        "labels": "Type: documentation",
        "id": 44440
    },
    {
        "title": "Deprecate transfer plugin",
        "body": "_Register at [Hacktoberfest](https://hacktoberfest.digitalocean.com/) before submitting a Pull Request_\r\n\r\n----\r\n\r\nSince [transfer.sh](https://transfer.sh) is shutting down on November 30th we should deprecate the plugin that uses it. The reasoning is that we should encourage users to use a different service, since their files will presumably be gone after it shuts down.\r\n\r\nTo do this, we should both:\r\n\r\n- Add a deprecation warning in the README (explaining the reason)\r\n\r\n- Add a deprecation warning in the `.plugin.zsh` file to run when the plugin is loaded. Extra points for printing the warning with a warning-like color, like yellow or orange.\r\n\r\nAfter November 30th we should give a week or so before completely removing the plugin.",
        "labels": "Type: documentation",
        "id": 44441
    },
    {
        "title": "[Good first PR] Add READMEs to undocumented plugins",
        "body": "_Register at [Hacktoberfest](https://hacktoberfest.digitalocean.com/) before submitting a Pull Request_\r\n\r\n----\r\n\r\nFor some time we've had it in our minds to add a README to every plugin, as a way of documenting what the plugin does and what it requires, among other things. We have some READMEs already but most plugins lack one. That's why this issue exists, so you can take part in this effort.\r\n\r\nYou can have a look at [existing plugin READMEs](https://github.com/robbyrussell/oh-my-zsh/search?q=extension%3Amd+path%3Aplugins%2F) (the [yarn README is a great example](https://github.com/robbyrussell/oh-my-zsh/blob/master/plugins/yarn/README.md)). Also you can find [a Markdown guide here](https://guides.github.com/features/mastering-markdown/).\r\n\r\nThe README should follow a very simple structure:\r\n\r\n1. Name and brief description of what the plugin does. Links to relevant, essential websites.\r\n   For example: the README for the `ant` plugin should link to the [ant project](https://ant.apache.org/).\r\n\r\n2. How to enable the plugin. You can just copy-paste the excerpt below and substitute the word PLUGIN for the name of the plugin:<pre><code>To use it, add PLUGIN to the plugins array of your zshrc file:\r\n\\```\r\nplugins=(... PLUGIN)\r\n\\```</code></pre>\r\n\r\n3. Any other sections that document what the plugin does. Examples of that are: a l[ist of aliases, functions, or commands created](https://github.com/robbyrussell/oh-my-zsh/blob/master/plugins/archlinux/README.md); a description of [settings that the plugin allows](https://github.com/robbyrussell/oh-my-zsh/blob/master/plugins/ssh-agent/README.md#instructions); how to [build themes based on the plugin](https://github.com/robbyrussell/oh-my-zsh/blob/master/plugins/svn/README.md#usage-on-themes), ...\r\n\r\n4. Optionally: a section with a list of contributors.\r\n\r\nYou'll need to read the `.plugin.zsh` file to know what the plugin does or, if there isn't one, the plugin will probably just add completion. You can also get what the plugin does by looking at the commits, or even the [plugins wiki](https://github.com/robbyrussell/oh-my-zsh/wiki/Plugins).\r\n\r\nIf you want to work on the README for one of the following plugins, comment below and I'll mark it as such.\r\n\r\nThanks for your contribution and happy Hacktoberfest!\r\n\r\n- [x] [ant](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/ant)\r\n- [x] [autoenv](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/autoenv)\r\n- [x] [autojump](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/autojump)\r\n- [x] [autopep8](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/autopep8)\r\n- [x] [aws](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/aws)\r\n- [x] [battery](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/battery)\r\n- [x] [bower](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/bower)\r\n- [x] [brew](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/brew)\r\n- [x] [bwana](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/bwana)\r\n- [x] [cabal](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/cabal)\r\n- [x] [cake](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/cake)\r\n- [x] [cakephp3](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/cakephp3)\r\n- [x] [capistrano](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/capistrano)\r\n- [x] [catimg](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/catimg)\r\n- [x] [celery](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/celery)\r\n- [x] [chruby](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/chruby)\r\n- [x] [chucknorris](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/chucknorris)\r\n- [x] [cloudapp](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/cloudapp)\r\n- [x] [codeclimate](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/codeclimate)\r\n- [x] [colemak](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/colemak)\r\n- [x] [colored-man-pages](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/colored-man-pages)\r\n- [x] [colorize](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/colorize)\r\n- [x] [command-not-found](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/command-not-found)\r\n- [x] [common-aliases](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/common-aliases)\r\n- [x] [compleat](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/compleat)\r\n- [x] [composer](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/composer)\r\n- [x] [cpanm](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/cpanm)\r\n- [x] [dash](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/dash) ([website](https://kapeli.com/dash))\r\n- [x] [debian](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/debian)\r\n- [x] [dircycle](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/dircycle)\r\n- [x] [dirhistory](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/dirhistory)\r\n- [x] [dirpersist](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/dirpersist)\r\n- [x] [django](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/django)\r\n- [x] [doctl](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/doctl)\r\n- [x] [eecms](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/eecms)\r\n- [x] [emacs](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/emacs)\r\n- [x] [emoji-clock](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/emoji-clock)\r\n- [x] [emotty](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/emotty)\r\n- [x] [encode64](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/encode64)\r\n- [x] [fabric](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/fabric)\r\n- [x] [fasd](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/fasd)\r\n- [x] [fastfile](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/fastfile)\r\n- [x] [fbterm](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/fbterm)\r\n- [x] [fedora](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/fedora)\r\n- [x] [gas](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/gas)\r\n- [x] [gem](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/gem)\r\n- [x] [gitfast](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/gitfast)\r\n- [x] [git-flow-avh](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/git-flow-avh)\r\n- [x] [git-hubflow](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/git-hubflow)\r\n- [x] [gitignore](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/gitignore)\r\n- [x] [git-prompt](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/git-prompt)\r\n- [x] [git-remote-branch](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/git-remote-branch)\r\n- [x] [glassfish](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/glassfish)\r\n- [x] [gnu-utils](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/gnu-utils)\r\n- [x] [go](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/go)\r\n- [x] [golang](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/golang)\r\n- [x] [gpg-agent](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/gpg-agent)\r\n- [x] [gradle](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/gradle)\r\n- [x] [grails](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/grails)\r\n- [x] [grunt](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/grunt)\r\n- [x] [gulp](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/gulp)\r\n- [x] [helm](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/helm)\r\n- [x] [heroku](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/heroku)\r\n- [x] [homestead](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/homestead)\r\n- [x] [iterm2](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/iterm2)\r\n- [x] [iwhois](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/iwhois)\r\n- [x] [jake-node](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/jake-node)\r\n- [x] [jruby](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/jruby)\r\n- [x] [jump](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/jump)\r\n- [x] [kate](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/kate)\r\n- [x] [kitchen](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/kitchen)\r\n- [x] [knife](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/knife)\r\n- [x] [knife_ssh](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/knife_ssh)\r\n- [x] [kops](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/kops)\r\n- [x] [kubectl](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/kubectl)\r\n- [x] [laravel](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/laravel)\r\n- [x] [laravel4](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/laravel4)\r\n- [x] [laravel5](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/laravel5)\r\n- [x] [lein](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/lein)\r\n- [x] [lighthouse](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/lighthouse)\r\n- [x] [lol](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/lol)\r\n- [x] [macports](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/macports)\r\n- [x] [magic-enter](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/magic-enter)\r\n- [x] [man](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/man)\r\n- [x] [minikube](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/minikube)\r\n- [x] [mix](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/mix)\r\n- [x] [mosh](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/mosh)\r\n- [x] [mysql-macports](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/mysql-macports)\r\n- [x] [n98-magerun](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/n98-magerun)\r\n- [x] [nanoc](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/nanoc)\r\n- [x] [node](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/node)\r\n- [x] [nvm](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/nvm)\r\n- [x] [nyan](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/nyan)\r\n- [x] [oc](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/oc)\r\n- [x] [otp](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/otp)\r\n- [x] [pass](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/pass)\r\n- [x] [paver](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/paver)\r\n- [x] [pep8](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/pep8)\r\n- [x] [perl](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/perl)\r\n- [x] [phing](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/phing)\r\n- [x] [pip](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/pip)\r\n- [x] [pod](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/pod)\r\n- [x] [postgres](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/postgres)\r\n- [x] [pow](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/pow)\r\n- [x] [powder](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/powder)\r\n- [x] [powify](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/powify)\r\n- [x] [profiles](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/profiles)\r\n- [x] [pyenv](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/pyenv)\r\n- [x] [pylint](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/pylint)\r\n- [x] [python](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/python)\r\n- [x] [rails](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/rails)\r\n- [x] [rake](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/rake)\r\n- [x] [rbenv](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/rbenv)\r\n- [x] [rbfu](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/rbfu)\r\n- [x] [rebar](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/rebar)\r\n- [x] [redis-cli](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/redis-cli)\r\n- [x] [rsync](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/rsync)\r\n- [x] [ruby](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/ruby)\r\n- [x] [rust](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/rust)\r\n- [x] [rvm](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/rvm)\r\n- [x] [safe-paste](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/safe-paste)\r\n- [x] [sbt](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/sbt)\r\n- [x] [scala](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/scala)\r\n- [x] [screen](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/screen)\r\n- [x] [sfffe](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/sfffe)\r\n- [x] [singlechar](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/singlechar)\r\n- [x] [sprunge](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/sprunge)\r\n- [x] [stack](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/stack)\r\n- [x] [sudo](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/sudo)\r\n- [x] [supervisor](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/supervisor)\r\n- [x] [suse](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/suse)\r\n- [x] [svn-fast-info](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/svn-fast-info)\r\n- [x] [symfony](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/symfony)\r\n- [x] [symfony2](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/symfony2)\r\n- [x] [systemadmin](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/systemadmin)\r\n- [x] [systemd](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/systemd)\r\n- [x] [terminalapp](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/terminalapp)\r\n- [x] [terminitor](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/terminitor)\r\n- [x] [textmate](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/textmate)\r\n- [x] [themes](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/themes)\r\n- [x] [thor](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/thor)\r\n- [x] [tmux](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/tmux)\r\n- [x] [tmux-cssh](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/tmux-cssh)\r\n- [x] [tmuxinator](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/tmuxinator)\r\n- [x] [torrent](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/torrent)\r\n- [x] [tugboat](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/tugboat)\r\n- [x] [ubuntu](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/ubuntu)\r\n- [x] [ufw](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/ufw)\r\n- [x] [vagrant](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/vagrant)\r\n- [x] [virtualenv](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/virtualenv)\r\n- [x] [virtualenvwrapper](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/virtualenvwrapper)\r\n- [x] [vundle](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/vundle)\r\n- [x] [web-search](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/web-search)\r\n- [x] [yii](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/yii)\r\n- [x] [yum](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/yum)\r\n",
        "labels": "Type: documentation",
        "id": 44442
    },
    {
        "title": "Contribute to cheatsheet",
        "body": "Hi! I'm trying to make my first contribution, I would like to add some aliases missing to the cheatsheet. Can someone guide me to the steps on contributing. Please baby steps, its my first time :smile: ",
        "labels": "Type: documentation",
        "id": 44443
    },
    {
        "title": "Error in coding style guide",
        "body": "https://github.com/robbyrussell/oh-my-zsh/wiki/Coding-style-guide#good-15\r\n\r\n```console\r\n❯ command() {\r\n${1}\r\n}\r\n\r\n❯ command1() {\r\necho 'space com'\r\n}\r\n\r\n❯ 'space com'() {\r\necho 'hello from space com'\r\n}\r\n\r\n❯ var=\"$(command \"$(command1)\")\"\r\n\r\n❯ echo $var\r\nhello from space com\r\n\r\n❯ var=\"$(command \\\"$(command1)\\\")\"\r\ncommand:1: command not found: \"space\r\n```",
        "labels": "Type: documentation",
        "id": 44444
    },
    {
        "title": "Deprecated Aliases",
        "body": "On https://github.com/robbyrussell/oh-my-zsh/wiki/Plugin:git it says `ggpush` is alias and `ggp` is command. It also says: new alias `ggp` (`ggpush `still exists for now though).\r\n\r\nDoes that means that `ggp` will or replaces `ggpush`? Because they don't do same thing. Same with `ggu` and `ggpur`.\r\n",
        "labels": "Type: documentation",
        "id": 44445
    },
    {
        "title": "Add \"How to get involved\" to website",
        "body": "We should add a \"How to get involved\" section/links for people who visit ohmyz.sh.\r\n\r\n",
        "labels": "Type: documentation",
        "id": 44446
    },
    {
        "title": "export SSH_KEY_PATH not work?",
        "body": "I configure the SSH_KEY_PATH as follow:\r\n\r\n```\r\nexport SSH_KEY_PATH=\"~/.ssh/local/private\"\r\n```\r\n\r\nBut it seems that ssh can not use this env variable.\r\n\r\n`ssh -v root@<server-ipaddr> -i ~/.ssh/local/private`  work fine.\r\n\r\n```\r\nssh -v root@<server-ipaddr>\r\nOpenSSH_7.3p1, LibreSSL 2.4.1\r\ndebug1: Reading configuration data /etc/ssh/ssh_config\r\ndebug1: /etc/ssh/ssh_config line 20: Applying options for *\r\ndebug1: Connecting to <server-ipaddr> [<server-ipaddr>] port 22.\r\ndebug1: Connection established.\r\ndebug1: key_load_public: No such file or directory\r\ndebug1: identity file /Users/user/.ssh/id_rsa type -1\r\ndebug1: key_load_public: No such file or directory\r\ndebug1: identity file /Users/user/.ssh/id_rsa-cert type -1\r\ndebug1: key_load_public: No such file or directory\r\ndebug1: identity file /Users/user/.ssh/id_dsa type -1\r\ndebug1: key_load_public: No such file or directory\r\ndebug1: identity file /Users/user/.ssh/id_dsa-cert type -1\r\ndebug1: key_load_public: No such file or directory\r\ndebug1: identity file /Users/user/.ssh/id_ecdsa type -1\r\ndebug1: key_load_public: No such file or directory\r\ndebug1: identity file /Users/user/.ssh/id_ecdsa-cert type -1\r\ndebug1: key_load_public: No such file or directory\r\ndebug1: identity file /Users/user/.ssh/id_ed25519 type -1\r\ndebug1: key_load_public: No such file or directory\r\ndebug1: identity file /Users/user/.ssh/id_ed25519-cert type -1\r\ndebug1: Enabling compatibility mode for protocol 2.0\r\ndebug1: Local version string SSH-2.0-OpenSSH_7.3\r\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_7.2p2 Ubuntu-4ubuntu2.1\r\ndebug1: match: OpenSSH_7.2p2 Ubuntu-4ubuntu2.1 pat OpenSSH* compat 0x04000000\r\ndebug1: Authenticating to <server-ipaddr>:22 as 'root'\r\ndebug1: SSH2_MSG_KEXINIT sent\r\ndebug1: SSH2_MSG_KEXINIT received\r\ndebug1: kex: algorithm: curve25519-sha256@libssh.org\r\ndebug1: kex: host key algorithm: ecdsa-sha2-nistp256\r\ndebug1: kex: server->client cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none\r\ndebug1: kex: client->server cipher: chacha20-poly1305@openssh.com MAC: <implicit> compression: none\r\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\r\ndebug1: Server host key: ecdsa-sha2-nistp256 SHA256:WLyj6ZeoXDVR5sVb68/L+WnStS/L5ALWqe0q9bAnqsM\r\ndebug1: Host '<server-ipaddr>' is known and matches the ECDSA host key.\r\ndebug1: Found key in /Users/user/.ssh/known_hosts:1\r\ndebug1: rekey after 134217728 blocks\r\ndebug1: SSH2_MSG_NEWKEYS sent\r\ndebug1: expecting SSH2_MSG_NEWKEYS\r\ndebug1: rekey after 134217728 blocks\r\ndebug1: SSH2_MSG_NEWKEYS received\r\ndebug1: SSH2_MSG_EXT_INFO received\r\ndebug1: kex_input_ext_info: server-sig-algs=<rsa-sha2-256,rsa-sha2-512>\r\ndebug1: SSH2_MSG_SERVICE_ACCEPT received\r\ndebug1: Authentications that can continue: publickey,password\r\ndebug1: Next authentication method: publickey\r\ndebug1: Trying private key: /Users/user/.ssh/id_rsa\r\ndebug1: Trying private key: /Users/user/.ssh/id_dsa\r\ndebug1: Trying private key: /Users/user/.ssh/id_ecdsa\r\ndebug1: Trying private key: /Users/user/.ssh/id_ed25519\r\ndebug1: Next authentication method: password\r\nroot@<server-ipaddr>'s password:\r\n```",
        "labels": "Type: documentation",
        "id": 44447
    },
    {
        "title": "enhancement - set link to pre-defined gist search for themes ",
        "body": "https://gist.github.com/search?utf8=%E2%9C%93&q=zsh-theme\n",
        "labels": "Type: documentation",
        "id": 44448
    },
    {
        "title": "Many plug-ins can not be used after .zshrc addition, various methods will not work.",
        "body": "Examples  catimg \n",
        "labels": "Type: documentation",
        "id": 44449
    },
    {
        "title": "[Documentation] ZSH without Oh-My-Zsh",
        "body": "A co-worker introduced me to Oh-My-Zsh several months back, and it has since migrated to be on a number of my own personal systems. It's going to stay on these, so I stay up to date with the latest and greatest from Oh-My-Zsh. :+1:\n\nHowever, I'd also like to extend some of the goodness to more restricted environments, like servers, in a more light-weight and controlled manner. How would I go about understanding how Oh-My-Zsh hooks into Zsh and then extracting specific pieces of Oh-My-Zsh into a flat .zshrc file?\n",
        "labels": "Type: documentation",
        "id": 44450
    },
    {
        "title": "Improve plugins wiki",
        "body": "The https://github.com/robbyrussell/oh-my-zsh/wiki/Plugins-Overview page is a long listing with sometimes a description of the required package it may enhance, sometimes a description of enhancements.\n\nSuggested format: Keep the grouping, but make a [table](https://help.github.com/articles/github-flavored-markdown/#tables) for each with columns:\n- For (dependent package/name or the program is enhanced, for example mvn plugin enhances Maven)\n- _Auto-complete_ (yes if it has adds auto-completion for that package)\n- _Aliases_ (at least a check if it adds aliases, preferable a list of some aliases it adds\n- _Functions_ (list of other functions that it adds to ZSH, like node plugin adds node-docs; for git plugin it also shows current branch name...)\n",
        "labels": "Type: documentation",
        "id": 44451
    },
    {
        "title": "Options & Settings (variables/functions) Documentation",
        "body": "I assume I'm just missing it - but I've been looking and cannot find documentation of the oh-my-zsh options (configurable variables, exported functions).\n\nThere are some variables referenced with some documentation in the zshrc.zsh-template file:\n\n```\n# CASE_SENSITIVE=\"true\"\n...\n# ZSH_CUSTOM=/path/to/new-custom-folder\n```\n\nIs this a comprehensive list of the configurable variables? Are there oh-my-zsh \"api\" functions as well, documented somewhere else perhaps?\n\nIn the themes, I see lots of references to other configurable values as well - the most common seem to revolve around git, for example:\n\n```\nZSH_THEME_GIT_PROMPT_PREFIX=\"${PR_RESET}${PR_RED}‹git:\"\n...\nZSH_THEME_GIT_PROMPT_UNTRACKED=\"${PR_RESET}${PR_YELLOW} ✭${PR_RESET}\"\n```\n\nI checked the [git plugin](https://github.com/robbyrussell/oh-my-zsh/blob/master/plugins/git/git.plugin.zsh) but I don't see any of these values referenced.\n\nI then checked the [git lib](https://github.com/robbyrussell/oh-my-zsh/blob/master/lib/git.zsh) and I see several git related functions defined and these variables are referenced. There appears to be some minimal documentation on the functions there.\n\nI started hacking together my own prompt and started to add virtualenv support - there is no lib for virtualenv - but there is a plugin which contains:\n\n```\nfunction virtualenv_prompt_info(){\n  if [[ -n $VIRTUAL_ENV ]]; then\n    printf \"%s[%s] \" \"%{${fg[yellow]}%}\" ${${VIRTUAL_ENV}:t}\n  fi\n}\n\n# disables prompt mangling in virtual_env/bin/activate\nexport VIRTUAL_ENV_DISABLE_PROMPT=1\n```\n\nI assume that I call virtualenv_prompt_info() to display the name of the virtualenv in my prompt, (haven't tried it yet), but I am unsure how it's being detected, or how I should be configuring the way in which it's displayed (colors, etc).\n\nIs there a developer guide or similar documentation that provides information on how things in oh-my-zsh are done? A comprehensive list of variables/functions that can be used and how they should be used?\n\nFrom the virtualenv & git examples above, XXXX_prompt_info seems to be a standard naming convention - is there some kind of oh-my-zsh magic that defines standard configurable values for these functions?\n\nI apologize of these things should be self-evident and I'm just super dense. If documentation exists somewhere, can someone point me to it?\n",
        "labels": "Type: documentation",
        "id": 44452
    }
]